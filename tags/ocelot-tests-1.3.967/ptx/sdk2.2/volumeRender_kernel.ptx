	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with /usr/local/cuda/open64/lib//be
	// nvopencc built on 2009-04-09

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling volumeRender_kernel.cpp3.i (/tmp/ccBI#.QgRi00)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"volumeRender_kernel.cudafe2.gpu"
	.file	3	"volumeRender_kernel.cu"
	.file	4	"/usr/lib/gcc/x86_64-linux-gnu/4.3.3/include/stddef.h"
	.file	5	"/home/normal/cuda/bin/../include/crt/device_runtime.h"
	.file	6	"/home/normal/cuda/bin/../include/host_defines.h"
	.file	7	"/home/normal/cuda/bin/../include/builtin_types.h"
	.file	8	"/home/normal/cuda/bin/../include/device_types.h"
	.file	9	"/home/normal/cuda/bin/../include/driver_types.h"
	.file	10	"/home/normal/cuda/bin/../include/texture_types.h"
	.file	11	"/home/normal/cuda/bin/../include/vector_types.h"
	.file	12	"/home/normal/cuda/bin/../include/device_launch_parameters.h"
	.file	13	"/home/normal/cuda/bin/../include/crt/storage_class.h"
	.file	14	"/usr/include/bits/types.h"
	.file	15	"/usr/include/time.h"
	.file	16	"/home/normal/cuda/bin/../include/common_functions.h"
	.file	17	"/home/normal/cuda/bin/../include/crt/func_macro.h"
	.file	18	"/home/normal/cuda/bin/../include/math_functions.h"
	.file	19	"/home/normal/cuda/bin/../include/device_functions.h"
	.file	20	"/home/normal/cuda/bin/../include/math_constants.h"
	.file	21	"/home/normal/cuda/bin/../include/sm_11_atomic_functions.h"
	.file	22	"/home/normal/cuda/bin/../include/sm_12_atomic_functions.h"
	.file	23	"/home/normal/cuda/bin/../include/sm_13_double_functions.h"
	.file	24	"/home/normal/cuda/bin/../include/common_types.h"
	.file	25	"/home/normal/cuda/bin/../include/texture_fetch_functions.h"
	.file	26	"/home/normal/cuda/bin/../include/math_functions_dbl_ptx1.h"

	.tex .u64 tex;
	.tex .u64 transferTex;
	.const .align 16 .b8 c_invViewMatrix[48];

	.entry _Z8d_renderPjjjffff (
		.param .u64 __cudaparm__Z8d_renderPjjjffff_d_output,
		.param .u32 __cudaparm__Z8d_renderPjjjffff_imageW,
		.param .u32 __cudaparm__Z8d_renderPjjjffff_imageH,
		.param .f32 __cudaparm__Z8d_renderPjjjffff_density,
		.param .f32 __cudaparm__Z8d_renderPjjjffff_brightness,
		.param .f32 __cudaparm__Z8d_renderPjjjffff_transferOffset,
		.param .f32 __cudaparm__Z8d_renderPjjjffff_transferScale)
	{
	.reg .u32 %r<39>;
	.reg .u64 %rd<6>;
	.reg .f32 %f<176>;
	.reg .pred %p<12>;
	.loc	3	116	0
$LBB1__Z8d_renderPjjjffff:
	.loc	19	4694	0
	cvt.u32.u16 	%r1, %ctaid.x;   	// 
	cvt.u32.u16 	%r2, %ntid.x;    	// 
	mul24.lo.u32 	%r3, %r1, %r2;  	// 
	cvt.u32.u16 	%r4, %tid.x;     	// 
	add.u32 	%r5, %r4, %r3;       	// 
	cvt.rn.f32.u32 	%f1, %r5;     	// 
	ld.param.u32 	%r6, [__cudaparm__Z8d_renderPjjjffff_imageW];	// id:431 __cudaparm__Z8d_renderPjjjffff_imageW+0x0
	cvt.rn.f32.u32 	%f2, %r6;     	// 
	mov.f32 	%f3, %f2;            	// 
	.loc	19	4616	0
	abs.f32 	%f4, %f2;            	// 
	mov.f32 	%f5, 0f7e800000;     	// 8.50706e+37
	setp.gt.f32 	%p1, %f4, %f5;   	// 
	@!%p1 bra 	$Lt_0_8194;        	// 
	.loc	19	4617	0
	mov.f32 	%f6, 0f3e800000;     	// 0.25
	mul.f32 	%f1, %f1, %f6;       	// 
	.loc	19	4618	0
	mov.f32 	%f7, 0f3e800000;     	// 0.25
	mul.f32 	%f3, %f2, %f7;       	// 
$Lt_0_8194:
	.loc	3	126	0
	div.approx.f32 	%f8, %f1, %f3;	// 
	add.f32 	%f9, %f8, %f8;       	// 
	mov.f32 	%f10, 0fbf800000;    	// -1
	add.f32 	%f11, %f9, %f10;     	// 
	.loc	19	4694	0
	cvt.u32.u16 	%r7, %ctaid.y;   	// 
	cvt.u32.u16 	%r8, %ntid.y;    	// 
	mul24.lo.u32 	%r9, %r7, %r8;  	// 
	cvt.u32.u16 	%r10, %tid.y;    	// 
	add.u32 	%r11, %r10, %r9;     	// 
	cvt.rn.f32.u32 	%f1, %r11;    	// 
	ld.param.u32 	%r12, [__cudaparm__Z8d_renderPjjjffff_imageH];	// id:430 __cudaparm__Z8d_renderPjjjffff_imageH+0x0
	cvt.rn.f32.u32 	%f12, %r12;   	// 
	mov.f32 	%f3, %f12;           	// 
	.loc	19	4616	0
	abs.f32 	%f13, %f12;          	// 
	mov.f32 	%f14, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p2, %f13, %f14; 	// 
	@!%p2 bra 	$Lt_0_8706;        	// 
	.loc	19	4617	0
	mov.f32 	%f15, 0f3e800000;    	// 0.25
	mul.f32 	%f1, %f1, %f15;      	// 
	.loc	19	4618	0
	mov.f32 	%f16, 0f3e800000;    	// 0.25
	mul.f32 	%f3, %f12, %f16;     	// 
$Lt_0_8706:
	.loc	19	4694	0
	div.approx.f32 	%f17, %f1, %f3;	// 
	add.f32 	%f18, %f17, %f17;    	// 
	mov.f32 	%f19, 0fbf800000;    	// -1
	add.f32 	%f20, %f18, %f19;    	// 
	mul.f32 	%f21, %f20, %f20;    	// 
	mad.f32 	%f22, %f11, %f11, %f21;	// 
	mov.f32 	%f23, 0f40800000;    	// 4
	add.f32 	%f24, %f22, %f23;    	// 
	rsqrt.approx.f32 	%f25, %f24; 	// 
	mul.f32 	%f26, %f20, %f25;    	// 
	mul.f32 	%f27, %f25, %f11;    	// 
	mov.f32 	%f28, 0fc0000000;    	// -2
	mul.f32 	%f29, %f25, %f28;    	// 
	ld.const.f32 	%f30, [c_invViewMatrix+4];	// id:438 c_invViewMatrix+0x4
	mul.f32 	%f31, %f30, %f26;    	// 
	ld.const.f32 	%f32, [c_invViewMatrix+0];	// id:428 c_invViewMatrix+0x0
	mad.f32 	%f33, %f32, %f27, %f31;	// 
	ld.const.f32 	%f34, [c_invViewMatrix+8];	// id:427 c_invViewMatrix+0x8
	mad.f32 	%f35, %f34, %f29, %f33;	// 
	mov.f32 	%f36, %f35;          	// 
	.loc	19	4616	0
	abs.f32 	%f37, %f35;          	// 
	mov.f32 	%f38, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p3, %f37, %f38; 	// 
	@!%p3 bra 	$Lt_0_9474;        	// 
	.loc	19	4618	0
	mov.f32 	%f39, 0f3e800000;    	// 0.25
	mul.f32 	%f36, %f35, %f39;    	// 
	mov.f32 	%f40, 0f3e800000;    	// 0.25
	bra.uni 	$Lt_0_9218;          	// 
$Lt_0_9474:
	mov.f32 	%f40, 0f3f800000;    	// 1
$Lt_0_9218:
	.loc	3	63	0
	div.approx.f32 	%f41, %f40, %f36;	// 
	.loc	19	4694	0
	ld.const.f32 	%f42, [c_invViewMatrix+20];	// id:439 c_invViewMatrix+0x14
	mul.f32 	%f43, %f42, %f26;    	// 
	ld.const.f32 	%f44, [c_invViewMatrix+16];	// id:426 c_invViewMatrix+0x10
	mad.f32 	%f45, %f44, %f27, %f43;	// 
	ld.const.f32 	%f46, [c_invViewMatrix+24];	// id:425 c_invViewMatrix+0x18
	mad.f32 	%f47, %f46, %f29, %f45;	// 
	mov.f32 	%f36, %f47;          	// 
	.loc	19	4616	0
	abs.f32 	%f48, %f47;          	// 
	mov.f32 	%f49, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p4, %f48, %f49; 	// 
	@!%p4 bra 	$Lt_0_9986;        	// 
	.loc	19	4618	0
	mov.f32 	%f50, 0f3e800000;    	// 0.25
	mul.f32 	%f36, %f47, %f50;    	// 
	mov.f32 	%f40, 0f3e800000;    	// 0.25
	bra.uni 	$Lt_0_9730;          	// 
$Lt_0_9986:
	mov.f32 	%f40, 0f3f800000;    	// 1
$Lt_0_9730:
	.loc	3	63	0
	div.approx.f32 	%f51, %f40, %f36;	// 
	.loc	19	4694	0
	ld.const.f32 	%f52, [c_invViewMatrix+36];	// id:440 c_invViewMatrix+0x24
	mul.f32 	%f53, %f52, %f26;    	// 
	ld.const.f32 	%f54, [c_invViewMatrix+32];	// id:424 c_invViewMatrix+0x20
	mad.f32 	%f55, %f54, %f27, %f53;	// 
	ld.const.f32 	%f56, [c_invViewMatrix+40];	// id:423 c_invViewMatrix+0x28
	mad.f32 	%f57, %f56, %f29, %f55;	// 
	mov.f32 	%f36, %f57;          	// 
	.loc	19	4616	0
	abs.f32 	%f58, %f57;          	// 
	mov.f32 	%f59, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p5, %f58, %f59; 	// 
	@!%p5 bra 	$Lt_0_10498;       	// 
	.loc	19	4618	0
	mov.f32 	%f60, 0f3e800000;    	// 0.25
	mul.f32 	%f36, %f57, %f60;    	// 
	mov.f32 	%f40, 0f3e800000;    	// 0.25
	bra.uni 	$Lt_0_10242;         	// 
$Lt_0_10498:
	mov.f32 	%f40, 0f3f800000;    	// 1
$Lt_0_10242:
	.loc	3	137	0
	div.approx.f32 	%f61, %f40, %f36;	// 
	mov.f32 	%f62, 0f00000000;    	// 0
	mov.f32 	%f63, 0f00000000;    	// 0
	mad.f32 	%f64, %f63, %f32, %f62;	// 
	mov.f32 	%f65, 0f00000000;    	// 0
	mov.f32 	%f66, 0f00000000;    	// 0
	mad.f32 	%f67, %f66, %f44, %f65;	// 
	mov.f32 	%f68, 0f00000000;    	// 0
	mov.f32 	%f69, 0f00000000;    	// 0
	mad.f32 	%f70, %f69, %f54, %f68;	// 
	mov.f32 	%f71, 0f00000000;    	// 0
	mad.f32 	%f72, %f71, %f34, %f64;	// 
	mov.f32 	%f73, 0f00000000;    	// 0
	mad.f32 	%f74, %f73, %f46, %f67;	// 
	mov.f32 	%f75, 0f00000000;    	// 0
	mad.f32 	%f76, %f75, %f56, %f70;	// 
	mov.f32 	%f77, 0f3f800000;    	// 1
	ld.const.f32 	%f78, [c_invViewMatrix+12];	// id:441 c_invViewMatrix+0xc
	mad.f32 	%f79, %f77, %f78, %f72;	// 
	mov.f32 	%f80, 0f3f800000;    	// 1
	ld.const.f32 	%f81, [c_invViewMatrix+28];	// id:442 c_invViewMatrix+0x1c
	mad.f32 	%f82, %f80, %f81, %f74;	// 
	mov.f32 	%f83, 0f3f800000;    	// 1
	ld.const.f32 	%f84, [c_invViewMatrix+44];	// id:443 c_invViewMatrix+0x2c
	mad.f32 	%f85, %f83, %f84, %f76;	// 
	mov.f32 	%f86, 0f3f800000;    	// 1
	sub.f32 	%f87, %f86, %f79;    	// 
	mov.f32 	%f88, 0fbf800000;    	// -1
	sub.f32 	%f89, %f88, %f79;    	// 
	mov.f32 	%f90, 0f3f800000;    	// 1
	sub.f32 	%f91, %f90, %f82;    	// 
	mov.f32 	%f92, 0fbf800000;    	// -1
	sub.f32 	%f93, %f92, %f82;    	// 
	mov.f32 	%f94, 0f3f800000;    	// 1
	sub.f32 	%f95, %f94, %f85;    	// 
	mov.f32 	%f96, 0fbf800000;    	// -1
	sub.f32 	%f97, %f96, %f85;    	// 
	mul.f32 	%f98, %f87, %f41;    	// 
	mul.f32 	%f99, %f89, %f41;    	// 
	mul.f32 	%f100, %f91, %f51;   	// 
	mul.f32 	%f101, %f93, %f51;   	// 
	mul.f32 	%f102, %f61, %f95;   	// 
	mul.f32 	%f103, %f61, %f97;   	// 
	min.f32 	%f104, %f98, %f99;   	// 
	max.f32 	%f105, %f98, %f99;   	// 
	min.f32 	%f106, %f100, %f101; 	// 
	max.f32 	%f107, %f100, %f101; 	// 
	min.f32 	%f108, %f102, %f103; 	// 
	max.f32 	%f109, %f102, %f103; 	// 
	max.f32 	%f110, %f104, %f106; 	// 
	min.f32 	%f111, %f105, %f107; 	// 
	max.f32 	%f112, %f104, %f108; 	// 
	min.f32 	%f113, %f105, %f109; 	// 
	max.f32 	%f114, %f110, %f112; 	// 
	min.f32 	%f115, %f111, %f113; 	// 
	setp.lt.f32 	%p6, %f114, %f115;	// 
	@%p6 bra 	$Lt_0_10754;        	// 
	bra.uni 	$LBB24__Z8d_renderPjjjffff;	// 
$Lt_0_10754:
	.loc	3	143	0
	mov.f32 	%f116, %f115;        	// 
	mov.f32 	%f117, 0f00000000;   	// 0
	setp.lt.f32 	%p7, %f114, %f117;	// 
	mov.f32 	%f118, 0f00000000;   	// 0
	selp.f32 	%f119, %f118, %f114, %p7;	// 
	ld.param.f32 	%f120, [__cudaparm__Z8d_renderPjjjffff_density];	// id:413 __cudaparm__Z8d_renderPjjjffff_density+0x0
	ld.param.f32 	%f121, [__cudaparm__Z8d_renderPjjjffff_transferOffset];	// id:414 __cudaparm__Z8d_renderPjjjffff_transferOffset+0x0
	ld.param.f32 	%f122, [__cudaparm__Z8d_renderPjjjffff_transferScale];	// id:415 __cudaparm__Z8d_renderPjjjffff_transferScale+0x0
	mov.s32 	%r13, 0;             	// 
	mov.f32 	%f123, 0f00000000;   	// 0
	mov.f32 	%f124, 0f00000000;   	// 0
	mov.f32 	%f125, 0f00000000;   	// 0
	mov.f32 	%f126, 0f00000000;   	// 0
$Lt_0_11778:
 //<loop> Loop body line 143, nesting depth: 1, estimated iterations: 500
	.loc	3	145	0
	mul.f32 	%f127, %f35, %f116;  	// 
	mul.f32 	%f128, %f47, %f116;  	// 
	mov.f32 	%f129, 0f3f000000;   	// 0.5
	add.f32 	%f130, %f79, %f127;  	// 
	mov.f32 	%f131, 0f3f000000;   	// 0.5
	mad.f32 	%f132, %f130, %f131, %f129;	// 
	mov.f32 	%f133, 0f3f000000;   	// 0.5
	add.f32 	%f134, %f82, %f128;  	// 
	mov.f32 	%f135, 0f3f000000;   	// 0.5
	mad.f32 	%f136, %f134, %f135, %f133;	// 
	mov.f32 	%f137, 0f3f000000;   	// 0.5
	mad.f32 	%f138, %f116, %f57, %f85;	// 
	mov.f32 	%f139, 0f3f000000;   	// 0.5
	mad.f32 	%f140, %f138, %f139, %f137;	// 
	mov.f32 	%f141, 0f00000000;   	// 0
	tex.3d.v4.u32.f32 {%r14,%r15,%r16,%r17},[tex,{%f132,%f136,%f140,%f141}];
 //<loop> Part of loop body line 143, head labeled $Lt_0_11778
	.loc	3	149	0
	mov.s32 	%r18, %r14;          	// 
	mov.b32 	%f142, %r18;         	// 
	sub.f32 	%f143, %f142, %f121; 	// 
	mul.f32 	%f144, %f122, %f143; 	// 
	mov.f32 	%f145, 0f00000000;   	// 0
	mov.f32 	%f146, 0f00000000;   	// 0
	mov.f32 	%f147, 0f00000000;   	// 0
	tex.1d.v4.f32.f32 {%f148,%f149,%f150,%f151},[transferTex,{%f144,%f145,%f146,%f147}];
 //<loop> Part of loop body line 143, head labeled $Lt_0_11778
	.loc	3	152	0
	mov.f32 	%f152, %f148;        	// 
	mov.f32 	%f153, %f149;        	// 
	mov.f32 	%f154, %f150;        	// 
	mov.f32 	%f155, %f151;        	// 
	.loc	3	155	0
	mul.f32 	%f156, %f155, %f120; 	// 
	sub.f32 	%f157, %f152, %f126; 	// 
	mad.f32 	%f126, %f156, %f157, %f126;	// 
	sub.f32 	%f158, %f153, %f125; 	// 
	mad.f32 	%f125, %f156, %f158, %f125;	// 
	sub.f32 	%f159, %f154, %f124; 	// 
	mad.f32 	%f124, %f156, %f159, %f124;	// 
	sub.f32 	%f160, %f155, %f123; 	// 
	mad.f32 	%f123, %f156, %f160, %f123;	// 
	.loc	3	157	0
	mov.f32 	%f161, 0fbc23d70a;   	// -0.01
	add.f32 	%f116, %f116, %f161; 	// 
	.loc	3	158	0
	setp.gt.f32 	%p8, %f119, %f116;	// 
	@%p8 bra 	$Lt_0_258;          	// 
 //<loop> Part of loop body line 143, head labeled $Lt_0_11778
	.loc	3	144	0
	add.s32 	%r13, %r13, 1;       	// 
	mov.u32 	%r19, 500;           	// 
	setp.ne.s32 	%p9, %r13, %r19; 	// 
	@%p9 bra 	$Lt_0_11778;        	// 
$Lt_0_258:
	.loc	3	160	0
	ld.param.f32 	%f162, [__cudaparm__Z8d_renderPjjjffff_brightness];	// id:412 __cudaparm__Z8d_renderPjjjffff_brightness+0x0
	mul.f32 	%f126, %f162, %f126; 	// 
	mul.f32 	%f125, %f162, %f125; 	// 
	mul.f32 	%f124, %f162, %f124; 	// 
	mul.f32 	%f123, %f162, %f123; 	// 
	set.lt.u32.u32 	%r20, %r5, %r6;	// 
	neg.s32 	%r21, %r20;          	// 
	set.lt.u32.u32 	%r22, %r11, %r12;	// 
	neg.s32 	%r23, %r22;          	// 
	and.b32 	%r24, %r21, %r23;    	// 
	mov.u32 	%r25, 0;             	// 
	setp.eq.s32 	%p10, %r24, %r25;	// 
	@%p10 bra 	$LBB24__Z8d_renderPjjjffff;	// 
	.loc	3	165	0
	cvt.sat.f32.f32 	%f163, %f126;	// 
	mov.f32 	%f164, 0f437f0000;   	// 255
	mul.f32 	%f165, %f163, %f164; 	// 
	cvt.rzi.u32.f32 	%r26, %f165; 	// 
	cvt.sat.f32.f32 	%f166, %f125;	// 
	mov.f32 	%f167, 0f437f0000;   	// 255
	mul.f32 	%f168, %f166, %f167; 	// 
	cvt.rzi.u32.f32 	%r27, %f168; 	// 
	shl.b32 	%r28, %r27, 8;       	// 
	or.b32 	%r29, %r26, %r28;     	// 
	cvt.sat.f32.f32 	%f169, %f123;	// 
	mov.f32 	%f170, 0f437f0000;   	// 255
	mul.f32 	%f171, %f169, %f170; 	// 
	cvt.rzi.u32.f32 	%r30, %f171; 	// 
	shl.b32 	%r31, %r30, 24;      	// 
	cvt.sat.f32.f32 	%f172, %f124;	// 
	mov.f32 	%f173, 0f437f0000;   	// 255
	mul.f32 	%f174, %f172, %f173; 	// 
	cvt.rzi.u32.f32 	%r32, %f174; 	// 
	shl.b32 	%r33, %r32, 16;      	// 
	or.b32 	%r34, %r31, %r33;     	// 
	or.b32 	%r35, %r29, %r34;     	// 
	ld.param.u64 	%rd1, [__cudaparm__Z8d_renderPjjjffff_d_output];	// id:444 __cudaparm__Z8d_renderPjjjffff_d_output+0x0
	mul24.lo.u32 	%r36, %r11, %r6;	// 
	add.u32 	%r37, %r5, %r36;     	// 
	cvt.u64.u32 	%rd2, %r37;      	// 
	mul.lo.u64 	%rd3, %rd2, 4;    	// 
	add.u64 	%rd4, %rd1, %rd3;    	// 
	st.global.u32 	[%rd4+0], %r35;	// id:445
$LBB24__Z8d_renderPjjjffff:
	.loc	3	167	0
	exit;                         	// 
$LDWend__Z8d_renderPjjjffff:
	} // _Z8d_renderPjjjffff

