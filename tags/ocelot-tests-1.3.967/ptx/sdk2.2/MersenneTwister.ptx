	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with /usr/local/cuda/open64/lib//be
	// nvopencc built on 2009-04-09

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling MersenneTwister.cpp3.i (/tmp/ccBI#.fBJUrH)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"MersenneTwister.cudafe2.gpu"
	.file	3	"MersenneTwister.h"
	.file	4	"/usr/lib/gcc/x86_64-linux-gnu/4.3.3/include/stddef.h"
	.file	5	"/home/normal/cuda/bin/../include/crt/device_runtime.h"
	.file	6	"/home/normal/cuda/bin/../include/host_defines.h"
	.file	7	"/home/normal/cuda/bin/../include/builtin_types.h"
	.file	8	"/home/normal/cuda/bin/../include/device_types.h"
	.file	9	"/home/normal/cuda/bin/../include/driver_types.h"
	.file	10	"/home/normal/cuda/bin/../include/texture_types.h"
	.file	11	"/home/normal/cuda/bin/../include/vector_types.h"
	.file	12	"/home/normal/cuda/bin/../include/device_launch_parameters.h"
	.file	13	"/home/normal/cuda/bin/../include/crt/storage_class.h"
	.file	14	"/usr/include/bits/types.h"
	.file	15	"/usr/include/time.h"
	.file	16	"MersenneTwister_kernel.cu"
	.file	17	"/home/normal/cuda/bin/../include/common_functions.h"
	.file	18	"/home/normal/cuda/bin/../include/crt/func_macro.h"
	.file	19	"/home/normal/cuda/bin/../include/math_functions.h"
	.file	20	"/home/normal/cuda/bin/../include/device_functions.h"
	.file	21	"/home/normal/cuda/bin/../include/math_constants.h"
	.file	22	"/home/normal/cuda/bin/../include/sm_11_atomic_functions.h"
	.file	23	"/home/normal/cuda/bin/../include/sm_12_atomic_functions.h"
	.file	24	"/home/normal/cuda/bin/../include/sm_13_double_functions.h"
	.file	25	"/home/normal/cuda/bin/../include/common_types.h"
	.file	26	"/home/normal/cuda/bin/../include/texture_fetch_functions.h"
	.file	27	"/home/normal/cuda/bin/../include/math_functions_dbl_ptx1.h"

	.global .align 4 .b8 ds_MT[65536];

	.entry _Z9RandomGPUPfi (
		.param .u64 __cudaparm__Z9RandomGPUPfi_d_Random,
		.param .s32 __cudaparm__Z9RandomGPUPfi_NPerRng)
	{
	.reg .u16 %rh<5>;
	.reg .u32 %r<124>;
	.reg .u64 %rd<22>;
	.reg .f32 %f<7>;
	.reg .pred %p<8>;
	.local .align 4 .b8 __cuda___cuda_mt_065548[76];
	.loc	16	87	0
$LBB1__Z9RandomGPUPfi:
	.loc	16	96	0
	mov.u16 	%rh1, %ntid.x;       	// 
	mov.u16 	%rh2, %ctaid.x;      	// 
	mul.wide.u16 	%r1, %rh2, %rh1;	// 
	cvt.u32.u16 	%r2, %tid.x;     	// 
	add.u32 	%r3, %r2, %r1;       	// 
	mov.s32 	%r4, %r3;            	// 
	mov.u32 	%r5, 4095;           	// 
	setp.gt.s32 	%p1, %r3, %r5;   	// 
	@%p1 bra 	$Lt_0_6658;         	// 
	cvt.s64.s32 	%rd1, %r3;       	// 
	mov.s64 	%rd2, %rd1;          	// 
	ld.param.s32 	%r6, [__cudaparm__Z9RandomGPUPfi_NPerRng];	// id:123 __cudaparm__Z9RandomGPUPfi_NPerRng+0x0
	mov.s32 	%r7, 0;              	// 
	setp.gt.s32 	%p2, %r6, %r7;   	// 
	mov.u16 	%rh3, %nctaid.x;     	// 
	mul.wide.u16 	%r8, %rh3, %rh1;	// 
	cvt.s64.u32 	%rd3, %r8;       	// 
	mov.u64 	%rd4, ds_MT;         	// 
	mul.lo.u64 	%rd5, %rd1, 16;   	// 
	add.u64 	%rd6, %rd4, %rd5;    	// 
	mul.lo.u64 	%rd7, %rd3, 16;   	// 
	mov.u64 	%rd8, __cuda___cuda_mt_065548;	// 
$Lt_0_7170:
 //<loop> Loop body line 96, nesting depth: 1, estimated iterations: unknown
	.loc	16	98	0
	ld.global.u32 	%r9, [%rd6+0]; 	// id:128 ds_MT+0x0
	ld.global.u32 	%r10, [%rd6+4];	// id:129 ds_MT+0x0
	ld.global.u32 	%r11, [%rd6+8];	// id:130 ds_MT+0x0
	.loc	16	101	0
	ld.global.u32 	%r12, [%rd6+12];	// id:131 ds_MT+0x0
	st.local.u32 	[__cuda___cuda_mt_065548+0], %r12;	// id:122 __cuda___cuda_mt_065548+0x0
	.loc	16	103	0
	shr.u32 	%r13, %r12, 30;      	// 
	xor.b32 	%r14, %r12, %r13;    	// 
	mul.lo.u32 	%r15, %r14, 1812433253;	// 
	add.u32 	%r16, %r15, 1;       	// 
	st.local.u32 	[__cuda___cuda_mt_065548+4], %r16;	// id:121 __cuda___cuda_mt_065548
	shr.u32 	%r17, %r16, 30;      	// 
	xor.b32 	%r18, %r16, %r17;    	// 
	mul.lo.u32 	%r19, %r18, 1812433253;	// 
	add.u32 	%r20, %r19, 2;       	// 
	st.local.u32 	[__cuda___cuda_mt_065548+8], %r20;	// id:120 __cuda___cuda_mt_065548
	shr.u32 	%r21, %r20, 30;      	// 
	xor.b32 	%r22, %r20, %r21;    	// 
	mul.lo.u32 	%r23, %r22, 1812433253;	// 
	add.u32 	%r24, %r23, 3;       	// 
	st.local.u32 	[__cuda___cuda_mt_065548+12], %r24;	// id:119 __cuda___cuda_mt_065548
	shr.u32 	%r25, %r24, 30;      	// 
	xor.b32 	%r26, %r24, %r25;    	// 
	mul.lo.u32 	%r27, %r26, 1812433253;	// 
	add.u32 	%r28, %r27, 4;       	// 
	st.local.u32 	[__cuda___cuda_mt_065548+16], %r28;	// id:118 __cuda___cuda_mt_065548
	shr.u32 	%r29, %r28, 30;      	// 
	xor.b32 	%r30, %r28, %r29;    	// 
	mul.lo.u32 	%r31, %r30, 1812433253;	// 
	add.u32 	%r32, %r31, 5;       	// 
	st.local.u32 	[__cuda___cuda_mt_065548+20], %r32;	// id:117 __cuda___cuda_mt_065548
	shr.u32 	%r33, %r32, 30;      	// 
	xor.b32 	%r34, %r32, %r33;    	// 
	mul.lo.u32 	%r35, %r34, 1812433253;	// 
	add.u32 	%r36, %r35, 6;       	// 
	st.local.u32 	[__cuda___cuda_mt_065548+24], %r36;	// id:116 __cuda___cuda_mt_065548
	shr.u32 	%r37, %r36, 30;      	// 
	xor.b32 	%r38, %r36, %r37;    	// 
	mul.lo.u32 	%r39, %r38, 1812433253;	// 
	add.u32 	%r40, %r39, 7;       	// 
	st.local.u32 	[__cuda___cuda_mt_065548+28], %r40;	// id:115 __cuda___cuda_mt_065548
	shr.u32 	%r41, %r40, 30;      	// 
	xor.b32 	%r42, %r40, %r41;    	// 
	mul.lo.u32 	%r43, %r42, 1812433253;	// 
	add.u32 	%r44, %r43, 8;       	// 
	st.local.u32 	[__cuda___cuda_mt_065548+32], %r44;	// id:114 __cuda___cuda_mt_065548
	shr.u32 	%r45, %r44, 30;      	// 
	xor.b32 	%r46, %r44, %r45;    	// 
	mul.lo.u32 	%r47, %r46, 1812433253;	// 
	add.u32 	%r48, %r47, 9;       	// 
	st.local.u32 	[__cuda___cuda_mt_065548+36], %r48;	// id:113 __cuda___cuda_mt_065548
	shr.u32 	%r49, %r48, 30;      	// 
	xor.b32 	%r50, %r48, %r49;    	// 
	mul.lo.u32 	%r51, %r50, 1812433253;	// 
	add.u32 	%r52, %r51, 10;      	// 
	st.local.u32 	[__cuda___cuda_mt_065548+40], %r52;	// id:112 __cuda___cuda_mt_065548
	shr.u32 	%r53, %r52, 30;      	// 
	xor.b32 	%r54, %r52, %r53;    	// 
	mul.lo.u32 	%r55, %r54, 1812433253;	// 
	add.u32 	%r56, %r55, 11;      	// 
	st.local.u32 	[__cuda___cuda_mt_065548+44], %r56;	// id:111 __cuda___cuda_mt_065548
	shr.u32 	%r57, %r56, 30;      	// 
	xor.b32 	%r58, %r56, %r57;    	// 
	mul.lo.u32 	%r59, %r58, 1812433253;	// 
	add.u32 	%r60, %r59, 12;      	// 
	st.local.u32 	[__cuda___cuda_mt_065548+48], %r60;	// id:110 __cuda___cuda_mt_065548
	shr.u32 	%r61, %r60, 30;      	// 
	xor.b32 	%r62, %r60, %r61;    	// 
	mul.lo.u32 	%r63, %r62, 1812433253;	// 
	add.u32 	%r64, %r63, 13;      	// 
	st.local.u32 	[__cuda___cuda_mt_065548+52], %r64;	// id:109 __cuda___cuda_mt_065548
	shr.u32 	%r65, %r64, 30;      	// 
	xor.b32 	%r66, %r64, %r65;    	// 
	mul.lo.u32 	%r67, %r66, 1812433253;	// 
	add.u32 	%r68, %r67, 14;      	// 
	st.local.u32 	[__cuda___cuda_mt_065548+56], %r68;	// id:108 __cuda___cuda_mt_065548
	shr.u32 	%r69, %r68, 30;      	// 
	xor.b32 	%r70, %r68, %r69;    	// 
	mul.lo.u32 	%r71, %r70, 1812433253;	// 
	add.u32 	%r72, %r71, 15;      	// 
	st.local.u32 	[__cuda___cuda_mt_065548+60], %r72;	// id:107 __cuda___cuda_mt_065548
	shr.u32 	%r73, %r72, 30;      	// 
	xor.b32 	%r74, %r72, %r73;    	// 
	mul.lo.u32 	%r75, %r74, 1812433253;	// 
	add.u32 	%r76, %r75, 16;      	// 
	st.local.u32 	[__cuda___cuda_mt_065548+64], %r76;	// id:106 __cuda___cuda_mt_065548
	shr.u32 	%r77, %r76, 30;      	// 
	xor.b32 	%r78, %r76, %r77;    	// 
	mul.lo.u32 	%r79, %r78, 1812433253;	// 
	add.u32 	%r80, %r79, 17;      	// 
	st.local.u32 	[__cuda___cuda_mt_065548+68], %r80;	// id:105 __cuda___cuda_mt_065548
	shr.u32 	%r81, %r80, 30;      	// 
	xor.b32 	%r82, %r80, %r81;    	// 
	mul.lo.u32 	%r83, %r82, 1812433253;	// 
	add.u32 	%r84, %r83, 18;      	// 
	st.local.u32 	[__cuda___cuda_mt_065548+72], %r84;	// id:132 __cuda___cuda_mt_065548
	.loc	16	106	0
	ld.local.s32 	%r85, [__cuda___cuda_mt_065548+0];	// id:122 __cuda___cuda_mt_065548+0x0
	@!%p2 bra 	$Lt_0_7426;        	// 
 //<loop> Part of loop body line 96, head labeled $Lt_0_7170
	mov.s32 	%r86, %r6;           	// 
	mul.lo.s32 	%r87, %r6, 4096;  	// 
	mov.s32 	%r88, %r4;           	// 
	add.s32 	%r89, %r87, %r4;     	// 
	ld.param.u64 	%rd9, [__cudaparm__Z9RandomGPUPfi_d_Random];	// id:133 __cudaparm__Z9RandomGPUPfi_d_Random+0x0
	mul.lo.u64 	%rd10, %rd2, 4;   	// 
	add.u64 	%rd11, %rd9, %rd10;  	// 
	mov.s32 	%r90, 0;             	// 
 //<loop> Part of loop body line 96, head labeled $Lt_0_7170
	mov.s32 	%r91, %r86;          	// 
$Lt_0_7938:
 //<loop> Loop body line 106, nesting depth: 2, estimated iterations: unknown
	.loc	16	114	0
	mov.s32 	%r92, %r85;          	// 
	.loc	16	115	0
	add.s32 	%r93, %r90, 1;       	// 
	sub.s32 	%r94, %r90, 18;      	// 
	mov.s32 	%r95, 18;            	// 
	setp.gt.s32 	%p3, %r93, %r95; 	// 
	selp.s32 	%r96, %r94, %r93, %p3;	// 
	cvt.u64.s32 	%rd12, %r96;     	// 
	mul.lo.u64 	%rd13, %rd12, 4;  	// 
	add.u64 	%rd14, %rd8, %rd13;  	// 
	ld.local.u32 	%r97, [%rd14+0];	// id:134 __cuda___cuda_mt_065548+0x0
	mov.s32 	%r85, %r97;          	// 
	.loc	16	114	0
	and.b32 	%r98, %r92, -2;      	// 
	add.s32 	%r99, %r90, 9;       	// 
	sub.s32 	%r100, %r90, 10;     	// 
	mov.s32 	%r101, 18;           	// 
	setp.gt.s32 	%p4, %r99, %r101;	// 
	selp.s32 	%r102, %r100, %r99, %p4;	// 
	cvt.u64.s32 	%rd15, %r102;    	// 
	mul.lo.u64 	%rd16, %rd15, 4;  	// 
	add.u64 	%rd17, %rd8, %rd16;  	// 
	ld.local.u32 	%r103, [%rd17+0];	// id:135 __cuda___cuda_mt_065548+0x0
	and.b32 	%r104, %r97, 1;      	// 
	or.b32 	%r105, %r98, %r104;   	// 
	and.b32 	%r106, %r105, 1;     	// 
	shr.u32 	%r107, %r105, 1;     	// 
	xor.b32 	%r108, %r103, %r107; 	// 
	xor.b32 	%r109, %r108, %r9;   	// 
	neg.s32 	%r110, %r106;        	// 
	slct.u32.s32 	%r111, %r108, %r109, %r110;	// 
	.loc	16	120	0
	cvt.u64.s32 	%rd18, %r90;     	// 
	mul.lo.u64 	%rd19, %rd18, 4;  	// 
	add.u64 	%rd20, %rd8, %rd19;  	// 
	st.local.u32 	[%rd20+0], %r111;	// id:136 __cuda___cuda_mt_065548+0x0
	.loc	16	121	0
	mov.s32 	%r90, %r96;          	// 
	.loc	16	130	0
	shr.u32 	%r112, %r111, 12;    	// 
	xor.b32 	%r113, %r112, %r111; 	// 
	shl.b32 	%r114, %r113, 7;     	// 
	and.b32 	%r115, %r114, %r10;  	// 
	xor.b32 	%r116, %r113, %r115; 	// 
	shl.b32 	%r117, %r116, 15;    	// 
	and.b32 	%r118, %r117, %r11;  	// 
	xor.b32 	%r119, %r116, %r118; 	// 
	shr.u32 	%r120, %r119, 18;    	// 
	xor.b32 	%r121, %r119, %r120; 	// 
	cvt.rn.f32.u32 	%f1, %r121;   	// 
	mov.f32 	%f2, 0f3f800000;     	// 1
	add.f32 	%f3, %f1, %f2;       	// 
	mov.f32 	%f4, 0f2f800000;     	// 2.32831e-10
	mul.f32 	%f5, %f3, %f4;       	// 
	st.global.f32 	[%rd11+0], %f5;	// id:137
	add.s32 	%r88, %r88, 4096;    	// 
	add.u64 	%rd11, %rd11, 16384; 	// 
	setp.ne.s32 	%p5, %r88, %r89; 	// 
	@%p5 bra 	$Lt_0_7938;         	// 
$Lt_0_7426:
 //<loop> Part of loop body line 96, head labeled $Lt_0_7170
	add.s32 	%r4, %r4, %r8;       	// 
	add.s64 	%rd2, %rd2, %rd3;    	// 
	add.u64 	%rd6, %rd6, %rd7;    	// 
	mov.u32 	%r122, 4095;         	// 
	setp.le.s32 	%p6, %r4, %r122; 	// 
	@%p6 bra 	$Lt_0_7170;         	// 
$Lt_0_6658:
	.loc	16	133	0
	exit;                         	// 
$LDWend__Z9RandomGPUPfi:
	} // _Z9RandomGPUPfi

	.entry _Z12BoxMullerGPUPfi (
		.param .u64 __cudaparm__Z12BoxMullerGPUPfi_d_Random,
		.param .s32 __cudaparm__Z12BoxMullerGPUPfi_NPerRng)
	{
	.reg .u16 %rh<5>;
	.reg .u32 %r<28>;
	.reg .u64 %rd<6>;
	.reg .f32 %f<39>;
	.reg .pred %p<8>;
	.loc	16	151	0
$LBB1__Z12BoxMullerGPUPfi:
	.loc	16	155	0
	mov.u16 	%rh1, %ntid.x;       	// 
	mov.u16 	%rh2, %ctaid.x;      	// 
	mul.wide.u16 	%r1, %rh2, %rh1;	// 
	cvt.u32.u16 	%r2, %tid.x;     	// 
	add.u32 	%r3, %r2, %r1;       	// 
	mov.s32 	%r4, %r3;            	// 
	mov.u32 	%r5, 4095;           	// 
	setp.gt.s32 	%p1, %r3, %r5;   	// 
	@%p1 bra 	$Lt_1_4354;         	// 
	ld.param.s32 	%r6, [__cudaparm__Z12BoxMullerGPUPfi_NPerRng];	// id:83 __cudaparm__Z12BoxMullerGPUPfi_NPerRng+0x0
	mov.s32 	%r7, 0;              	// 
	setp.gt.s32 	%p2, %r6, %r7;   	// 
	mov.u16 	%rh3, %nctaid.x;     	// 
	mul.wide.u16 	%r8, %rh3, %rh1;	// 
$Lt_1_4866:
 //<loop> Loop body line 155, nesting depth: 1, estimated iterations: unknown
	@!%p2 bra 	$Lt_1_5122;        	// 
 //<loop> Part of loop body line 155, head labeled $Lt_1_4866
	add.s32 	%r9, %r6, 1;         	// 
	shr.s32 	%r10, %r9, 31;       	// 
	mov.s32 	%r11, 1;             	// 
	and.b32 	%r12, %r10, %r11;    	// 
	add.s32 	%r13, %r12, %r9;     	// 
	shr.s32 	%r14, %r13, 1;       	// 
	mul.lo.s32 	%r15, %r6, 4096;  	// 
	mov.s32 	%r16, %r4;           	// 
	add.s32 	%r17, %r15, %r4;     	// 
	ld.param.u64 	%rd1, [__cudaparm__Z12BoxMullerGPUPfi_d_Random];	// id:88 __cudaparm__Z12BoxMullerGPUPfi_d_Random+0x0
	cvt.s64.s32 	%rd2, %r4;       	// 
	mul.lo.u64 	%rd3, %rd2, 4;    	// 
	add.u64 	%rd4, %rd1, %rd3;    	// 
 //<loop> Part of loop body line 155, head labeled $Lt_1_4866
	mov.s32 	%r18, %r14;          	// 
$Lt_1_5634:
 //<loop> Loop body line 155, nesting depth: 2, estimated iterations: unknown
	.loc	16	145	0
	ld.global.f32 	%f1, [%rd4+0]; 	// id:89
	.loc	19	2085	0
	mov.b32 	%r19, %f1;           	// 
	sub.u32 	%r20, %r19, 8388608; 	// 
	mov.u32 	%r21, 2130706431;    	// 
	setp.le.u32 	%p3, %r20, %r21; 	// 
	@%p3 bra 	$Lt_1_5890;         	// 
 //<loop> Part of loop body line 155, head labeled $Lt_1_5634
	.loc	19	1402	0
	lg2.approx.f32 	%f2, %f1;     	// 
	mov.f32 	%f3, 0f3f317218;     	// 0.693147
	mul.f32 	%f4, %f2, %f3;       	// 
	bra.uni 	$Lt_1_258;           	// 
$Lt_1_5890:
 //<loop> Part of loop body line 155, head labeled $Lt_1_5634
	.loc	19	1405	0
	and.b32 	%r22, %r19, -2139095041;	// 
	or.b32 	%r23, %r22, 1065353216;	// 
	mov.b32 	%f5, %r23;           	// 
	mov.f32 	%f6, %f5;            	// 
	.loc	19	1406	0
	shr.u32 	%r24, %r19, 23;      	// 
	sub.s32 	%r25, %r24, 127;     	// 
	mov.f32 	%f7, 0f3fb504f3;     	// 1.41421
	setp.gt.f32 	%p4, %f5, %f7;   	// 
	@!%p4 bra 	$Lt_1_6402;        	// 
 //<loop> Part of loop body line 155, head labeled $Lt_1_5634
	.loc	19	1408	0
	mov.f32 	%f8, 0f3f000000;     	// 0.5
	mul.f32 	%f6, %f5, %f8;       	// 
	.loc	19	1409	0
	add.s32 	%r25, %r25, 1;       	// 
$Lt_1_6402:
 //<loop> Part of loop body line 155, head labeled $Lt_1_5634
	.loc	19	1416	0
	mov.f32 	%f9, 0fbf800000;     	// -1
	add.f32 	%f10, %f6, %f9;      	// 
	mov.f32 	%f11, 0f3f800000;    	// 1
	add.f32 	%f12, %f6, %f11;     	// 
	div.approx.f32 	%f13, %f10, %f12;	// 
	mul.f32 	%f14, %f10, %f13;    	// 
	sub.f32 	%f15, %f10, %f14;    	// 
	mul.f32 	%f16, %f15, %f15;    	// 
	mov.f32 	%f17, 0f3daaab50;    	// 0.0833346
	mov.f32 	%f18, 0f3c4c4be0;    	// 0.0124693
	mov.f32 	%f19, 0f3b2063c3;    	// 0.00244735
	mad.f32 	%f20, %f19, %f16, %f18;	// 
	mad.f32 	%f21, %f16, %f20, %f17;	// 
	mul.f32 	%f22, %f16, %f21;    	// 
	mul.f32 	%f23, %f15, %f22;    	// 
	sub.f32 	%f24, %f23, %f14;    	// 
	add.f32 	%f25, %f10, %f24;    	// 
	mov.f32 	%f26, 0f3f317218;    	// 0.693147
	cvt.rn.f32.s32 	%f27, %r25;   	// 
	mad.f32 	%f4, %f26, %f27, %f25;	// 
$Lt_1_258:
 //<loop> Part of loop body line 155, head labeled $Lt_1_5634
	.loc	16	146	0
	ld.global.f32 	%f28, [%rd4+16384];	// id:90
	mov.f32 	%f29, 0f40c90fdb;    	// 6.28319
	mul.f32 	%f30, %f28, %f29;    	// 
	.loc	16	147	0
	mov.f32 	%f31, 0fc0000000;    	// -2
	mul.f32 	%f32, %f4, %f31;     	// 
	sqrt.approx.f32 	%f33, %f32;  	// 
	cos.approx.f32 	%f34, %f30;   	// 
	mul.f32 	%f35, %f33, %f34;    	// 
	st.global.f32 	[%rd4+0], %f35;	// id:91
	.loc	16	148	0
	sin.approx.f32 	%f36, %f30;   	// 
	mul.f32 	%f37, %f33, %f36;    	// 
	st.global.f32 	[%rd4+16384], %f37;	// id:92
	.loc	16	157	0
	add.s32 	%r16, %r16, 8192;    	// 
	add.u64 	%rd4, %rd4, 32768;   	// 
	setp.lt.s32 	%p5, %r16, %r17; 	// 
	@%p5 bra 	$Lt_1_5634;         	// 
$Lt_1_5122:
 //<loop> Part of loop body line 155, head labeled $Lt_1_4866
	add.s32 	%r4, %r4, %r8;       	// 
	mov.u32 	%r26, 4095;          	// 
	setp.le.s32 	%p6, %r4, %r26;  	// 
	@%p6 bra 	$Lt_1_4866;         	// 
$Lt_1_4354:
	.loc	16	161	0
	exit;                         	// 
$LDWend__Z12BoxMullerGPUPfi:
	} // _Z12BoxMullerGPUPfi

