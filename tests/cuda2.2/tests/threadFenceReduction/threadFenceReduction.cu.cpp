# 1 "/tmp/tmpxft_0000226b_00000000-1_threadFenceReduction.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/tmp/tmpxft_0000226b_00000000-1_threadFenceReduction.cudafe1.cpp"
# 1 "threadFenceReduction.cu"
# 46 "/usr/local/cuda/bin/../include/device_types.h"
# 149 "/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/stddef.h" 3
typedef long ptrdiff_t;
# 211 "/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda/bin/../include/builtin_types.h" 1 3
# 42 "/usr/local/cuda/bin/../include/builtin_types.h" 3
# 1 "/usr/local/cuda/bin/../include/device_types.h" 1 3
# 46 "/usr/local/cuda/bin/../include/device_types.h" 3
enum cudaRoundMode
{
  cudaRoundNearest,
  cudaRoundZero,
  cudaRoundPosInf,
  cudaRoundMinInf
};
# 43 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/driver_types.h" 1 3
# 94 "/usr/local/cuda/bin/../include/driver_types.h" 3
enum cudaError
{
  cudaSuccess = 0,
  cudaErrorMissingConfiguration = 1,
  cudaErrorMemoryAllocation = 2,
  cudaErrorInitializationError = 3,
  cudaErrorLaunchFailure = 4,
  cudaErrorPriorLaunchFailure = 5,
  cudaErrorLaunchTimeout = 6,
  cudaErrorLaunchOutOfResources = 7,
  cudaErrorInvalidDeviceFunction = 8,
  cudaErrorInvalidConfiguration = 9,
  cudaErrorInvalidDevice = 10,
  cudaErrorInvalidValue = 11,
  cudaErrorInvalidPitchValue = 12,
  cudaErrorInvalidSymbol = 13,
  cudaErrorMapBufferObjectFailed = 14,
  cudaErrorUnmapBufferObjectFailed = 15,
  cudaErrorInvalidHostPointer = 16,
  cudaErrorInvalidDevicePointer = 17,
  cudaErrorInvalidTexture = 18,
  cudaErrorInvalidTextureBinding = 19,
  cudaErrorInvalidChannelDescriptor = 20,
  cudaErrorInvalidMemcpyDirection = 21,
  cudaErrorAddressOfConstant = 22,





  cudaErrorTextureFetchFailed = 23,
  cudaErrorTextureNotBound = 24,
  cudaErrorSynchronizationError = 25,
  cudaErrorInvalidFilterSetting = 26,
  cudaErrorInvalidNormSetting = 27,
  cudaErrorMixedDeviceExecution = 28,
  cudaErrorCudartUnloading = 29,
  cudaErrorUnknown = 30,
  cudaErrorNotYetImplemented = 31,
  cudaErrorMemoryValueTooLarge = 32,
  cudaErrorInvalidResourceHandle = 33,
  cudaErrorNotReady = 34,
  cudaErrorInsufficientDriver = 35,
  cudaErrorSetOnActiveProcess = 36,
  cudaErrorInvalidSurface = 37,
  cudaErrorNoDevice = 38,
  cudaErrorECCUncorrectable = 39,
  cudaErrorSharedObjectSymbolNotFound = 40,
  cudaErrorSharedObjectInitFailed = 41,
  cudaErrorUnsupportedLimit = 42,
  cudaErrorDuplicateVariableName = 43,
  cudaErrorDuplicateTextureName = 44,
  cudaErrorDuplicateSurfaceName = 45,
  cudaErrorDevicesUnavailable = 46,
  cudaErrorStartupFailure = 0x7f,
  cudaErrorApiFailureBase = 10000
};





enum cudaChannelFormatKind
{
  cudaChannelFormatKindSigned = 0,
  cudaChannelFormatKindUnsigned = 1,
  cudaChannelFormatKindFloat = 2,
  cudaChannelFormatKindNone = 3
};





struct cudaChannelFormatDesc
{
  int x;
  int y;
  int z;
  int w;
  enum cudaChannelFormatKind f;
};





struct cudaArray;





enum cudaMemcpyKind
{
  cudaMemcpyHostToHost = 0,
  cudaMemcpyHostToDevice = 1,
  cudaMemcpyDeviceToHost = 2,
  cudaMemcpyDeviceToDevice = 3
};






struct cudaPitchedPtr
{
  void *ptr;
  size_t pitch;
  size_t xsize;
  size_t ysize;
};






struct cudaExtent
{
  size_t width;
  size_t height;
  size_t depth;
};






struct cudaPos
{
  size_t x;
  size_t y;
  size_t z;
};





struct cudaMemcpy3DParms
{
  struct cudaArray *srcArray;
  struct cudaPos srcPos;
  struct cudaPitchedPtr srcPtr;

  struct cudaArray *dstArray;
  struct cudaPos dstPos;
  struct cudaPitchedPtr dstPtr;

  struct cudaExtent extent;
  enum cudaMemcpyKind kind;
};





struct cudaGraphicsResource;





enum cudaGraphicsRegisterFlags
{
  cudaGraphicsRegisterFlagsNone = 0
};





enum cudaGraphicsMapFlags
{
  cudaGraphicsMapFlagsNone = 0,
  cudaGraphicsMapFlagsReadOnly = 1,
  cudaGraphicsMapFlagsWriteDiscard = 2
};





enum cudaGraphicsCubeFace {
  cudaGraphicsCubeFacePositiveX = 0x00,
  cudaGraphicsCubeFaceNegativeX = 0x01,
  cudaGraphicsCubeFacePositiveY = 0x02,
  cudaGraphicsCubeFaceNegativeY = 0x03,
  cudaGraphicsCubeFacePositiveZ = 0x04,
  cudaGraphicsCubeFaceNegativeZ = 0x05
};





struct cudaFuncAttributes
{
   size_t sharedSizeBytes;
   size_t constSizeBytes;
   size_t localSizeBytes;
   int maxThreadsPerBlock;
   int numRegs;





   int ptxVersion;





   int binaryVersion;
   int __cudaReserved[6];
};





enum cudaFuncCache
{
  cudaFuncCachePreferNone = 0,
  cudaFuncCachePreferShared = 1,
  cudaFuncCachePreferL1 = 2
};





enum cudaComputeMode
{
  cudaComputeModeDefault = 0,
  cudaComputeModeExclusive = 1,
  cudaComputeModeProhibited = 2
};





enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01
};





struct cudaDeviceProp
{
  char name[256];
  size_t totalGlobalMem;
  size_t sharedMemPerBlock;
  int regsPerBlock;
  int warpSize;
  size_t memPitch;
  int maxThreadsPerBlock;
  int maxThreadsDim[3];
  int maxGridSize[3];
  int clockRate;
  size_t totalConstMem;
  int major;
  int minor;
  size_t textureAlignment;
  int deviceOverlap;
  int multiProcessorCount;
  int kernelExecTimeoutEnabled;
  int integrated;
  int canMapHostMemory;
  int computeMode;
  int maxTexture1D;
  int maxTexture2D[2];
  int maxTexture3D[3];
  int maxTexture2DArray[3];
  size_t surfaceAlignment;
  int concurrentKernels;
  int ECCEnabled;
  int __cudaReserved[24];
};
# 424 "/usr/local/cuda/bin/../include/driver_types.h" 3
typedef enum cudaError cudaError_t;





typedef struct CUstream_st *cudaStream_t;





typedef struct CUevent_st *cudaEvent_t;





typedef struct CUuuid_st cudaUUID_t;
# 44 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/surface_types.h" 1 3
# 54 "/usr/local/cuda/bin/../include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
  cudaBoundaryModeZero = 0,
  cudaBoundaryModeClamp = 1,
  cudaBoundaryModeTrap = 2
};


enum cudaSurfaceFormatMode
{
  cudaFormatModeForced,
  cudaFormatModeAuto
};


struct surfaceReference
{
  struct cudaChannelFormatDesc channelDesc;
};
# 45 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/texture_types.h" 1 3
# 54 "/usr/local/cuda/bin/../include/texture_types.h" 3
enum cudaTextureAddressMode
{
  cudaAddressModeWrap,
  cudaAddressModeClamp,
  cudaAddressModeMirror
};


enum cudaTextureFilterMode
{
  cudaFilterModePoint,
  cudaFilterModeLinear
};


enum cudaTextureReadMode
{
  cudaReadModeElementType,
  cudaReadModeNormalizedFloat
};


struct textureReference
{
  int normalized;
  enum cudaTextureFilterMode filterMode;
  enum cudaTextureAddressMode addressMode[3];
  struct cudaChannelFormatDesc channelDesc;
  int __cudaReserved[16];
};
# 46 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/vector_types.h" 1 3
# 45 "/usr/local/cuda/bin/../include/vector_types.h" 3
# 1 "/usr/local/cuda/bin/../include/builtin_types.h" 1 3
# 46 "/usr/local/cuda/bin/../include/builtin_types.h" 3
# 1 "/usr/local/cuda/bin/../include/vector_types.h" 1 3
# 46 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 46 "/usr/local/cuda/bin/../include/vector_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/host_defines.h" 1 3
# 47 "/usr/local/cuda/bin/../include/vector_types.h" 2 3
# 75 "/usr/local/cuda/bin/../include/vector_types.h" 3
struct char1
{
  signed char x;
};


struct uchar1
{
  unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
  signed char x, y;
};


struct __attribute__((aligned(2))) uchar2
{
  unsigned char x, y;
};


struct char3
{
  signed char x, y, z;
};


struct uchar3
{
  unsigned char x, y, z;
};


struct __attribute__((aligned(4))) char4
{
  signed char x, y, z, w;
};


struct __attribute__((aligned(4))) uchar4
{
  unsigned char x, y, z, w;
};


struct short1
{
  short x;
};


struct ushort1
{
  unsigned short x;
};


struct __attribute__((aligned(4))) short2
{
  short x, y;
};


struct __attribute__((aligned(4))) ushort2
{
  unsigned short x, y;
};


struct short3
{
  short x, y, z;
};


struct ushort3
{
  unsigned short x, y, z;
};


struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };


struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };


struct int1
{
  int x;
};


struct uint1
{
  unsigned int x;
};


struct __attribute__((aligned(8))) int2 { int x; int y; };


struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };


struct int3
{
  int x, y, z;
};


struct uint3
{
  unsigned int x, y, z;
};


struct __attribute__((aligned(16))) int4
{
  int x, y, z, w;
};


struct __attribute__((aligned(16))) uint4
{
  unsigned int x, y, z, w;
};


struct long1
{
  long int x;
};


struct ulong1
{
  unsigned long x;
};
# 229 "/usr/local/cuda/bin/../include/vector_types.h" 3
struct __attribute__((aligned(2*sizeof(long int)))) long2
{
  long int x, y;
};


struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
  unsigned long int x, y;
};




struct long3
{
  long int x, y, z;
};


struct ulong3
{
  unsigned long int x, y, z;
};


struct __attribute__((aligned(16))) long4
{
  long int x, y, z, w;
};


struct __attribute__((aligned(16))) ulong4
{
  unsigned long int x, y, z, w;
};


struct float1
{
  float x;
};


struct __attribute__((aligned(8))) float2 { float x; float y; };


struct float3
{
  float x, y, z;
};


struct __attribute__((aligned(16))) float4
{
  float x, y, z, w;
};


struct longlong1
{
  long long int x;
};


struct ulonglong1
{
  unsigned long long int x;
};


struct __attribute__((aligned(16))) longlong2
{
  long long int x, y;
};


struct __attribute__((aligned(16))) ulonglong2
{
  unsigned long long int x, y;
};


struct longlong3
{
  long long int x, y, z;
};


struct ulonglong3
{
  unsigned long long int x, y, z;
};


struct __attribute__((aligned(16))) longlong4
{
  long long int x, y, z ,w;
};


struct __attribute__((aligned(16))) ulonglong4
{
  unsigned long long int x, y, z, w;
};


struct double1
{
  double x;
};


struct __attribute__((aligned(16))) double2
{
  double x, y;
};


struct double3
{
  double x, y, z;
};


struct __attribute__((aligned(16))) double4
{
  double x, y, z, w;
};
# 366 "/usr/local/cuda/bin/../include/vector_types.h" 3
typedef struct char1 char1;

typedef struct uchar1 uchar1;

typedef struct char2 char2;

typedef struct uchar2 uchar2;

typedef struct char3 char3;

typedef struct uchar3 uchar3;

typedef struct char4 char4;

typedef struct uchar4 uchar4;

typedef struct short1 short1;

typedef struct ushort1 ushort1;

typedef struct short2 short2;

typedef struct ushort2 ushort2;

typedef struct short3 short3;

typedef struct ushort3 ushort3;

typedef struct short4 short4;

typedef struct ushort4 ushort4;

typedef struct int1 int1;

typedef struct uint1 uint1;

typedef struct int2 int2;

typedef struct uint2 uint2;

typedef struct int3 int3;

typedef struct uint3 uint3;

typedef struct int4 int4;

typedef struct uint4 uint4;

typedef struct long1 long1;

typedef struct ulong1 ulong1;

typedef struct long2 long2;

typedef struct ulong2 ulong2;

typedef struct long3 long3;

typedef struct ulong3 ulong3;

typedef struct long4 long4;

typedef struct ulong4 ulong4;

typedef struct float1 float1;

typedef struct float2 float2;

typedef struct float3 float3;

typedef struct float4 float4;

typedef struct longlong1 longlong1;

typedef struct ulonglong1 ulonglong1;

typedef struct longlong2 longlong2;

typedef struct ulonglong2 ulonglong2;

typedef struct longlong3 longlong3;

typedef struct ulonglong3 ulonglong3;

typedef struct longlong4 longlong4;

typedef struct ulonglong4 ulonglong4;

typedef struct double1 double1;

typedef struct double2 double2;

typedef struct double3 double3;

typedef struct double4 double4;
# 469 "/usr/local/cuda/bin/../include/vector_types.h" 3
struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};


typedef struct dim3 dim3;
# 46 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 70 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda/bin/../include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3
# 213 "/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/stddef.h" 2 3
# 94 "/usr/local/cuda/bin/../include/driver_types.h"
# 156 "/usr/local/cuda/bin/../include/driver_types.h"
# 168 "/usr/local/cuda/bin/../include/driver_types.h"
# 181 "/usr/local/cuda/bin/../include/driver_types.h"
# 187 "/usr/local/cuda/bin/../include/driver_types.h"
# 200 "/usr/local/cuda/bin/../include/driver_types.h"
# 213 "/usr/local/cuda/bin/../include/driver_types.h"
# 225 "/usr/local/cuda/bin/../include/driver_types.h"
# 236 "/usr/local/cuda/bin/../include/driver_types.h"
# 254 "/usr/local/cuda/bin/../include/driver_types.h"
# 260 "/usr/local/cuda/bin/../include/driver_types.h"
# 269 "/usr/local/cuda/bin/../include/driver_types.h"
# 280 "/usr/local/cuda/bin/../include/driver_types.h"
# 293 "/usr/local/cuda/bin/../include/driver_types.h"
# 319 "/usr/local/cuda/bin/../include/driver_types.h"
# 330 "/usr/local/cuda/bin/../include/driver_types.h"
# 341 "/usr/local/cuda/bin/../include/driver_types.h"
# 351 "/usr/local/cuda/bin/../include/driver_types.h"
# 424 "/usr/local/cuda/bin/../include/driver_types.h"
# 430 "/usr/local/cuda/bin/../include/driver_types.h"
# 436 "/usr/local/cuda/bin/../include/driver_types.h"
# 442 "/usr/local/cuda/bin/../include/driver_types.h"
# 54 "/usr/local/cuda/bin/../include/surface_types.h"
# 62 "/usr/local/cuda/bin/../include/surface_types.h"
# 69 "/usr/local/cuda/bin/../include/surface_types.h"
# 54 "/usr/local/cuda/bin/../include/texture_types.h"
# 62 "/usr/local/cuda/bin/../include/texture_types.h"
# 69 "/usr/local/cuda/bin/../include/texture_types.h"
# 76 "/usr/local/cuda/bin/../include/texture_types.h"
# 75 "/usr/local/cuda/bin/../include/vector_types.h"
# 81 "/usr/local/cuda/bin/../include/vector_types.h"
# 87 "/usr/local/cuda/bin/../include/vector_types.h"
# 93 "/usr/local/cuda/bin/../include/vector_types.h"
# 99 "/usr/local/cuda/bin/../include/vector_types.h"
# 105 "/usr/local/cuda/bin/../include/vector_types.h"
# 111 "/usr/local/cuda/bin/../include/vector_types.h"
# 117 "/usr/local/cuda/bin/../include/vector_types.h"
# 123 "/usr/local/cuda/bin/../include/vector_types.h"
# 129 "/usr/local/cuda/bin/../include/vector_types.h"
# 135 "/usr/local/cuda/bin/../include/vector_types.h"
# 141 "/usr/local/cuda/bin/../include/vector_types.h"
# 147 "/usr/local/cuda/bin/../include/vector_types.h"
# 153 "/usr/local/cuda/bin/../include/vector_types.h"
# 159 "/usr/local/cuda/bin/../include/vector_types.h"
# 162 "/usr/local/cuda/bin/../include/vector_types.h"
# 165 "/usr/local/cuda/bin/../include/vector_types.h"
# 171 "/usr/local/cuda/bin/../include/vector_types.h"
# 177 "/usr/local/cuda/bin/../include/vector_types.h"
# 180 "/usr/local/cuda/bin/../include/vector_types.h"
# 183 "/usr/local/cuda/bin/../include/vector_types.h"
# 189 "/usr/local/cuda/bin/../include/vector_types.h"
# 195 "/usr/local/cuda/bin/../include/vector_types.h"
# 201 "/usr/local/cuda/bin/../include/vector_types.h"
# 207 "/usr/local/cuda/bin/../include/vector_types.h"
# 213 "/usr/local/cuda/bin/../include/vector_types.h"
# 229 "/usr/local/cuda/bin/../include/vector_types.h"
# 235 "/usr/local/cuda/bin/../include/vector_types.h"
# 243 "/usr/local/cuda/bin/../include/vector_types.h"
# 249 "/usr/local/cuda/bin/../include/vector_types.h"
# 255 "/usr/local/cuda/bin/../include/vector_types.h"
# 261 "/usr/local/cuda/bin/../include/vector_types.h"
# 267 "/usr/local/cuda/bin/../include/vector_types.h"
# 273 "/usr/local/cuda/bin/../include/vector_types.h"
# 276 "/usr/local/cuda/bin/../include/vector_types.h"
# 282 "/usr/local/cuda/bin/../include/vector_types.h"
# 288 "/usr/local/cuda/bin/../include/vector_types.h"
# 294 "/usr/local/cuda/bin/../include/vector_types.h"
# 300 "/usr/local/cuda/bin/../include/vector_types.h"
# 306 "/usr/local/cuda/bin/../include/vector_types.h"
# 312 "/usr/local/cuda/bin/../include/vector_types.h"
# 318 "/usr/local/cuda/bin/../include/vector_types.h"
# 324 "/usr/local/cuda/bin/../include/vector_types.h"
# 330 "/usr/local/cuda/bin/../include/vector_types.h"
# 336 "/usr/local/cuda/bin/../include/vector_types.h"
# 342 "/usr/local/cuda/bin/../include/vector_types.h"
# 348 "/usr/local/cuda/bin/../include/vector_types.h"
# 354 "/usr/local/cuda/bin/../include/vector_types.h"
# 366 "/usr/local/cuda/bin/../include/vector_types.h"
# 368 "/usr/local/cuda/bin/../include/vector_types.h"
# 370 "/usr/local/cuda/bin/../include/vector_types.h"
# 372 "/usr/local/cuda/bin/../include/vector_types.h"
# 374 "/usr/local/cuda/bin/../include/vector_types.h"
# 376 "/usr/local/cuda/bin/../include/vector_types.h"
# 378 "/usr/local/cuda/bin/../include/vector_types.h"
# 380 "/usr/local/cuda/bin/../include/vector_types.h"
# 382 "/usr/local/cuda/bin/../include/vector_types.h"
# 384 "/usr/local/cuda/bin/../include/vector_types.h"
# 386 "/usr/local/cuda/bin/../include/vector_types.h"
# 388 "/usr/local/cuda/bin/../include/vector_types.h"
# 390 "/usr/local/cuda/bin/../include/vector_types.h"
# 392 "/usr/local/cuda/bin/../include/vector_types.h"
# 394 "/usr/local/cuda/bin/../include/vector_types.h"
# 396 "/usr/local/cuda/bin/../include/vector_types.h"
# 398 "/usr/local/cuda/bin/../include/vector_types.h"
# 400 "/usr/local/cuda/bin/../include/vector_types.h"
# 402 "/usr/local/cuda/bin/../include/vector_types.h"
# 404 "/usr/local/cuda/bin/../include/vector_types.h"
# 406 "/usr/local/cuda/bin/../include/vector_types.h"
# 408 "/usr/local/cuda/bin/../include/vector_types.h"
# 410 "/usr/local/cuda/bin/../include/vector_types.h"
# 412 "/usr/local/cuda/bin/../include/vector_types.h"
# 414 "/usr/local/cuda/bin/../include/vector_types.h"
# 416 "/usr/local/cuda/bin/../include/vector_types.h"
# 418 "/usr/local/cuda/bin/../include/vector_types.h"
# 420 "/usr/local/cuda/bin/../include/vector_types.h"
# 422 "/usr/local/cuda/bin/../include/vector_types.h"
# 424 "/usr/local/cuda/bin/../include/vector_types.h"
# 426 "/usr/local/cuda/bin/../include/vector_types.h"
# 428 "/usr/local/cuda/bin/../include/vector_types.h"
# 430 "/usr/local/cuda/bin/../include/vector_types.h"
# 432 "/usr/local/cuda/bin/../include/vector_types.h"
# 434 "/usr/local/cuda/bin/../include/vector_types.h"
# 436 "/usr/local/cuda/bin/../include/vector_types.h"
# 438 "/usr/local/cuda/bin/../include/vector_types.h"
# 440 "/usr/local/cuda/bin/../include/vector_types.h"
# 442 "/usr/local/cuda/bin/../include/vector_types.h"
# 444 "/usr/local/cuda/bin/../include/vector_types.h"
# 446 "/usr/local/cuda/bin/../include/vector_types.h"
# 448 "/usr/local/cuda/bin/../include/vector_types.h"
# 450 "/usr/local/cuda/bin/../include/vector_types.h"
# 452 "/usr/local/cuda/bin/../include/vector_types.h"
# 454 "/usr/local/cuda/bin/../include/vector_types.h"
# 456 "/usr/local/cuda/bin/../include/vector_types.h"
# 458 "/usr/local/cuda/bin/../include/vector_types.h"
# 460 "/usr/local/cuda/bin/../include/vector_types.h"
# 469 "/usr/local/cuda/bin/../include/vector_types.h"
# 480 "/usr/local/cuda/bin/../include/vector_types.h"
# 89 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3D(cudaPitchedPtr *, cudaExtent);
# 90 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3DArray(cudaArray **, const cudaChannelFormatDesc *, cudaExtent, unsigned = (0));
# 91 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3D(cudaPitchedPtr, int, cudaExtent);
# 92 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms *);
# 93 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms *, cudaStream_t = 0);
# 101 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void **, size_t);
# 102 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocHost(void **, size_t);
# 103 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocPitch(void **, size_t *, size_t, size_t);
# 104 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocArray(cudaArray **, const cudaChannelFormatDesc *, size_t, size_t = (0), unsigned = (0));
# 105 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFree(void *);
# 106 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeHost(void *);
# 107 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeArray(cudaArray *);
# 109 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostAlloc(void **, size_t, unsigned);
# 110 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetDevicePointer(void **, void *, unsigned);
# 111 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetFlags(unsigned *, void *);
# 119 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemGetInfo(size_t *, size_t *);
# 120 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy(void *, const void *, size_t, cudaMemcpyKind);
# 121 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArray(cudaArray *, size_t, size_t, const void *, size_t, cudaMemcpyKind);
# 122 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArray(void *, const cudaArray *, size_t, size_t, size_t, cudaMemcpyKind);
# 123 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyArrayToArray(cudaArray *, size_t, size_t, const cudaArray *, size_t, size_t, size_t, cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 124 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2D(void *, size_t, const void *, size_t, size_t, size_t, cudaMemcpyKind);
# 125 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArray(cudaArray *, size_t, size_t, const void *, size_t, size_t, size_t, cudaMemcpyKind);
# 126 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArray(void *, size_t, const cudaArray *, size_t, size_t, size_t, size_t, cudaMemcpyKind);
# 127 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DArrayToArray(cudaArray *, size_t, size_t, const cudaArray *, size_t, size_t, size_t, size_t, cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 128 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbol(const char *, const void *, size_t, size_t = (0), cudaMemcpyKind = cudaMemcpyHostToDevice);
# 129 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbol(void *, const char *, size_t, size_t = (0), cudaMemcpyKind = cudaMemcpyDeviceToHost);
# 137 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void *, const void *, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 138 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArrayAsync(cudaArray *, size_t, size_t, const void *, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 139 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArrayAsync(void *, const cudaArray *, size_t, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 140 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void *, size_t, const void *, size_t, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 141 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArrayAsync(cudaArray *, size_t, size_t, const void *, size_t, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 142 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArrayAsync(void *, size_t, const cudaArray *, size_t, size_t, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 143 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbolAsync(const char *, const void *, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 144 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbolAsync(void *, const char *, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 152 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset(void *, int, size_t);
# 153 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2D(void *, size_t, int, size_t, size_t);
# 161 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolAddress(void **, const char *);
# 162 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolSize(size_t *, const char *);
# 170 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int *);
# 171 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceProperties(cudaDeviceProp *, int);
# 172 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaChooseDevice(int *, const cudaDeviceProp *);
# 173 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDevice(int);
# 174 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int *);
# 175 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetValidDevices(int *, int);
# 176 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDeviceFlags(int);
# 184 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture(size_t *, const textureReference *, const void *, const cudaChannelFormatDesc *, size_t = (((2147483647) * 2U) + 1U));
# 185 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture2D(size_t *, const textureReference *, const void *, const cudaChannelFormatDesc *, size_t, size_t, size_t);
# 186 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToArray(const textureReference *, const cudaArray *, const cudaChannelFormatDesc *);
# 187 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaUnbindTexture(const textureReference *);
# 188 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureAlignmentOffset(size_t *, const textureReference *);
# 189 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureReference(const textureReference **, const char *);
# 197 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindSurfaceToArray(const surfaceReference *, const cudaArray *, const cudaChannelFormatDesc *);
# 198 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceAlignmentOffset(size_t *, const surfaceReference *);
# 199 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceReference(const surfaceReference **, const char *);
# 207 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc *, const cudaArray *);
# 208 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaChannelFormatDesc cudaCreateChannelDesc(int, int, int, int, cudaChannelFormatKind);
# 216 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 217 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 218 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t);
# 226 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaConfigureCall(dim3, dim3, size_t = (0), cudaStream_t = 0);
# 227 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetupArgument(const void *, size_t, size_t);
# 228 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetCacheConfig(const char *, cudaFuncCache);
# 229 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaLaunch(const char *);
# 230 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes *, const char *);
# 238 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreate(cudaStream_t *);
# 239 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t);
# 240 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamSynchronize(cudaStream_t);
# 241 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamQuery(cudaStream_t);
# 249 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreate(cudaEvent_t *);
# 250 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t *, int);
# 251 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t, cudaStream_t = 0);
# 252 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventQuery(cudaEvent_t);
# 253 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventSynchronize(cudaEvent_t);
# 254 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t);
# 255 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventElapsedTime(float *, cudaEvent_t, cudaEvent_t);
# 263 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForDevice(double *);
# 264 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForHost(double *);
# 272 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadExit();
# 273 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSynchronize();
# 274 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetLimit(cudaLimit, size_t);
# 275 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetLimit(size_t *, cudaLimit);
# 283 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDriverGetVersion(int *);
# 284 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int *);
# 285 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetExportTable(const void **, const cudaUUID_t *);
# 294 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource *);
# 295 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource *, unsigned);
# 296 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsMapResources(int, cudaGraphicsResource **, cudaStream_t = 0);
# 297 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnmapResources(int, cudaGraphicsResource **, cudaStream_t = 0);
# 298 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedPointer(void **, size_t *, cudaGraphicsResource *);
# 299 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray **, cudaGraphicsResource *, unsigned, unsigned);
# 93 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 94 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 95 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 96 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 98 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 99 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 100 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 102 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 103 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 105 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 106 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 107 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 109 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 110 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 112 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 113 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 114 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 119 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 120 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 121 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 126 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 127 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 128 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 133 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 135 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 137 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 138 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 139 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 141 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 142 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 144 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 145 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 146 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 148 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 149 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 151 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 152 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 153 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 158 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 159 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 160 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 165 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 166 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 167 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 172 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 173 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 174 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 179 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 180 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 181 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 186 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 187 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 188 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 193 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 194 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 195 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 197 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 200 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 201 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 202 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 204 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 207 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 208 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 209 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 214 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 215 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 216 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 221 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 222 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 223 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 228 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 229 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 230 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 235 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 236 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 237 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 242 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 243 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 244 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 249 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 250 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 251 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 253 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 256 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 257 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 258 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 260 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 263 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 264 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 265 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 270 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 271 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 272 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 277 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 278 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 279 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 284 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 285 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 286 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 291 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 292 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 293 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 298 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 299 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 300 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 365 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 366 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 367 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 369 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 370 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 372 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 373 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 374 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 376 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 377 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 379 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 380 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 381 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 386 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 387 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 388 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 55 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 56 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 57 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaPitchedPtr s;
# 59 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.ptr) = d;
# 60 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.pitch) = p;
# 61 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.xsize) = xsz;
# 62 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.ysize) = ysz;
# 64 "/usr/local/cuda/bin/../include/driver_functions.h"
return s;
# 65 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 67 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 68 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 69 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaPos p;
# 71 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.x) = x;
# 72 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.y) = y;
# 73 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.z) = z;
# 75 "/usr/local/cuda/bin/../include/driver_functions.h"
return p;
# 76 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 78 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 79 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 80 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaExtent e;
# 82 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.width) = w;
# 83 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.height) = h;
# 84 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.depth) = d;
# 86 "/usr/local/cuda/bin/../include/driver_functions.h"
return e;
# 87 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 55 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char1 make_char1(signed char x)
# 56 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 57 "/usr/local/cuda/bin/../include/vector_functions.h"
char1 t; (t.x) = x; return t;
# 58 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 60 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar1 make_uchar1(unsigned char x)
# 61 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 62 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar1 t; (t.x) = x; return t;
# 63 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 65 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char2 make_char2(signed char x, signed char y)
# 66 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 67 "/usr/local/cuda/bin/../include/vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t;
# 68 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 70 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 71 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 72 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 73 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 75 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 76 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 77 "/usr/local/cuda/bin/../include/vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 78 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 80 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 81 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 82 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 83 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 85 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 86 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 87 "/usr/local/cuda/bin/../include/vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 88 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 90 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 91 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 92 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 93 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 95 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short1 make_short1(short x)
# 96 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 97 "/usr/local/cuda/bin/../include/vector_functions.h"
short1 t; (t.x) = x; return t;
# 98 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 100 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort1 make_ushort1(unsigned short x)
# 101 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 102 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort1 t; (t.x) = x; return t;
# 103 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 105 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short2 make_short2(short x, short y)
# 106 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 107 "/usr/local/cuda/bin/../include/vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t;
# 108 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 110 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 111 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 112 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 113 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 115 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short3 make_short3(short x, short y, short z)
# 116 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 117 "/usr/local/cuda/bin/../include/vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 118 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 120 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 121 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 122 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 123 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 125 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short4 make_short4(short x, short y, short z, short w)
# 126 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 127 "/usr/local/cuda/bin/../include/vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 128 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 130 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 131 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 132 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 133 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 135 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int1 make_int1(int x)
# 136 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 137 "/usr/local/cuda/bin/../include/vector_functions.h"
int1 t; (t.x) = x; return t;
# 138 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 140 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint1 make_uint1(unsigned x)
# 141 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 142 "/usr/local/cuda/bin/../include/vector_functions.h"
uint1 t; (t.x) = x; return t;
# 143 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 145 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int2 make_int2(int x, int y)
# 146 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 147 "/usr/local/cuda/bin/../include/vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t;
# 148 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 150 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 151 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 152 "/usr/local/cuda/bin/../include/vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 153 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 155 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int3 make_int3(int x, int y, int z)
# 156 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 157 "/usr/local/cuda/bin/../include/vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 158 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 160 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 161 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 162 "/usr/local/cuda/bin/../include/vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 163 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 165 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int4 make_int4(int x, int y, int z, int w)
# 166 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 167 "/usr/local/cuda/bin/../include/vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 168 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 170 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 171 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 172 "/usr/local/cuda/bin/../include/vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 173 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 175 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long1 make_long1(long x)
# 176 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 177 "/usr/local/cuda/bin/../include/vector_functions.h"
long1 t; (t.x) = x; return t;
# 178 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 180 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong1 make_ulong1(unsigned long x)
# 181 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 182 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong1 t; (t.x) = x; return t;
# 183 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 185 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long2 make_long2(long x, long y)
# 186 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 187 "/usr/local/cuda/bin/../include/vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t;
# 188 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 190 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 191 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 192 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 193 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 195 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long3 make_long3(long x, long y, long z)
# 196 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 197 "/usr/local/cuda/bin/../include/vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 198 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 200 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 201 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 202 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 203 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 205 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long4 make_long4(long x, long y, long z, long w)
# 206 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 207 "/usr/local/cuda/bin/../include/vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 208 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 210 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 211 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 212 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 213 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 215 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float1 make_float1(float x)
# 216 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 217 "/usr/local/cuda/bin/../include/vector_functions.h"
float1 t; (t.x) = x; return t;
# 218 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 220 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float2 make_float2(float x, float y)
# 221 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 222 "/usr/local/cuda/bin/../include/vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t;
# 223 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 225 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float3 make_float3(float x, float y, float z)
# 226 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 227 "/usr/local/cuda/bin/../include/vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 228 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 230 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float4 make_float4(float x, float y, float z, float w)
# 231 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 232 "/usr/local/cuda/bin/../include/vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 233 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 235 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong1 make_longlong1(long long x)
# 236 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 237 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong1 t; (t.x) = x; return t;
# 238 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 240 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 241 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 242 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong1 t; (t.x) = x; return t;
# 243 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 245 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong2 make_longlong2(long long x, long long y)
# 246 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 247 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 248 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 250 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 251 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 252 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 253 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 255 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 256 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 257 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 258 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 260 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 261 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 262 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 263 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 265 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 266 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 267 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 268 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 270 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 271 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 272 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 273 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 275 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double1 make_double1(double x)
# 276 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 277 "/usr/local/cuda/bin/../include/vector_functions.h"
double1 t; (t.x) = x; return t;
# 278 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 280 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double2 make_double2(double x, double y)
# 281 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 282 "/usr/local/cuda/bin/../include/vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t;
# 283 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 285 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double3 make_double3(double x, double y, double z)
# 286 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 287 "/usr/local/cuda/bin/../include/vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 288 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 290 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double4 make_double4(double x, double y, double z, double w)
# 291 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 292 "/usr/local/cuda/bin/../include/vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 293 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 43 "/usr/include/string.h" 3
extern "C" __attribute__((weak)) void *memcpy(void *__restrict__, const void *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 48 "/usr/include/string.h" 3
extern "C" void *memmove(void *, const void *, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 56 "/usr/include/string.h" 3
extern "C" void *memccpy(void *__restrict__, const void *__restrict__, int, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 64 "/usr/include/string.h" 3
extern "C" __attribute__((weak)) void *memset(void *, int, size_t) throw() __attribute__((nonnull(1)));
# 67 "/usr/include/string.h" 3
extern "C" int memcmp(const void *, const void *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 74 "/usr/include/string.h" 3
extern void *memchr(void *, int, size_t) throw() __asm__("memchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 76 "/usr/include/string.h" 3
extern const void *memchr(const void *, int, size_t) throw() __asm__("memchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 103 "/usr/include/string.h" 3
void *rawmemchr(void *, int) throw() __asm__("rawmemchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 105 "/usr/include/string.h" 3
const void *rawmemchr(const void *, int) throw() __asm__("rawmemchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 114 "/usr/include/string.h" 3
void *memrchr(void *, int, size_t) throw() __asm__("memrchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 116 "/usr/include/string.h" 3
const void *memrchr(const void *, int, size_t) throw() __asm__("memrchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 127 "/usr/include/string.h" 3
extern "C" char *strcpy(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 130 "/usr/include/string.h" 3
extern "C" char *strncpy(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 135 "/usr/include/string.h" 3
extern "C" char *strcat(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 138 "/usr/include/string.h" 3
extern "C" char *strncat(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 142 "/usr/include/string.h" 3
extern "C" int strcmp(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 145 "/usr/include/string.h" 3
extern "C" int strncmp(const char *, const char *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 149 "/usr/include/string.h" 3
extern "C" int strcoll(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 152 "/usr/include/string.h" 3
extern "C" size_t strxfrm(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(2)));
# 40 "/usr/include/xlocale.h" 3
extern "C" { typedef
# 28 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 31 "/usr/include/xlocale.h" 3
struct locale_data *__locales[13];
# 34 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 36 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 39 "/usr/include/xlocale.h" 3
const char *__names[13];
# 40 "/usr/include/xlocale.h" 3
} *__locale_t; }
# 43 "/usr/include/xlocale.h" 3
extern "C" { typedef __locale_t locale_t; }
# 164 "/usr/include/string.h" 3
extern "C" int strcoll_l(const char *, const char *, __locale_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 167 "/usr/include/string.h" 3
extern "C" size_t strxfrm_l(char *, const char *, size_t, __locale_t) throw() __attribute__((nonnull(2))) __attribute__((nonnull(4)));
# 173 "/usr/include/string.h" 3
extern "C" char *strdup(const char *) throw() __attribute__((__malloc__)) __attribute__((nonnull(1)));
# 181 "/usr/include/string.h" 3
extern "C" char *strndup(const char *, size_t) throw() __attribute__((__malloc__)) __attribute__((nonnull(1)));
# 213 "/usr/include/string.h" 3
extern char *strchr(char *, int) throw() __asm__("strchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 215 "/usr/include/string.h" 3
extern const char *strchr(const char *, int) throw() __asm__("strchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 240 "/usr/include/string.h" 3
extern char *strrchr(char *, int) throw() __asm__("strrchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 242 "/usr/include/string.h" 3
extern const char *strrchr(const char *, int) throw() __asm__("strrchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 269 "/usr/include/string.h" 3
char *strchrnul(char *, int) throw() __asm__("strchrnul") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 271 "/usr/include/string.h" 3
const char *strchrnul(const char *, int) throw() __asm__("strchrnul") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 282 "/usr/include/string.h" 3
extern "C" size_t strcspn(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 286 "/usr/include/string.h" 3
extern "C" size_t strspn(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 292 "/usr/include/string.h" 3
extern char *strpbrk(char *, const char *) throw() __asm__("strpbrk") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 294 "/usr/include/string.h" 3
extern const char *strpbrk(const char *, const char *) throw() __asm__("strpbrk") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 319 "/usr/include/string.h" 3
extern char *strstr(char *, const char *) throw() __asm__("strstr") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 321 "/usr/include/string.h" 3
extern const char *strstr(const char *, const char *) throw() __asm__("strstr") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 346 "/usr/include/string.h" 3
extern "C" char *strtok(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(2)));
# 352 "/usr/include/string.h" 3
extern "C" char *__strtok_r(char *__restrict__, const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 357 "/usr/include/string.h" 3
extern "C" char *strtok_r(char *__restrict__, const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 365 "/usr/include/string.h" 3
char *strcasestr(char *, const char *) throw() __asm__("strcasestr") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 367 "/usr/include/string.h" 3
const char *strcasestr(const char *, const char *) throw() __asm__("strcasestr") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 380 "/usr/include/string.h" 3
extern "C" void *memmem(const void *, size_t, const void *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(3)));
# 386 "/usr/include/string.h" 3
extern "C" void *__mempcpy(void *__restrict__, const void *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 389 "/usr/include/string.h" 3
extern "C" void *mempcpy(void *__restrict__, const void *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 397 "/usr/include/string.h" 3
extern "C" size_t strlen(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 404 "/usr/include/string.h" 3
extern "C" size_t strnlen(const char *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 411 "/usr/include/string.h" 3
extern "C" char *strerror(int) throw();
# 436 "/usr/include/string.h" 3
extern "C" char *strerror_r(int, char *, size_t) throw() __attribute__((nonnull(2)));
# 443 "/usr/include/string.h" 3
extern "C" char *strerror_l(int, __locale_t) throw();
# 449 "/usr/include/string.h" 3
extern "C" void __bzero(void *, size_t) throw() __attribute__((nonnull(1)));
# 453 "/usr/include/string.h" 3
extern "C" void bcopy(const void *, void *, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 457 "/usr/include/string.h" 3
extern "C" void bzero(void *, size_t) throw() __attribute__((nonnull(1)));
# 460 "/usr/include/string.h" 3
extern "C" int bcmp(const void *, const void *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 467 "/usr/include/string.h" 3
extern char *index(char *, int) throw() __asm__("index") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 469 "/usr/include/string.h" 3
extern const char *index(const char *, int) throw() __asm__("index") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 495 "/usr/include/string.h" 3
extern char *rindex(char *, int) throw() __asm__("rindex") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 497 "/usr/include/string.h" 3
extern const char *rindex(const char *, int) throw() __asm__("rindex") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 521 "/usr/include/string.h" 3
extern "C" int ffs(int) throw() __attribute__((__const__));
# 526 "/usr/include/string.h" 3
extern "C" int ffsl(long) throw() __attribute__((__const__));
# 528 "/usr/include/string.h" 3
extern "C" int ffsll(long long) throw() __attribute__((__const__));
# 534 "/usr/include/string.h" 3
extern "C" int strcasecmp(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 538 "/usr/include/string.h" 3
extern "C" int strncasecmp(const char *, const char *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 545 "/usr/include/string.h" 3
extern "C" int strcasecmp_l(const char *, const char *, __locale_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 549 "/usr/include/string.h" 3
extern "C" int strncasecmp_l(const char *, const char *, size_t, __locale_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(4)));
# 557 "/usr/include/string.h" 3
extern "C" char *strsep(char **__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 564 "/usr/include/string.h" 3
extern "C" char *strsignal(int) throw();
# 567 "/usr/include/string.h" 3
extern "C" char *__stpcpy(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 569 "/usr/include/string.h" 3
extern "C" char *stpcpy(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 574 "/usr/include/string.h" 3
extern "C" char *__stpncpy(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 577 "/usr/include/string.h" 3
extern "C" char *stpncpy(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 584 "/usr/include/string.h" 3
extern "C" int strverscmp(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 588 "/usr/include/string.h" 3
extern "C" char *strfry(char *) throw() __attribute__((nonnull(1)));
# 591 "/usr/include/string.h" 3
extern "C" void *memfrob(void *, size_t) throw() __attribute__((nonnull(1)));
# 599 "/usr/include/string.h" 3
char *basename(char *) throw() __asm__("basename") __attribute__((nonnull(1)));
# 601 "/usr/include/string.h" 3
const char *basename(const char *) throw() __asm__("basename") __attribute__((nonnull(1)));
# 31 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __u_char; }
# 32 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __u_short; }
# 33 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __u_int; }
# 34 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_long; }
# 37 "/usr/include/bits/types.h" 3
extern "C" { typedef signed char __int8_t; }
# 38 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __uint8_t; }
# 39 "/usr/include/bits/types.h" 3
extern "C" { typedef signed short __int16_t; }
# 40 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __uint16_t; }
# 41 "/usr/include/bits/types.h" 3
extern "C" { typedef signed int __int32_t; }
# 42 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uint32_t; }
# 44 "/usr/include/bits/types.h" 3
extern "C" { typedef signed long __int64_t; }
# 45 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __uint64_t; }
# 53 "/usr/include/bits/types.h" 3
extern "C" { typedef long __quad_t; }
# 54 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_quad_t; }
# 134 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __dev_t; }
# 135 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uid_t; }
# 136 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __gid_t; }
# 137 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino_t; }
# 138 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino64_t; }
# 139 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __mode_t; }
# 140 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __nlink_t; }
# 141 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off_t; }
# 142 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off64_t; }
# 143 "/usr/include/bits/types.h" 3
extern "C" { typedef int __pid_t; }
# 144 "/usr/include/bits/types.h" 3
extern "C" { typedef struct { int __val[2]; } __fsid_t; }
# 145 "/usr/include/bits/types.h" 3
extern "C" { typedef long __clock_t; }
# 146 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim_t; }
# 147 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim64_t; }
# 148 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __id_t; }
# 149 "/usr/include/bits/types.h" 3
extern "C" { typedef long __time_t; }
# 150 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __useconds_t; }
# 151 "/usr/include/bits/types.h" 3
extern "C" { typedef long __suseconds_t; }
# 153 "/usr/include/bits/types.h" 3
extern "C" { typedef int __daddr_t; }
# 154 "/usr/include/bits/types.h" 3
extern "C" { typedef long __swblk_t; }
# 155 "/usr/include/bits/types.h" 3
extern "C" { typedef int __key_t; }
# 158 "/usr/include/bits/types.h" 3
extern "C" { typedef int __clockid_t; }
# 161 "/usr/include/bits/types.h" 3
extern "C" { typedef void *__timer_t; }
# 164 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blksize_t; }
# 169 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt_t; }
# 170 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt64_t; }
# 173 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt_t; }
# 174 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt64_t; }
# 177 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt_t; }
# 178 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt64_t; }
# 180 "/usr/include/bits/types.h" 3
extern "C" { typedef long __ssize_t; }
# 184 "/usr/include/bits/types.h" 3
extern "C" { typedef __off64_t __loff_t; }
# 185 "/usr/include/bits/types.h" 3
extern "C" { typedef __quad_t *__qaddr_t; }
# 186 "/usr/include/bits/types.h" 3
extern "C" { typedef char *__caddr_t; }
# 189 "/usr/include/bits/types.h" 3
extern "C" { typedef long __intptr_t; }
# 192 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __socklen_t; }
# 60 "/usr/include/time.h" 3
extern "C" { typedef __clock_t clock_t; }
# 76 "/usr/include/time.h" 3
extern "C" { typedef __time_t time_t; }
# 92 "/usr/include/time.h" 3
extern "C" { typedef __clockid_t clockid_t; }
# 104 "/usr/include/time.h" 3
extern "C" { typedef __timer_t timer_t; }
# 120 "/usr/include/time.h" 3
extern "C" { struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
long tv_nsec;
# 124 "/usr/include/time.h" 3
}; }
# 133 "/usr/include/time.h" 3
extern "C" { struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
}; }
# 161 "/usr/include/time.h" 3
extern "C" { struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
}; }
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
extern "C" { typedef __pid_t pid_t; }
# 183 "/usr/include/time.h" 3
extern "C" __attribute__((weak)) clock_t clock() throw();
# 186 "/usr/include/time.h" 3
extern "C" time_t time(time_t *) throw();
# 189 "/usr/include/time.h" 3
extern "C" double difftime(time_t, time_t) throw() __attribute__((__const__));
# 193 "/usr/include/time.h" 3
extern "C" time_t mktime(tm *) throw();
# 199 "/usr/include/time.h" 3
extern "C" size_t strftime(char *__restrict__, size_t, const char *__restrict__, const tm *__restrict__) throw();
# 207 "/usr/include/time.h" 3
extern "C" char *strptime(const char *__restrict__, const char *__restrict__, tm *) throw();
# 217 "/usr/include/time.h" 3
extern "C" size_t strftime_l(char *__restrict__, size_t, const char *__restrict__, const tm *__restrict__, __locale_t) throw();
# 224 "/usr/include/time.h" 3
extern "C" char *strptime_l(const char *__restrict__, const char *__restrict__, tm *, __locale_t) throw();
# 233 "/usr/include/time.h" 3
extern "C" tm *gmtime(const time_t *) throw();
# 237 "/usr/include/time.h" 3
extern "C" tm *localtime(const time_t *) throw();
# 243 "/usr/include/time.h" 3
extern "C" tm *gmtime_r(const time_t *__restrict__, tm *__restrict__) throw();
# 248 "/usr/include/time.h" 3
extern "C" tm *localtime_r(const time_t *__restrict__, tm *__restrict__) throw();
# 255 "/usr/include/time.h" 3
extern "C" char *asctime(const tm *) throw();
# 258 "/usr/include/time.h" 3
extern "C" char *ctime(const time_t *) throw();
# 266 "/usr/include/time.h" 3
extern "C" char *asctime_r(const tm *__restrict__, char *__restrict__) throw();
# 270 "/usr/include/time.h" 3
extern "C" char *ctime_r(const time_t *__restrict__, char *__restrict__) throw();
# 276 "/usr/include/time.h" 3
extern "C" { extern char *__tzname[2]; }
# 277 "/usr/include/time.h" 3
extern "C" { extern int __daylight; }
# 278 "/usr/include/time.h" 3
extern "C" { extern long __timezone; }
# 283 "/usr/include/time.h" 3
extern "C" { extern char *tzname[2]; }
# 287 "/usr/include/time.h" 3
extern "C" void tzset() throw();
# 291 "/usr/include/time.h" 3
extern "C" { extern int daylight; }
# 292 "/usr/include/time.h" 3
extern "C" { extern long timezone; }
# 298 "/usr/include/time.h" 3
extern "C" int stime(const time_t *) throw();
# 313 "/usr/include/time.h" 3
extern "C" time_t timegm(tm *) throw();
# 316 "/usr/include/time.h" 3
extern "C" time_t timelocal(tm *) throw();
# 319 "/usr/include/time.h" 3
extern "C" int dysize(int) throw() __attribute__((__const__));
# 328 "/usr/include/time.h" 3
extern "C" int nanosleep(const timespec *, timespec *);
# 333 "/usr/include/time.h" 3
extern "C" int clock_getres(clockid_t, timespec *) throw();
# 336 "/usr/include/time.h" 3
extern "C" int clock_gettime(clockid_t, timespec *) throw();
# 339 "/usr/include/time.h" 3
extern "C" int clock_settime(clockid_t, const timespec *) throw();
# 347 "/usr/include/time.h" 3
extern "C" int clock_nanosleep(clockid_t, int, const timespec *, timespec *);
# 352 "/usr/include/time.h" 3
extern "C" int clock_getcpuclockid(pid_t, clockid_t *) throw();
# 357 "/usr/include/time.h" 3
extern "C" int timer_create(clockid_t, sigevent *__restrict__, timer_t *__restrict__) throw();
# 362 "/usr/include/time.h" 3
extern "C" int timer_delete(timer_t) throw();
# 365 "/usr/include/time.h" 3
extern "C" int timer_settime(timer_t, int, const itimerspec *__restrict__, itimerspec *__restrict__) throw();
# 370 "/usr/include/time.h" 3
extern "C" int timer_gettime(timer_t, itimerspec *) throw();
# 374 "/usr/include/time.h" 3
extern "C" int timer_getoverrun(timer_t) throw();
# 390 "/usr/include/time.h" 3
extern "C" { extern int getdate_err; }
# 399 "/usr/include/time.h" 3
extern "C" tm *getdate(const char *);
# 413 "/usr/include/time.h" 3
extern "C" int getdate_r(const char *__restrict__, tm *__restrict__);
# 57 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" __attribute__((weak)) clock_t clock() throw();
# 59 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" __attribute__((weak)) void *memset(void *, int, size_t) throw() __attribute__((nonnull(1)));
# 61 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" __attribute__((weak)) void *memcpy(void *, const void *, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 66 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int abs(int) throw() __attribute__((__const__));
# 68 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long labs(long) throw() __attribute__((__const__));
# 70 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llabs(long long) throw() __attribute__((__const__));
# 72 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fabs(double) throw() __attribute__((__const__));
# 74 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fabsf(float) throw() __attribute__((__const__));
# 77 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int min(int, int);
# 79 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) unsigned umin(unsigned, unsigned);
# 81 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llmin(long long, long long);
# 83 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) unsigned long long ullmin(unsigned long long, unsigned long long);
# 85 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fminf(float, float) throw();
# 87 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fmin(double, double) throw();
# 90 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int max(int, int);
# 92 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) unsigned umax(unsigned, unsigned);
# 94 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llmax(long long, long long);
# 96 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) unsigned long long ullmax(unsigned long long, unsigned long long);
# 98 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fmaxf(float, float) throw();
# 100 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fmax(double, double) throw();
# 103 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double sin(double) throw();
# 105 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float sinf(float) throw();
# 108 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double cos(double) throw();
# 110 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float cosf(float) throw();
# 113 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) void sincos(double, double *, double *) throw();
# 115 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) void sincosf(float, float *, float *) throw();
# 118 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double tan(double) throw();
# 120 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float tanf(float) throw();
# 123 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double sqrt(double) throw();
# 125 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float sqrtf(float) throw();
# 128 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double rsqrt(double);
# 130 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float rsqrtf(float);
# 133 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double exp2(double) throw();
# 135 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float exp2f(float) throw();
# 138 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double exp10(double) throw();
# 140 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float exp10f(float) throw();
# 143 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double expm1(double) throw();
# 145 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float expm1f(float) throw();
# 148 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double log2(double) throw();
# 150 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float log2f(float) throw();
# 153 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double log10(double) throw();
# 155 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float log10f(float) throw();
# 158 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double log(double) throw();
# 160 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float logf(float) throw();
# 163 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double log1p(double) throw();
# 165 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float log1pf(float) throw();
# 168 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double floor(double) throw() __attribute__((__const__));
# 170 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float floorf(float) throw() __attribute__((__const__));
# 173 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double exp(double) throw();
# 175 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float expf(float) throw();
# 178 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double cosh(double) throw();
# 180 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float coshf(float) throw();
# 183 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double sinh(double) throw();
# 185 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float sinhf(float) throw();
# 188 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double tanh(double) throw();
# 190 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float tanhf(float) throw();
# 193 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double acosh(double) throw();
# 195 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float acoshf(float) throw();
# 198 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double asinh(double) throw();
# 200 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float asinhf(float) throw();
# 203 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double atanh(double) throw();
# 205 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float atanhf(float) throw();
# 208 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double ldexp(double, int) throw();
# 210 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float ldexpf(float, int) throw();
# 213 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double logb(double) throw();
# 215 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float logbf(float) throw();
# 218 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int ilogb(double) throw();
# 220 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int ilogbf(float) throw();
# 223 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double scalbn(double, int) throw();
# 225 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float scalbnf(float, int) throw();
# 228 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double scalbln(double, long) throw();
# 230 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float scalblnf(float, long) throw();
# 233 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double frexp(double, int *) throw();
# 235 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float frexpf(float, int *) throw();
# 238 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double round(double) throw() __attribute__((__const__));
# 240 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float roundf(float) throw() __attribute__((__const__));
# 243 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long lround(double) throw();
# 245 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long lroundf(float) throw();
# 248 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llround(double) throw();
# 250 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llroundf(float) throw();
# 253 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double rint(double) throw();
# 255 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float rintf(float) throw();
# 258 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long lrint(double) throw();
# 260 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long lrintf(float) throw();
# 263 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llrint(double) throw();
# 265 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llrintf(float) throw();
# 268 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double nearbyint(double) throw();
# 270 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float nearbyintf(float) throw();
# 273 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double ceil(double) throw() __attribute__((__const__));
# 275 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float ceilf(float) throw() __attribute__((__const__));
# 278 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double trunc(double) throw() __attribute__((__const__));
# 280 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float truncf(float) throw() __attribute__((__const__));
# 283 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fdim(double, double) throw();
# 285 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fdimf(float, float) throw();
# 288 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double atan2(double, double) throw();
# 290 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float atan2f(float, float) throw();
# 293 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double atan(double) throw();
# 295 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float atanf(float) throw();
# 298 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double asin(double) throw();
# 300 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float asinf(float) throw();
# 303 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double acos(double) throw();
# 305 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float acosf(float) throw();
# 308 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double hypot(double, double) throw();
# 310 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float hypotf(float, float) throw();
# 313 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double cbrt(double) throw();
# 315 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float cbrtf(float) throw();
# 318 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double rcbrt(double);
# 320 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float rcbrtf(float);
# 323 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double sinpi(double);
# 325 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float sinpif(float);
# 328 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double pow(double, double) throw();
# 330 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float powf(float, float) throw();
# 333 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double modf(double, double *) throw();
# 335 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float modff(float, float *) throw();
# 338 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fmod(double, double) throw();
# 340 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fmodf(float, float) throw();
# 343 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double remainder(double, double) throw();
# 345 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float remainderf(float, float) throw();
# 348 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double remquo(double, double, int *) throw();
# 350 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float remquof(float, float, int *) throw();
# 353 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double erf(double) throw();
# 355 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float erff(float) throw();
# 358 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double erfinv(double);
# 360 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float erfinvf(float);
# 363 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double erfc(double) throw();
# 365 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float erfcf(float) throw();
# 368 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double erfcinv(double);
# 370 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float erfcinvf(float);
# 373 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double lgamma(double) throw();
# 375 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float lgammaf(float) throw();
# 378 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double tgamma(double) throw();
# 380 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float tgammaf(float) throw();
# 383 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double copysign(double, double) throw() __attribute__((__const__));
# 385 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float copysignf(float, float) throw() __attribute__((__const__));
# 388 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double nextafter(double, double) throw() __attribute__((__const__));
# 390 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float nextafterf(float, float) throw() __attribute__((__const__));
# 393 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double nan(const char *) throw() __attribute__((__const__));
# 395 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float nanf(const char *) throw() __attribute__((__const__));
# 398 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isinf(double) throw() __attribute__((__const__));
# 400 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isinff(float) throw() __attribute__((__const__));
# 403 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isnan(double) throw() __attribute__((__const__));
# 405 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isnanf(float) throw() __attribute__((__const__));
# 419 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __finite(double) throw() __attribute__((__const__));
# 421 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __finitef(float) throw() __attribute__((__const__));
# 423 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __signbit(double) throw() __attribute__((__const__));
# 428 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __signbitf(float) throw() __attribute__((__const__));
# 431 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fma(double, double, double) throw();
# 433 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fmaf(float, float, float) throw();
# 441 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __signbitl(long double) throw() __attribute__((__const__));
# 443 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isinfl(long double) throw() __attribute__((__const__));
# 445 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isnanl(long double) throw() __attribute__((__const__));
# 455 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __finitel(long double) throw() __attribute__((__const__));
# 31 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef float float_t; }
# 32 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef double double_t; }
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double acos(double) throw(); extern "C" double __acos(double) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double asin(double) throw(); extern "C" double __asin(double) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double atan(double) throw(); extern "C" double __atan(double) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double atan2(double, double) throw(); extern "C" double __atan2(double, double) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double cos(double) throw(); extern "C" double __cos(double) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double sin(double) throw(); extern "C" double __sin(double) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double tan(double) throw(); extern "C" double __tan(double) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double cosh(double) throw(); extern "C" double __cosh(double) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double sinh(double) throw(); extern "C" double __sinh(double) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double tanh(double) throw(); extern "C" double __tanh(double) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) void sincos(double, double *, double *) throw(); extern "C" void __sincos(double, double *, double *) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double acosh(double) throw(); extern "C" double __acosh(double) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double asinh(double) throw(); extern "C" double __asinh(double) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double atanh(double) throw(); extern "C" double __atanh(double) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double exp(double) throw(); extern "C" double __exp(double) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double frexp(double, int *) throw(); extern "C" double __frexp(double, int *) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double ldexp(double, int) throw(); extern "C" double __ldexp(double, int) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double log(double) throw(); extern "C" double __log(double) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double log10(double) throw(); extern "C" double __log10(double) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double modf(double, double *) throw(); extern "C" double __modf(double, double *) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double exp10(double) throw(); extern "C" double __exp10(double) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow10(double) throw(); extern "C" double __pow10(double) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double expm1(double) throw(); extern "C" double __expm1(double) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double log1p(double) throw(); extern "C" double __log1p(double) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double logb(double) throw(); extern "C" double __logb(double) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double exp2(double) throw(); extern "C" double __exp2(double) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double log2(double) throw(); extern "C" double __log2(double) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double pow(double, double) throw(); extern "C" double __pow(double, double) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double sqrt(double) throw(); extern "C" double __sqrt(double) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double hypot(double, double) throw(); extern "C" double __hypot(double, double) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double cbrt(double) throw(); extern "C" double __cbrt(double) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double ceil(double) throw() __attribute__((__const__)); extern "C" double __ceil(double) throw() __attribute__((__const__));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fabs(double) throw() __attribute__((__const__)); extern "C" double __fabs(double) throw() __attribute__((__const__));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double floor(double) throw() __attribute__((__const__)); extern "C" double __floor(double) throw() __attribute__((__const__));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fmod(double, double) throw(); extern "C" double __fmod(double, double) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isinf(double) throw() __attribute__((__const__));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __finite(double) throw() __attribute__((__const__));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinf(double) throw() __attribute__((__const__));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finite(double) throw() __attribute__((__const__));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" double drem(double, double) throw(); extern "C" double __drem(double, double) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" double significand(double) throw(); extern "C" double __significand(double) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double copysign(double, double) throw() __attribute__((__const__)); extern "C" double __copysign(double, double) throw() __attribute__((__const__));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double nan(const char *) throw() __attribute__((__const__)); extern "C" double __nan(const char *) throw() __attribute__((__const__));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isnan(double) throw() __attribute__((__const__));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnan(double) throw() __attribute__((__const__));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" double j0(double) throw(); extern "C" double __j0(double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" double j1(double) throw(); extern "C" double __j1(double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" double jn(int, double) throw(); extern "C" double __jn(int, double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" double y0(double) throw(); extern "C" double __y0(double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" double y1(double) throw(); extern "C" double __y1(double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" double yn(int, double) throw(); extern "C" double __yn(int, double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double erf(double) throw(); extern "C" double __erf(double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double erfc(double) throw(); extern "C" double __erfc(double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double lgamma(double) throw(); extern "C" double __lgamma(double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double tgamma(double) throw(); extern "C" double __tgamma(double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" double gamma(double) throw(); extern "C" double __gamma(double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma_r(double, int *) throw(); extern "C" double __lgamma_r(double, int *) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double rint(double) throw(); extern "C" double __rint(double) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double nextafter(double, double) throw() __attribute__((__const__)); extern "C" double __nextafter(double, double) throw() __attribute__((__const__));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" double nexttoward(double, long double) throw() __attribute__((__const__)); extern "C" double __nexttoward(double, long double) throw() __attribute__((__const__));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double remainder(double, double) throw(); extern "C" double __remainder(double, double) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double scalbn(double, int) throw(); extern "C" double __scalbn(double, int) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int ilogb(double) throw(); extern "C" int __ilogb(double) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double scalbln(double, long) throw(); extern "C" double __scalbln(double, long) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double nearbyint(double) throw(); extern "C" double __nearbyint(double) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double round(double) throw() __attribute__((__const__)); extern "C" double __round(double) throw() __attribute__((__const__));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double trunc(double) throw() __attribute__((__const__)); extern "C" double __trunc(double) throw() __attribute__((__const__));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double remquo(double, double, int *) throw(); extern "C" double __remquo(double, double, int *) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long lrint(double) throw(); extern "C" long __lrint(double) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long long llrint(double) throw(); extern "C" long long __llrint(double) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long lround(double) throw(); extern "C" long __lround(double) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long long llround(double) throw(); extern "C" long long __llround(double) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fdim(double, double) throw(); extern "C" double __fdim(double, double) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fmax(double, double) throw(); extern "C" double __fmax(double, double) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fmin(double, double) throw(); extern "C" double __fmin(double, double) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassify(double) throw() __attribute__((__const__));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __signbit(double) throw() __attribute__((__const__));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fma(double, double, double) throw(); extern "C" double __fma(double, double, double) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalb(double, double) throw(); extern "C" double __scalb(double, double) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float acosf(float) throw(); extern "C" float __acosf(float) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float asinf(float) throw(); extern "C" float __asinf(float) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float atanf(float) throw(); extern "C" float __atanf(float) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float atan2f(float, float) throw(); extern "C" float __atan2f(float, float) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float cosf(float) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float sinf(float) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float tanf(float) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float coshf(float) throw(); extern "C" float __coshf(float) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float sinhf(float) throw(); extern "C" float __sinhf(float) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float tanhf(float) throw(); extern "C" float __tanhf(float) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) void sincosf(float, float *, float *) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float acoshf(float) throw(); extern "C" float __acoshf(float) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float asinhf(float) throw(); extern "C" float __asinhf(float) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float atanhf(float) throw(); extern "C" float __atanhf(float) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float expf(float) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float frexpf(float, int *) throw(); extern "C" float __frexpf(float, int *) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float ldexpf(float, int) throw(); extern "C" float __ldexpf(float, int) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float logf(float) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float log10f(float) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float modff(float, float *) throw(); extern "C" float __modff(float, float *) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float exp10f(float) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" float pow10f(float) throw(); extern "C" float __pow10f(float) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float expm1f(float) throw(); extern "C" float __expm1f(float) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float log1pf(float) throw(); extern "C" float __log1pf(float) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float logbf(float) throw(); extern "C" float __logbf(float) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float exp2f(float) throw(); extern "C" float __exp2f(float) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float log2f(float) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float powf(float, float) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float sqrtf(float) throw(); extern "C" float __sqrtf(float) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float hypotf(float, float) throw(); extern "C" float __hypotf(float, float) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float cbrtf(float) throw(); extern "C" float __cbrtf(float) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float ceilf(float) throw() __attribute__((__const__)); extern "C" float __ceilf(float) throw() __attribute__((__const__));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fabsf(float) throw() __attribute__((__const__)); extern "C" float __fabsf(float) throw() __attribute__((__const__));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float floorf(float) throw() __attribute__((__const__)); extern "C" float __floorf(float) throw() __attribute__((__const__));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fmodf(float, float) throw(); extern "C" float __fmodf(float, float) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isinff(float) throw() __attribute__((__const__));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __finitef(float) throw() __attribute__((__const__));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinff(float) throw() __attribute__((__const__));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitef(float) throw() __attribute__((__const__));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" float dremf(float, float) throw(); extern "C" float __dremf(float, float) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" float significandf(float) throw(); extern "C" float __significandf(float) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float copysignf(float, float) throw() __attribute__((__const__)); extern "C" float __copysignf(float, float) throw() __attribute__((__const__));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float nanf(const char *) throw() __attribute__((__const__)); extern "C" float __nanf(const char *) throw() __attribute__((__const__));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isnanf(float) throw() __attribute__((__const__));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanf(float) throw() __attribute__((__const__));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" float j0f(float) throw(); extern "C" float __j0f(float) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" float j1f(float) throw(); extern "C" float __j1f(float) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" float jnf(int, float) throw(); extern "C" float __jnf(int, float) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" float y0f(float) throw(); extern "C" float __y0f(float) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" float y1f(float) throw(); extern "C" float __y1f(float) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" float ynf(int, float) throw(); extern "C" float __ynf(int, float) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float erff(float) throw(); extern "C" float __erff(float) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float erfcf(float) throw(); extern "C" float __erfcf(float) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float lgammaf(float) throw(); extern "C" float __lgammaf(float) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float tgammaf(float) throw(); extern "C" float __tgammaf(float) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" float gammaf(float) throw(); extern "C" float __gammaf(float) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf_r(float, int *) throw(); extern "C" float __lgammaf_r(float, int *) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float rintf(float) throw(); extern "C" float __rintf(float) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float nextafterf(float, float) throw() __attribute__((__const__)); extern "C" float __nextafterf(float, float) throw() __attribute__((__const__));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" float nexttowardf(float, long double) throw() __attribute__((__const__)); extern "C" float __nexttowardf(float, long double) throw() __attribute__((__const__));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float remainderf(float, float) throw(); extern "C" float __remainderf(float, float) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float scalbnf(float, int) throw(); extern "C" float __scalbnf(float, int) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int ilogbf(float) throw(); extern "C" int __ilogbf(float) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float scalblnf(float, long) throw(); extern "C" float __scalblnf(float, long) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float nearbyintf(float) throw(); extern "C" float __nearbyintf(float) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float roundf(float) throw() __attribute__((__const__)); extern "C" float __roundf(float) throw() __attribute__((__const__));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float truncf(float) throw() __attribute__((__const__)); extern "C" float __truncf(float) throw() __attribute__((__const__));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float remquof(float, float, int *) throw(); extern "C" float __remquof(float, float, int *) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long lrintf(float) throw(); extern "C" long __lrintf(float) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long long llrintf(float) throw(); extern "C" long long __llrintf(float) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long lroundf(float) throw(); extern "C" long __lroundf(float) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long long llroundf(float) throw(); extern "C" long long __llroundf(float) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fdimf(float, float) throw(); extern "C" float __fdimf(float, float) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fmaxf(float, float) throw(); extern "C" float __fmaxf(float, float) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fminf(float, float) throw(); extern "C" float __fminf(float, float) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyf(float) throw() __attribute__((__const__));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __signbitf(float) throw() __attribute__((__const__));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fmaf(float, float, float) throw(); extern "C" float __fmaf(float, float, float) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbf(float, float) throw(); extern "C" float __scalbf(float, float) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acosl(long double) throw(); extern "C" long double __acosl(long double) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinl(long double) throw(); extern "C" long double __asinl(long double) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanl(long double) throw(); extern "C" long double __atanl(long double) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atan2l(long double, long double) throw(); extern "C" long double __atan2l(long double, long double) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cosl(long double) throw(); extern "C" long double __cosl(long double) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinl(long double) throw(); extern "C" long double __sinl(long double) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanl(long double) throw(); extern "C" long double __tanl(long double) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" long double coshl(long double) throw(); extern "C" long double __coshl(long double) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinhl(long double) throw(); extern "C" long double __sinhl(long double) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanhl(long double) throw(); extern "C" long double __tanhl(long double) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosl(long double, long double *, long double *) throw(); extern "C" void __sincosl(long double, long double *, long double *) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acoshl(long double) throw(); extern "C" long double __acoshl(long double) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinhl(long double) throw(); extern "C" long double __asinhl(long double) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanhl(long double) throw(); extern "C" long double __atanhl(long double) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expl(long double) throw(); extern "C" long double __expl(long double) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" long double frexpl(long double, int *) throw(); extern "C" long double __frexpl(long double, int *) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ldexpl(long double, int) throw(); extern "C" long double __ldexpl(long double, int) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logl(long double) throw(); extern "C" long double __logl(long double) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log10l(long double) throw(); extern "C" long double __log10l(long double) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" long double modfl(long double, long double *) throw(); extern "C" long double __modfl(long double, long double *) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp10l(long double) throw(); extern "C" long double __exp10l(long double) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" long double pow10l(long double) throw(); extern "C" long double __pow10l(long double) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expm1l(long double) throw(); extern "C" long double __expm1l(long double) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log1pl(long double) throw(); extern "C" long double __log1pl(long double) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logbl(long double) throw(); extern "C" long double __logbl(long double) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp2l(long double) throw(); extern "C" long double __exp2l(long double) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log2l(long double) throw(); extern "C" long double __log2l(long double) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" long double powl(long double, long double) throw(); extern "C" long double __powl(long double, long double) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sqrtl(long double) throw(); extern "C" long double __sqrtl(long double) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" long double hypotl(long double, long double) throw(); extern "C" long double __hypotl(long double, long double) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cbrtl(long double) throw(); extern "C" long double __cbrtl(long double) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ceill(long double) throw() __attribute__((__const__)); extern "C" long double __ceill(long double) throw() __attribute__((__const__));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fabsl(long double) throw() __attribute__((__const__)); extern "C" long double __fabsl(long double) throw() __attribute__((__const__));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" long double floorl(long double) throw() __attribute__((__const__)); extern "C" long double __floorl(long double) throw() __attribute__((__const__));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmodl(long double, long double) throw(); extern "C" long double __fmodl(long double, long double) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isinfl(long double) throw() __attribute__((__const__));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __finitel(long double) throw() __attribute__((__const__));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinfl(long double) throw() __attribute__((__const__));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitel(long double) throw() __attribute__((__const__));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" long double dreml(long double, long double) throw(); extern "C" long double __dreml(long double, long double) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" long double significandl(long double) throw(); extern "C" long double __significandl(long double) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" long double copysignl(long double, long double) throw() __attribute__((__const__)); extern "C" long double __copysignl(long double, long double) throw() __attribute__((__const__));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nanl(const char *) throw() __attribute__((__const__)); extern "C" long double __nanl(const char *) throw() __attribute__((__const__));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isnanl(long double) throw() __attribute__((__const__));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanl(long double) throw() __attribute__((__const__));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j0l(long double) throw(); extern "C" long double __j0l(long double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j1l(long double) throw(); extern "C" long double __j1l(long double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" long double jnl(int, long double) throw(); extern "C" long double __jnl(int, long double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y0l(long double) throw(); extern "C" long double __y0l(long double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y1l(long double) throw(); extern "C" long double __y1l(long double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ynl(int, long double) throw(); extern "C" long double __ynl(int, long double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfl(long double) throw(); extern "C" long double __erfl(long double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfcl(long double) throw(); extern "C" long double __erfcl(long double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal(long double) throw(); extern "C" long double __lgammal(long double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tgammal(long double) throw(); extern "C" long double __tgammal(long double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" long double gammal(long double) throw(); extern "C" long double __gammal(long double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal_r(long double, int *) throw(); extern "C" long double __lgammal_r(long double, int *) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" long double rintl(long double) throw(); extern "C" long double __rintl(long double) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nextafterl(long double, long double) throw() __attribute__((__const__)); extern "C" long double __nextafterl(long double, long double) throw() __attribute__((__const__));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nexttowardl(long double, long double) throw() __attribute__((__const__)); extern "C" long double __nexttowardl(long double, long double) throw() __attribute__((__const__));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remainderl(long double, long double) throw(); extern "C" long double __remainderl(long double, long double) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbnl(long double, int) throw(); extern "C" long double __scalbnl(long double, int) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbl(long double) throw(); extern "C" int __ilogbl(long double) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalblnl(long double, long) throw(); extern "C" long double __scalblnl(long double, long) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nearbyintl(long double) throw(); extern "C" long double __nearbyintl(long double) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" long double roundl(long double) throw() __attribute__((__const__)); extern "C" long double __roundl(long double) throw() __attribute__((__const__));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" long double truncl(long double) throw() __attribute__((__const__)); extern "C" long double __truncl(long double) throw() __attribute__((__const__));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remquol(long double, long double, int *) throw(); extern "C" long double __remquol(long double, long double, int *) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintl(long double) throw(); extern "C" long __lrintl(long double) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintl(long double) throw(); extern "C" long long __llrintl(long double) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundl(long double) throw(); extern "C" long __lroundl(long double) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundl(long double) throw(); extern "C" long long __llroundl(long double) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fdiml(long double, long double) throw(); extern "C" long double __fdiml(long double, long double) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmaxl(long double, long double) throw(); extern "C" long double __fmaxl(long double, long double) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fminl(long double, long double) throw(); extern "C" long double __fminl(long double, long double) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyl(long double) throw() __attribute__((__const__));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __signbitl(long double) throw() __attribute__((__const__));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmal(long double, long double, long double) throw(); extern "C" long double __fmal(long double, long double, long double) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbl(long double, long double) throw(); extern "C" long double __scalbl(long double, long double) throw();
# 157 "/usr/include/math.h" 3
extern "C" { extern int signgam; }
# 199 "/usr/include/math.h" 3
enum {
# 200 "/usr/include/math.h" 3
FP_NAN,
# 202 "/usr/include/math.h" 3
FP_INFINITE,
# 204 "/usr/include/math.h" 3
FP_ZERO,
# 206 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 208 "/usr/include/math.h" 3
FP_NORMAL
# 210 "/usr/include/math.h" 3
};
# 291 "/usr/include/math.h" 3
extern "C" { typedef
# 285 "/usr/include/math.h" 3
enum {
# 286 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 287 "/usr/include/math.h" 3
_SVID_,
# 288 "/usr/include/math.h" 3
_XOPEN_,
# 289 "/usr/include/math.h" 3
_POSIX_,
# 290 "/usr/include/math.h" 3
_ISOC_
# 291 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE; }
# 296 "/usr/include/math.h" 3
extern "C" { extern _LIB_VERSION_TYPE _LIB_VERSION; }
# 307 "/usr/include/math.h" 3
extern "C" { struct __exception {
# 312 "/usr/include/math.h" 3
int type;
# 313 "/usr/include/math.h" 3
char *name;
# 314 "/usr/include/math.h" 3
double arg1;
# 315 "/usr/include/math.h" 3
double arg2;
# 316 "/usr/include/math.h" 3
double retval;
# 317 "/usr/include/math.h" 3
}; }
# 320 "/usr/include/math.h" 3
extern "C" int matherr(__exception *) throw();
# 67 "/usr/include/bits/waitstatus.h" 3
extern "C" { union wait {
# 69 "/usr/include/bits/waitstatus.h" 3
int w_status;
# 71 "/usr/include/bits/waitstatus.h" 3
struct {
# 73 "/usr/include/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 74 "/usr/include/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 75 "/usr/include/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 76 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 84 "/usr/include/bits/waitstatus.h" 3
} __wait_terminated;
# 86 "/usr/include/bits/waitstatus.h" 3
struct {
# 88 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 89 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 90 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 97 "/usr/include/bits/waitstatus.h" 3
} __wait_stopped;
# 98 "/usr/include/bits/waitstatus.h" 3
}; }
# 102 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 99 "/usr/include/stdlib.h" 3
struct {
# 100 "/usr/include/stdlib.h" 3
int quot;
# 101 "/usr/include/stdlib.h" 3
int rem;
# 102 "/usr/include/stdlib.h" 3
} div_t; }
# 110 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 107 "/usr/include/stdlib.h" 3
struct {
# 108 "/usr/include/stdlib.h" 3
long quot;
# 109 "/usr/include/stdlib.h" 3
long rem;
# 110 "/usr/include/stdlib.h" 3
} ldiv_t; }
# 122 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 119 "/usr/include/stdlib.h" 3
struct {
# 120 "/usr/include/stdlib.h" 3
long long quot;
# 121 "/usr/include/stdlib.h" 3
long long rem;
# 122 "/usr/include/stdlib.h" 3
} lldiv_t; }
# 140 "/usr/include/stdlib.h" 3
extern "C" size_t __ctype_get_mb_cur_max() throw();
# 145 "/usr/include/stdlib.h" 3
extern "C" double atof(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 148 "/usr/include/stdlib.h" 3
extern "C" int atoi(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 151 "/usr/include/stdlib.h" 3
extern "C" long atol(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 158 "/usr/include/stdlib.h" 3
extern "C" long long atoll(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 165 "/usr/include/stdlib.h" 3
extern "C" double strtod(const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(1)));
# 173 "/usr/include/stdlib.h" 3
extern "C" float strtof(const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(1)));
# 176 "/usr/include/stdlib.h" 3
extern "C" long double strtold(const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(1)));
# 184 "/usr/include/stdlib.h" 3
extern "C" long strtol(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 188 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 196 "/usr/include/stdlib.h" 3
extern "C" long long strtoq(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 201 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtouq(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 210 "/usr/include/stdlib.h" 3
extern "C" long long strtoll(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 215 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 240 "/usr/include/stdlib.h" 3
extern "C" long strtol_l(const char *__restrict__, char **__restrict__, int, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 244 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul_l(const char *__restrict__, char **__restrict__, int, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 250 "/usr/include/stdlib.h" 3
extern "C" long long strtoll_l(const char *__restrict__, char **__restrict__, int, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 256 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull_l(const char *__restrict__, char **__restrict__, int, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 261 "/usr/include/stdlib.h" 3
extern "C" double strtod_l(const char *__restrict__, char **__restrict__, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(3)));
# 265 "/usr/include/stdlib.h" 3
extern "C" float strtof_l(const char *__restrict__, char **__restrict__, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(3)));
# 269 "/usr/include/stdlib.h" 3
extern "C" long double strtold_l(const char *__restrict__, char **__restrict__, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(3)));
# 311 "/usr/include/stdlib.h" 3
extern "C" char *l64a(long) throw();
# 314 "/usr/include/stdlib.h" 3
extern "C" long a64l(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 35 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_char u_char; }
# 36 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_short u_short; }
# 37 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_int u_int; }
# 38 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_long u_long; }
# 39 "/usr/include/sys/types.h" 3
extern "C" { typedef __quad_t quad_t; }
# 40 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_quad_t u_quad_t; }
# 41 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsid_t fsid_t; }
# 46 "/usr/include/sys/types.h" 3
extern "C" { typedef __loff_t loff_t; }
# 50 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino_t ino_t; }
# 57 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino64_t ino64_t; }
# 62 "/usr/include/sys/types.h" 3
extern "C" { typedef __dev_t dev_t; }
# 67 "/usr/include/sys/types.h" 3
extern "C" { typedef __gid_t gid_t; }
# 72 "/usr/include/sys/types.h" 3
extern "C" { typedef __mode_t mode_t; }
# 77 "/usr/include/sys/types.h" 3
extern "C" { typedef __nlink_t nlink_t; }
# 82 "/usr/include/sys/types.h" 3
extern "C" { typedef __uid_t uid_t; }
# 88 "/usr/include/sys/types.h" 3
extern "C" { typedef __off_t off_t; }
# 95 "/usr/include/sys/types.h" 3
extern "C" { typedef __off64_t off64_t; }
# 105 "/usr/include/sys/types.h" 3
extern "C" { typedef __id_t id_t; }
# 110 "/usr/include/sys/types.h" 3
extern "C" { typedef __ssize_t ssize_t; }
# 116 "/usr/include/sys/types.h" 3
extern "C" { typedef __daddr_t daddr_t; }
# 117 "/usr/include/sys/types.h" 3
extern "C" { typedef __caddr_t caddr_t; }
# 123 "/usr/include/sys/types.h" 3
extern "C" { typedef __key_t key_t; }
# 137 "/usr/include/sys/types.h" 3
extern "C" { typedef __useconds_t useconds_t; }
# 141 "/usr/include/sys/types.h" 3
extern "C" { typedef __suseconds_t suseconds_t; }
# 151 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long ulong; }
# 152 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short ushort; }
# 153 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned uint; }
# 195 "/usr/include/sys/types.h" 3
extern "C" { typedef signed char int8_t; }
# 196 "/usr/include/sys/types.h" 3
extern "C" { typedef short int16_t; }
# 197 "/usr/include/sys/types.h" 3
extern "C" { typedef int int32_t; }
# 198 "/usr/include/sys/types.h" 3
extern "C" { typedef long int64_t; }
# 201 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned char u_int8_t; }
# 202 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short u_int16_t; }
# 203 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned u_int32_t; }
# 204 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long u_int64_t; }
# 206 "/usr/include/sys/types.h" 3
extern "C" { typedef int register_t; }
# 24 "/usr/include/bits/sigset.h" 3
extern "C" { typedef int __sig_atomic_t; }
# 32 "/usr/include/bits/sigset.h" 3
extern "C" { typedef
# 30 "/usr/include/bits/sigset.h" 3
struct {
# 31 "/usr/include/bits/sigset.h" 3
unsigned long __val[((1024) / ((8) * sizeof(unsigned long)))];
# 32 "/usr/include/bits/sigset.h" 3
} __sigset_t; }
# 38 "/usr/include/sys/select.h" 3
extern "C" { typedef __sigset_t sigset_t; }
# 69 "/usr/include/bits/time.h" 3
extern "C" { struct timeval {
# 71 "/usr/include/bits/time.h" 3
__time_t tv_sec;
# 72 "/usr/include/bits/time.h" 3
__suseconds_t tv_usec;
# 73 "/usr/include/bits/time.h" 3
}; }
# 55 "/usr/include/sys/select.h" 3
extern "C" { typedef long __fd_mask; }
# 78 "/usr/include/sys/select.h" 3
extern "C" { typedef
# 68 "/usr/include/sys/select.h" 3
struct {
# 72 "/usr/include/sys/select.h" 3
__fd_mask fds_bits[((1024) / ((8) * sizeof(__fd_mask)))];
# 78 "/usr/include/sys/select.h" 3
} fd_set; }
# 85 "/usr/include/sys/select.h" 3
extern "C" { typedef __fd_mask fd_mask; }
# 109 "/usr/include/sys/select.h" 3
extern "C" int select(int, fd_set *__restrict__, fd_set *__restrict__, fd_set *__restrict__, timeval *__restrict__);
# 121 "/usr/include/sys/select.h" 3
extern "C" int pselect(int, fd_set *__restrict__, fd_set *__restrict__, fd_set *__restrict__, const timespec *__restrict__, const __sigset_t *__restrict__);
# 31 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_major(unsigned long long) throw();
# 34 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_minor(unsigned long long) throw();
# 37 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned long long gnu_dev_makedev(unsigned, unsigned) throw();
# 228 "/usr/include/sys/types.h" 3
extern "C" { typedef __blksize_t blksize_t; }
# 235 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt_t blkcnt_t; }
# 239 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt_t fsblkcnt_t; }
# 243 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt_t fsfilcnt_t; }
# 262 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt64_t blkcnt64_t; }
# 263 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt64_t fsblkcnt64_t; }
# 264 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt64_t fsfilcnt64_t; }
# 50 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned long pthread_t; }
# 57 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 54 "/usr/include/bits/pthreadtypes.h" 3
union {
# 55 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 56 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 57 "/usr/include/bits/pthreadtypes.h" 3
} pthread_attr_t; }
# 65 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 61 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 63 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 64 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 65 "/usr/include/bits/pthreadtypes.h" 3
} __pthread_list_t; }
# 104 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 77 "/usr/include/bits/pthreadtypes.h" 3
union {
# 78 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 80 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 81 "/usr/include/bits/pthreadtypes.h" 3
unsigned __count;
# 82 "/usr/include/bits/pthreadtypes.h" 3
int __owner;
# 84 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nusers;
# 88 "/usr/include/bits/pthreadtypes.h" 3
int __kind;
# 90 "/usr/include/bits/pthreadtypes.h" 3
int __spins;
# 91 "/usr/include/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 101 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 102 "/usr/include/bits/pthreadtypes.h" 3
char __size[40];
# 103 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 104 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutex_t; }
# 110 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 107 "/usr/include/bits/pthreadtypes.h" 3
union {
# 108 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 109 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 110 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutexattr_t; }
# 130 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 116 "/usr/include/bits/pthreadtypes.h" 3
union {
# 118 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 119 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 120 "/usr/include/bits/pthreadtypes.h" 3
unsigned __futex;
# 121 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 122 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 123 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 124 "/usr/include/bits/pthreadtypes.h" 3
void *__mutex;
# 125 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 126 "/usr/include/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 127 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 128 "/usr/include/bits/pthreadtypes.h" 3
char __size[48];
# 129 "/usr/include/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 130 "/usr/include/bits/pthreadtypes.h" 3
} pthread_cond_t; }
# 136 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 133 "/usr/include/bits/pthreadtypes.h" 3
union {
# 134 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 135 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 136 "/usr/include/bits/pthreadtypes.h" 3
} pthread_condattr_t; }
# 140 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned pthread_key_t; }
# 144 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef int pthread_once_t; }
# 189 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 151 "/usr/include/bits/pthreadtypes.h" 3
union {
# 154 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 155 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 156 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 157 "/usr/include/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 158 "/usr/include/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 159 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 160 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 161 "/usr/include/bits/pthreadtypes.h" 3
int __writer;
# 162 "/usr/include/bits/pthreadtypes.h" 3
int __shared;
# 163 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad1;
# 164 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 167 "/usr/include/bits/pthreadtypes.h" 3
unsigned __flags;
# 168 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 187 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 188 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 189 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlock_t; }
# 195 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 192 "/usr/include/bits/pthreadtypes.h" 3
union {
# 193 "/usr/include/bits/pthreadtypes.h" 3
char __size[8];
# 194 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 195 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t; }
# 201 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef volatile int pthread_spinlock_t; }
# 210 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 207 "/usr/include/bits/pthreadtypes.h" 3
union {
# 208 "/usr/include/bits/pthreadtypes.h" 3
char __size[32];
# 209 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 210 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrier_t; }
# 216 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 213 "/usr/include/bits/pthreadtypes.h" 3
union {
# 214 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 215 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 216 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrierattr_t; }
# 327 "/usr/include/stdlib.h" 3
extern "C" long random() throw();
# 330 "/usr/include/stdlib.h" 3
extern "C" void srandom(unsigned) throw();
# 336 "/usr/include/stdlib.h" 3
extern "C" char *initstate(unsigned, char *, size_t) throw() __attribute__((nonnull(2)));
# 341 "/usr/include/stdlib.h" 3
extern "C" char *setstate(char *) throw() __attribute__((nonnull(1)));
# 349 "/usr/include/stdlib.h" 3
extern "C" { struct random_data {
# 351 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 352 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 353 "/usr/include/stdlib.h" 3
int32_t *state;
# 354 "/usr/include/stdlib.h" 3
int rand_type;
# 355 "/usr/include/stdlib.h" 3
int rand_deg;
# 356 "/usr/include/stdlib.h" 3
int rand_sep;
# 357 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 358 "/usr/include/stdlib.h" 3
}; }
# 360 "/usr/include/stdlib.h" 3
extern "C" int random_r(random_data *__restrict__, int32_t *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 363 "/usr/include/stdlib.h" 3
extern "C" int srandom_r(unsigned, random_data *) throw() __attribute__((nonnull(2)));
# 366 "/usr/include/stdlib.h" 3
extern "C" int initstate_r(unsigned, char *__restrict__, size_t, random_data *__restrict__) throw() __attribute__((nonnull(2))) __attribute__((nonnull(4)));
# 371 "/usr/include/stdlib.h" 3
extern "C" int setstate_r(char *__restrict__, random_data *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 380 "/usr/include/stdlib.h" 3
extern "C" int rand() throw();
# 382 "/usr/include/stdlib.h" 3
extern "C" void srand(unsigned) throw();
# 387 "/usr/include/stdlib.h" 3
extern "C" int rand_r(unsigned *) throw();
# 395 "/usr/include/stdlib.h" 3
extern "C" double drand48() throw();
# 396 "/usr/include/stdlib.h" 3
extern "C" double erand48(unsigned short [3]) throw() __attribute__((nonnull(1)));
# 399 "/usr/include/stdlib.h" 3
extern "C" long lrand48() throw();
# 400 "/usr/include/stdlib.h" 3
extern "C" long nrand48(unsigned short [3]) throw() __attribute__((nonnull(1)));
# 404 "/usr/include/stdlib.h" 3
extern "C" long mrand48() throw();
# 405 "/usr/include/stdlib.h" 3
extern "C" long jrand48(unsigned short [3]) throw() __attribute__((nonnull(1)));
# 409 "/usr/include/stdlib.h" 3
extern "C" void srand48(long) throw();
# 410 "/usr/include/stdlib.h" 3
extern "C" unsigned short *seed48(unsigned short [3]) throw() __attribute__((nonnull(1)));
# 412 "/usr/include/stdlib.h" 3
extern "C" void lcong48(unsigned short [7]) throw() __attribute__((nonnull(1)));
# 418 "/usr/include/stdlib.h" 3
extern "C" { struct drand48_data {
# 420 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 421 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 422 "/usr/include/stdlib.h" 3
unsigned short __c;
# 423 "/usr/include/stdlib.h" 3
unsigned short __init;
# 424 "/usr/include/stdlib.h" 3
unsigned long long __a;
# 425 "/usr/include/stdlib.h" 3
}; }
# 428 "/usr/include/stdlib.h" 3
extern "C" int drand48_r(drand48_data *__restrict__, double *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 430 "/usr/include/stdlib.h" 3
extern "C" int erand48_r(unsigned short [3], drand48_data *__restrict__, double *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 435 "/usr/include/stdlib.h" 3
extern "C" int lrand48_r(drand48_data *__restrict__, long *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 438 "/usr/include/stdlib.h" 3
extern "C" int nrand48_r(unsigned short [3], drand48_data *__restrict__, long *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 444 "/usr/include/stdlib.h" 3
extern "C" int mrand48_r(drand48_data *__restrict__, long *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 447 "/usr/include/stdlib.h" 3
extern "C" int jrand48_r(unsigned short [3], drand48_data *__restrict__, long *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 453 "/usr/include/stdlib.h" 3
extern "C" int srand48_r(long, drand48_data *) throw() __attribute__((nonnull(2)));
# 456 "/usr/include/stdlib.h" 3
extern "C" int seed48_r(unsigned short [3], drand48_data *) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 459 "/usr/include/stdlib.h" 3
extern "C" int lcong48_r(unsigned short [7], drand48_data *) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 471 "/usr/include/stdlib.h" 3
extern "C" void *malloc(size_t) throw() __attribute__((__malloc__));
# 473 "/usr/include/stdlib.h" 3
extern "C" void *calloc(size_t, size_t) throw() __attribute__((__malloc__));
# 485 "/usr/include/stdlib.h" 3
extern "C" void *realloc(void *, size_t) throw() __attribute__((__warn_unused_result__));
# 488 "/usr/include/stdlib.h" 3
extern "C" void free(void *) throw();
# 493 "/usr/include/stdlib.h" 3
extern "C" void cfree(void *) throw();
# 33 "/usr/include/alloca.h" 3
extern "C" void *alloca(size_t) throw();
# 502 "/usr/include/stdlib.h" 3
extern "C" void *valloc(size_t) throw() __attribute__((__malloc__));
# 507 "/usr/include/stdlib.h" 3
extern "C" int posix_memalign(void **, size_t, size_t) throw() __attribute__((nonnull(1)));
# 513 "/usr/include/stdlib.h" 3
extern "C" void abort() throw() __attribute__((__noreturn__));
# 517 "/usr/include/stdlib.h" 3
extern "C" int atexit(void (*)(void)) throw() __attribute__((nonnull(1)));
# 524 "/usr/include/stdlib.h" 3
int at_quick_exit(void (*)(void)) throw() __asm__("at_quick_exit") __attribute__((nonnull(1)));
# 535 "/usr/include/stdlib.h" 3
extern "C" int on_exit(void (*)(int, void *), void *) throw() __attribute__((nonnull(1)));
# 543 "/usr/include/stdlib.h" 3
extern "C" void exit(int) throw() __attribute__((__noreturn__));
# 551 "/usr/include/stdlib.h" 3
extern "C" void quick_exit(int) throw() __attribute__((__noreturn__));
# 559 "/usr/include/stdlib.h" 3
extern "C" void _Exit(int) throw() __attribute__((__noreturn__));
# 566 "/usr/include/stdlib.h" 3
extern "C" char *getenv(const char *) throw() __attribute__((nonnull(1)));
# 571 "/usr/include/stdlib.h" 3
extern "C" char *__secure_getenv(const char *) throw() __attribute__((nonnull(1)));
# 578 "/usr/include/stdlib.h" 3
extern "C" int putenv(char *) throw() __attribute__((nonnull(1)));
# 584 "/usr/include/stdlib.h" 3
extern "C" int setenv(const char *, const char *, int) throw() __attribute__((nonnull(2)));
# 588 "/usr/include/stdlib.h" 3
extern "C" int unsetenv(const char *) throw();
# 595 "/usr/include/stdlib.h" 3
extern "C" int clearenv() throw();
# 604 "/usr/include/stdlib.h" 3
extern "C" char *mktemp(char *) throw() __attribute__((nonnull(1)));
# 615 "/usr/include/stdlib.h" 3
extern "C" int mkstemp(char *) __attribute__((nonnull(1)));
# 625 "/usr/include/stdlib.h" 3
extern "C" int mkstemp64(char *) __attribute__((nonnull(1)));
# 635 "/usr/include/stdlib.h" 3
extern "C" char *mkdtemp(char *) throw() __attribute__((nonnull(1)));
# 646 "/usr/include/stdlib.h" 3
extern "C" int mkostemp(char *, int) __attribute__((nonnull(1)));
# 656 "/usr/include/stdlib.h" 3
extern "C" int mkostemp64(char *, int) __attribute__((nonnull(1)));
# 666 "/usr/include/stdlib.h" 3
extern "C" int system(const char *);
# 673 "/usr/include/stdlib.h" 3
extern "C" char *canonicalize_file_name(const char *) throw() __attribute__((nonnull(1)));
# 683 "/usr/include/stdlib.h" 3
extern "C" char *realpath(const char *__restrict__, char *__restrict__) throw();
# 691 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_fn_t)(const void *, const void *); }
# 694 "/usr/include/stdlib.h" 3
extern "C" { typedef __compar_fn_t comparison_fn_t; }
# 698 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_d_fn_t)(const void *, const void *, void *); }
# 704 "/usr/include/stdlib.h" 3
extern "C" void *bsearch(const void *, const void *, size_t, size_t, __compar_fn_t) __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(5)));
# 710 "/usr/include/stdlib.h" 3
extern "C" void qsort(void *, size_t, size_t, __compar_fn_t) __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 713 "/usr/include/stdlib.h" 3
extern "C" void qsort_r(void *, size_t, size_t, __compar_d_fn_t, void *) __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 720 "/usr/include/stdlib.h" 3
extern "C" __attribute__((weak)) int abs(int) throw() __attribute__((__const__));
# 721 "/usr/include/stdlib.h" 3
extern "C" __attribute__((weak)) long labs(long) throw() __attribute__((__const__));
# 725 "/usr/include/stdlib.h" 3
extern "C" __attribute__((weak)) long long llabs(long long) throw() __attribute__((__const__));
# 734 "/usr/include/stdlib.h" 3
extern "C" div_t div(int, int) throw() __attribute__((__const__));
# 736 "/usr/include/stdlib.h" 3
extern "C" ldiv_t ldiv(long, long) throw() __attribute__((__const__));
# 742 "/usr/include/stdlib.h" 3
extern "C" lldiv_t lldiv(long long, long long) throw() __attribute__((__const__));
# 756 "/usr/include/stdlib.h" 3
extern "C" char *ecvt(double, int, int *__restrict__, int *__restrict__) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4)));
# 762 "/usr/include/stdlib.h" 3
extern "C" char *fcvt(double, int, int *__restrict__, int *__restrict__) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4)));
# 768 "/usr/include/stdlib.h" 3
extern "C" char *gcvt(double, int, char *) throw() __attribute__((nonnull(3)));
# 774 "/usr/include/stdlib.h" 3
extern "C" char *qecvt(long double, int, int *__restrict__, int *__restrict__) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4)));
# 777 "/usr/include/stdlib.h" 3
extern "C" char *qfcvt(long double, int, int *__restrict__, int *__restrict__) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4)));
# 780 "/usr/include/stdlib.h" 3
extern "C" char *qgcvt(long double, int, char *) throw() __attribute__((nonnull(3)));
# 786 "/usr/include/stdlib.h" 3
extern "C" int ecvt_r(double, int, int *__restrict__, int *__restrict__, char *__restrict__, size_t) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4))) __attribute__((nonnull(5)));
# 789 "/usr/include/stdlib.h" 3
extern "C" int fcvt_r(double, int, int *__restrict__, int *__restrict__, char *__restrict__, size_t) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4))) __attribute__((nonnull(5)));
# 793 "/usr/include/stdlib.h" 3
extern "C" int qecvt_r(long double, int, int *__restrict__, int *__restrict__, char *__restrict__, size_t) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4))) __attribute__((nonnull(5)));
# 797 "/usr/include/stdlib.h" 3
extern "C" int qfcvt_r(long double, int, int *__restrict__, int *__restrict__, char *__restrict__, size_t) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4))) __attribute__((nonnull(5)));
# 808 "/usr/include/stdlib.h" 3
extern "C" int mblen(const char *, size_t) throw();
# 811 "/usr/include/stdlib.h" 3
extern "C" int mbtowc(wchar_t *__restrict__, const char *__restrict__, size_t) throw();
# 815 "/usr/include/stdlib.h" 3
extern "C" int wctomb(char *, wchar_t) throw();
# 819 "/usr/include/stdlib.h" 3
extern "C" size_t mbstowcs(wchar_t *__restrict__, const char *__restrict__, size_t) throw();
# 822 "/usr/include/stdlib.h" 3
extern "C" size_t wcstombs(char *__restrict__, const wchar_t *__restrict__, size_t) throw();
# 833 "/usr/include/stdlib.h" 3
extern "C" int rpmatch(const char *) throw() __attribute__((nonnull(1)));
# 844 "/usr/include/stdlib.h" 3
extern "C" int getsubopt(char **__restrict__, char *const *__restrict__, char **__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 853 "/usr/include/stdlib.h" 3
extern "C" void setkey(const char *) throw() __attribute__((nonnull(1)));
# 861 "/usr/include/stdlib.h" 3
extern "C" int posix_openpt(int);
# 869 "/usr/include/stdlib.h" 3
extern "C" int grantpt(int) throw();
# 873 "/usr/include/stdlib.h" 3
extern "C" int unlockpt(int) throw();
# 878 "/usr/include/stdlib.h" 3
extern "C" char *ptsname(int) throw();
# 885 "/usr/include/stdlib.h" 3
extern "C" int ptsname_r(int, char *, size_t) throw() __attribute__((nonnull(2)));
# 889 "/usr/include/stdlib.h" 3
extern "C" int getpt();
# 896 "/usr/include/stdlib.h" 3
extern "C" int getloadavg(double [], int) throw() __attribute__((nonnull(1)));
# 69 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute__((visibility("default"))) {
# 71 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Iterator, class _Container> class __normal_iterator;
# 74 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 76 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace std __attribute__((visibility("default"))) {
# 78 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __true_type { };
# 79 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __false_type { };
# 81 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<bool __T0>
# 82 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __truth_type {
# 83 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 86 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 87 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 91 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Sp, class _Tp>
# 92 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __traitor {
# 94 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = (((bool)_Sp::__value) || ((bool)_Tp::__value))};
# 95 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 96 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 99 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class , class >
# 100 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same {
# 102 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 103 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 104 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 106 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 107 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 109 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 110 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 111 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 115 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_void {
# 117 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 118 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 119 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 122 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 124 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 125 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 126 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 131 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 132 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_integer {
# 134 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 135 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 136 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 142 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 144 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 145 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 146 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 149 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 151 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 152 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 153 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 156 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 158 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 159 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 160 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 163 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 165 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 166 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 167 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 171 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 173 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 174 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 175 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 195 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 197 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 198 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 199 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 204 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 205 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 206 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 209 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 211 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 212 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 213 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 216 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 218 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 219 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 220 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 223 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 225 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 226 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 227 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 230 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 232 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 233 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 234 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 239 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 240 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 241 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 244 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 246 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 247 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 248 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 253 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 254 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_floating {
# 256 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 257 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 258 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 262 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 264 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 265 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 266 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 269 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 271 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 272 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 273 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 276 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 278 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 279 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 280 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 285 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 286 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 288 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 289 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 290 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 292 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 293 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 295 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 296 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 297 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 302 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 303 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 305 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 306 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 307 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 309 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Iterator, class _Container>
# 310 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 313 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 314 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 315 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 320 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 321 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 323 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 328 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 329 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_fundamental : public __traitor< __is_void< _Tp> , __is_arithmetic< _Tp> > {
# 331 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 337 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 339 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 344 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 345 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_char {
# 347 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 348 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 349 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 352 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 354 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 355 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 356 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 360 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 362 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 363 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 364 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 367 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 368 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_byte {
# 370 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 371 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 372 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 375 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 377 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 378 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 379 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 382 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 384 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 385 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 386 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 389 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 391 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 392 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 393 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 398 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<class _Tp>
# 399 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 401 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 402 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 403 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 417 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/4.4/ext/type_traits.h" 3
namespace __gnu_cxx __attribute__((visibility("default"))) {
# 40 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<bool __T1, class >
# 41 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if {
# 42 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 44 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<class _Tp>
# 45 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 46 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 50 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<bool _Cond, class _Iftrue, class _Iffalse>
# 51 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type {
# 52 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 54 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<class _Iftrue, class _Iffalse>
# 55 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 56 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 60 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<class _Tp>
# 61 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __add_unsigned {
# 64 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 67 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 68 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 71 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 72 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 75 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 76 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 79 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 80 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned short __type; };
# 83 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 84 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned __type; };
# 87 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 88 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long __type; };
# 91 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 92 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 96 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 99 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 103 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<class _Tp>
# 104 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __remove_unsigned {
# 107 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 110 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 111 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 115 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 118 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 119 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 122 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 123 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef short __type; };
# 126 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 127 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef int __type; };
# 130 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 131 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long __type; };
# 134 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 135 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long long __type; };
# 139 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 142 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 146 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type * __ptr )
    { return __ptr == 0; }
# 151 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type )
    { return false; }
# 158 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<class _Tp, bool __T2 = std::__is_integer< _Tp> ::__value>
# 159 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote {
# 160 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef double __type; };
# 162 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<class _Tp>
# 163 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 164 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 166 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<class _Tp, class _Up>
# 167 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_2 {
# 170 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 171 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 174 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(__type1() + __type2()) __type;
# 175 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<class _Tp, class _Up, class _Vp>
# 178 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_3 {
# 181 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 182 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 183 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 186 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__((__type1() + __type2()) + __type3()) __type;
# 187 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 189 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<class _Tp, class _Up, class _Vp, class _Wp>
# 190 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_4 {
# 193 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 194 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 195 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 196 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Wp, std::__is_integer< _Wp> ::__value> ::__type __type4;
# 199 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(((__type1() + __type2()) + __type3()) + __type4()) __type;
# 200 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/ext/type_traits.h" 3
}
# 77 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute__((visibility("default"))) {
# 81 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    _Tp __cmath_power ( _Tp, unsigned int );
# 84 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline _Tp
    __pow_helper ( _Tp __x, int __n )
    {
      return __n < 0
        ? _Tp ( 1 ) / __cmath_power ( __x, - __n )
        : __cmath_power ( __x, __n );
    }
# 94 "/usr/include/c++/4.4/cmath" 3
inline double abs(double __x)
# 95 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabs(__x); }
# 98 "/usr/include/c++/4.4/cmath" 3
inline float abs(float __x)
# 99 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 102 "/usr/include/c++/4.4/cmath" 3
inline long double abs(long double __x)
# 103 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 105 "/usr/include/c++/4.4/cmath" 3
using ::acos;
# 108 "/usr/include/c++/4.4/cmath" 3
inline float acos(float __x)
# 109 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosf(__x); }
# 112 "/usr/include/c++/4.4/cmath" 3
inline long double acos(long double __x)
# 113 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosl(__x); }
# 115 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    acos ( _Tp __x )
    { return __builtin_acos ( __x ); }
# 121 "/usr/include/c++/4.4/cmath" 3
using ::asin;
# 124 "/usr/include/c++/4.4/cmath" 3
inline float asin(float __x)
# 125 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinf(__x); }
# 128 "/usr/include/c++/4.4/cmath" 3
inline long double asin(long double __x)
# 129 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinl(__x); }
# 131 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    asin ( _Tp __x )
    { return __builtin_asin ( __x ); }
# 137 "/usr/include/c++/4.4/cmath" 3
using ::atan;
# 140 "/usr/include/c++/4.4/cmath" 3
inline float atan(float __x)
# 141 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanf(__x); }
# 144 "/usr/include/c++/4.4/cmath" 3
inline long double atan(long double __x)
# 145 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanl(__x); }
# 147 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    atan ( _Tp __x )
    { return __builtin_atan ( __x ); }
# 153 "/usr/include/c++/4.4/cmath" 3
using ::atan2;
# 156 "/usr/include/c++/4.4/cmath" 3
inline float atan2(float __y, float __x)
# 157 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 160 "/usr/include/c++/4.4/cmath" 3
inline long double atan2(long double __y, long double __x)
# 161 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 163 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    atan2 ( _Tp __y, _Up __x )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return atan2 ( __type ( __y ), __type ( __x ) );
    }
# 175 "/usr/include/c++/4.4/cmath" 3
using ::ceil;
# 178 "/usr/include/c++/4.4/cmath" 3
inline float ceil(float __x)
# 179 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceilf(__x); }
# 182 "/usr/include/c++/4.4/cmath" 3
inline long double ceil(long double __x)
# 183 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceill(__x); }
# 185 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    ceil ( _Tp __x )
    { return __builtin_ceil ( __x ); }
# 191 "/usr/include/c++/4.4/cmath" 3
using ::cos;
# 194 "/usr/include/c++/4.4/cmath" 3
inline float cos(float __x)
# 195 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosf(__x); }
# 198 "/usr/include/c++/4.4/cmath" 3
inline long double cos(long double __x)
# 199 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosl(__x); }
# 201 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cos ( _Tp __x )
    { return __builtin_cos ( __x ); }
# 207 "/usr/include/c++/4.4/cmath" 3
using ::cosh;
# 210 "/usr/include/c++/4.4/cmath" 3
inline float cosh(float __x)
# 211 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshf(__x); }
# 214 "/usr/include/c++/4.4/cmath" 3
inline long double cosh(long double __x)
# 215 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshl(__x); }
# 217 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cosh ( _Tp __x )
    { return __builtin_cosh ( __x ); }
# 223 "/usr/include/c++/4.4/cmath" 3
using ::exp;
# 226 "/usr/include/c++/4.4/cmath" 3
inline float exp(float __x)
# 227 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expf(__x); }
# 230 "/usr/include/c++/4.4/cmath" 3
inline long double exp(long double __x)
# 231 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expl(__x); }
# 233 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    exp ( _Tp __x )
    { return __builtin_exp ( __x ); }
# 239 "/usr/include/c++/4.4/cmath" 3
using ::fabs;
# 242 "/usr/include/c++/4.4/cmath" 3
inline float fabs(float __x)
# 243 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 246 "/usr/include/c++/4.4/cmath" 3
inline long double fabs(long double __x)
# 247 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 249 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    fabs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 255 "/usr/include/c++/4.4/cmath" 3
using ::floor;
# 258 "/usr/include/c++/4.4/cmath" 3
inline float floor(float __x)
# 259 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorf(__x); }
# 262 "/usr/include/c++/4.4/cmath" 3
inline long double floor(long double __x)
# 263 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorl(__x); }
# 265 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    floor ( _Tp __x )
    { return __builtin_floor ( __x ); }
# 271 "/usr/include/c++/4.4/cmath" 3
using ::fmod;
# 274 "/usr/include/c++/4.4/cmath" 3
inline float fmod(float __x, float __y)
# 275 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 278 "/usr/include/c++/4.4/cmath" 3
inline long double fmod(long double __x, long double __y)
# 279 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 281 "/usr/include/c++/4.4/cmath" 3
using ::frexp;
# 284 "/usr/include/c++/4.4/cmath" 3
inline float frexp(float __x, int *__exp)
# 285 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 288 "/usr/include/c++/4.4/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 289 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 291 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    frexp ( _Tp __x, int * __exp )
    { return __builtin_frexp ( __x, __exp ); }
# 297 "/usr/include/c++/4.4/cmath" 3
using ::ldexp;
# 300 "/usr/include/c++/4.4/cmath" 3
inline float ldexp(float __x, int __exp)
# 301 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 304 "/usr/include/c++/4.4/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 305 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 307 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
  ldexp ( _Tp __x, int __exp )
  { return __builtin_ldexp ( __x, __exp ); }
# 313 "/usr/include/c++/4.4/cmath" 3
using ::log;
# 316 "/usr/include/c++/4.4/cmath" 3
inline float log(float __x)
# 317 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logf(__x); }
# 320 "/usr/include/c++/4.4/cmath" 3
inline long double log(long double __x)
# 321 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logl(__x); }
# 323 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log ( _Tp __x )
    { return __builtin_log ( __x ); }
# 329 "/usr/include/c++/4.4/cmath" 3
using ::log10;
# 332 "/usr/include/c++/4.4/cmath" 3
inline float log10(float __x)
# 333 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10f(__x); }
# 336 "/usr/include/c++/4.4/cmath" 3
inline long double log10(long double __x)
# 337 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10l(__x); }
# 339 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log10 ( _Tp __x )
    { return __builtin_log10 ( __x ); }
# 345 "/usr/include/c++/4.4/cmath" 3
using ::modf;
# 348 "/usr/include/c++/4.4/cmath" 3
inline float modf(float __x, float *__iptr)
# 349 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 352 "/usr/include/c++/4.4/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 353 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 355 "/usr/include/c++/4.4/cmath" 3
using ::pow;
# 358 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, float __y)
# 359 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powf(__x, __y); }
# 362 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, long double __y)
# 363 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powl(__x, __y); }
# 369 "/usr/include/c++/4.4/cmath" 3
inline double pow(double __x, int __i)
# 370 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powi(__x, __i); }
# 373 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, int __n)
# 374 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powif(__x, __n); }
# 377 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, int __n)
# 378 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powil(__x, __n); }
# 381 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    pow ( _Tp __x, _Up __y )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return pow ( __type ( __x ), __type ( __y ) );
    }
# 393 "/usr/include/c++/4.4/cmath" 3
using ::sin;
# 396 "/usr/include/c++/4.4/cmath" 3
inline float sin(float __x)
# 397 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinf(__x); }
# 400 "/usr/include/c++/4.4/cmath" 3
inline long double sin(long double __x)
# 401 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinl(__x); }
# 403 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sin ( _Tp __x )
    { return __builtin_sin ( __x ); }
# 409 "/usr/include/c++/4.4/cmath" 3
using ::sinh;
# 412 "/usr/include/c++/4.4/cmath" 3
inline float sinh(float __x)
# 413 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhf(__x); }
# 416 "/usr/include/c++/4.4/cmath" 3
inline long double sinh(long double __x)
# 417 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhl(__x); }
# 419 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sinh ( _Tp __x )
    { return __builtin_sinh ( __x ); }
# 425 "/usr/include/c++/4.4/cmath" 3
using ::sqrt;
# 428 "/usr/include/c++/4.4/cmath" 3
inline float sqrt(float __x)
# 429 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtf(__x); }
# 432 "/usr/include/c++/4.4/cmath" 3
inline long double sqrt(long double __x)
# 433 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtl(__x); }
# 435 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sqrt ( _Tp __x )
    { return __builtin_sqrt ( __x ); }
# 441 "/usr/include/c++/4.4/cmath" 3
using ::tan;
# 444 "/usr/include/c++/4.4/cmath" 3
inline float tan(float __x)
# 445 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanf(__x); }
# 448 "/usr/include/c++/4.4/cmath" 3
inline long double tan(long double __x)
# 449 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanl(__x); }
# 451 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tan ( _Tp __x )
    { return __builtin_tan ( __x ); }
# 457 "/usr/include/c++/4.4/cmath" 3
using ::tanh;
# 460 "/usr/include/c++/4.4/cmath" 3
inline float tanh(float __x)
# 461 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhf(__x); }
# 464 "/usr/include/c++/4.4/cmath" 3
inline long double tanh(long double __x)
# 465 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhl(__x); }
# 467 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tanh ( _Tp __x )
    { return __builtin_tanh ( __x ); }
# 473 "/usr/include/c++/4.4/cmath" 3
}
# 492 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute__((visibility("default"))) {
# 494 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    fpclassify ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_fpclassify ( FP_NAN, FP_INFINITE, FP_NORMAL,
      FP_SUBNORMAL, FP_ZERO, __type ( __f ) );
    }
# 504 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isfinite ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isfinite ( __type ( __f ) );
    }
# 513 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isinf ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isinf ( __type ( __f ) );
    }
# 522 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnan ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnan ( __type ( __f ) );
    }
# 531 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnormal ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnormal ( __type ( __f ) );
    }
# 540 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    signbit ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_signbit ( __type ( __f ) );
    }
# 549 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 558 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreaterequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreaterequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 567 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isless ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isless ( __type ( __f1 ), __type ( __f2 ) );
    }
# 576 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 585 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 594 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isunordered ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isunordered ( __type ( __f1 ), __type ( __f2 ) );
    }
# 603 "/usr/include/c++/4.4/cmath" 3
}
# 35 "/usr/include/c++/4.4/bits/cmath.tcc" 3
namespace std __attribute__((visibility("default"))) {
# 37 "/usr/include/c++/4.4/bits/cmath.tcc" 3
template < typename _Tp >
    inline _Tp
    __cmath_power ( _Tp __x, unsigned int __n )
    {
      _Tp __y = __n % 2 ? __x : _Tp ( 1 );

      while ( __n >>= 1 )
        {
          __x = __x * __x;
          if ( __n % 2 )
            __y = __y * __x;
        }

      return __y;
    }
# 53 "/usr/include/c++/4.4/bits/cmath.tcc" 3
}
# 49 "/usr/include/c++/4.4/cstddef" 3
namespace std __attribute__((visibility("default"))) {
# 51 "/usr/include/c++/4.4/cstddef" 3
using ::ptrdiff_t;
# 52 "/usr/include/c++/4.4/cstddef" 3
using ::size_t;
# 54 "/usr/include/c++/4.4/cstddef" 3
}
# 100 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute__((visibility("default"))) {
# 102 "/usr/include/c++/4.4/cstdlib" 3
using ::div_t;
# 103 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv_t;
# 105 "/usr/include/c++/4.4/cstdlib" 3
using ::abort;
# 106 "/usr/include/c++/4.4/cstdlib" 3
using ::abs;
# 107 "/usr/include/c++/4.4/cstdlib" 3
using ::atexit;
# 108 "/usr/include/c++/4.4/cstdlib" 3
using ::atof;
# 109 "/usr/include/c++/4.4/cstdlib" 3
using ::atoi;
# 110 "/usr/include/c++/4.4/cstdlib" 3
using ::atol;
# 111 "/usr/include/c++/4.4/cstdlib" 3
using ::bsearch;
# 112 "/usr/include/c++/4.4/cstdlib" 3
using ::calloc;
# 113 "/usr/include/c++/4.4/cstdlib" 3
using ::div;
# 114 "/usr/include/c++/4.4/cstdlib" 3
using ::exit;
# 115 "/usr/include/c++/4.4/cstdlib" 3
using ::free;
# 116 "/usr/include/c++/4.4/cstdlib" 3
using ::getenv;
# 117 "/usr/include/c++/4.4/cstdlib" 3
using ::labs;
# 118 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv;
# 119 "/usr/include/c++/4.4/cstdlib" 3
using ::malloc;
# 121 "/usr/include/c++/4.4/cstdlib" 3
using ::mblen;
# 122 "/usr/include/c++/4.4/cstdlib" 3
using ::mbstowcs;
# 123 "/usr/include/c++/4.4/cstdlib" 3
using ::mbtowc;
# 125 "/usr/include/c++/4.4/cstdlib" 3
using ::qsort;
# 126 "/usr/include/c++/4.4/cstdlib" 3
using ::rand;
# 127 "/usr/include/c++/4.4/cstdlib" 3
using ::realloc;
# 128 "/usr/include/c++/4.4/cstdlib" 3
using ::srand;
# 129 "/usr/include/c++/4.4/cstdlib" 3
using ::strtod;
# 130 "/usr/include/c++/4.4/cstdlib" 3
using ::strtol;
# 131 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoul;
# 132 "/usr/include/c++/4.4/cstdlib" 3
using ::system;
# 134 "/usr/include/c++/4.4/cstdlib" 3
using ::wcstombs;
# 135 "/usr/include/c++/4.4/cstdlib" 3
using ::wctomb;
# 139 "/usr/include/c++/4.4/cstdlib" 3
inline long abs(long __i) { return labs(__i); }
# 142 "/usr/include/c++/4.4/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 144 "/usr/include/c++/4.4/cstdlib" 3
}
# 157 "/usr/include/c++/4.4/cstdlib" 3
namespace __gnu_cxx __attribute__((visibility("default"))) {
# 160 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv_t;
# 166 "/usr/include/c++/4.4/cstdlib" 3
using ::_Exit;
# 170 "/usr/include/c++/4.4/cstdlib" 3
inline long long abs(long long __x) { return (__x >= (0)) ? __x : (-__x); }
# 173 "/usr/include/c++/4.4/cstdlib" 3
using ::llabs;
# 176 "/usr/include/c++/4.4/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 177 "/usr/include/c++/4.4/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 179 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv;
# 190 "/usr/include/c++/4.4/cstdlib" 3
using ::atoll;
# 191 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoll;
# 192 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoull;
# 194 "/usr/include/c++/4.4/cstdlib" 3
using ::strtof;
# 195 "/usr/include/c++/4.4/cstdlib" 3
using ::strtold;
# 197 "/usr/include/c++/4.4/cstdlib" 3
}
# 199 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute__((visibility("default"))) {
# 202 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 204 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::_Exit;
# 205 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::abs;
# 207 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::llabs;
# 208 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::div;
# 209 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv;
# 211 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::atoll;
# 212 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtof;
# 213 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoll;
# 214 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoull;
# 215 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtold;
# 217 "/usr/include/c++/4.4/cstdlib" 3
}
# 497 "/usr/local/cuda/bin/../include/math_functions.h"
namespace __gnu_cxx {
# 499 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline long long abs(long long) __attribute__((visibility("default")));
# 500 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 502 "/usr/local/cuda/bin/../include/math_functions.h"
namespace std {
# 504 "/usr/local/cuda/bin/../include/math_functions.h"
template<class T> extern inline T __pow_helper(T, int);
# 505 "/usr/local/cuda/bin/../include/math_functions.h"
template<class T> extern inline T __cmath_power(T, unsigned);
# 506 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 508 "/usr/local/cuda/bin/../include/math_functions.h"
using std::abs;
# 509 "/usr/local/cuda/bin/../include/math_functions.h"
using std::fabs;
# 510 "/usr/local/cuda/bin/../include/math_functions.h"
using std::ceil;
# 511 "/usr/local/cuda/bin/../include/math_functions.h"
using std::floor;
# 512 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sqrt;
# 513 "/usr/local/cuda/bin/../include/math_functions.h"
using std::pow;
# 514 "/usr/local/cuda/bin/../include/math_functions.h"
using std::log;
# 515 "/usr/local/cuda/bin/../include/math_functions.h"
using std::log10;
# 516 "/usr/local/cuda/bin/../include/math_functions.h"
using std::fmod;
# 517 "/usr/local/cuda/bin/../include/math_functions.h"
using std::modf;
# 518 "/usr/local/cuda/bin/../include/math_functions.h"
using std::exp;
# 519 "/usr/local/cuda/bin/../include/math_functions.h"
using std::frexp;
# 520 "/usr/local/cuda/bin/../include/math_functions.h"
using std::ldexp;
# 521 "/usr/local/cuda/bin/../include/math_functions.h"
using std::asin;
# 522 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sin;
# 523 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sinh;
# 524 "/usr/local/cuda/bin/../include/math_functions.h"
using std::acos;
# 525 "/usr/local/cuda/bin/../include/math_functions.h"
using std::cos;
# 526 "/usr/local/cuda/bin/../include/math_functions.h"
using std::cosh;
# 527 "/usr/local/cuda/bin/../include/math_functions.h"
using std::atan;
# 528 "/usr/local/cuda/bin/../include/math_functions.h"
using std::atan2;
# 529 "/usr/local/cuda/bin/../include/math_functions.h"
using std::tan;
# 530 "/usr/local/cuda/bin/../include/math_functions.h"
using std::tanh;
# 584 "/usr/local/cuda/bin/../include/math_functions.h"
namespace std {
# 587 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline long abs(long) __attribute__((visibility("default")));
# 588 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float abs(float) __attribute__((visibility("default")));
# 589 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline double abs(double) __attribute__((visibility("default")));
# 590 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float fabs(float) __attribute__((visibility("default")));
# 591 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float ceil(float) __attribute__((visibility("default")));
# 592 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float floor(float) __attribute__((visibility("default")));
# 593 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sqrt(float) __attribute__((visibility("default")));
# 594 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float pow(float, float) __attribute__((visibility("default")));
# 595 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float pow(float, int) __attribute__((visibility("default")));
# 596 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline double pow(double, int) __attribute__((visibility("default")));
# 597 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float log(float) __attribute__((visibility("default")));
# 598 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float log10(float) __attribute__((visibility("default")));
# 599 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float fmod(float, float) __attribute__((visibility("default")));
# 600 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float modf(float, float *) __attribute__((visibility("default")));
# 601 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float exp(float) __attribute__((visibility("default")));
# 602 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float frexp(float, int *) __attribute__((visibility("default")));
# 603 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float ldexp(float, int) __attribute__((visibility("default")));
# 604 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float asin(float) __attribute__((visibility("default")));
# 605 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sin(float) __attribute__((visibility("default")));
# 606 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sinh(float) __attribute__((visibility("default")));
# 607 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float acos(float) __attribute__((visibility("default")));
# 608 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float cos(float) __attribute__((visibility("default")));
# 609 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float cosh(float) __attribute__((visibility("default")));
# 610 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float atan(float) __attribute__((visibility("default")));
# 611 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float atan2(float, float) __attribute__((visibility("default")));
# 612 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float tan(float) __attribute__((visibility("default")));
# 613 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float tanh(float) __attribute__((visibility("default")));
# 616 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 619 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float logb(float a)
# 620 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 621 "/usr/local/cuda/bin/../include/math_functions.h"
return logbf(a);
# 622 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 624 "/usr/local/cuda/bin/../include/math_functions.h"
static inline int ilogb(float a)
# 625 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 626 "/usr/local/cuda/bin/../include/math_functions.h"
return ilogbf(a);
# 627 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 629 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float scalbn(float a, int b)
# 630 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 631 "/usr/local/cuda/bin/../include/math_functions.h"
return scalbnf(a, b);
# 632 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 634 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float scalbln(float a, long b)
# 635 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 636 "/usr/local/cuda/bin/../include/math_functions.h"
return scalblnf(a, b);
# 637 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 639 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float exp2(float a)
# 640 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 641 "/usr/local/cuda/bin/../include/math_functions.h"
return exp2f(a);
# 642 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 644 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float exp10(float a)
# 645 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 646 "/usr/local/cuda/bin/../include/math_functions.h"
return exp10f(a);
# 647 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 649 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float expm1(float a)
# 650 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 651 "/usr/local/cuda/bin/../include/math_functions.h"
return expm1f(a);
# 652 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 654 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float log2(float a)
# 655 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 656 "/usr/local/cuda/bin/../include/math_functions.h"
return log2f(a);
# 657 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 659 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float log1p(float a)
# 660 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 661 "/usr/local/cuda/bin/../include/math_functions.h"
return log1pf(a);
# 662 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 664 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rsqrt(float a)
# 665 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 666 "/usr/local/cuda/bin/../include/math_functions.h"
return rsqrtf(a);
# 667 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 669 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float acosh(float a)
# 670 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 671 "/usr/local/cuda/bin/../include/math_functions.h"
return acoshf(a);
# 672 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 674 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float asinh(float a)
# 675 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 676 "/usr/local/cuda/bin/../include/math_functions.h"
return asinhf(a);
# 677 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 679 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float atanh(float a)
# 680 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 681 "/usr/local/cuda/bin/../include/math_functions.h"
return atanhf(a);
# 682 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 684 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float hypot(float a, float b)
# 685 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 686 "/usr/local/cuda/bin/../include/math_functions.h"
return hypotf(a, b);
# 687 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 689 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float cbrt(float a)
# 690 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 691 "/usr/local/cuda/bin/../include/math_functions.h"
return cbrtf(a);
# 692 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 694 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rcbrt(float a)
# 695 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 696 "/usr/local/cuda/bin/../include/math_functions.h"
return rcbrtf(a);
# 697 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 699 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float sinpi(float a)
# 700 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 701 "/usr/local/cuda/bin/../include/math_functions.h"
return sinpif(a);
# 702 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 704 "/usr/local/cuda/bin/../include/math_functions.h"
static inline void sincos(float a, float *sptr, float *cptr)
# 705 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 706 "/usr/local/cuda/bin/../include/math_functions.h"
sincosf(a, sptr, cptr);
# 707 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 709 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erf(float a)
# 710 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 711 "/usr/local/cuda/bin/../include/math_functions.h"
return erff(a);
# 712 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 714 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfinv(float a)
# 715 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 716 "/usr/local/cuda/bin/../include/math_functions.h"
return erfinvf(a);
# 717 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 719 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfc(float a)
# 720 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 721 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcf(a);
# 722 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 724 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfcinv(float a)
# 725 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 726 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcinvf(a);
# 727 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 729 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float lgamma(float a)
# 730 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 731 "/usr/local/cuda/bin/../include/math_functions.h"
return lgammaf(a);
# 732 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 734 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float tgamma(float a)
# 735 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 736 "/usr/local/cuda/bin/../include/math_functions.h"
return tgammaf(a);
# 737 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 739 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float copysign(float a, float b)
# 740 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 741 "/usr/local/cuda/bin/../include/math_functions.h"
return copysignf(a, b);
# 742 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 744 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double copysign(double a, float b)
# 745 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 746 "/usr/local/cuda/bin/../include/math_functions.h"
return copysign(a, (double)b);
# 747 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 749 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float copysign(float a, double b)
# 750 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 751 "/usr/local/cuda/bin/../include/math_functions.h"
return copysignf(a, (float)b);
# 752 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 754 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float nextafter(float a, float b)
# 755 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 756 "/usr/local/cuda/bin/../include/math_functions.h"
return nextafterf(a, b);
# 757 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 759 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float remainder(float a, float b)
# 760 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 761 "/usr/local/cuda/bin/../include/math_functions.h"
return remainderf(a, b);
# 762 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 764 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float remquo(float a, float b, int *quo)
# 765 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 766 "/usr/local/cuda/bin/../include/math_functions.h"
return remquof(a, b, quo);
# 767 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 769 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float round(float a)
# 770 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 771 "/usr/local/cuda/bin/../include/math_functions.h"
return roundf(a);
# 772 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 774 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long lround(float a)
# 775 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 776 "/usr/local/cuda/bin/../include/math_functions.h"
return lroundf(a);
# 777 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 779 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long llround(float a)
# 780 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 781 "/usr/local/cuda/bin/../include/math_functions.h"
return llroundf(a);
# 782 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 784 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float trunc(float a)
# 785 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 786 "/usr/local/cuda/bin/../include/math_functions.h"
return truncf(a);
# 787 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 789 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rint(float a)
# 790 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 791 "/usr/local/cuda/bin/../include/math_functions.h"
return rintf(a);
# 792 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 794 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long lrint(float a)
# 795 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 796 "/usr/local/cuda/bin/../include/math_functions.h"
return lrintf(a);
# 797 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 799 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long llrint(float a)
# 800 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 801 "/usr/local/cuda/bin/../include/math_functions.h"
return llrintf(a);
# 802 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 804 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float nearbyint(float a)
# 805 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 806 "/usr/local/cuda/bin/../include/math_functions.h"
return nearbyintf(a);
# 807 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 809 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fdim(float a, float b)
# 810 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 811 "/usr/local/cuda/bin/../include/math_functions.h"
return fdimf(a, b);
# 812 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 814 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fma(float a, float b, float c)
# 815 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 816 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaf(a, b, c);
# 817 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 819 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fmax(float a, float b)
# 820 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 821 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaxf(a, b);
# 822 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 824 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fmin(float a, float b)
# 825 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 826 "/usr/local/cuda/bin/../include/math_functions.h"
return fminf(a, b);
# 827 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 829 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b)
# 830 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 831 "/usr/local/cuda/bin/../include/math_functions.h"
return umin(a, b);
# 832 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 834 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(int a, unsigned b)
# 835 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 836 "/usr/local/cuda/bin/../include/math_functions.h"
return umin((unsigned)a, b);
# 837 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 839 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(unsigned a, int b)
# 840 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 841 "/usr/local/cuda/bin/../include/math_functions.h"
return umin(a, (unsigned)b);
# 842 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 844 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long min(long long a, long long b)
# 845 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 846 "/usr/local/cuda/bin/../include/math_functions.h"
return llmin(a, b);
# 847 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 849 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 850 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 851 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin(a, b);
# 852 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 854 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b)
# 855 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 856 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin((unsigned long long)a, b);
# 857 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 859 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b)
# 860 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 861 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin(a, (unsigned long long)b);
# 862 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 864 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float min(float a, float b)
# 865 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 866 "/usr/local/cuda/bin/../include/math_functions.h"
return fminf(a, b);
# 867 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 869 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(double a, double b)
# 870 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 871 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin(a, b);
# 872 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 874 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(float a, double b)
# 875 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 876 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin((double)a, b);
# 877 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 879 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(double a, float b)
# 880 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 881 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin(a, (double)b);
# 882 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 884 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b)
# 885 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 886 "/usr/local/cuda/bin/../include/math_functions.h"
return umax(a, b);
# 887 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 889 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(int a, unsigned b)
# 890 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 891 "/usr/local/cuda/bin/../include/math_functions.h"
return umax((unsigned)a, b);
# 892 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 894 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(unsigned a, int b)
# 895 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 896 "/usr/local/cuda/bin/../include/math_functions.h"
return umax(a, (unsigned)b);
# 897 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 899 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long max(long long a, long long b)
# 900 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 901 "/usr/local/cuda/bin/../include/math_functions.h"
return llmax(a, b);
# 902 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 904 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 905 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 906 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax(a, b);
# 907 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 909 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b)
# 910 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 911 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax((unsigned long long)a, b);
# 912 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 914 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b)
# 915 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 916 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax(a, (unsigned long long)b);
# 917 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 919 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float max(float a, float b)
# 920 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 921 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaxf(a, b);
# 922 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 924 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(double a, double b)
# 925 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 926 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax(a, b);
# 927 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 929 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(float a, double b)
# 930 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 931 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax((double)a, b);
# 932 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 934 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(double a, float b)
# 935 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 936 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax(a, (double)b);
# 937 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 60 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
template<class T, int dim = 1>
# 61 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 63 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface()
# 64 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 65 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 66 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 68 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 69 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 70 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = desc;
# 71 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 72 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
};
# 75 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
template<int dim>
# 76 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 78 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface()
# 79 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 80 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> ();
# 81 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 82 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
};
# 60 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
template<class T, int dim = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 61 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
struct texture : public textureReference {
# 63 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode
# 64 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 65 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
aMode = cudaAddressModeClamp)
# 66 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
{
# 67 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(normalized) = norm;
# 68 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(filterMode) = fMode;
# 69 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 70 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 71 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 72 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 73 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
}
# 75 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 76 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 77 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 78 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
desc)
# 79 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
{
# 80 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(normalized) = norm;
# 81 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(filterMode) = fMode;
# 82 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 83 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 84 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 85 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(channelDesc) = desc;
# 86 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
}
# 87 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
};
# 329 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline int mulhi(int a, int b)
# 330 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 332 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 334 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline unsigned mulhi(unsigned a, unsigned b)
# 335 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 337 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 339 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline unsigned mulhi(int a, unsigned b)
# 340 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 342 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 344 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline unsigned mulhi(unsigned a, int b)
# 345 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 347 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 349 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline long long mul64hi(long long a, long long b)
# 350 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 352 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 354 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 355 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 357 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 359 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline unsigned long long mul64hi(long long a, unsigned long long b)
# 360 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 362 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 364 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline unsigned long long mul64hi(unsigned long long a, long long b)
# 365 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 367 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 369 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline int float_as_int(float a)
# 370 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 372 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 374 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline float int_as_float(int a)
# 375 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 377 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 379 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline float saturate(float a)
# 380 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 382 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 384 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline int mul24(int a, int b)
# 385 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 387 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 389 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline unsigned umul24(unsigned a, unsigned b)
# 390 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 392 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 394 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline void trap()
# 395 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 397 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 399 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline void brkpt(int c)
# 400 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 402 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 404 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline void syncthreads()
# 405 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 407 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 409 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline void prof_trigger(int e)
# 410 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 427 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 429 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline void threadfence(bool global)
# 430 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 432 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 434 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline int float2int(float a, cudaRoundMode mode)
# 435 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 440 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 442 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline unsigned float2uint(float a, cudaRoundMode mode)
# 443 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 448 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 450 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline float int2float(int a, cudaRoundMode mode)
# 451 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 456 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 458 "/usr/local/cuda/bin/../include/device_functions.h"
static __attribute__((unused)) inline float uint2float(unsigned a, cudaRoundMode mode)
# 459 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 464 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 102 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline int atomicAdd(int *address, int val)
# 103 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 105 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 107 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicAdd(unsigned *address, unsigned val)
# 108 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 110 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 112 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline int atomicSub(int *address, int val)
# 113 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 115 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 117 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicSub(unsigned *address, unsigned val)
# 118 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 120 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 122 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline int atomicExch(int *address, int val)
# 123 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 125 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 127 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicExch(unsigned *address, unsigned val)
# 128 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 130 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 132 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline float atomicExch(float *address, float val)
# 133 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 135 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 137 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline int atomicMin(int *address, int val)
# 138 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 140 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 142 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicMin(unsigned *address, unsigned val)
# 143 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 145 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 147 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline int atomicMax(int *address, int val)
# 148 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 150 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 152 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicMax(unsigned *address, unsigned val)
# 153 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 155 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 157 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicInc(unsigned *address, unsigned val)
# 158 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 160 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 162 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicDec(unsigned *address, unsigned val)
# 163 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 165 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 167 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline int atomicAnd(int *address, int val)
# 168 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 170 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 172 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicAnd(unsigned *address, unsigned val)
# 173 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 175 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 177 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline int atomicOr(int *address, int val)
# 178 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 180 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 182 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicOr(unsigned *address, unsigned val)
# 183 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 185 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 187 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline int atomicXor(int *address, int val)
# 188 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 190 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 192 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicXor(unsigned *address, unsigned val)
# 193 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 195 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 197 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline int atomicCAS(int *address, int compare, int val)
# 198 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 200 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 202 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
static __attribute__((unused)) inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val)
# 203 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 205 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 75 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
static __attribute__((unused)) inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val)
# 76 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 78 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 80 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
static __attribute__((unused)) inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val)
# 81 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 83 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 85 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
static __attribute__((unused)) inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val)
# 86 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 88 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 90 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
static __attribute__((unused)) inline bool any(bool cond)
# 91 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 93 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 95 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
static __attribute__((unused)) inline bool all(bool cond)
# 96 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 98 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 170 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline double fma(double a, double b, double c, cudaRoundMode mode)
# 171 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 176 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 178 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline double dmul(double a, double b, cudaRoundMode mode)
# 179 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 184 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 186 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline double dadd(double a, double b, cudaRoundMode mode)
# 187 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 192 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 194 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline int double2int(double a, cudaRoundMode mode)
# 195 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 200 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 202 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline unsigned double2uint(double a, cudaRoundMode mode)
# 203 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 208 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 210 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline long long double2ll(double a, cudaRoundMode mode)
# 211 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 216 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 218 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline unsigned long long double2ull(double a, cudaRoundMode mode)
# 219 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 224 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 226 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline double ll2double(long long a, cudaRoundMode mode)
# 227 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 232 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 234 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline double ull2double(unsigned long long a, cudaRoundMode mode)
# 235 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 240 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 242 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline double int2double(int a, cudaRoundMode mode)
# 243 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 245 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 247 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline double uint2double(unsigned a, cudaRoundMode mode)
# 248 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 250 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 252 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
static __attribute__((unused)) inline double float2double(float a, cudaRoundMode mode)
# 253 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 255 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 66 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
static __attribute__((unused)) inline float atomicAdd(float *address, float val)
# 67 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
{int volatile ___ = 1;
# 69 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
exit(___);}
# 124 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
static __attribute__((unused)) inline unsigned ballot(bool pred)
# 125 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;
# 127 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 129 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
static __attribute__((unused)) inline int syncthreads_count(bool pred)
# 130 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;
# 132 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 134 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
static __attribute__((unused)) inline bool syncthreads_and(bool pred)
# 135 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;
# 137 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 139 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
static __attribute__((unused)) inline bool syncthreads_or(bool pred)
# 140 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;
# 142 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 97 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline void
# 98 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode)
# 99 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 106 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 108 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline T
# 109 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 110 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 116 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 118 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline void
# 119 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 120 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 122 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 125 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 126 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 128 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 131 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline signed char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 132 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 134 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 137 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline unsigned char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 138 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 140 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 143 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline char1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 144 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 146 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 149 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uchar1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 150 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 152 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 155 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline char2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 156 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 160 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 163 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uchar2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 164 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 166 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 169 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline char4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 170 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 174 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 177 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uchar4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 178 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 180 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 183 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 184 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 186 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 189 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline unsigned short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 190 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 192 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 195 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline short1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 196 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 198 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 201 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ushort1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 202 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 204 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 207 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline short2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 208 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 212 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 215 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ushort2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 216 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 218 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 221 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline short4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 222 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 226 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 229 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ushort4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 230 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 232 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 235 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline int surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 236 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 238 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 241 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline unsigned surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 242 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 244 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 247 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline int1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 248 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 250 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 253 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uint1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 254 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 256 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 259 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline int2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 260 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 264 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 267 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uint2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 268 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 270 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 273 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline int4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 274 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 278 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 281 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uint4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 282 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 284 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 287 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 288 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 290 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 293 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline unsigned long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 294 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 296 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 299 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline longlong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 300 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 302 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 305 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ulonglong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 306 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 308 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 311 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline longlong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 312 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 316 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 319 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ulonglong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 320 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 322 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 385 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline float surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 386 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 388 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 391 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline float1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 392 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 394 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 397 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline float2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 398 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 402 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 405 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline float4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 406 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 410 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 457 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline void
# 458 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode)
# 459 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 466 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 468 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline T
# 469 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 470 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 476 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 478 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline void
# 479 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 480 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 482 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 485 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 486 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 488 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 491 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline signed char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 492 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 494 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 497 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline unsigned char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 498 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 500 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 503 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline char1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 504 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 506 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 509 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uchar1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 510 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 512 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 515 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline char2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 516 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 520 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 523 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uchar2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 524 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 526 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 529 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline char4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 530 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 534 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 537 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uchar4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 538 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 540 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 543 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 544 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 546 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 549 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline unsigned short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 550 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 552 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 555 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline short1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 556 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 558 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 561 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ushort1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 562 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 564 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 567 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline short2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 568 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 572 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 575 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ushort2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 576 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 578 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 581 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline short4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 582 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 586 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 589 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ushort4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 590 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 592 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 595 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline int surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 596 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 598 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 601 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline unsigned surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 602 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 604 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 607 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline int1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 608 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 610 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 613 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uint1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 614 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 616 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 619 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline int2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 620 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 624 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 627 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uint2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 628 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 630 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 633 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline int4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 634 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 638 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 641 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline uint4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 642 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 644 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 647 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 648 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 650 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 653 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline unsigned long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 654 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 656 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 659 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline longlong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 660 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 662 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 665 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ulonglong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 666 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 668 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 671 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline longlong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 672 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 676 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 679 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline ulonglong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 680 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 682 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 745 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline float surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 746 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 748 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 751 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline float1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 752 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 754 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 757 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline float2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 758 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 762 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 765 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> inline float4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 766 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 770 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 817 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline void
# 818 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode)
# 819 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 837 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 839 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline void
# 840 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 841 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 843 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 846 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 847 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 849 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 851 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 852 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 854 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 856 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 857 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 859 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 861 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 862 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 864 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 866 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 867 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 869 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 871 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 872 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 874 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 876 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 877 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 879 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 881 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 882 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 884 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 886 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 887 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 889 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 891 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 892 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 894 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 896 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 897 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 899 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 901 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 902 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 904 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 906 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 907 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 909 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 911 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 912 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 914 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 916 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 917 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 919 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 921 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 922 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 924 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 926 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 927 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 929 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 931 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 932 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 934 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 936 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 937 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 939 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 941 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 942 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 944 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 946 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 947 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 949 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 951 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 952 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 954 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 956 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 957 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 959 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 961 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 962 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 964 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 966 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 967 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 969 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 971 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 972 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 974 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 976 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 977 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 979 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 981 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 982 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 984 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 986 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 987 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 989 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 991 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 992 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 994 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 996 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 997 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 999 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1045 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 1046 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1048 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1050 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 1051 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1053 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1055 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 1056 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1058 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1060 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 1061 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1063 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1110 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline void
# 1111 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode)
# 1112 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1130 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1132 "/usr/local/cuda/bin/../include/surface_functions.h"
template<class T> static __attribute__((unused)) inline void
# 1133 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1134 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1136 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1139 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1140 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1142 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1144 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1145 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1147 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1149 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1150 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1152 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1154 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1155 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1157 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1159 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1160 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1162 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1164 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1165 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1167 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1169 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1170 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1172 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1174 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1175 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1177 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1179 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1180 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1182 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1184 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1185 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1187 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1189 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1190 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1192 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1194 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1195 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1197 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1199 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1200 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1202 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1204 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1205 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1207 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1209 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1210 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1212 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1214 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1215 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1217 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1219 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1220 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1222 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1224 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1225 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1227 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1229 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1230 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1232 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1234 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1235 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1237 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1239 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1240 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1242 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1244 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1245 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1247 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1249 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1250 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1252 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1254 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1255 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1257 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1259 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1260 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1262 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1264 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1265 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1267 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1269 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1270 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1272 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1274 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1275 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1277 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1279 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1280 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1282 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1284 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1285 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1287 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1289 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1290 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1292 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1338 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1339 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1341 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1343 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1344 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1346 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1348 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1349 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1351 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1353 "/usr/local/cuda/bin/../include/surface_functions.h"
static __attribute__((unused)) inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 1354 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1356 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 61 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template<class T, cudaTextureReadMode readMode> extern __attribute__((unused)) uint4 __utexfetchi(texture< T, 1, readMode> , int4);
# 63 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template<class T, cudaTextureReadMode readMode> extern __attribute__((unused)) int4 __itexfetchi(texture< T, 1, readMode> , int4);
# 65 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template<class T, cudaTextureReadMode readMode> extern __attribute__((unused)) float4 __ftexfetchi(texture< T, 1, readMode> , int4);
# 68 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template<class T, int dim, cudaTextureReadMode readMode> extern __attribute__((unused)) uint4 __utexfetch(texture< T, dim, readMode> , float4, int);
# 70 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template<class T, int dim, cudaTextureReadMode readMode> extern __attribute__((unused)) int4 __itexfetch(texture< T, dim, readMode> , float4, int);
# 72 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template<class T, int dim, cudaTextureReadMode readMode> extern __attribute__((unused)) float4 __ftexfetch(texture< T, dim, readMode> , float4, int);
# 80 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x)
# 81 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 89 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 91 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x)
# 92 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 96 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 98 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x)
# 99 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 103 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 105 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x)
# 106 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 110 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 112 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x)
# 113 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 117 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 119 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x)
# 120 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 124 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 126 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x)
# 127 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 131 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 133 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x)
# 134 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 138 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 140 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x)
# 141 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 145 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 153 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x)
# 154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 158 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 160 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x)
# 161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 165 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 167 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x)
# 168 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 172 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 174 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x)
# 175 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 179 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 181 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x)
# 182 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 186 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 188 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x)
# 189 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 193 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 195 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x)
# 196 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 200 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 202 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x)
# 203 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 207 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 215 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x)
# 216 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 220 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 222 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x)
# 223 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 227 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 229 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x)
# 230 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 234 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 236 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x)
# 237 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 241 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 243 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x)
# 244 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 248 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 250 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x)
# 251 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 255 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 257 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x)
# 258 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 262 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x)
# 265 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 269 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 343 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x)
# 344 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 348 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 350 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x)
# 351 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 355 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 357 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x)
# 358 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 362 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 364 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x)
# 365 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 369 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 377 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x)
# 378 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 389 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x)
# 390 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 395 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 397 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x)
# 398 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 403 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 405 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x)
# 406 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 411 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 413 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x)
# 414 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 419 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 421 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x)
# 422 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 429 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x)
# 430 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 435 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 437 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x)
# 438 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 443 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 445 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x)
# 446 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 451 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 459 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x)
# 460 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 465 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 467 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x)
# 468 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 473 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 475 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x)
# 476 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 481 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 483 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x)
# 484 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 489 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 491 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x)
# 492 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 497 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 499 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x)
# 500 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 505 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 507 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x)
# 508 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 513 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 515 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x)
# 516 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 521 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x)
# 530 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 538 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 540 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x)
# 541 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 545 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 547 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x)
# 548 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 552 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 554 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x)
# 555 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 559 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 561 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x)
# 562 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 566 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 568 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x)
# 569 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 573 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 575 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x)
# 576 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 580 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 582 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x)
# 583 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 587 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 589 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x)
# 590 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 594 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 602 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x)
# 603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 607 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 609 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x)
# 610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 614 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 616 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x)
# 617 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 621 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 623 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x)
# 624 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 628 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 630 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x)
# 631 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 635 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 637 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x)
# 638 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 642 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 644 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x)
# 645 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 649 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 651 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x)
# 652 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 656 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 664 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x)
# 665 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 669 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 671 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x)
# 672 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 676 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 678 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x)
# 679 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 683 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 685 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x)
# 686 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 690 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 692 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x)
# 693 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 697 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 699 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x)
# 700 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 704 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 706 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x)
# 707 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 711 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 713 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x)
# 714 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 718 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 798 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x)
# 799 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 803 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 805 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x)
# 806 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 810 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 812 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x)
# 813 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 817 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 819 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x)
# 820 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 824 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 832 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x)
# 833 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 842 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 844 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x)
# 845 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 852 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x)
# 853 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x)
# 861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x)
# 869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x)
# 877 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 882 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 884 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x)
# 885 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 892 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x)
# 893 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 900 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x)
# 901 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 906 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 914 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x)
# 915 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 920 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 922 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x)
# 923 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 928 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 930 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x)
# 931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 936 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x)
# 939 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 944 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 946 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x)
# 947 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 952 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 954 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x)
# 955 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 960 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 962 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x)
# 963 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 968 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 970 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x)
# 971 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 976 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 984 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y)
# 985 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 993 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 995 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y)
# 996 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1000 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1002 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y)
# 1003 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1007 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1009 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y)
# 1010 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1014 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1016 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y)
# 1017 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1021 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1023 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y)
# 1024 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1028 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1030 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y)
# 1031 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1035 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1037 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y)
# 1038 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1042 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1044 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y)
# 1045 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1049 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1057 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y)
# 1058 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1062 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1064 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y)
# 1065 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1069 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1071 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y)
# 1072 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1076 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1078 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y)
# 1079 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1083 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1085 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y)
# 1086 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1090 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1092 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y)
# 1093 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1097 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1099 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y)
# 1100 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1104 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1106 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y)
# 1107 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1111 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1119 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y)
# 1120 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1124 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1126 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y)
# 1127 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1131 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1133 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y)
# 1134 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1138 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1140 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y)
# 1141 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1145 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1147 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y)
# 1148 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1152 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y)
# 1155 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1159 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y)
# 1162 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1166 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1168 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y)
# 1169 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1173 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1247 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y)
# 1248 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1252 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1254 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y)
# 1255 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1259 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1261 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y)
# 1262 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1266 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1268 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y)
# 1269 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1273 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1281 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1282 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1291 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1293 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1294 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1299 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1301 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1302 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1307 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1309 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1310 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1315 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1317 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1318 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1323 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1325 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1326 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1331 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1333 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1334 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1339 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1341 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1342 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1347 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1349 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1350 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1355 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1363 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1364 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1369 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1371 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1372 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1377 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1379 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1385 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1388 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1393 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1395 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1396 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1401 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1403 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1404 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1409 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1411 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1412 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1417 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1419 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1420 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1425 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1433 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1434 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1442 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1444 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1445 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1449 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1451 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1452 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1456 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1458 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1459 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1463 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1465 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1466 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1470 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1472 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1473 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1477 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1479 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1480 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1484 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1486 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1487 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1491 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1493 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1494 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1498 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1506 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1507 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1511 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1513 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1514 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1518 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1520 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1521 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1525 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1527 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1528 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1532 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1534 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1535 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1539 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1541 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1542 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1546 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1548 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1549 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1553 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1555 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1556 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1560 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1568 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1569 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1573 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1575 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1576 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1580 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1582 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1583 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1587 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1589 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1590 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1594 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1596 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1597 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1601 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1604 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1608 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1611 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1615 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1617 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1618 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1622 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1696 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1697 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1701 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1703 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1704 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1708 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1710 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1711 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1715 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1717 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1718 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1722 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1730 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1731 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1740 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1742 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1743 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1748 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1750 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1751 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1756 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1758 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1759 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1764 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1766 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1767 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1772 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1774 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1775 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1780 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1782 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1783 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1788 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1790 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1791 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1796 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1798 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1799 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1804 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1812 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1813 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1818 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1820 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1821 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1826 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1829 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1834 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1837 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1842 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1844 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1845 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1852 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1853 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
static __attribute__((unused)) inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 53 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
# 55 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
# 57 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
# 59 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
# 61 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
# 102 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 103 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaSetupArgument(T
# 104 "/usr/local/cuda/bin/../include/cuda_runtime.h"
arg, size_t
# 105 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset)
# 107 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 108 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 109 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 111 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 112 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaHostAlloc(T **
# 113 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 114 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 115 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 117 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 118 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostAlloc((void **)((void *)ptr), size, flags);
# 119 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 121 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 122 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 123 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pDevice, void *
# 124 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pHost, unsigned
# 125 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 127 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 128 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 129 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 131 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 132 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMalloc(T **
# 133 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 134 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size)
# 136 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 137 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMalloc((void **)((void *)devPtr), size);
# 138 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 140 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 141 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMallocHost(T **
# 142 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 143 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size)
# 145 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 146 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size);
# 147 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 149 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 150 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMallocPitch(T **
# 151 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t *
# 152 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch, size_t
# 153 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 154 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height)
# 156 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 157 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 158 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 173 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbol(char *
# 174 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 175 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 176 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 177 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 178 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 180 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 181 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)symbol, src, count, offset, kind);
# 182 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 184 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 185 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 186 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 187 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 188 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 189 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 190 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 192 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 193 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)(&symbol), src, count, offset, kind);
# 194 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 196 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbolAsync(char *
# 197 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 198 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 199 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 200 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 201 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 202 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 204 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 205 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)symbol, src, count, offset, kind, stream);
# 206 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 208 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 209 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 210 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 211 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 212 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 213 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 214 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 215 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 217 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 218 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)(&symbol), src, count, offset, kind, stream);
# 219 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 227 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbol(void *
# 228 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, char *
# 229 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 230 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 231 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 232 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 234 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 235 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)symbol, count, offset, kind);
# 236 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 238 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 239 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 240 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, const T &
# 241 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 242 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 243 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 244 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 246 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 247 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)(&symbol), count, offset, kind);
# 248 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 250 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbolAsync(void *
# 251 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, char *
# 252 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 253 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 254 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 255 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 256 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 258 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 259 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)symbol, count, offset, kind, stream);
# 260 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 262 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 263 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 264 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, const T &
# 265 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 266 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 267 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 268 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 269 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 271 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 272 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)(&symbol), count, offset, kind, stream);
# 273 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 275 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolAddress(void **
# 276 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, char *
# 277 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 279 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 280 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)symbol);
# 281 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 308 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 309 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 310 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const T &
# 311 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 313 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 314 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)(&symbol));
# 315 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 323 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolSize(size_t *
# 324 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, char *
# 325 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 327 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 328 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)symbol);
# 329 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 356 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 357 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 358 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, const T &
# 359 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 361 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 362 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)(&symbol));
# 363 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 412 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 413 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture(size_t *
# 414 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 415 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 416 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 417 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc, size_t
# 418 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 420 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 421 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 422 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 456 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 457 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture(size_t *
# 458 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 459 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 460 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 461 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 463 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 464 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.texture< T, dim, readMode> ::channelDesc), size);
# 465 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 511 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 512 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 513 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 514 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 515 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 516 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc, size_t
# 517 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 518 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height, size_t
# 519 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch)
# 521 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 522 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 523 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 553 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 554 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 555 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const cudaArray *
# 556 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 557 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc)
# 559 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 560 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTextureToArray(&tex, array, &desc);
# 561 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 590 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 591 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 592 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const cudaArray *
# 593 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array)
# 595 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 596 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 597 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 599 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 600 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 628 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 629 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 630 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex)
# 632 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 633 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaUnbindTexture(&tex);
# 634 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 667 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 668 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 669 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 670 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex)
# 672 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 673 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetTextureAlignmentOffset(offset, &tex);
# 674 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 724 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 725 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 726 "/usr/local/cuda/bin/../include/cuda_runtime.h"
func, cudaFuncCache
# 727 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cacheConfig)
# 729 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 730 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncSetCacheConfig((const char *)func, cacheConfig);
# 731 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 768 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 769 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaLaunch(T *
# 770 "/usr/local/cuda/bin/../include/cuda_runtime.h"
entry)
# 772 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 773 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaLaunch((const char *)entry);
# 774 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 805 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T> inline cudaError_t
# 806 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 807 "/usr/local/cuda/bin/../include/cuda_runtime.h"
attr, T *
# 808 "/usr/local/cuda/bin/../include/cuda_runtime.h"
entry)
# 810 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 811 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncGetAttributes(attr, (const char *)entry);
# 812 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 835 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T, int dim> inline cudaError_t
# 836 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 837 "/usr/local/cuda/bin/../include/cuda_runtime.h"
surf, const cudaArray *
# 838 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 839 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc)
# 841 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 842 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindSurfaceToArray(&surf, array, &desc);
# 843 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 865 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template<class T, int dim> inline cudaError_t
# 866 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 867 "/usr/local/cuda/bin/../include/cuda_runtime.h"
surf, const cudaArray *
# 868 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array)
# 870 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 871 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 872 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 874 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 875 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 45 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 49 "/usr/include/stdio.h" 3
extern "C" { typedef _IO_FILE FILE; }
# 65 "/usr/include/stdio.h" 3
extern "C" { typedef _IO_FILE __FILE; }
# 95 "/usr/include/wchar.h" 3
extern "C" { typedef
# 84 "/usr/include/wchar.h" 3
struct {
# 85 "/usr/include/wchar.h" 3
int __count;
# 87 "/usr/include/wchar.h" 3
union {
# 89 "/usr/include/wchar.h" 3
unsigned __wch;
# 93 "/usr/include/wchar.h" 3
char __wchb[4];
# 94 "/usr/include/wchar.h" 3
} __value;
# 95 "/usr/include/wchar.h" 3
} __mbstate_t; }
# 26 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 23 "/usr/include/_G_config.h" 3
struct {
# 24 "/usr/include/_G_config.h" 3
__off_t __pos;
# 25 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 26 "/usr/include/_G_config.h" 3
} _G_fpos_t; }
# 31 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 28 "/usr/include/_G_config.h" 3
struct {
# 29 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 30 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 31 "/usr/include/_G_config.h" 3
} _G_fpos64_t; }
# 53 "/usr/include/_G_config.h" 3
extern "C" { typedef short _G_int16_t; }
# 54 "/usr/include/_G_config.h" 3
extern "C" { typedef int _G_int32_t; }
# 55 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned short _G_uint16_t; }
# 56 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned _G_uint32_t; }
# 40 "/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/stdarg.h" 3
extern "C" { typedef __builtin_va_list __gnuc_va_list; }
# 170 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 180 "/usr/include/libio.h" 3
extern "C" { typedef void _IO_lock_t; }
# 186 "/usr/include/libio.h" 3
extern "C" { struct _IO_marker {
# 187 "/usr/include/libio.h" 3
_IO_marker *_next;
# 188 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 192 "/usr/include/libio.h" 3
int _pos;
# 203 "/usr/include/libio.h" 3
}; }
# 206 "/usr/include/libio.h" 3
enum __codecvt_result {
# 208 "/usr/include/libio.h" 3
__codecvt_ok,
# 209 "/usr/include/libio.h" 3
__codecvt_partial,
# 210 "/usr/include/libio.h" 3
__codecvt_error,
# 211 "/usr/include/libio.h" 3
__codecvt_noconv
# 212 "/usr/include/libio.h" 3
};
# 271 "/usr/include/libio.h" 3
extern "C" { struct _IO_FILE {
# 272 "/usr/include/libio.h" 3
int _flags;
# 277 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 278 "/usr/include/libio.h" 3
char *_IO_read_end;
# 279 "/usr/include/libio.h" 3
char *_IO_read_base;
# 280 "/usr/include/libio.h" 3
char *_IO_write_base;
# 281 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 282 "/usr/include/libio.h" 3
char *_IO_write_end;
# 283 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 284 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 286 "/usr/include/libio.h" 3
char *_IO_save_base;
# 287 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 288 "/usr/include/libio.h" 3
char *_IO_save_end;
# 290 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 292 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 294 "/usr/include/libio.h" 3
int _fileno;
# 298 "/usr/include/libio.h" 3
int _flags2;
# 300 "/usr/include/libio.h" 3
__off_t _old_offset;
# 304 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 305 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 306 "/usr/include/libio.h" 3
char _shortbuf[1];
# 310 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 319 "/usr/include/libio.h" 3
__off64_t _offset;
# 328 "/usr/include/libio.h" 3
void *__pad1;
# 329 "/usr/include/libio.h" 3
void *__pad2;
# 330 "/usr/include/libio.h" 3
void *__pad3;
# 331 "/usr/include/libio.h" 3
void *__pad4;
# 332 "/usr/include/libio.h" 3
size_t __pad5;
# 334 "/usr/include/libio.h" 3
int _mode;
# 336 "/usr/include/libio.h" 3
char _unused2[((((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t))];
# 338 "/usr/include/libio.h" 3
}; }
# 344 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 346 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdin_; }
# 347 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdout_; }
# 348 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stderr_; }
# 364 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_read_fn(void *, char *, size_t); }
# 372 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_write_fn(void *, const char *, size_t); }
# 381 "/usr/include/libio.h" 3
extern "C" { typedef int __io_seek_fn(void *, __off64_t *, int); }
# 384 "/usr/include/libio.h" 3
extern "C" { typedef int __io_close_fn(void *); }
# 389 "/usr/include/libio.h" 3
extern "C" { typedef __io_read_fn cookie_read_function_t; }
# 390 "/usr/include/libio.h" 3
extern "C" { typedef __io_write_fn cookie_write_function_t; }
# 391 "/usr/include/libio.h" 3
extern "C" { typedef __io_seek_fn cookie_seek_function_t; }
# 392 "/usr/include/libio.h" 3
extern "C" { typedef __io_close_fn cookie_close_function_t; }
# 401 "/usr/include/libio.h" 3
extern "C" { typedef
# 396 "/usr/include/libio.h" 3
struct {
# 397 "/usr/include/libio.h" 3
__io_read_fn *read;
# 398 "/usr/include/libio.h" 3
__io_write_fn *write;
# 399 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 400 "/usr/include/libio.h" 3
__io_close_fn *close;
# 401 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t; }
# 402 "/usr/include/libio.h" 3
extern "C" { typedef _IO_cookie_io_functions_t cookie_io_functions_t; }
# 404 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 407 "/usr/include/libio.h" 3
extern "C" void _IO_cookie_init(_IO_cookie_file *, int, void *, _IO_cookie_io_functions_t);
# 416 "/usr/include/libio.h" 3
extern "C" int __underflow(_IO_FILE *);
# 417 "/usr/include/libio.h" 3
extern "C" int __uflow(_IO_FILE *);
# 418 "/usr/include/libio.h" 3
extern "C" int __overflow(_IO_FILE *, int);
# 458 "/usr/include/libio.h" 3
extern "C" int _IO_getc(_IO_FILE *);
# 459 "/usr/include/libio.h" 3
extern "C" int _IO_putc(int, _IO_FILE *);
# 460 "/usr/include/libio.h" 3
extern "C" int _IO_feof(_IO_FILE *) throw();
# 461 "/usr/include/libio.h" 3
extern "C" int _IO_ferror(_IO_FILE *) throw();
# 463 "/usr/include/libio.h" 3
extern "C" int _IO_peekc_locked(_IO_FILE *);
# 469 "/usr/include/libio.h" 3
extern "C" void _IO_flockfile(_IO_FILE *) throw();
# 470 "/usr/include/libio.h" 3
extern "C" void _IO_funlockfile(_IO_FILE *) throw();
# 471 "/usr/include/libio.h" 3
extern "C" int _IO_ftrylockfile(_IO_FILE *) throw();
# 488 "/usr/include/libio.h" 3
extern "C" int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 490 "/usr/include/libio.h" 3
extern "C" int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 492 "/usr/include/libio.h" 3
extern "C" __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 493 "/usr/include/libio.h" 3
extern "C" size_t _IO_sgetn(_IO_FILE *, void *, size_t);
# 495 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 496 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 498 "/usr/include/libio.h" 3
extern "C" void _IO_free_backup_area(_IO_FILE *) throw();
# 80 "/usr/include/stdio.h" 3
extern "C" { typedef __gnuc_va_list va_list; }
# 91 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos_t fpos_t; }
# 97 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos64_t fpos64_t; }
# 145 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdin; }
# 146 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdout; }
# 147 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stderr; }
# 155 "/usr/include/stdio.h" 3
extern "C" int remove(const char *) throw();
# 157 "/usr/include/stdio.h" 3
extern "C" int rename(const char *, const char *) throw();
# 162 "/usr/include/stdio.h" 3
extern "C" int renameat(int, const char *, int, const char *) throw();
# 172 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile();
# 182 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile64();
# 186 "/usr/include/stdio.h" 3
extern "C" char *tmpnam(char *) throw();
# 192 "/usr/include/stdio.h" 3
extern "C" char *tmpnam_r(char *) throw();
# 204 "/usr/include/stdio.h" 3
extern "C" char *tempnam(const char *, const char *) throw() __attribute__((__malloc__));
# 214 "/usr/include/stdio.h" 3
extern "C" int fclose(FILE *);
# 219 "/usr/include/stdio.h" 3
extern "C" int fflush(FILE *);
# 229 "/usr/include/stdio.h" 3
extern "C" int fflush_unlocked(FILE *);
# 239 "/usr/include/stdio.h" 3
extern "C" int fcloseall();
# 249 "/usr/include/stdio.h" 3
extern "C" FILE *fopen(const char *__restrict__, const char *__restrict__);
# 255 "/usr/include/stdio.h" 3
extern "C" FILE *freopen(const char *__restrict__, const char *__restrict__, FILE *__restrict__);
# 274 "/usr/include/stdio.h" 3
extern "C" FILE *fopen64(const char *__restrict__, const char *__restrict__);
# 276 "/usr/include/stdio.h" 3
extern "C" FILE *freopen64(const char *__restrict__, const char *__restrict__, FILE *__restrict__);
# 283 "/usr/include/stdio.h" 3
extern "C" FILE *fdopen(int, const char *) throw();
# 289 "/usr/include/stdio.h" 3
extern "C" FILE *fopencookie(void *__restrict__, const char *__restrict__, _IO_cookie_io_functions_t) throw();
# 296 "/usr/include/stdio.h" 3
extern "C" FILE *fmemopen(void *, size_t, const char *) throw();
# 302 "/usr/include/stdio.h" 3
extern "C" FILE *open_memstream(char **, size_t *) throw();
# 309 "/usr/include/stdio.h" 3
extern "C" void setbuf(FILE *__restrict__, char *__restrict__) throw();
# 313 "/usr/include/stdio.h" 3
extern "C" int setvbuf(FILE *__restrict__, char *__restrict__, int, size_t) throw();
# 320 "/usr/include/stdio.h" 3
extern "C" void setbuffer(FILE *__restrict__, char *__restrict__, size_t) throw();
# 324 "/usr/include/stdio.h" 3
extern "C" void setlinebuf(FILE *) throw();
# 333 "/usr/include/stdio.h" 3
extern "C" int fprintf(FILE *__restrict__, const char *__restrict__, ...);
# 339 "/usr/include/stdio.h" 3
extern "C" int printf(const char *__restrict__, ...);
# 341 "/usr/include/stdio.h" 3
extern "C" int sprintf(char *__restrict__, const char *__restrict__, ...) throw();
# 348 "/usr/include/stdio.h" 3
extern "C" int vfprintf(FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 354 "/usr/include/stdio.h" 3
extern "C" int vprintf(const char *__restrict__, __gnuc_va_list);
# 356 "/usr/include/stdio.h" 3
extern "C" int vsprintf(char *__restrict__, const char *__restrict__, __gnuc_va_list) throw();
# 363 "/usr/include/stdio.h" 3
extern "C" int snprintf(char *__restrict__, size_t, const char *__restrict__, ...) throw();
# 367 "/usr/include/stdio.h" 3
extern "C" int vsnprintf(char *__restrict__, size_t, const char *__restrict__, __gnuc_va_list) throw();
# 376 "/usr/include/stdio.h" 3
extern "C" int vasprintf(char **__restrict__, const char *__restrict__, __gnuc_va_list) throw();
# 379 "/usr/include/stdio.h" 3
extern "C" int __asprintf(char **__restrict__, const char *__restrict__, ...) throw();
# 382 "/usr/include/stdio.h" 3
extern "C" int asprintf(char **__restrict__, const char *__restrict__, ...) throw();
# 394 "/usr/include/stdio.h" 3
extern "C" int vdprintf(int, const char *__restrict__, __gnuc_va_list);
# 397 "/usr/include/stdio.h" 3
extern "C" int dprintf(int, const char *__restrict__, ...);
# 407 "/usr/include/stdio.h" 3
extern "C" int fscanf(FILE *__restrict__, const char *__restrict__, ...);
# 413 "/usr/include/stdio.h" 3
extern "C" int scanf(const char *__restrict__, ...);
# 415 "/usr/include/stdio.h" 3
extern "C" int sscanf(const char *__restrict__, const char *__restrict__, ...) throw();
# 453 "/usr/include/stdio.h" 3
extern "C" int vfscanf(FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 461 "/usr/include/stdio.h" 3
extern "C" int vscanf(const char *__restrict__, __gnuc_va_list);
# 465 "/usr/include/stdio.h" 3
extern "C" int vsscanf(const char *__restrict__, const char *__restrict__, __gnuc_va_list) throw();
# 513 "/usr/include/stdio.h" 3
extern "C" int fgetc(FILE *);
# 514 "/usr/include/stdio.h" 3
extern "C" int getc(FILE *);
# 520 "/usr/include/stdio.h" 3
extern "C" int getchar();
# 532 "/usr/include/stdio.h" 3
extern "C" int getc_unlocked(FILE *);
# 533 "/usr/include/stdio.h" 3
extern "C" int getchar_unlocked();
# 543 "/usr/include/stdio.h" 3
extern "C" int fgetc_unlocked(FILE *);
# 555 "/usr/include/stdio.h" 3
extern "C" int fputc(int, FILE *);
# 556 "/usr/include/stdio.h" 3
extern "C" int putc(int, FILE *);
# 562 "/usr/include/stdio.h" 3
extern "C" int putchar(int);
# 576 "/usr/include/stdio.h" 3
extern "C" int fputc_unlocked(int, FILE *);
# 584 "/usr/include/stdio.h" 3
extern "C" int putc_unlocked(int, FILE *);
# 585 "/usr/include/stdio.h" 3
extern "C" int putchar_unlocked(int);
# 592 "/usr/include/stdio.h" 3
extern "C" int getw(FILE *);
# 595 "/usr/include/stdio.h" 3
extern "C" int putw(int, FILE *);
# 604 "/usr/include/stdio.h" 3
extern "C" char *fgets(char *__restrict__, int, FILE *__restrict__);
# 612 "/usr/include/stdio.h" 3
extern "C" char *gets(char *);
# 622 "/usr/include/stdio.h" 3
extern "C" char *fgets_unlocked(char *__restrict__, int, FILE *__restrict__);
# 638 "/usr/include/stdio.h" 3
extern "C" __ssize_t __getdelim(char **__restrict__, size_t *__restrict__, int, FILE *__restrict__);
# 641 "/usr/include/stdio.h" 3
extern "C" __ssize_t getdelim(char **__restrict__, size_t *__restrict__, int, FILE *__restrict__);
# 651 "/usr/include/stdio.h" 3
extern "C" __ssize_t getline(char **__restrict__, size_t *__restrict__, FILE *__restrict__);
# 662 "/usr/include/stdio.h" 3
extern "C" int fputs(const char *__restrict__, FILE *__restrict__);
# 668 "/usr/include/stdio.h" 3
extern "C" int puts(const char *);
# 675 "/usr/include/stdio.h" 3
extern "C" int ungetc(int, FILE *);
# 682 "/usr/include/stdio.h" 3
extern "C" size_t fread(void *__restrict__, size_t, size_t, FILE *__restrict__);
# 688 "/usr/include/stdio.h" 3
extern "C" size_t fwrite(const void *__restrict__, size_t, size_t, FILE *__restrict__);
# 699 "/usr/include/stdio.h" 3
extern "C" int fputs_unlocked(const char *__restrict__, FILE *__restrict__);
# 710 "/usr/include/stdio.h" 3
extern "C" size_t fread_unlocked(void *__restrict__, size_t, size_t, FILE *__restrict__);
# 712 "/usr/include/stdio.h" 3
extern "C" size_t fwrite_unlocked(const void *__restrict__, size_t, size_t, FILE *__restrict__);
# 722 "/usr/include/stdio.h" 3
extern "C" int fseek(FILE *, long, int);
# 727 "/usr/include/stdio.h" 3
extern "C" long ftell(FILE *);
# 732 "/usr/include/stdio.h" 3
extern "C" void rewind(FILE *);
# 746 "/usr/include/stdio.h" 3
extern "C" int fseeko(FILE *, __off_t, int);
# 751 "/usr/include/stdio.h" 3
extern "C" __off_t ftello(FILE *);
# 771 "/usr/include/stdio.h" 3
extern "C" int fgetpos(FILE *__restrict__, fpos_t *__restrict__);
# 776 "/usr/include/stdio.h" 3
extern "C" int fsetpos(FILE *, const fpos_t *);
# 791 "/usr/include/stdio.h" 3
extern "C" int fseeko64(FILE *, __off64_t, int);
# 792 "/usr/include/stdio.h" 3
extern "C" __off64_t ftello64(FILE *);
# 793 "/usr/include/stdio.h" 3
extern "C" int fgetpos64(FILE *__restrict__, fpos64_t *__restrict__);
# 794 "/usr/include/stdio.h" 3
extern "C" int fsetpos64(FILE *, const fpos64_t *);
# 799 "/usr/include/stdio.h" 3
extern "C" void clearerr(FILE *) throw();
# 801 "/usr/include/stdio.h" 3
extern "C" int feof(FILE *) throw();
# 803 "/usr/include/stdio.h" 3
extern "C" int ferror(FILE *) throw();
# 808 "/usr/include/stdio.h" 3
extern "C" void clearerr_unlocked(FILE *) throw();
# 809 "/usr/include/stdio.h" 3
extern "C" int feof_unlocked(FILE *) throw();
# 810 "/usr/include/stdio.h" 3
extern "C" int ferror_unlocked(FILE *) throw();
# 819 "/usr/include/stdio.h" 3
extern "C" void perror(const char *);
# 27 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int sys_nerr; }
# 28 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const sys_errlist[]; }
# 31 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int _sys_nerr; }
# 32 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const _sys_errlist[]; }
# 831 "/usr/include/stdio.h" 3
extern "C" int fileno(FILE *) throw();
# 836 "/usr/include/stdio.h" 3
extern "C" int fileno_unlocked(FILE *) throw();
# 846 "/usr/include/stdio.h" 3
extern "C" FILE *popen(const char *, const char *);
# 852 "/usr/include/stdio.h" 3
extern "C" int pclose(FILE *);
# 858 "/usr/include/stdio.h" 3
extern "C" char *ctermid(char *) throw();
# 864 "/usr/include/stdio.h" 3
extern "C" char *cuserid(char *);
# 869 "/usr/include/stdio.h" 3
struct obstack;
# 872 "/usr/include/stdio.h" 3
extern "C" int obstack_printf(obstack *__restrict__, const char *__restrict__, ...) throw();
# 875 "/usr/include/stdio.h" 3
extern "C" int obstack_vprintf(obstack *__restrict__, const char *__restrict__, __gnuc_va_list) throw();
# 886 "/usr/include/stdio.h" 3
extern "C" void flockfile(FILE *) throw();
# 890 "/usr/include/stdio.h" 3
extern "C" int ftrylockfile(FILE *) throw();
# 893 "/usr/include/stdio.h" 3
extern "C" void funlockfile(FILE *) throw();
# 62 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef unsigned CUdeviceptr; }
# 64 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef int CUdevice; }
# 65 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUctx_st *CUcontext; }
# 66 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUmod_st *CUmodule; }
# 67 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUfunc_st *CUfunction; }
# 68 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUarray_st *CUarray; }
# 69 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUtexref_st *CUtexref; }
# 70 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUsurfref_st *CUsurfref; }
# 71 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef CUevent_st *CUevent; }
# 72 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef CUstream_st *CUstream; }
# 73 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUgraphicsResource_st *CUgraphicsResource; }
# 77 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 75 "/usr/local/cuda/bin/../include/cuda.h"
struct CUuuid_st {
# 76 "/usr/local/cuda/bin/../include/cuda.h"
char bytes[16];
# 77 "/usr/local/cuda/bin/../include/cuda.h"
} CUuuid; }
# 97 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 88 "/usr/local/cuda/bin/../include/cuda.h"
enum CUctx_flags_enum {
# 89 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_AUTO,
# 90 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_SPIN,
# 91 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_YIELD,
# 92 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_MASK,
# 93 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_BLOCKING_SYNC,
# 94 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_MAP_HOST = 8,
# 95 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 96 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 97 "/usr/local/cuda/bin/../include/cuda.h"
} CUctx_flags; }
# 105 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 102 "/usr/local/cuda/bin/../include/cuda.h"
enum CUevent_flags_enum {
# 103 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_DEFAULT,
# 104 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_BLOCKING_SYNC
# 105 "/usr/local/cuda/bin/../include/cuda.h"
} CUevent_flags; }
# 119 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 110 "/usr/local/cuda/bin/../include/cuda.h"
enum CUarray_format_enum {
# 111 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 112 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 113 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 114 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 115 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 116 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 117 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 118 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 119 "/usr/local/cuda/bin/../include/cuda.h"
} CUarray_format; }
# 128 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 124 "/usr/local/cuda/bin/../include/cuda.h"
enum CUaddress_mode_enum {
# 125 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 126 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 127 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR
# 128 "/usr/local/cuda/bin/../include/cuda.h"
} CUaddress_mode; }
# 136 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 133 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfilter_mode_enum {
# 134 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 135 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 136 "/usr/local/cuda/bin/../include/cuda.h"
} CUfilter_mode; }
# 177 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 141 "/usr/local/cuda/bin/../include/cuda.h"
enum CUdevice_attribute_enum {
# 142 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 143 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 144 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 145 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 146 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 147 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 148 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 149 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 150 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 151 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 152 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 153 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 154 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 155 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 156 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 157 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 159 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 160 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 161 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 162 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 163 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 164 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 165 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 166 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 167 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 168 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 169 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 170 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 171 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH,
# 172 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 173 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 174 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 175 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 176 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED
# 177 "/usr/local/cuda/bin/../include/cuda.h"
} CUdevice_attribute; }
# 193 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 182 "/usr/local/cuda/bin/../include/cuda.h"
struct CUdevprop_st {
# 183 "/usr/local/cuda/bin/../include/cuda.h"
int maxThreadsPerBlock;
# 184 "/usr/local/cuda/bin/../include/cuda.h"
int maxThreadsDim[3];
# 185 "/usr/local/cuda/bin/../include/cuda.h"
int maxGridSize[3];
# 186 "/usr/local/cuda/bin/../include/cuda.h"
int sharedMemPerBlock;
# 187 "/usr/local/cuda/bin/../include/cuda.h"
int totalConstantMemory;
# 188 "/usr/local/cuda/bin/../include/cuda.h"
int SIMDWidth;
# 189 "/usr/local/cuda/bin/../include/cuda.h"
int memPitch;
# 190 "/usr/local/cuda/bin/../include/cuda.h"
int regsPerBlock;
# 191 "/usr/local/cuda/bin/../include/cuda.h"
int clockRate;
# 192 "/usr/local/cuda/bin/../include/cuda.h"
int textureAlign;
# 193 "/usr/local/cuda/bin/../include/cuda.h"
} CUdevprop; }
# 240 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 198 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfunction_attribute_enum {
# 204 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 211 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 217 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 222 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 227 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 232 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 237 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 239 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 240 "/usr/local/cuda/bin/../include/cuda.h"
} CUfunction_attribute; }
# 249 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 245 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfunc_cache_enum {
# 246 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 247 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 248 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_L1
# 249 "/usr/local/cuda/bin/../include/cuda.h"
} CUfunc_cache; }
# 258 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 254 "/usr/local/cuda/bin/../include/cuda.h"
enum CUmemorytype_enum {
# 255 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 256 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 257 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_ARRAY
# 258 "/usr/local/cuda/bin/../include/cuda.h"
} CUmemorytype; }
# 267 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 263 "/usr/local/cuda/bin/../include/cuda.h"
enum CUcomputemode_enum {
# 264 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 265 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE,
# 266 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_PROHIBITED
# 267 "/usr/local/cuda/bin/../include/cuda.h"
} CUcomputemode; }
# 359 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 272 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_option_enum {
# 278 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 291 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 298 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_WALL_TIME,
# 306 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 314 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 322 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 330 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 337 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 344 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 350 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_TARGET,
# 357 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_FALLBACK_STRATEGY
# 359 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_option; }
# 371 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 364 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_target_enum {
# 366 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_10,
# 367 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_11,
# 368 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_12,
# 369 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_13,
# 370 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_20
# 371 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_target; }
# 384 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 376 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_fallback_enum {
# 379 "/usr/local/cuda/bin/../include/cuda.h"
CU_PREFER_PTX,
# 382 "/usr/local/cuda/bin/../include/cuda.h"
CU_PREFER_BINARY
# 384 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_fallback; }
# 391 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 389 "/usr/local/cuda/bin/../include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 390 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE
# 391 "/usr/local/cuda/bin/../include/cuda.h"
} CUgraphicsRegisterFlags; }
# 400 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 396 "/usr/local/cuda/bin/../include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 397 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 398 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 399 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 400 "/usr/local/cuda/bin/../include/cuda.h"
} CUgraphicsMapResourceFlags; }
# 412 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 405 "/usr/local/cuda/bin/../include/cuda.h"
enum CUarray_cubemap_face_enum {
# 406 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 407 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 408 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 409 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 410 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 411 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 412 "/usr/local/cuda/bin/../include/cuda.h"
} CUarray_cubemap_face; }
# 420 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 417 "/usr/local/cuda/bin/../include/cuda.h"
enum CUlimit_enum {
# 418 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 419 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE
# 420 "/usr/local/cuda/bin/../include/cuda.h"
} CUlimit; }
# 477 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 431 "/usr/local/cuda/bin/../include/cuda.h"
enum cudaError_enum {
# 433 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_SUCCESS,
# 434 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 435 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 436 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 437 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 439 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 440 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 442 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 443 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 444 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 445 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 446 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 447 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 448 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 449 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 450 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 451 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 452 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 453 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 454 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 455 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 457 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 458 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 459 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 460 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 462 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 464 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 466 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 468 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED = 700,
# 469 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 470 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 471 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 473 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_POINTER_IS_64BIT = 800,
# 474 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_SIZE_IS_64BIT,
# 476 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 477 "/usr/local/cuda/bin/../include/cuda.h"
} CUresult; }
# 523 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 503 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 505 "/usr/local/cuda/bin/../include/cuda.h"
unsigned srcXInBytes,
# 506 "/usr/local/cuda/bin/../include/cuda.h"
srcY;
# 507 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 508 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 509 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 510 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 511 "/usr/local/cuda/bin/../include/cuda.h"
unsigned srcPitch;
# 513 "/usr/local/cuda/bin/../include/cuda.h"
unsigned dstXInBytes,
# 514 "/usr/local/cuda/bin/../include/cuda.h"
dstY;
# 515 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 516 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 517 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 518 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 519 "/usr/local/cuda/bin/../include/cuda.h"
unsigned dstPitch;
# 521 "/usr/local/cuda/bin/../include/cuda.h"
unsigned WidthInBytes;
# 522 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Height;
# 523 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY2D; }
# 557 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 528 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 530 "/usr/local/cuda/bin/../include/cuda.h"
unsigned srcXInBytes,
# 531 "/usr/local/cuda/bin/../include/cuda.h"
srcY,
# 532 "/usr/local/cuda/bin/../include/cuda.h"
srcZ;
# 533 "/usr/local/cuda/bin/../include/cuda.h"
unsigned srcLOD;
# 534 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 535 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 536 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 537 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 538 "/usr/local/cuda/bin/../include/cuda.h"
void *reserved0;
# 539 "/usr/local/cuda/bin/../include/cuda.h"
unsigned srcPitch;
# 540 "/usr/local/cuda/bin/../include/cuda.h"
unsigned srcHeight;
# 542 "/usr/local/cuda/bin/../include/cuda.h"
unsigned dstXInBytes,
# 543 "/usr/local/cuda/bin/../include/cuda.h"
dstY,
# 544 "/usr/local/cuda/bin/../include/cuda.h"
dstZ;
# 545 "/usr/local/cuda/bin/../include/cuda.h"
unsigned dstLOD;
# 546 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 547 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 548 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 549 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 550 "/usr/local/cuda/bin/../include/cuda.h"
void *reserved1;
# 551 "/usr/local/cuda/bin/../include/cuda.h"
unsigned dstPitch;
# 552 "/usr/local/cuda/bin/../include/cuda.h"
unsigned dstHeight;
# 554 "/usr/local/cuda/bin/../include/cuda.h"
unsigned WidthInBytes;
# 555 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Height;
# 556 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Depth;
# 557 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY3D; }
# 570 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 563 "/usr/local/cuda/bin/../include/cuda.h"
struct {
# 564 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Width;
# 565 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Height;
# 567 "/usr/local/cuda/bin/../include/cuda.h"
CUarray_format Format;
# 569 "/usr/local/cuda/bin/../include/cuda.h"
unsigned NumChannels;
# 570 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR; }
# 586 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 576 "/usr/local/cuda/bin/../include/cuda.h"
struct {
# 577 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Width;
# 578 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Height;
# 579 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Depth;
# 581 "/usr/local/cuda/bin/../include/cuda.h"
CUarray_format Format;
# 583 "/usr/local/cuda/bin/../include/cuda.h"
unsigned NumChannels;
# 585 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Flags;
# 586 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR; }
# 634 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuInit(unsigned);
# 639 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDriverGetVersion(int *);
# 647 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGet(CUdevice *, int);
# 648 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetCount(int *);
# 649 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetName(char *, int, CUdevice);
# 650 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceComputeCapability(int *, int *, CUdevice);
# 651 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceTotalMem(unsigned *, CUdevice);
# 652 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetProperties(CUdevprop *, CUdevice);
# 653 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetAttribute(int *, CUdevice_attribute, CUdevice);
# 661 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxCreate(CUcontext *, unsigned, CUdevice);
# 662 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDestroy(CUcontext);
# 663 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxAttach(CUcontext *, unsigned);
# 664 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDetach(CUcontext);
# 665 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxPushCurrent(CUcontext);
# 666 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxPopCurrent(CUcontext *);
# 667 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetDevice(CUdevice *);
# 668 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSynchronize();
# 677 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoad(CUmodule *, const char *);
# 678 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadData(CUmodule *, const void *);
# 679 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadDataEx(CUmodule *, const void *, unsigned, CUjit_option *, void **);
# 680 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadFatBinary(CUmodule *, const void *);
# 681 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleUnload(CUmodule);
# 682 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetFunction(CUfunction *, CUmodule, const char *);
# 683 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetGlobal(CUdeviceptr *, unsigned *, CUmodule, const char *);
# 684 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetTexRef(CUtexref *, CUmodule, const char *);
# 685 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetSurfRef(CUsurfref *, CUmodule, const char *);
# 693 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemGetInfo(unsigned *, unsigned *);
# 695 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAlloc(CUdeviceptr *, unsigned);
# 696 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAllocPitch(CUdeviceptr *, unsigned *, unsigned, unsigned, unsigned);
# 704 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemFree(CUdeviceptr);
# 705 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemGetAddressRange(CUdeviceptr *, unsigned *, CUdeviceptr);
# 707 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAllocHost(void **, unsigned);
# 708 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemFreeHost(void *);
# 710 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostAlloc(void **, size_t, unsigned);
# 712 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostGetDevicePointer(CUdeviceptr *, void *, unsigned);
# 713 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostGetFlags(unsigned *, void *);
# 726 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoD(CUdeviceptr, const void *, unsigned);
# 727 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoH(void *, CUdeviceptr, unsigned);
# 730 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoD(CUdeviceptr, CUdeviceptr, unsigned);
# 733 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoA(CUarray, unsigned, CUdeviceptr, unsigned);
# 734 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoD(CUdeviceptr, CUarray, unsigned, unsigned);
# 737 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoA(CUarray, unsigned, const void *, unsigned);
# 738 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoH(void *, CUarray, unsigned, unsigned);
# 741 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoA(CUarray, unsigned, CUarray, unsigned, unsigned);
# 745 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2D(const CUDA_MEMCPY2D *);
# 746 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2DUnaligned(const CUDA_MEMCPY2D *);
# 750 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3D(const CUDA_MEMCPY3D *);
# 765 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoDAsync(CUdeviceptr, const void *, unsigned, CUstream);
# 767 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoHAsync(void *, CUdeviceptr, unsigned, CUstream);
# 771 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoDAsync(CUdeviceptr, CUdeviceptr, unsigned, CUstream);
# 775 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoAAsync(CUarray, unsigned, const void *, unsigned, CUstream);
# 777 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoHAsync(void *, CUarray, unsigned, unsigned, CUstream);
# 781 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2DAsync(const CUDA_MEMCPY2D *, CUstream);
# 784 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3DAsync(const CUDA_MEMCPY3D *, CUstream);
# 791 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD8(CUdeviceptr, unsigned char, unsigned);
# 792 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD16(CUdeviceptr, unsigned short, unsigned);
# 793 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD32(CUdeviceptr, unsigned, unsigned);
# 795 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D8(CUdeviceptr, unsigned, unsigned char, unsigned, unsigned);
# 796 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D16(CUdeviceptr, unsigned, unsigned short, unsigned, unsigned);
# 797 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D32(CUdeviceptr, unsigned, unsigned, unsigned, unsigned);
# 806 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetBlockShape(CUfunction, int, int, int);
# 807 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetSharedSize(CUfunction, unsigned);
# 808 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncGetAttribute(int *, CUfunction_attribute, CUfunction);
# 809 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetCacheConfig(CUfunction, CUfunc_cache);
# 817 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayCreate(CUarray *, const CUDA_ARRAY_DESCRIPTOR *);
# 818 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayGetDescriptor(CUDA_ARRAY_DESCRIPTOR *, CUarray);
# 819 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayDestroy(CUarray);
# 821 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArray3DCreate(CUarray *, const CUDA_ARRAY3D_DESCRIPTOR *);
# 822 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArray3DGetDescriptor(CUDA_ARRAY3D_DESCRIPTOR *, CUarray);
# 830 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefCreate(CUtexref *);
# 831 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefDestroy(CUtexref);
# 833 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetArray(CUtexref, CUarray, unsigned);
# 834 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddress(unsigned *, CUtexref, CUdeviceptr, unsigned);
# 835 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddress2D(CUtexref, const CUDA_ARRAY_DESCRIPTOR *, CUdeviceptr, unsigned);
# 836 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFormat(CUtexref, CUarray_format, int);
# 837 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddressMode(CUtexref, int, CUaddress_mode);
# 838 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFilterMode(CUtexref, CUfilter_mode);
# 839 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFlags(CUtexref, unsigned);
# 841 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetAddress(CUdeviceptr *, CUtexref);
# 842 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetArray(CUarray *, CUtexref);
# 843 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetAddressMode(CUaddress_mode *, CUtexref, int);
# 844 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFilterMode(CUfilter_mode *, CUtexref);
# 845 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFormat(CUarray_format *, int *, CUtexref);
# 846 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFlags(unsigned *, CUtexref);
# 854 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuSurfRefSetArray(CUsurfref, CUarray, unsigned);
# 855 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuSurfRefGetArray(CUarray *, CUsurfref);
# 863 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetSize(CUfunction, unsigned);
# 864 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSeti(CUfunction, int, unsigned);
# 865 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetf(CUfunction, int, float);
# 866 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetv(CUfunction, int, void *, unsigned);
# 867 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetTexRef(CUfunction, int, CUtexref);
# 876 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunch(CUfunction);
# 877 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchGrid(CUfunction, int, int);
# 878 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchGridAsync(CUfunction, int, int, CUstream);
# 885 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventCreate(CUevent *, unsigned);
# 886 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventRecord(CUevent, CUstream);
# 887 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventQuery(CUevent);
# 888 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventSynchronize(CUevent);
# 889 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventDestroy(CUevent);
# 890 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventElapsedTime(float *, CUevent, CUevent);
# 897 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamCreate(CUstream *, unsigned);
# 898 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamQuery(CUstream);
# 899 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamSynchronize(CUstream);
# 900 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamDestroy(CUstream);
# 907 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsUnregisterResource(CUgraphicsResource);
# 908 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsSubResourceGetMappedArray(CUarray *, CUgraphicsResource, unsigned, unsigned);
# 909 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsResourceGetMappedPointer(CUdeviceptr *, unsigned *, CUgraphicsResource);
# 910 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource, unsigned);
# 911 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsMapResources(unsigned, CUgraphicsResource *, CUstream);
# 912 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsUnmapResources(unsigned, CUgraphicsResource *, CUstream);
# 919 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGetExportTable(const void **, const CUuuid *);
# 927 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetLimit(CUlimit, size_t);
# 928 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetLimit(size_t *, CUlimit);
# 64 "../../sdk/cutil.h"
enum CUTBoolean {
# 66 "../../sdk/cutil.h"
CUTFalse,
# 67 "../../sdk/cutil.h"
CUTTrue
# 68 "../../sdk/cutil.h"
};
# 76 "../../sdk/cutil.h"
extern "C" void cutFree(void *);
# 94 "../../sdk/cutil.h"
extern "C" void cutCheckBankAccess(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned, const char *, const int, const char *, const int);
# 107 "../../sdk/cutil.h"
extern "C" char *cutFindFilePath(const char *, const char *);
# 122 "../../sdk/cutil.h"
extern "C" CUTBoolean cutReadFilef(const char *, float **, unsigned *, bool = false);
# 138 "../../sdk/cutil.h"
extern "C" CUTBoolean cutReadFiled(const char *, double **, unsigned *, bool = false);
# 154 "../../sdk/cutil.h"
extern "C" CUTBoolean cutReadFilei(const char *, int **, unsigned *, bool = false);
# 169 "../../sdk/cutil.h"
extern "C" CUTBoolean cutReadFileui(const char *, unsigned **, unsigned *, bool = false);
# 185 "../../sdk/cutil.h"
extern "C" CUTBoolean cutReadFileb(const char *, char **, unsigned *, bool = false);
# 201 "../../sdk/cutil.h"
extern "C" CUTBoolean cutReadFileub(const char *, unsigned char **, unsigned *, bool = false);
# 215 "../../sdk/cutil.h"
extern "C" CUTBoolean cutWriteFilef(const char *, const float *, unsigned, const float, bool = false);
# 229 "../../sdk/cutil.h"
extern "C" CUTBoolean cutWriteFiled(const char *, const float *, unsigned, const double, bool = false);
# 241 "../../sdk/cutil.h"
extern "C" CUTBoolean cutWriteFilei(const char *, const int *, unsigned, bool = false);
# 253 "../../sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileui(const char *, const unsigned *, unsigned, bool = false);
# 265 "../../sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileb(const char *, const char *, unsigned, bool = false);
# 277 "../../sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileub(const char *, const unsigned char *, unsigned, bool = false);
# 293 "../../sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMub(const char *, unsigned char **, unsigned *, unsigned *);
# 306 "../../sdk/cutil.h"
extern "C" CUTBoolean cutLoadPPMub(const char *, unsigned char **, unsigned *, unsigned *);
# 320 "../../sdk/cutil.h"
extern "C" CUTBoolean cutLoadPPM4ub(const char *, unsigned char **, unsigned *, unsigned *);
# 336 "../../sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMi(const char *, unsigned **, unsigned *, unsigned *);
# 352 "../../sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMs(const char *, unsigned short **, unsigned *, unsigned *);
# 367 "../../sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMf(const char *, float **, unsigned *, unsigned *);
# 379 "../../sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMub(const char *, unsigned char *, unsigned, unsigned);
# 391 "../../sdk/cutil.h"
extern "C" CUTBoolean cutSavePPMub(const char *, unsigned char *, unsigned, unsigned);
# 404 "../../sdk/cutil.h"
extern "C" CUTBoolean cutSavePPM4ub(const char *, unsigned char *, unsigned, unsigned);
# 416 "../../sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMi(const char *, unsigned *, unsigned, unsigned);
# 428 "../../sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMs(const char *, unsigned short *, unsigned, unsigned);
# 440 "../../sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMf(const char *, float *, unsigned, unsigned);
# 461 "../../sdk/cutil.h"
extern "C" CUTBoolean cutCheckCmdLineFlag(const int, const char **, const char *);
# 475 "../../sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumenti(const int, const char **, const char *, int *);
# 489 "../../sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentf(const int, const char **, const char *, float *);
# 503 "../../sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentstr(const int, const char **, const char *, char **);
# 518 "../../sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentListstr(const int, const char **, const char *, char **, unsigned *);
# 532 "../../sdk/cutil.h"
extern "C" CUTBoolean cutCheckCondition(int, const char *, const int);
# 544 "../../sdk/cutil.h"
extern "C" CUTBoolean cutComparef(const float *, const float *, const unsigned);
# 557 "../../sdk/cutil.h"
extern "C" CUTBoolean cutComparei(const int *, const int *, const unsigned);
# 571 "../../sdk/cutil.h"
extern "C" CUTBoolean cutCompareuit(const unsigned *, const unsigned *, const unsigned, const float, const float);
# 584 "../../sdk/cutil.h"
extern "C" CUTBoolean cutCompareub(const unsigned char *, const unsigned char *, const unsigned);
# 599 "../../sdk/cutil.h"
extern "C" CUTBoolean cutCompareubt(const unsigned char *, const unsigned char *, const unsigned, const float, const float);
# 613 "../../sdk/cutil.h"
extern "C" CUTBoolean cutCompareube(const unsigned char *, const unsigned char *, const unsigned, const float);
# 627 "../../sdk/cutil.h"
extern "C" CUTBoolean cutComparefe(const float *, const float *, const unsigned, const float);
# 642 "../../sdk/cutil.h"
extern "C" CUTBoolean cutComparefet(const float *, const float *, const unsigned, const float, const float);
# 657 "../../sdk/cutil.h"
extern "C" CUTBoolean cutCompareL2fe(const float *, const float *, const unsigned, const float);
# 672 "../../sdk/cutil.h"
extern "C" CUTBoolean cutComparePPM(const char *, const char *, const float, const float, bool = false);
# 685 "../../sdk/cutil.h"
extern "C" CUTBoolean cutCreateTimer(unsigned *);
# 694 "../../sdk/cutil.h"
extern "C" CUTBoolean cutDeleteTimer(unsigned);
# 702 "../../sdk/cutil.h"
extern "C" CUTBoolean cutStartTimer(const unsigned);
# 710 "../../sdk/cutil.h"
extern "C" CUTBoolean cutStopTimer(const unsigned);
# 718 "../../sdk/cutil.h"
extern "C" CUTBoolean cutResetTimer(const unsigned);
# 727 "../../sdk/cutil.h"
extern "C" float cutGetTimerValue(const unsigned);
# 738 "../../sdk/cutil.h"
extern "C" float cutGetAverageTimerValue(const unsigned);
# 19 "../../sdk/cutil_inline_bankchecker.h"
inline void __cutilBankChecker(unsigned tidx, unsigned tidy, unsigned tidz, unsigned
# 20 "../../sdk/cutil_inline_bankchecker.h"
bdimx, unsigned bdimy, unsigned bdimz, char *
# 21 "../../sdk/cutil_inline_bankchecker.h"
aname, int index, char *file, int line)
# 22 "../../sdk/cutil_inline_bankchecker.h"
{
# 23 "../../sdk/cutil_inline_bankchecker.h"
cutCheckBankAccess(tidx, tidy, tidz, bdimx, bdimy, bdimz, file, line, aname, index);
# 24 "../../sdk/cutil_inline_bankchecker.h"
}
# 162 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { typedef float2 cuFloatComplex; }
# 164 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline float cuCrealf(cuFloatComplex x)
# 165 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 166 "/usr/local/cuda/bin/../include/cuComplex.h"
return x.x;
# 167 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 169 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline float cuCimagf(cuFloatComplex x)
# 170 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 171 "/usr/local/cuda/bin/../include/cuComplex.h"
return x.y;
# 172 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 174 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex make_cuFloatComplex(float
# 175 "/usr/local/cuda/bin/../include/cuComplex.h"
r, float i)
# 176 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 177 "/usr/local/cuda/bin/../include/cuComplex.h"
cuFloatComplex res;
# 178 "/usr/local/cuda/bin/../include/cuComplex.h"
(res.x) = r;
# 179 "/usr/local/cuda/bin/../include/cuComplex.h"
(res.y) = i;
# 180 "/usr/local/cuda/bin/../include/cuComplex.h"
return res;
# 181 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 183 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuConjf(cuFloatComplex x)
# 184 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 185 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x), -cuCimagf(x));
# 186 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 187 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCaddf(cuFloatComplex x, cuFloatComplex
# 188 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 189 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 190 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) + cuCrealf(y), cuCimagf(x) + cuCimagf(y));
# 192 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 194 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCsubf(cuFloatComplex x, cuFloatComplex
# 195 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 196 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 197 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) - cuCrealf(y), cuCimagf(x) - cuCimagf(y));
# 199 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 206 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCmulf(cuFloatComplex x, cuFloatComplex
# 207 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 208 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 209 "/usr/local/cuda/bin/../include/cuComplex.h"
cuFloatComplex prod;
# 210 "/usr/local/cuda/bin/../include/cuComplex.h"
prod = make_cuFloatComplex((cuCrealf(x) * cuCrealf(y)) - (cuCimagf(x) * cuCimagf(y)), (cuCrealf(x) * cuCimagf(y)) + (cuCimagf(x) * cuCrealf(y)));
# 214 "/usr/local/cuda/bin/../include/cuComplex.h"
return prod;
# 215 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 222 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCdivf(cuFloatComplex x, cuFloatComplex
# 223 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 224 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 225 "/usr/local/cuda/bin/../include/cuComplex.h"
cuFloatComplex quot;
# 226 "/usr/local/cuda/bin/../include/cuComplex.h"
float s = (fabsf(cuCrealf(y)) + fabsf(cuCimagf(y)));
# 227 "/usr/local/cuda/bin/../include/cuComplex.h"
float oos = ((1.0F) / s);
# 228 "/usr/local/cuda/bin/../include/cuComplex.h"
float ars = (cuCrealf(x) * oos);
# 229 "/usr/local/cuda/bin/../include/cuComplex.h"
float ais = (cuCimagf(x) * oos);
# 230 "/usr/local/cuda/bin/../include/cuComplex.h"
float brs = (cuCrealf(y) * oos);
# 231 "/usr/local/cuda/bin/../include/cuComplex.h"
float bis = (cuCimagf(y) * oos);
# 232 "/usr/local/cuda/bin/../include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 233 "/usr/local/cuda/bin/../include/cuComplex.h"
oos = ((1.0F) / s);
# 234 "/usr/local/cuda/bin/../include/cuComplex.h"
quot = make_cuFloatComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 236 "/usr/local/cuda/bin/../include/cuComplex.h"
return quot;
# 237 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 247 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline float cuCabsf(cuFloatComplex x)
# 248 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 249 "/usr/local/cuda/bin/../include/cuComplex.h"
float a = cuCrealf(x);
# 250 "/usr/local/cuda/bin/../include/cuComplex.h"
float b = cuCimagf(x);
# 251 "/usr/local/cuda/bin/../include/cuComplex.h"
float v, w, t;
# 252 "/usr/local/cuda/bin/../include/cuComplex.h"
a = fabsf(a);
# 253 "/usr/local/cuda/bin/../include/cuComplex.h"
b = fabsf(b);
# 254 "/usr/local/cuda/bin/../include/cuComplex.h"
if (a > b) {
# 255 "/usr/local/cuda/bin/../include/cuComplex.h"
v = a;
# 256 "/usr/local/cuda/bin/../include/cuComplex.h"
w = b;
# 257 "/usr/local/cuda/bin/../include/cuComplex.h"
} else {
# 258 "/usr/local/cuda/bin/../include/cuComplex.h"
v = b;
# 259 "/usr/local/cuda/bin/../include/cuComplex.h"
w = a;
# 260 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 261 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (w / v);
# 262 "/usr/local/cuda/bin/../include/cuComplex.h"
t = ((1.0F) + (t * t));
# 263 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (v * sqrtf(t));
# 264 "/usr/local/cuda/bin/../include/cuComplex.h"
if (((v == (0.0F)) || (v > (3.402823466e+38F))) || (w > (3.402823466e+38F))) {
# 265 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (v + w);
# 266 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 267 "/usr/local/cuda/bin/../include/cuComplex.h"
return t;
# 268 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 271 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { typedef double2 cuDoubleComplex; }
# 273 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline double cuCreal(cuDoubleComplex x)
# 274 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 275 "/usr/local/cuda/bin/../include/cuComplex.h"
return x.x;
# 276 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 278 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline double cuCimag(cuDoubleComplex x)
# 279 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 280 "/usr/local/cuda/bin/../include/cuComplex.h"
return x.y;
# 281 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 283 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex make_cuDoubleComplex(double
# 284 "/usr/local/cuda/bin/../include/cuComplex.h"
r, double i)
# 285 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 286 "/usr/local/cuda/bin/../include/cuComplex.h"
cuDoubleComplex res;
# 287 "/usr/local/cuda/bin/../include/cuComplex.h"
(res.x) = r;
# 288 "/usr/local/cuda/bin/../include/cuComplex.h"
(res.y) = i;
# 289 "/usr/local/cuda/bin/../include/cuComplex.h"
return res;
# 290 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 292 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuConj(cuDoubleComplex x)
# 293 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 294 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x), -cuCimag(x));
# 295 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 297 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCadd(cuDoubleComplex x, cuDoubleComplex
# 298 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 299 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 300 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) + cuCreal(y), cuCimag(x) + cuCimag(y));
# 302 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 304 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCsub(cuDoubleComplex x, cuDoubleComplex
# 305 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 306 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 307 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) - cuCreal(y), cuCimag(x) - cuCimag(y));
# 309 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 316 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCmul(cuDoubleComplex x, cuDoubleComplex
# 317 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 318 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 319 "/usr/local/cuda/bin/../include/cuComplex.h"
cuDoubleComplex prod;
# 320 "/usr/local/cuda/bin/../include/cuComplex.h"
prod = make_cuDoubleComplex((cuCreal(x) * cuCreal(y)) - (cuCimag(x) * cuCimag(y)), (cuCreal(x) * cuCimag(y)) + (cuCimag(x) * cuCreal(y)));
# 324 "/usr/local/cuda/bin/../include/cuComplex.h"
return prod;
# 325 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 332 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCdiv(cuDoubleComplex x, cuDoubleComplex
# 333 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 334 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 335 "/usr/local/cuda/bin/../include/cuComplex.h"
cuDoubleComplex quot;
# 336 "/usr/local/cuda/bin/../include/cuComplex.h"
double s = (fabs(cuCreal(y)) + fabs(cuCimag(y)));
# 337 "/usr/local/cuda/bin/../include/cuComplex.h"
double oos = ((1.0) / s);
# 338 "/usr/local/cuda/bin/../include/cuComplex.h"
double ars = (cuCreal(x) * oos);
# 339 "/usr/local/cuda/bin/../include/cuComplex.h"
double ais = (cuCimag(x) * oos);
# 340 "/usr/local/cuda/bin/../include/cuComplex.h"
double brs = (cuCreal(y) * oos);
# 341 "/usr/local/cuda/bin/../include/cuComplex.h"
double bis = (cuCimag(y) * oos);
# 342 "/usr/local/cuda/bin/../include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 343 "/usr/local/cuda/bin/../include/cuComplex.h"
oos = ((1.0) / s);
# 344 "/usr/local/cuda/bin/../include/cuComplex.h"
quot = make_cuDoubleComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 346 "/usr/local/cuda/bin/../include/cuComplex.h"
return quot;
# 347 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 355 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline double cuCabs(cuDoubleComplex x)
# 356 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 357 "/usr/local/cuda/bin/../include/cuComplex.h"
double a = cuCreal(x);
# 358 "/usr/local/cuda/bin/../include/cuComplex.h"
double b = cuCimag(x);
# 359 "/usr/local/cuda/bin/../include/cuComplex.h"
double v, w, t;
# 360 "/usr/local/cuda/bin/../include/cuComplex.h"
a = fabs(a);
# 361 "/usr/local/cuda/bin/../include/cuComplex.h"
b = fabs(b);
# 362 "/usr/local/cuda/bin/../include/cuComplex.h"
if (a > b) {
# 363 "/usr/local/cuda/bin/../include/cuComplex.h"
v = a;
# 364 "/usr/local/cuda/bin/../include/cuComplex.h"
w = b;
# 365 "/usr/local/cuda/bin/../include/cuComplex.h"
} else {
# 366 "/usr/local/cuda/bin/../include/cuComplex.h"
v = b;
# 367 "/usr/local/cuda/bin/../include/cuComplex.h"
w = a;
# 368 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 369 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (w / v);
# 370 "/usr/local/cuda/bin/../include/cuComplex.h"
t = ((1.0) + (t * t));
# 371 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (v * sqrt(t));
# 372 "/usr/local/cuda/bin/../include/cuComplex.h"
if (((v == (0.0)) || (v > (1.797693134862315708e+308))) || (w > (1.797693134862315708e+308)))
# 373 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 374 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (v + w);
# 375 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 376 "/usr/local/cuda/bin/../include/cuComplex.h"
return t;
# 377 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 386 "/usr/local/cuda/bin/../include/cuComplex.h"
typedef cuFloatComplex cuComplex;
# 387 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuComplex make_cuComplex(float x, float
# 388 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 389 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 390 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex(x, y);
# 391 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 394 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuDoubleComplex cuComplexFloatToDouble(cuFloatComplex
# 395 "/usr/local/cuda/bin/../include/cuComplex.h"
c)
# 396 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 397 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex((double)cuCrealf(c), (double)cuCimagf(c));
# 398 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 400 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuFloatComplex cuComplexDoubleToFloat(cuDoubleComplex
# 401 "/usr/local/cuda/bin/../include/cuComplex.h"
c)
# 402 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 403 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex((float)cuCreal(c), (float)cuCimag(c));
# 404 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 407 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuComplex cuCfmaf(cuComplex x, cuComplex y, cuComplex d)
# 408 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 409 "/usr/local/cuda/bin/../include/cuComplex.h"
float real_res;
# 410 "/usr/local/cuda/bin/../include/cuComplex.h"
float imag_res;
# 412 "/usr/local/cuda/bin/../include/cuComplex.h"
real_res = ((cuCrealf(x) * cuCrealf(y)) + cuCrealf(d));
# 413 "/usr/local/cuda/bin/../include/cuComplex.h"
imag_res = ((cuCrealf(x) * cuCimagf(y)) + cuCimagf(d));
# 415 "/usr/local/cuda/bin/../include/cuComplex.h"
real_res = ((-(cuCimagf(x) * cuCimagf(y))) + real_res);
# 416 "/usr/local/cuda/bin/../include/cuComplex.h"
imag_res = ((cuCimagf(x) * cuCrealf(y)) + imag_res);
# 418 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuComplex(real_res, imag_res);
# 419 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 421 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuDoubleComplex cuCfma(cuDoubleComplex x, cuDoubleComplex y, cuDoubleComplex d)
# 422 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 423 "/usr/local/cuda/bin/../include/cuComplex.h"
double real_res;
# 424 "/usr/local/cuda/bin/../include/cuComplex.h"
double imag_res;
# 426 "/usr/local/cuda/bin/../include/cuComplex.h"
real_res = ((cuCreal(x) * cuCreal(y)) + cuCreal(d));
# 427 "/usr/local/cuda/bin/../include/cuComplex.h"
imag_res = ((cuCreal(x) * cuCimag(y)) + cuCimag(d));
# 429 "/usr/local/cuda/bin/../include/cuComplex.h"
real_res = ((-(cuCimag(x) * cuCimag(y))) + real_res);
# 430 "/usr/local/cuda/bin/../include/cuComplex.h"
imag_res = ((cuCimag(x) * cuCreal(y)) + imag_res);
# 432 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex(real_res, imag_res);
# 433 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 71 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef
# 61 "/usr/local/cuda/bin/../include/cufft.h"
enum cufftResult_t {
# 62 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_SUCCESS,
# 63 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INVALID_PLAN,
# 64 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_ALLOC_FAILED,
# 65 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INVALID_TYPE,
# 66 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INVALID_VALUE,
# 67 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INTERNAL_ERROR,
# 68 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_EXEC_FAILED,
# 69 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_SETUP_FAILED,
# 70 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INVALID_SIZE
# 71 "/usr/local/cuda/bin/../include/cufft.h"
} cufftResult; }
# 76 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef unsigned cufftHandle; }
# 80 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef float cufftReal; }
# 81 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef double cufftDoubleReal; }
# 86 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef cuComplex cufftComplex; }
# 87 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef cuDoubleComplex cufftDoubleComplex; }
# 101 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef
# 94 "/usr/local/cuda/bin/../include/cufft.h"
enum cufftType_t {
# 95 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_R2C = 42,
# 96 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_C2R = 44,
# 97 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_C2C = 41,
# 98 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_D2Z = 106,
# 99 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_Z2D = 108,
# 100 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_Z2Z = 105
# 101 "/usr/local/cuda/bin/../include/cufft.h"
} cufftType; }
# 130 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef
# 125 "/usr/local/cuda/bin/../include/cufft.h"
enum cufftCompatibility_t {
# 126 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_COMPATIBILITY_NORMAL,
# 127 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_PADDING,
# 128 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_C2R_ASYMMETRIC,
# 129 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_COMPATIBILITY_FFTW
# 130 "/usr/local/cuda/bin/../include/cufft.h"
} cufftCompatibility; }
# 133 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftPlan1d(cufftHandle *, int, cufftType, int);
# 138 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftPlan2d(cufftHandle *, int, int, cufftType);
# 142 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftPlan3d(cufftHandle *, int, int, int, cufftType);
# 146 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftPlanMany(cufftHandle *, int, int *, int *, int, int, int *, int, int, cufftType, int);
# 154 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftDestroy(cufftHandle);
# 156 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecC2C(cufftHandle, cufftComplex *, cufftComplex *, int);
# 161 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecR2C(cufftHandle, cufftReal *, cufftComplex *);
# 165 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecC2R(cufftHandle, cufftComplex *, cufftReal *);
# 169 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecZ2Z(cufftHandle, cufftDoubleComplex *, cufftDoubleComplex *, int);
# 174 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecD2Z(cufftHandle, cufftDoubleReal *, cufftDoubleComplex *);
# 178 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecZ2D(cufftHandle, cufftDoubleComplex *, cufftDoubleReal *);
# 182 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftSetStream(cufftHandle, cudaStream_t);
# 185 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftSetCompatibilityMode(cufftHandle, cufftCompatibility);
# 22 "../../sdk/cutil_inline_runtime.h"
inline void __cutilCondition(int val, char *file, int line)
# 23 "../../sdk/cutil_inline_runtime.h"
{
# 24 "../../sdk/cutil_inline_runtime.h"
if ((CUTFalse) == (cutCheckCondition(val, file, line))) {
# 25 "../../sdk/cutil_inline_runtime.h"
exit(1);
# 26 "../../sdk/cutil_inline_runtime.h"
}
# 27 "../../sdk/cutil_inline_runtime.h"
}
# 29 "../../sdk/cutil_inline_runtime.h"
inline void __cutilExit(int argc, char **argv)
# 30 "../../sdk/cutil_inline_runtime.h"
{
# 31 "../../sdk/cutil_inline_runtime.h"
if (!(cutCheckCmdLineFlag(argc, (const char **)argv, "noprompt"))) {
# 32 "../../sdk/cutil_inline_runtime.h"
printf("\nPress ENTER to exit...\n");
# 33 "../../sdk/cutil_inline_runtime.h"
fflush(stdout);
# 34 "../../sdk/cutil_inline_runtime.h"
fflush(stderr);
# 35 "../../sdk/cutil_inline_runtime.h"
getchar();
# 36 "../../sdk/cutil_inline_runtime.h"
}
# 37 "../../sdk/cutil_inline_runtime.h"
exit(0);
# 38 "../../sdk/cutil_inline_runtime.h"
}
# 41 "../../sdk/cutil_inline_runtime.h"
inline int cutGetMaxGflopsDeviceId()
# 42 "../../sdk/cutil_inline_runtime.h"
{
# 43 "../../sdk/cutil_inline_runtime.h"
int device_count = 0;
# 44 "../../sdk/cutil_inline_runtime.h"
cudaGetDeviceCount(&device_count);
# 46 "../../sdk/cutil_inline_runtime.h"
cudaDeviceProp device_properties;
# 47 "../../sdk/cutil_inline_runtime.h"
int max_gflops_device = 0;
# 48 "../../sdk/cutil_inline_runtime.h"
int max_gflops = 0;
# 50 "../../sdk/cutil_inline_runtime.h"
int current_device = 0;
# 51 "../../sdk/cutil_inline_runtime.h"
cudaGetDeviceProperties(&device_properties, current_device);
# 52 "../../sdk/cutil_inline_runtime.h"
max_gflops = ((device_properties.multiProcessorCount) * (device_properties.clockRate));
# 53 "../../sdk/cutil_inline_runtime.h"
++current_device;
# 55 "../../sdk/cutil_inline_runtime.h"
while (current_device < device_count)
# 56 "../../sdk/cutil_inline_runtime.h"
{
# 57 "../../sdk/cutil_inline_runtime.h"
cudaGetDeviceProperties(&device_properties, current_device);
# 58 "../../sdk/cutil_inline_runtime.h"
int gflops = ((device_properties.multiProcessorCount) * (device_properties.clockRate));
# 59 "../../sdk/cutil_inline_runtime.h"
if (gflops > max_gflops)
# 60 "../../sdk/cutil_inline_runtime.h"
{
# 61 "../../sdk/cutil_inline_runtime.h"
max_gflops = gflops;
# 62 "../../sdk/cutil_inline_runtime.h"
max_gflops_device = current_device;
# 63 "../../sdk/cutil_inline_runtime.h"
}
# 64 "../../sdk/cutil_inline_runtime.h"
++current_device;
# 65 "../../sdk/cutil_inline_runtime.h"
}
# 67 "../../sdk/cutil_inline_runtime.h"
return max_gflops_device;
# 68 "../../sdk/cutil_inline_runtime.h"
}
# 70 "../../sdk/cutil_inline_runtime.h"
inline void __cudaSafeCallNoSync(cudaError err, const char *file, const int line)
# 71 "../../sdk/cutil_inline_runtime.h"
{
# 72 "../../sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 73 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "cudaSafeCallNoSync() Runtime API error in file <%s>, line %i : %s.\n", file, line, cudaGetErrorString(err));
# 75 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 76 "../../sdk/cutil_inline_runtime.h"
}
# 77 "../../sdk/cutil_inline_runtime.h"
}
# 79 "../../sdk/cutil_inline_runtime.h"
inline void __cudaSafeCall(cudaError err, const char *file, const int line)
# 80 "../../sdk/cutil_inline_runtime.h"
{
# 81 "../../sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 82 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "cudaSafeCall() Runtime API error in file <%s>, line %i : %s.\n", file, line, cudaGetErrorString(err));
# 84 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 85 "../../sdk/cutil_inline_runtime.h"
}
# 86 "../../sdk/cutil_inline_runtime.h"
}
# 88 "../../sdk/cutil_inline_runtime.h"
inline void __cudaSafeThreadSync(const char *file, const int line)
# 89 "../../sdk/cutil_inline_runtime.h"
{
# 90 "../../sdk/cutil_inline_runtime.h"
cudaError err = cudaThreadSynchronize();
# 91 "../../sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 92 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "cudaThreadSynchronize() Driver API error in file \'%s\' in line %i : %s.\n", file, line, cudaGetErrorString(err));
# 94 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 95 "../../sdk/cutil_inline_runtime.h"
}
# 96 "../../sdk/cutil_inline_runtime.h"
}
# 98 "../../sdk/cutil_inline_runtime.h"
inline void __cufftSafeCall(cufftResult err, const char *file, const int line)
# 99 "../../sdk/cutil_inline_runtime.h"
{
# 100 "../../sdk/cutil_inline_runtime.h"
if ((CUFFT_SUCCESS) != err) {
# 101 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "cufftSafeCall() CUFFT error in file <%s>, line %i.\n", file, line);
# 103 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 104 "../../sdk/cutil_inline_runtime.h"
}
# 105 "../../sdk/cutil_inline_runtime.h"
}
# 107 "../../sdk/cutil_inline_runtime.h"
inline void __cutilCheckError(CUTBoolean err, const char *file, const int line)
# 108 "../../sdk/cutil_inline_runtime.h"
{
# 109 "../../sdk/cutil_inline_runtime.h"
if ((CUTTrue) != err) {
# 110 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "CUTIL CUDA error in file <%s>, line %i.\n", file, line);
# 112 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 113 "../../sdk/cutil_inline_runtime.h"
}
# 114 "../../sdk/cutil_inline_runtime.h"
}
# 116 "../../sdk/cutil_inline_runtime.h"
inline void __cutilCheckMsg(const char *errorMessage, const char *file, const int line)
# 117 "../../sdk/cutil_inline_runtime.h"
{
# 118 "../../sdk/cutil_inline_runtime.h"
cudaError_t err = cudaGetLastError();
# 119 "../../sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 120 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutilCheckMsg() CUTIL CUDA error: %s in file <%s>, line %i : %s.\n", errorMessage, file, line, cudaGetErrorString(err));
# 122 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 123 "../../sdk/cutil_inline_runtime.h"
}
# 132 "../../sdk/cutil_inline_runtime.h"
}
# 133 "../../sdk/cutil_inline_runtime.h"
inline void __cutilSafeMalloc(void *pointer, const char *file, const int line)
# 134 "../../sdk/cutil_inline_runtime.h"
{
# 135 "../../sdk/cutil_inline_runtime.h"
if (!(pointer)) {
# 136 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutilSafeMalloc host malloc failure in file <%s>, line %i\n", file, line);
# 138 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 139 "../../sdk/cutil_inline_runtime.h"
}
# 140 "../../sdk/cutil_inline_runtime.h"
}
# 145 "../../sdk/cutil_inline_runtime.h"
inline void cutilDeviceInit(int ARGC, char **ARGV)
# 146 "../../sdk/cutil_inline_runtime.h"
{
# 147 "../../sdk/cutil_inline_runtime.h"
int deviceCount;
# 148 "../../sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceCount(&deviceCount), "../../sdk/cutil_inline_runtime.h", 148);
# 149 "../../sdk/cutil_inline_runtime.h"
if (deviceCount == 0) {
# 150 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "CUTIL CUDA error: no devices supporting CUDA.\n");
# 151 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 152 "../../sdk/cutil_inline_runtime.h"
}
# 153 "../../sdk/cutil_inline_runtime.h"
int dev = 0;
# 154 "../../sdk/cutil_inline_runtime.h"
cutGetCmdLineArgumenti(ARGC, (const char **)ARGV, "device", &dev);
# 155 "../../sdk/cutil_inline_runtime.h"
if (dev < 0) { dev = 0; } if (dev > (deviceCount - 1)) { dev = (deviceCount - 1); }
# 157 "../../sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 158 "../../sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceProperties(&deviceProp, dev), "../../sdk/cutil_inline_runtime.h", 158);
# 159 "../../sdk/cutil_inline_runtime.h"
if ((deviceProp.major) < 1) {
# 160 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutil error: device does not support CUDA.\n");
# 161 "../../sdk/cutil_inline_runtime.h"
exit(-1); }
# 163 "../../sdk/cutil_inline_runtime.h"
if ((cutCheckCmdLineFlag(ARGC, (const char **)ARGV, "quiet")) == (CUTFalse)) {
# 164 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "Using device %d: %s\n", dev, deviceProp.name); }
# 165 "../../sdk/cutil_inline_runtime.h"
__cudaSafeCall(cudaSetDevice(dev), "../../sdk/cutil_inline_runtime.h", 165);
# 166 "../../sdk/cutil_inline_runtime.h"
}
# 171 "../../sdk/cutil_inline_runtime.h"
inline void cutilCudaCheckCtxLost(const char *errorMessage, const char *file, const int line)
# 172 "../../sdk/cutil_inline_runtime.h"
{
# 173 "../../sdk/cutil_inline_runtime.h"
cudaError_t err = cudaGetLastError();
# 174 "../../sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 175 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "CUDA error: %s in file \'%s\' in line %i : %s.\n", errorMessage, file, line, cudaGetErrorString(err));
# 177 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 178 "../../sdk/cutil_inline_runtime.h"
}
# 179 "../../sdk/cutil_inline_runtime.h"
err = cudaThreadSynchronize();
# 180 "../../sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 181 "../../sdk/cutil_inline_runtime.h"
fprintf(stderr, "CCUDA error: %s in file \'%s\' in line %i : %s.\n", errorMessage, file, line, cudaGetErrorString(err));
# 183 "../../sdk/cutil_inline_runtime.h"
exit(-1);
# 184 "../../sdk/cutil_inline_runtime.h"
}
# 185 "../../sdk/cutil_inline_runtime.h"
}
# 16 "../../sdk/cutil_inline_drvapi.h"
inline void __cuSafeCallNoSync(CUresult err, const char *file, const int line)
# 17 "../../sdk/cutil_inline_drvapi.h"
{
# 18 "../../sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 19 "../../sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cuSafeCallNoSync() Driver API error = %04d from file <%s>, line %i.\n", err, file, line);
# 21 "../../sdk/cutil_inline_drvapi.h"
exit(-1);
# 22 "../../sdk/cutil_inline_drvapi.h"
}
# 23 "../../sdk/cutil_inline_drvapi.h"
}
# 24 "../../sdk/cutil_inline_drvapi.h"
inline void __cuSafeCall(CUresult err, const char *file, const int line)
# 25 "../../sdk/cutil_inline_drvapi.h"
{
# 26 "../../sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(err, file, line);
# 27 "../../sdk/cutil_inline_drvapi.h"
}
# 29 "../../sdk/cutil_inline_drvapi.h"
inline void __cuCtxSync(const char *file, const int line)
# 30 "../../sdk/cutil_inline_drvapi.h"
{
# 31 "../../sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 32 "../../sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 33 "../../sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cuCtxSynchronize() API error = %04d in file <%s>, line %i.\n", err, file, line);
# 35 "../../sdk/cutil_inline_drvapi.h"
exit(-1);
# 36 "../../sdk/cutil_inline_drvapi.h"
}
# 37 "../../sdk/cutil_inline_drvapi.h"
}
# 39 "../../sdk/cutil_inline_drvapi.h"
inline void __cuCheckMsg(const char *msg, const char *file, const int line)
# 40 "../../sdk/cutil_inline_drvapi.h"
{
# 41 "../../sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 42 "../../sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 43 "../../sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDrvCheckMsg -> %s", msg);
# 44 "../../sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDrvCheckMsg -> cuCtxSynchronize API error = %04d in file <%s>, line %i.\n", err, file, line);
# 46 "../../sdk/cutil_inline_drvapi.h"
exit(-1);
# 47 "../../sdk/cutil_inline_drvapi.h"
}
# 48 "../../sdk/cutil_inline_drvapi.h"
}
# 54 "../../sdk/cutil_inline_drvapi.h"
inline void cutilDeviceInitDrv(int cuDevice, int ARGC, char **ARGV)
# 55 "../../sdk/cutil_inline_drvapi.h"
{
# 56 "../../sdk/cutil_inline_drvapi.h"
cuDevice = 0;
# 57 "../../sdk/cutil_inline_drvapi.h"
int deviceCount = 0;
# 58 "../../sdk/cutil_inline_drvapi.h"
CUresult err = cuInit(0);
# 59 "../../sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) == err) {
# 60 "../../sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGetCount(&deviceCount), "../../sdk/cutil_inline_drvapi.h", 60); }
# 61 "../../sdk/cutil_inline_drvapi.h"
if (deviceCount == 0) {
# 62 "../../sdk/cutil_inline_drvapi.h"
fprintf(stderr, "CUTIL DeviceInitDrv error: no devices supporting CUDA\n");
# 63 "../../sdk/cutil_inline_drvapi.h"
exit(-1);
# 64 "../../sdk/cutil_inline_drvapi.h"
}
# 65 "../../sdk/cutil_inline_drvapi.h"
int dev = 0;
# 66 "../../sdk/cutil_inline_drvapi.h"
cutGetCmdLineArgumenti(ARGC, (const char **)ARGV, "device", &dev);
# 67 "../../sdk/cutil_inline_drvapi.h"
if (dev < 0) { dev = 0; }
# 68 "../../sdk/cutil_inline_drvapi.h"
if (dev > (deviceCount - 1)) { dev = (deviceCount - 1); }
# 69 "../../sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGet(&cuDevice, dev), "../../sdk/cutil_inline_drvapi.h", 69);
# 70 "../../sdk/cutil_inline_drvapi.h"
char name[100];
# 71 "../../sdk/cutil_inline_drvapi.h"
cuDeviceGetName(name, 100, cuDevice);
# 72 "../../sdk/cutil_inline_drvapi.h"
if ((cutCheckCmdLineFlag(ARGC, (const char **)ARGV, "quiet")) == (CUTFalse)) {
# 73 "../../sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Using device %d: %s\n", dev, name); }
# 74 "../../sdk/cutil_inline_drvapi.h"
}
# 78 "../../sdk/cutil_inline_drvapi.h"
inline void cutilDrvCudaCheckCtxLost(const char *errorMessage, const char *file, const int line)
# 79 "../../sdk/cutil_inline_drvapi.h"
{
# 80 "../../sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 81 "../../sdk/cutil_inline_drvapi.h"
if ((CUDA_ERROR_INVALID_CONTEXT) != err) {
# 82 "../../sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i\n", errorMessage, file, line);
# 84 "../../sdk/cutil_inline_drvapi.h"
exit(-1);
# 85 "../../sdk/cutil_inline_drvapi.h"
}
# 86 "../../sdk/cutil_inline_drvapi.h"
err = cuCtxSynchronize();
# 87 "../../sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 88 "../../sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i\n", errorMessage, file, line);
# 90 "../../sdk/cutil_inline_drvapi.h"
exit(-1);
# 91 "../../sdk/cutil_inline_drvapi.h"
}
# 92 "../../sdk/cutil_inline_drvapi.h"
}
# 12 "../../sdk/cutil_inline.h"
inline void print_NVCC_min_spec(const char *sSDKsample, const char *sNVCCReq, const char *sDriverReq)
# 13 "../../sdk/cutil_inline.h"
{
# 14 "../../sdk/cutil_inline.h"
printf("CUDA %d.%02d Toolkit built this project.\n", 3010 / 1000, 3010 % 100);
# 15 "../../sdk/cutil_inline.h"
printf("  [ %s ] requirements:\n", sSDKsample);
# 16 "../../sdk/cutil_inline.h"
printf(" -> CUDA %s Toolkit\n", sNVCCReq);
# 17 "../../sdk/cutil_inline.h"
printf(" -> %s NVIDIA Display Driver.\n", sDriverReq);
# 18 "../../sdk/cutil_inline.h"
}
# 75 "threadFenceReduction.cu"
const char *sSDKsample = ("threadFenceReduction");
# 77 "threadFenceReduction.cu"
#pragma comment(user, "CUDA NVCC Version " VERSION_MAJOR "." VERSION_MINOR)
# 58 "threadFenceReduction_kernel.cu"
template<unsigned blockSize> __attribute__((unused)) void
# 60 "threadFenceReduction_kernel.cu"
reduceBlock(float *sdata, const unsigned tid)
# 61 "threadFenceReduction_kernel.cu"
{int volatile ___ = 1;
# 73 "threadFenceReduction_kernel.cu"
exit(___);}
# 75 "threadFenceReduction_kernel.cu"
template<unsigned blockSize, bool nIsPow2> __attribute__((unused)) void
# 77 "threadFenceReduction_kernel.cu"
reduceBlocks(const float *g_idata, float *g_odata, unsigned n)
# 78 "threadFenceReduction_kernel.cu"
{int volatile ___ = 1;
# 107 "threadFenceReduction_kernel.cu"
exit(___);}
# 110 "threadFenceReduction_kernel.cu"
template<unsigned blockSize, bool nIsPow2> static void
# 112 "threadFenceReduction_kernel.cu"
__wrapper__device_stub_reduceMultiPass(const float *&g_idata, float *&g_odata, unsigned &n) ;
# 110 "threadFenceReduction_kernel.cu"
template<unsigned blockSize, bool nIsPow2> void
# 112 "threadFenceReduction_kernel.cu"
reduceMultiPass(const float *g_idata, float *g_odata, unsigned n)
# 113 "threadFenceReduction_kernel.cu"
{__wrapper__device_stub_reduceMultiPass<blockSize,nIsPow2>(g_idata,g_odata,n);
# 115 "threadFenceReduction_kernel.cu"
}
# 118 "threadFenceReduction_kernel.cu"
static unsigned retirementCount;
# 136 "threadFenceReduction_kernel.cu"
template<unsigned blockSize, bool nIsPow2> static void
# 137 "threadFenceReduction_kernel.cu"
__wrapper__device_stub_reduceSinglePass(const float *&g_idata, float *&g_odata, unsigned &n) ;
# 136 "threadFenceReduction_kernel.cu"
template<unsigned blockSize, bool nIsPow2> void
# 137 "threadFenceReduction_kernel.cu"
reduceSinglePass(const float *g_idata, float *g_odata, unsigned n)
# 138 "threadFenceReduction_kernel.cu"
{__wrapper__device_stub_reduceSinglePass<blockSize,nIsPow2>(g_idata,g_odata,n);
# 187 "threadFenceReduction_kernel.cu"
}
# 189 "threadFenceReduction_kernel.cu"
bool isPow2(unsigned x)
# 190 "threadFenceReduction_kernel.cu"
{
# 191 "threadFenceReduction_kernel.cu"
return (x & (x - (1))) == (0);
# 192 "threadFenceReduction_kernel.cu"
}
# 199 "threadFenceReduction_kernel.cu"
extern "C" void reduce(int size, int threads, int blocks, float *d_idata, float *d_odata)
# 200 "threadFenceReduction_kernel.cu"
{
# 201 "threadFenceReduction_kernel.cu"
dim3 dimBlock(threads, 1, 1);
# 202 "threadFenceReduction_kernel.cu"
dim3 dimGrid(blocks, 1, 1);
# 203 "threadFenceReduction_kernel.cu"
int smemSize = (threads * sizeof(float));
# 206 "threadFenceReduction_kernel.cu"
if (isPow2(size))
# 207 "threadFenceReduction_kernel.cu"
{
# 208 "threadFenceReduction_kernel.cu"
switch (threads)
# 209 "threadFenceReduction_kernel.cu"
{
# 210 "threadFenceReduction_kernel.cu"
case 512:
# 211 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 512U, true> )(d_idata, d_odata, size); break;
# 212 "threadFenceReduction_kernel.cu"
case 256:
# 213 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 256U, true> )(d_idata, d_odata, size); break;
# 214 "threadFenceReduction_kernel.cu"
case 128:
# 215 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 128U, true> )(d_idata, d_odata, size); break;
# 216 "threadFenceReduction_kernel.cu"
case 64:
# 217 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 64U, true> )(d_idata, d_odata, size); break;
# 218 "threadFenceReduction_kernel.cu"
case 32:
# 219 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 32U, true> )(d_idata, d_odata, size); break;
# 220 "threadFenceReduction_kernel.cu"
case 16:
# 221 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 16U, true> )(d_idata, d_odata, size); break;
# 222 "threadFenceReduction_kernel.cu"
case 8:
# 223 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 8U, true> )(d_idata, d_odata, size); break;
# 224 "threadFenceReduction_kernel.cu"
case 4:
# 225 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 4U, true> )(d_idata, d_odata, size); break;
# 226 "threadFenceReduction_kernel.cu"
case 2:
# 227 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 2U, true> )(d_idata, d_odata, size); break;
# 228 "threadFenceReduction_kernel.cu"
case 1:
# 229 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 1U, true> )(d_idata, d_odata, size); break;
# 230 "threadFenceReduction_kernel.cu"
}
# 231 "threadFenceReduction_kernel.cu"
} else
# 233 "threadFenceReduction_kernel.cu"
{
# 234 "threadFenceReduction_kernel.cu"
switch (threads)
# 235 "threadFenceReduction_kernel.cu"
{
# 236 "threadFenceReduction_kernel.cu"
case 512:
# 237 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 512U, false> )(d_idata, d_odata, size); break;
# 238 "threadFenceReduction_kernel.cu"
case 256:
# 239 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 256U, false> )(d_idata, d_odata, size); break;
# 240 "threadFenceReduction_kernel.cu"
case 128:
# 241 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 128U, false> )(d_idata, d_odata, size); break;
# 242 "threadFenceReduction_kernel.cu"
case 64:
# 243 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 64U, false> )(d_idata, d_odata, size); break;
# 244 "threadFenceReduction_kernel.cu"
case 32:
# 245 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 32U, false> )(d_idata, d_odata, size); break;
# 246 "threadFenceReduction_kernel.cu"
case 16:
# 247 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 16U, false> )(d_idata, d_odata, size); break;
# 248 "threadFenceReduction_kernel.cu"
case 8:
# 249 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 8U, false> )(d_idata, d_odata, size); break;
# 250 "threadFenceReduction_kernel.cu"
case 4:
# 251 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 4U, false> )(d_idata, d_odata, size); break;
# 252 "threadFenceReduction_kernel.cu"
case 2:
# 253 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 2U, false> )(d_idata, d_odata, size); break;
# 254 "threadFenceReduction_kernel.cu"
case 1:
# 255 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceMultiPass< 1U, false> )(d_idata, d_odata, size); break;
# 256 "threadFenceReduction_kernel.cu"
}
# 257 "threadFenceReduction_kernel.cu"
}
# 258 "threadFenceReduction_kernel.cu"
}
# 261 "threadFenceReduction_kernel.cu"
extern "C" void reduceSinglePass(int size, int threads, int blocks, float *d_idata, float *d_odata)
# 262 "threadFenceReduction_kernel.cu"
{
# 263 "threadFenceReduction_kernel.cu"
dim3 dimBlock(threads, 1, 1);
# 264 "threadFenceReduction_kernel.cu"
dim3 dimGrid(blocks, 1, 1);
# 265 "threadFenceReduction_kernel.cu"
int smemSize = (threads * sizeof(float));
# 268 "threadFenceReduction_kernel.cu"
if (isPow2(size))
# 269 "threadFenceReduction_kernel.cu"
{
# 270 "threadFenceReduction_kernel.cu"
switch (threads)
# 271 "threadFenceReduction_kernel.cu"
{
# 272 "threadFenceReduction_kernel.cu"
case 512:
# 273 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 512U, true> )(d_idata, d_odata, size); break;
# 274 "threadFenceReduction_kernel.cu"
case 256:
# 275 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 256U, true> )(d_idata, d_odata, size); break;
# 276 "threadFenceReduction_kernel.cu"
case 128:
# 277 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 128U, true> )(d_idata, d_odata, size); break;
# 278 "threadFenceReduction_kernel.cu"
case 64:
# 279 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 64U, true> )(d_idata, d_odata, size); break;
# 280 "threadFenceReduction_kernel.cu"
case 32:
# 281 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 32U, true> )(d_idata, d_odata, size); break;
# 282 "threadFenceReduction_kernel.cu"
case 16:
# 283 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 16U, true> )(d_idata, d_odata, size); break;
# 284 "threadFenceReduction_kernel.cu"
case 8:
# 285 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 8U, true> )(d_idata, d_odata, size); break;
# 286 "threadFenceReduction_kernel.cu"
case 4:
# 287 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 4U, true> )(d_idata, d_odata, size); break;
# 288 "threadFenceReduction_kernel.cu"
case 2:
# 289 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 2U, true> )(d_idata, d_odata, size); break;
# 290 "threadFenceReduction_kernel.cu"
case 1:
# 291 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 1U, true> )(d_idata, d_odata, size); break;
# 292 "threadFenceReduction_kernel.cu"
}
# 293 "threadFenceReduction_kernel.cu"
} else
# 295 "threadFenceReduction_kernel.cu"
{
# 296 "threadFenceReduction_kernel.cu"
switch (threads)
# 297 "threadFenceReduction_kernel.cu"
{
# 298 "threadFenceReduction_kernel.cu"
case 512:
# 299 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 512U, false> )(d_idata, d_odata, size); break;
# 300 "threadFenceReduction_kernel.cu"
case 256:
# 301 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 256U, false> )(d_idata, d_odata, size); break;
# 302 "threadFenceReduction_kernel.cu"
case 128:
# 303 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 128U, false> )(d_idata, d_odata, size); break;
# 304 "threadFenceReduction_kernel.cu"
case 64:
# 305 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 64U, false> )(d_idata, d_odata, size); break;
# 306 "threadFenceReduction_kernel.cu"
case 32:
# 307 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 32U, false> )(d_idata, d_odata, size); break;
# 308 "threadFenceReduction_kernel.cu"
case 16:
# 309 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 16U, false> )(d_idata, d_odata, size); break;
# 310 "threadFenceReduction_kernel.cu"
case 8:
# 311 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 8U, false> )(d_idata, d_odata, size); break;
# 312 "threadFenceReduction_kernel.cu"
case 4:
# 313 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 4U, false> )(d_idata, d_odata, size); break;
# 314 "threadFenceReduction_kernel.cu"
case 2:
# 315 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 2U, false> )(d_idata, d_odata, size); break;
# 316 "threadFenceReduction_kernel.cu"
case 1:
# 317 "threadFenceReduction_kernel.cu"
cudaConfigureCall(dimGrid, dimBlock, smemSize) ? ((void)0) : (reduceSinglePass< 1U, false> )(d_idata, d_odata, size); break;
# 318 "threadFenceReduction_kernel.cu"
}
# 319 "threadFenceReduction_kernel.cu"
}
# 320 "threadFenceReduction_kernel.cu"
}
# 87 "threadFenceReduction.cu"
void runTest(int, char **);
# 91 "threadFenceReduction.cu"
extern "C" void reduce(int, int, int, float *, float *);
# 92 "threadFenceReduction.cu"
extern "C" void reduceSinglePass(int, int, int, float *, float *);
# 118 "threadFenceReduction.cu"
int main(int argc, char **argv)
# 119 "threadFenceReduction.cu"
{
# 120 "threadFenceReduction.cu"
cudaDeviceProp deviceProp;
# 121 "threadFenceReduction.cu"
(deviceProp.major) = 0;
# 122 "threadFenceReduction.cu"
(deviceProp.minor) = 0;
# 123 "threadFenceReduction.cu"
int dev;
# 125 "threadFenceReduction.cu"
printf("[ %s ]\n", sSDKsample);
# 127 "threadFenceReduction.cu"
{ cudaError err = cudaChooseDevice(&dev, &deviceProp); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "threadFenceReduction.cu", 127, cudaGetErrorString(err)); exit(1); } } ; ;
# 128 "threadFenceReduction.cu"
{ cudaError err = cudaGetDeviceProperties(&deviceProp, dev); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "threadFenceReduction.cu", 128, cudaGetErrorString(err)); exit(1); } } ; ;
# 130 "threadFenceReduction.cu"
if (((deviceProp.major) > 1) || ((deviceProp.minor) > 0))
# 131 "threadFenceReduction.cu"
{
# 132 "threadFenceReduction.cu"
printf("Using Device %d: \"%s\"\n", dev, deviceProp.name);
# 133 "threadFenceReduction.cu"
{ cudaError err = cudaSetDevice(dev); if ((cudaSuccess) != err) { fprintf(stderr, "Cuda error in file \'%s\' in line %i : %s.\n", "threadFenceReduction.cu", 133, cudaGetErrorString(err)); exit(1); } } ; ;
# 134 "threadFenceReduction.cu"
} else
# 136 "threadFenceReduction.cu"
{
# 137 "threadFenceReduction.cu"
printf("There is no device supporting CUDA compute capability 1.1.\n");
# 138 "threadFenceReduction.cu"
printf("TEST PASSED");
# 139 "threadFenceReduction.cu"
if (!(cutCheckCmdLineFlag(argc, (const char **)argv, "noprompt"))) { printf("\nPress ENTER to exit...\n"); fflush(stdout); fflush(stderr); getchar(); } exit(0); ;
# 140 "threadFenceReduction.cu"
}
# 143 "threadFenceReduction.cu"
runTest(argc, argv);
# 149 "threadFenceReduction.cu"
cudaThreadExit();
# 150 "threadFenceReduction.cu"
__cutilExit(argc, argv); return 0;
# 151 "threadFenceReduction.cu"
}
# 161 "threadFenceReduction.cu"
template<class T> T
# 162 "threadFenceReduction.cu"
reduceCPU(T *data, int size)
# 163 "threadFenceReduction.cu"
{
# 164 "threadFenceReduction.cu"
T sum = (data[0]);
# 165 "threadFenceReduction.cu"
T c = ((T)(0.0));
# 166 "threadFenceReduction.cu"
for (int i = 1; i < size; i++)
# 167 "threadFenceReduction.cu"
{
# 168 "threadFenceReduction.cu"
T y = ((data[i]) - c);
# 169 "threadFenceReduction.cu"
T t = (sum + y);
# 170 "threadFenceReduction.cu"
c = ((t - sum) - y);
# 171 "threadFenceReduction.cu"
sum = t;
# 172 "threadFenceReduction.cu"
}
# 173 "threadFenceReduction.cu"
return sum;
# 174 "threadFenceReduction.cu"
}
# 176 "threadFenceReduction.cu"
unsigned nextPow2(unsigned x) {
# 177 "threadFenceReduction.cu"
--x;
# 178 "threadFenceReduction.cu"
x |= (x >> 1);
# 179 "threadFenceReduction.cu"
x |= (x >> 2);
# 180 "threadFenceReduction.cu"
x |= (x >> 4);
# 181 "threadFenceReduction.cu"
x |= (x >> 8);
# 182 "threadFenceReduction.cu"
x |= (x >> 16);
# 183 "threadFenceReduction.cu"
return ++x;
# 184 "threadFenceReduction.cu"
}
# 191 "threadFenceReduction.cu"
void getNumBlocksAndThreads(int n, int maxBlocks, int maxThreads, int &blocks, int &threads)
# 192 "threadFenceReduction.cu"
{
# 193 "threadFenceReduction.cu"
if (n == 1)
# 194 "threadFenceReduction.cu"
{
# 195 "threadFenceReduction.cu"
threads = 1;
# 196 "threadFenceReduction.cu"
blocks = 1;
# 197 "threadFenceReduction.cu"
} else
# 199 "threadFenceReduction.cu"
{
# 200 "threadFenceReduction.cu"
threads = ((n < (maxThreads * 2)) ? nextPow2(n / 2) : (maxThreads));
# 201 "threadFenceReduction.cu"
blocks = max(1, n / (threads * 2));
# 202 "threadFenceReduction.cu"
}
# 204 "threadFenceReduction.cu"
blocks = min(maxBlocks, blocks);
# 205 "threadFenceReduction.cu"
}
# 211 "threadFenceReduction.cu"
float benchmarkReduce(int n, int
# 212 "threadFenceReduction.cu"
numThreads, int
# 213 "threadFenceReduction.cu"
numBlocks, int
# 214 "threadFenceReduction.cu"
maxThreads, int
# 215 "threadFenceReduction.cu"
maxBlocks, int
# 216 "threadFenceReduction.cu"
testIterations, bool
# 217 "threadFenceReduction.cu"
multiPass, bool
# 218 "threadFenceReduction.cu"
cpuFinalReduction, int
# 219 "threadFenceReduction.cu"
cpuFinalThreshold, unsigned
# 220 "threadFenceReduction.cu"
timer, float *
# 221 "threadFenceReduction.cu"
h_odata, float *
# 222 "threadFenceReduction.cu"
d_idata, float *
# 223 "threadFenceReduction.cu"
d_odata)
# 224 "threadFenceReduction.cu"
{
# 225 "threadFenceReduction.cu"
float gpu_result = (0);
# 226 "threadFenceReduction.cu"
bool needReadBack = true;
# 228 "threadFenceReduction.cu"
for (int i = 0; i < testIterations; ++i)
# 229 "threadFenceReduction.cu"
{
# 230 "threadFenceReduction.cu"
gpu_result = (0);
# 231 "threadFenceReduction.cu"
unsigned retCnt = (0);
# 232 "threadFenceReduction.cu"
cudaMemcpyToSymbol("retirementCount", &retCnt, sizeof(unsigned), 0, cudaMemcpyHostToDevice);
# 233 "threadFenceReduction.cu"
__cutilCheckMsg("MemcpyToSymbol failed", "threadFenceReduction.cu", 233);
# 235 "threadFenceReduction.cu"
cudaThreadSynchronize();
# 236 "threadFenceReduction.cu"
__cutilCheckError(cutStartTimer(timer), "threadFenceReduction.cu", 236);
# 238 "threadFenceReduction.cu"
if (multiPass)
# 239 "threadFenceReduction.cu"
{
# 241 "threadFenceReduction.cu"
reduce(n, numThreads, numBlocks, d_idata, d_odata);
# 244 "threadFenceReduction.cu"
__cutilCheckMsg("Kernel execution failed", "threadFenceReduction.cu", 244);
# 246 "threadFenceReduction.cu"
if (cpuFinalReduction)
# 247 "threadFenceReduction.cu"
{
# 250 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMemcpy(h_odata, d_odata, numBlocks * sizeof(float), cudaMemcpyDeviceToHost), "threadFenceReduction.cu", 250);
# 252 "threadFenceReduction.cu"
for (int i = 0; i < numBlocks; i++)
# 253 "threadFenceReduction.cu"
{
# 254 "threadFenceReduction.cu"
gpu_result += (h_odata[i]);
# 255 "threadFenceReduction.cu"
}
# 257 "threadFenceReduction.cu"
needReadBack = false;
# 258 "threadFenceReduction.cu"
} else
# 260 "threadFenceReduction.cu"
{
# 262 "threadFenceReduction.cu"
int s = numBlocks;
# 263 "threadFenceReduction.cu"
while (s > cpuFinalThreshold)
# 264 "threadFenceReduction.cu"
{
# 265 "threadFenceReduction.cu"
int threads = 0, blocks = 0;
# 266 "threadFenceReduction.cu"
getNumBlocksAndThreads(s, maxBlocks, maxThreads, blocks, threads);
# 268 "threadFenceReduction.cu"
reduce(s, threads, blocks, d_odata, d_odata);
# 270 "threadFenceReduction.cu"
s = (s / (threads * 2));
# 271 "threadFenceReduction.cu"
}
# 273 "threadFenceReduction.cu"
if (s > 1)
# 274 "threadFenceReduction.cu"
{
# 276 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMemcpy(h_odata, d_odata, s * sizeof(float), cudaMemcpyDeviceToHost), "threadFenceReduction.cu", 276);
# 278 "threadFenceReduction.cu"
for (int i = 0; i < s; i++)
# 279 "threadFenceReduction.cu"
{
# 280 "threadFenceReduction.cu"
gpu_result += (h_odata[i]);
# 281 "threadFenceReduction.cu"
}
# 283 "threadFenceReduction.cu"
needReadBack = false;
# 284 "threadFenceReduction.cu"
}
# 285 "threadFenceReduction.cu"
}
# 286 "threadFenceReduction.cu"
} else
# 288 "threadFenceReduction.cu"
{
# 289 "threadFenceReduction.cu"
__cutilCheckMsg("Kernel execution failed", "threadFenceReduction.cu", 289);
# 292 "threadFenceReduction.cu"
reduceSinglePass(n, numThreads, numBlocks, d_idata, d_odata);
# 295 "threadFenceReduction.cu"
__cutilCheckMsg("Kernel execution failed", "threadFenceReduction.cu", 295);
# 296 "threadFenceReduction.cu"
}
# 298 "threadFenceReduction.cu"
cudaThreadSynchronize();
# 299 "threadFenceReduction.cu"
__cutilCheckError(cutStopTimer(timer), "threadFenceReduction.cu", 299);
# 300 "threadFenceReduction.cu"
}
# 302 "threadFenceReduction.cu"
if (needReadBack)
# 303 "threadFenceReduction.cu"
{
# 305 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMemcpy(&gpu_result, d_odata, sizeof(float), cudaMemcpyDeviceToHost), "threadFenceReduction.cu", 305);
# 306 "threadFenceReduction.cu"
}
# 308 "threadFenceReduction.cu"
return gpu_result;
# 309 "threadFenceReduction.cu"
}
# 317 "threadFenceReduction.cu"
void shmoo(int minN, int maxN, int maxThreads, int maxBlocks)
# 318 "threadFenceReduction.cu"
{
# 320 "threadFenceReduction.cu"
unsigned bytes = (maxN * sizeof(float));
# 322 "threadFenceReduction.cu"
float *h_idata = ((float *)malloc(bytes));
# 324 "threadFenceReduction.cu"
for (int i = 0; i < maxN; i++) {
# 326 "threadFenceReduction.cu"
(h_idata[i]) = ((rand() & 255) / ((float)2147483647));
# 327 "threadFenceReduction.cu"
}
# 329 "threadFenceReduction.cu"
int maxNumBlocks = min(65535, maxN / maxThreads);
# 332 "threadFenceReduction.cu"
float *h_odata = ((float *)malloc(maxNumBlocks * sizeof(float)));
# 335 "threadFenceReduction.cu"
float *d_idata = (__null);
# 336 "threadFenceReduction.cu"
float *d_odata = (__null);
# 338 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMalloc((void **)(&d_idata), bytes), "threadFenceReduction.cu", 338);
# 339 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMalloc((void **)(&d_odata), maxNumBlocks * sizeof(float)), "threadFenceReduction.cu", 339);
# 342 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMemcpy(d_idata, h_idata, bytes, cudaMemcpyHostToDevice), "threadFenceReduction.cu", 342);
# 343 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMemcpy(d_odata, h_idata, maxNumBlocks * sizeof(float), cudaMemcpyHostToDevice), "threadFenceReduction.cu", 343);
# 351 "threadFenceReduction.cu"
int testIterations = 1;
# 354 "threadFenceReduction.cu"
unsigned timer = (0);
# 355 "threadFenceReduction.cu"
__cutilCheckError(cutCreateTimer(&timer), "threadFenceReduction.cu", 355);
# 358 "threadFenceReduction.cu"
printf("N, %d blocks one pass, %d blocks multipass\n", maxBlocks, maxBlocks);
# 359 "threadFenceReduction.cu"
for (int i = minN; i <= maxN; i *= 2)
# 360 "threadFenceReduction.cu"
{
# 361 "threadFenceReduction.cu"
printf("%d, ", i);
# 362 "threadFenceReduction.cu"
for (int multiPass = 0; multiPass <= 1; multiPass++)
# 363 "threadFenceReduction.cu"
{
# 364 "threadFenceReduction.cu"
cutResetTimer(timer);
# 365 "threadFenceReduction.cu"
int numBlocks = 0;
# 366 "threadFenceReduction.cu"
int numThreads = 0;
# 367 "threadFenceReduction.cu"
getNumBlocksAndThreads(i, maxBlocks, maxThreads, numBlocks, numThreads);
# 370 "threadFenceReduction.cu"
benchmarkReduce(i, numThreads, numBlocks, maxThreads, maxBlocks, testIterations, multiPass == 1, false, 1, timer, h_odata, d_idata, d_odata);
# 373 "threadFenceReduction.cu"
float reduceTime = cutGetAverageTimerValue(timer);
# 374 "threadFenceReduction.cu"
printf("%f%s", reduceTime, (multiPass == 0) ? (", ") : ("\n"));
# 375 "threadFenceReduction.cu"
}
# 376 "threadFenceReduction.cu"
}
# 377 "threadFenceReduction.cu"
printf("\n");
# 380 "threadFenceReduction.cu"
__cutilCheckError(cutDeleteTimer(timer), "threadFenceReduction.cu", 380);
# 381 "threadFenceReduction.cu"
free(h_idata);
# 382 "threadFenceReduction.cu"
free(h_odata);
# 384 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaFree(d_idata), "threadFenceReduction.cu", 384);
# 385 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaFree(d_odata), "threadFenceReduction.cu", 385);
# 386 "threadFenceReduction.cu"
}
# 392 "threadFenceReduction.cu"
void runTest(int argc, char **argv)
# 393 "threadFenceReduction.cu"
{
# 394 "threadFenceReduction.cu"
int size = (1 << 20);
# 395 "threadFenceReduction.cu"
int maxThreads = 128;
# 396 "threadFenceReduction.cu"
int maxBlocks = 64;
# 397 "threadFenceReduction.cu"
bool cpuFinalReduction = false;
# 398 "threadFenceReduction.cu"
int cpuFinalThreshold = 1;
# 399 "threadFenceReduction.cu"
bool multipass = false;
# 401 "threadFenceReduction.cu"
cutGetCmdLineArgumenti(argc, (const char **)argv, "n", &size);
# 402 "threadFenceReduction.cu"
cutGetCmdLineArgumenti(argc, (const char **)argv, "threads", &maxThreads);
# 403 "threadFenceReduction.cu"
cutGetCmdLineArgumenti(argc, (const char **)argv, "maxblocks", &maxBlocks);
# 405 "threadFenceReduction.cu"
printf("%d elements\n", size);
# 406 "threadFenceReduction.cu"
printf("%d threads (max)\n", maxThreads);
# 408 "threadFenceReduction.cu"
cpuFinalReduction = ((cutCheckCmdLineFlag(argc, (const char **)argv, "cpufinal")) == (CUTTrue));
# 409 "threadFenceReduction.cu"
multipass = ((cutCheckCmdLineFlag(argc, (const char **)argv, "multipass")) == (CUTTrue));
# 411 "threadFenceReduction.cu"
cutGetCmdLineArgumenti(argc, (const char **)argv, "cputhresh", &cpuFinalThreshold);
# 413 "threadFenceReduction.cu"
bool runShmoo = ((cutCheckCmdLineFlag(argc, (const char **)argv, "shmoo")) == (CUTTrue));
# 415 "threadFenceReduction.cu"
if (runShmoo)
# 416 "threadFenceReduction.cu"
{
# 417 "threadFenceReduction.cu"
shmoo(1, 33554432, maxThreads, maxBlocks);
# 418 "threadFenceReduction.cu"
} else
# 420 "threadFenceReduction.cu"
{
# 423 "threadFenceReduction.cu"
unsigned bytes = (size * sizeof(float));
# 425 "threadFenceReduction.cu"
float *h_idata = ((float *)malloc(bytes));
# 427 "threadFenceReduction.cu"
for (int i = 0; i < size; i++)
# 428 "threadFenceReduction.cu"
{
# 430 "threadFenceReduction.cu"
(h_idata[i]) = ((rand() & 255) / ((float)2147483647));
# 431 "threadFenceReduction.cu"
}
# 433 "threadFenceReduction.cu"
int numBlocks = 0;
# 434 "threadFenceReduction.cu"
int numThreads = 0;
# 435 "threadFenceReduction.cu"
getNumBlocksAndThreads(size, maxBlocks, maxThreads, numBlocks, numThreads);
# 436 "threadFenceReduction.cu"
if (numBlocks == 1) { cpuFinalThreshold = 1; }
# 439 "threadFenceReduction.cu"
float *h_odata = ((float *)malloc(numBlocks * sizeof(float)));
# 441 "threadFenceReduction.cu"
printf("%d blocks\n", numBlocks);
# 444 "threadFenceReduction.cu"
float *d_idata = (__null);
# 445 "threadFenceReduction.cu"
float *d_odata = (__null);
# 447 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMalloc((void **)(&d_idata), bytes), "threadFenceReduction.cu", 447);
# 448 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMalloc((void **)(&d_odata), numBlocks * sizeof(float)), "threadFenceReduction.cu", 448);
# 451 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMemcpy(d_idata, h_idata, bytes, cudaMemcpyHostToDevice), "threadFenceReduction.cu", 451);
# 452 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaMemcpy(d_odata, h_idata, numBlocks * sizeof(float), cudaMemcpyHostToDevice), "threadFenceReduction.cu", 452);
# 459 "threadFenceReduction.cu"
int testIterations = 1;
# 462 "threadFenceReduction.cu"
unsigned timer = (0);
# 463 "threadFenceReduction.cu"
__cutilCheckError(cutCreateTimer(&timer), "threadFenceReduction.cu", 463);
# 465 "threadFenceReduction.cu"
float gpu_result = (0);
# 467 "threadFenceReduction.cu"
gpu_result = benchmarkReduce(size, numThreads, numBlocks, maxThreads, maxBlocks, testIterations, multipass, cpuFinalReduction, cpuFinalThreshold, timer, h_odata, d_idata, d_odata);
# 471 "threadFenceReduction.cu"
float reduceTime = cutGetAverageTimerValue(timer);
# 472 "threadFenceReduction.cu"
printf("Average time: %f ms\n", reduceTime);
# 473 "threadFenceReduction.cu"
printf("Bandwidth:    %f GB/s\n\n", (size * sizeof(int)) / (reduceTime * (1000000.0)));
# 476 "threadFenceReduction.cu"
float cpu_result = reduceCPU< float> (h_idata, size);
# 478 "threadFenceReduction.cu"
printf("GPU result = %0.12f\n", gpu_result);
# 479 "threadFenceReduction.cu"
printf("CPU result = %0.12f\n", cpu_result);
# 481 "threadFenceReduction.cu"
double threshold = ((1.000000000000000021e-08) * size);
# 482 "threadFenceReduction.cu"
double diff = abs(((double)gpu_result) - ((double)cpu_result));
# 483 "threadFenceReduction.cu"
printf("TEST %s\n", (diff < threshold) ? ("PASSED") : ("FAILED"));
# 486 "threadFenceReduction.cu"
__cutilCheckError(cutDeleteTimer(timer), "threadFenceReduction.cu", 486);
# 487 "threadFenceReduction.cu"
free(h_idata);
# 488 "threadFenceReduction.cu"
free(h_odata);
# 490 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaFree(d_idata), "threadFenceReduction.cu", 490);
# 491 "threadFenceReduction.cu"
__cudaSafeCallNoSync(cudaFree(d_odata), "threadFenceReduction.cu", 491);
# 492 "threadFenceReduction.cu"
}
# 493 "threadFenceReduction.cu"
}
# 1 "/tmp/tmpxft_0000226b_00000000-1_threadFenceReduction.cudafe1.stub.c"
# 1 "/tmp/tmpxft_0000226b_00000000-1_threadFenceReduction.cudafe1.stub.c" 1
# 1 "/tmp/tmpxft_0000226b_00000000-3_threadFenceReduction.fatbin.c" 1
# 1 "/usr/local/cuda/bin/../include/__cudaFatFormat.h" 1
# 83 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
extern "C" {
# 97 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct {
    char* gpuProfileName;
    char* cubin;
} __cudaFatCubinEntry;
# 113 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct {
    char* gpuProfileName;
    char* ptx;
} __cudaFatPtxEntry;
# 125 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct __cudaFatDebugEntryRec {
    char* gpuProfileName;
    char* debug;
    struct __cudaFatDebugEntryRec *next;
    unsigned int size;
} __cudaFatDebugEntry;

typedef struct __cudaFatElfEntryRec {
    char* gpuProfileName;
    char* elf;
    struct __cudaFatElfEntryRec *next;
    unsigned int size;
} __cudaFatElfEntry;

typedef enum {
      __cudaFatDontSearchFlag = (1 << 0),
      __cudaFatDontCacheFlag = (1 << 1),
      __cudaFatSassDebugFlag = (1 << 2)
} __cudaFatCudaBinaryFlag;
# 152 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct {
    char* name;
} __cudaFatSymbol;
# 166 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct __cudaFatCudaBinaryRec {
    unsigned long magic;
    unsigned long version;
    unsigned long gpuInfoVersion;
    char* key;
    char* ident;
    char* usageMode;
    __cudaFatPtxEntry *ptx;
    __cudaFatCubinEntry *cubin;
    __cudaFatDebugEntry *debug;
    void* debugInfo;
    unsigned int flags;
    __cudaFatSymbol *exported;
    __cudaFatSymbol *imported;
    struct __cudaFatCudaBinaryRec *dependends;
    unsigned int characteristic;
    __cudaFatElfEntry *elf;
} __cudaFatCudaBinary;
# 203 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
    typedef enum {
        __cudaFatAvoidPTX,
        __cudaFatPreferBestCode,
        __cudaFatForcePTX
    } __cudaFatCompilationPolicy;
# 227 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
void fatGetCubinForGpuWithPolicy( __cudaFatCudaBinary *binary, __cudaFatCompilationPolicy policy, char* gpuName, char* *cubin, char* *dbgInfoFile );
# 240 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
unsigned char fatCheckJitForGpuWithPolicy( __cudaFatCudaBinary *binary, __cudaFatCompilationPolicy policy, char* gpuName, char* *ptx );
# 250 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
void fatFreeCubin( char* cubin, char* dbgInfoFile );





void __cudaFatFreePTX( char* ptx );


}
# 2 "/tmp/tmpxft_0000226b_00000000-3_threadFenceReduction.fatbin.c" 2



asm(
".section .rodata\n"
".align 32\n"
"__deviceText_$sm_13$:\n"
".quad 0x33010102464c457f,0x0000000000000002,0x0000000100be0002,0x0000000000000000\n"
".quad 0x000000000000e9c4,0x0000000000000040,0x00380040000d000d,0x000100a500400053\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000300000001,0x0000000000000000,0x0000000000000000,0x0000000000002980\n"
".quad 0x0000000000001e32,0x0000000000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000030000000b,0x0000000000000000,0x0000000000000000,0x00000000000047b2\n"
".quad 0x0000000000000611,0x0000000000000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000200000013,0x0000000000000000,0x0000000000000000,0x0000000000004dc3\n"
".quad 0x0000000000001368,0x000000a600000002,0x0000000000000001,0x0000000000000018\n"
".quad 0x0000000100000e31,0x0000000000100006,0x0000000000000000,0x000000000000612b\n"
".quad 0x00000000000002d8,0x0900005400000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001919,0x0000000000000002,0x0000000000000000,0x0000000000006403\n"
".quad 0x0000000000000020,0x0000000400000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000e5e,0x0000000000000002,0x0000000000000000,0x0000000000006423\n"
".quad 0x000000000000001c,0x0000000400000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000018e7,0x0000000000000003,0x0000000000000000,0x000000000000643f\n"
".quad 0x0000000000000030,0x0000000400000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000dd4,0x0000000000100006,0x0000000000000000,0x000000000000643f\n"
".quad 0x00000000000002a0,0x0900005200000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001781,0x0000000000000002,0x0000000000000000,0x00000000000066df\n"
".quad 0x000000000000001c,0x0000000800000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000e01,0x0000000000000002,0x0000000000000000,0x00000000000066fb\n"
".quad 0x000000000000001c,0x0000000800000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x000000080000174f,0x0000000000000003,0x0000000000000000,0x0000000000006717\n"
".quad 0x0000000000000030,0x0000000800000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000d77,0x0000000000100006,0x0000000000000000,0x0000000000006717\n"
".quad 0x0000000000000268,0x0900005000000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001a4a,0x0000000000000002,0x0000000000000000,0x000000000000697f\n"
".quad 0x0000000000000018,0x0000000c00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000da4,0x0000000000000002,0x0000000000000000,0x0000000000006997\n"
".quad 0x000000000000001c,0x0000000c00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001a18,0x0000000000000003,0x0000000000000000,0x00000000000069b3\n"
".quad 0x0000000000000030,0x0000000c00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000d1c,0x0000000000100006,0x0000000000000000,0x00000000000069b3\n"
".quad 0x0000000000000230,0x0900004e00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001653,0x0000000000000002,0x0000000000000000,0x0000000000006be3\n"
".quad 0x0000000000000014,0x0000001000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000d48,0x0000000000000002,0x0000000000000000,0x0000000000006bf7\n"
".quad 0x000000000000001c,0x0000001000000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001622,0x0000000000000003,0x0000000000000000,0x0000000000006c13\n"
".quad 0x0000000000000030,0x0000001000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000cc1,0x0000000000100006,0x0000000000000000,0x0000000000006c13\n"
".quad 0x00000000000001f8,0x0900004c00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000171b,0x0000000000000002,0x0000000000000000,0x0000000000006e0b\n"
".quad 0x0000000000000010,0x0000001400000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000ced,0x0000000000000002,0x0000000000000000,0x0000000000006e1b\n"
".quad 0x000000000000001c,0x0000001400000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000016ea,0x0000000000000003,0x0000000000000000,0x0000000000006e37\n"
".quad 0x0000000000000030,0x0000001400000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000c66,0x0000000000100006,0x0000000000000000,0x0000000000006e37\n"
".quad 0x00000000000001c8,0x0900004a00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001cad,0x0000000000000002,0x0000000000000000,0x0000000000006fff\n"
".quad 0x000000000000000c,0x0000001800000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000c92,0x0000000000000002,0x0000000000000000,0x000000000000700b\n"
".quad 0x000000000000001c,0x0000001800000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001c7c,0x0000000000000003,0x0000000000000000,0x0000000000007027\n"
".quad 0x0000000000000030,0x0000001800000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000c0d,0x0000000000100006,0x0000000000000000,0x0000000000007027\n"
".quad 0x0000000000000198,0x0900004800000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001be2,0x0000000000000002,0x0000000000000000,0x00000000000071bf\n"
".quad 0x0000000000000008,0x0000001c00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000c38,0x0000000000000002,0x0000000000000000,0x00000000000071c7\n"
".quad 0x000000000000001c,0x0000001c00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001bb2,0x0000000000000003,0x0000000000000000,0x00000000000071e3\n"
".quad 0x0000000000000030,0x0000001c00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000bb4,0x0000000000100006,0x0000000000000000,0x00000000000071e3\n"
".quad 0x0000000000000168,0x0900004600000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000017e6,0x0000000000000002,0x0000000000000000,0x000000000000734b\n"
".quad 0x0000000000000004,0x0000002000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000bdf,0x0000000000000002,0x0000000000000000,0x000000000000734f\n"
".quad 0x000000000000001c,0x0000002000000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000017b6,0x0000000000000003,0x0000000000000000,0x000000000000736b\n"
".quad 0x0000000000000030,0x0000002000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000b5b,0x0000000000100006,0x0000000000000000,0x000000000000736b\n"
".quad 0x0000000000000138,0x0900004400000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000b86,0x0000000000000002,0x0000000000000000,0x00000000000074a3\n"
".quad 0x000000000000001c,0x0000002400000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000015f2,0x0000000000000003,0x0000000000000000,0x00000000000074bf\n"
".quad 0x0000000000000030,0x0000002400000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000b02,0x0000000000100006,0x0000000000000000,0x00000000000074bf\n"
".quad 0x0000000000000108,0x0900004200000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000b2d,0x0000000000000002,0x0000000000000000,0x00000000000075c7\n"
".quad 0x000000000000001c,0x0000002700000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001491,0x0000000000000003,0x0000000000000000,0x00000000000075e3\n"
".quad 0x0000000000000030,0x0000002700000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000aa5,0x0000000000100006,0x0000000000000000,0x00000000000075e3\n"
".quad 0x00000000000002f8,0x0900004000000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000184b,0x0000000000000002,0x0000000000000000,0x00000000000078db\n"
".quad 0x0000000000000028,0x0000002a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000ad2,0x0000000000000002,0x0000000000000000,0x0000000000007903\n"
".quad 0x000000000000001c,0x0000002a00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001819,0x0000000000000003,0x0000000000000000,0x000000000000791f\n"
".quad 0x0000000000000030,0x0000002a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000a48,0x0000000000100006,0x0000000000000000,0x000000000000791f\n"
".quad 0x00000000000002c0,0x0900003e00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000015bd,0x0000000000000002,0x0000000000000000,0x0000000000007bdf\n"
".quad 0x0000000000000024,0x0000002e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000a75,0x0000000000000002,0x0000000000000000,0x0000000000007c03\n"
".quad 0x000000000000001c,0x0000002e00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x000000080000158b,0x0000000000000003,0x0000000000000000,0x0000000000007c1f\n"
".quad 0x0000000000000030,0x0000002e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000009eb,0x0000000000100006,0x0000000000000000,0x0000000000007c1f\n"
".quad 0x0000000000000288,0x0900003c00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000018b2,0x0000000000000002,0x0000000000000000,0x0000000000007ea7\n"
".quad 0x0000000000000020,0x0000003200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000a18,0x0000000000000002,0x0000000000000000,0x0000000000007ec7\n"
".quad 0x000000000000001c,0x0000003200000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001880,0x0000000000000003,0x0000000000000000,0x0000000000007ee3\n"
".quad 0x0000000000000030,0x0000003200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000990,0x0000000000100006,0x0000000000000000,0x0000000000007ee3\n"
".quad 0x0000000000000250,0x0900003a00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000145d,0x0000000000000002,0x0000000000000000,0x0000000000008133\n"
".quad 0x000000000000001c,0x0000003600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000009bc,0x0000000000000002,0x0000000000000000,0x000000000000814f\n"
".quad 0x000000000000001c,0x0000003600000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x000000080000142c,0x0000000000000003,0x0000000000000000,0x000000000000816b\n"
".quad 0x0000000000000030,0x0000003600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000935,0x0000000000100006,0x0000000000000000,0x000000000000816b\n"
".quad 0x0000000000000218,0x0900003800000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001557,0x0000000000000002,0x0000000000000000,0x0000000000008383\n"
".quad 0x0000000000000018,0x0000003a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000961,0x0000000000000002,0x0000000000000000,0x000000000000839b\n"
".quad 0x000000000000001c,0x0000003a00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001526,0x0000000000000003,0x0000000000000000,0x00000000000083b7\n"
".quad 0x0000000000000030,0x0000003a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000008da,0x0000000000100006,0x0000000000000000,0x00000000000083b7\n"
".quad 0x00000000000001e8,0x0900003600000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001b7e,0x0000000000000002,0x0000000000000000,0x000000000000859f\n"
".quad 0x0000000000000014,0x0000003e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000906,0x0000000000000002,0x0000000000000000,0x00000000000085b3\n"
".quad 0x000000000000001c,0x0000003e00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001b4d,0x0000000000000003,0x0000000000000000,0x00000000000085cf\n"
".quad 0x0000000000000030,0x0000003e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000881,0x0000000000100006,0x0000000000000000,0x00000000000085cf\n"
".quad 0x00000000000001b8,0x0900003400000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000019e5,0x0000000000000002,0x0000000000000000,0x0000000000008787\n"
".quad 0x0000000000000010,0x0000004200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000008ac,0x0000000000000002,0x0000000000000000,0x0000000000008797\n"
".quad 0x000000000000001c,0x0000004200000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000019b5,0x0000000000000003,0x0000000000000000,0x00000000000087b3\n"
".quad 0x0000000000000030,0x0000004200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000828,0x0000000000100006,0x0000000000000000,0x00000000000087b3\n"
".quad 0x0000000000000188,0x0900003200000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000016b7,0x0000000000000002,0x0000000000000000,0x000000000000893b\n"
".quad 0x000000000000000c,0x0000004600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000853,0x0000000000000002,0x0000000000000000,0x0000000000008947\n"
".quad 0x000000000000001c,0x0000004600000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001687,0x0000000000000003,0x0000000000000000,0x0000000000008963\n"
".quad 0x0000000000000030,0x0000004600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000007cf,0x0000000000100006,0x0000000000000000,0x0000000000008963\n"
".quad 0x0000000000000158,0x0900003000000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000013f9,0x0000000000000002,0x0000000000000000,0x0000000000008abb\n"
".quad 0x0000000000000008,0x0000004a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000007fa,0x0000000000000002,0x0000000000000000,0x0000000000008ac3\n"
".quad 0x000000000000001c,0x0000004a00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000013c9,0x0000000000000003,0x0000000000000000,0x0000000000008adf\n"
".quad 0x0000000000000030,0x0000004a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000776,0x0000000000100006,0x0000000000000000,0x0000000000008adf\n"
".quad 0x0000000000000128,0x0900002e00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000012c8,0x0000000000000002,0x0000000000000000,0x0000000000008c07\n"
".quad 0x0000000000000008,0x0000004e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000007a1,0x0000000000000002,0x0000000000000000,0x0000000000008c0f\n"
".quad 0x000000000000001c,0x0000004e00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001298,0x0000000000000003,0x0000000000000000,0x0000000000008c2b\n"
".quad 0x0000000000000030,0x0000004e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000717,0x0000000000100006,0x0000000000000000,0x0000000000008c2b\n"
".quad 0x0000000000000660,0x0f00002c00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001262,0x0000000000000002,0x0000000000000000,0x000000000000928b\n"
".quad 0x0000000000000024,0x0000005200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000745,0x0000000000000002,0x0000000000000000,0x00000000000092af\n"
".quad 0x000000000000001c,0x0000005200000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x000000080000122f,0x0000000000000003,0x0000000000000000,0x00000000000092cb\n"
".quad 0x0000000000000030,0x0000005200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000006b8,0x0000000000100006,0x0000000000000000,0x00000000000092cb\n"
".quad 0x00000000000005e8,0x0f00002a00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000ff4,0x0000000000000002,0x0000000000000000,0x00000000000098b3\n"
".quad 0x0000000000000020,0x0000005600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000006e6,0x0000000000000002,0x0000000000000000,0x00000000000098d3\n"
".quad 0x000000000000001c,0x0000005600000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800000fc1,0x0000000000000003,0x0000000000000000,0x00000000000098ef\n"
".quad 0x0000000000000030,0x0000005600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000659,0x0000000000100006,0x0000000000000000,0x00000000000098ef\n"
".quad 0x0000000000000570,0x0e00002800000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001393,0x0000000000000002,0x0000000000000000,0x0000000000009e5f\n"
".quad 0x000000000000001c,0x0000005a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000687,0x0000000000000002,0x0000000000000000,0x0000000000009e7b\n"
".quad 0x000000000000001c,0x0000005a00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001360,0x0000000000000003,0x0000000000000000,0x0000000000009e97\n"
".quad 0x0000000000000030,0x0000005a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000005fc,0x0000000000100006,0x0000000000000000,0x0000000000009e97\n"
".quad 0x00000000000004f8,0x0e00002600000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001b18,0x0000000000000002,0x0000000000000000,0x000000000000a38f\n"
".quad 0x0000000000000018,0x0000005e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000629,0x0000000000000002,0x0000000000000000,0x000000000000a3a7\n"
".quad 0x000000000000001c,0x0000005e00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001ae6,0x0000000000000003,0x0000000000000000,0x000000000000a3c3\n"
".quad 0x0000000000000030,0x0000005e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000059f,0x0000000000100006,0x0000000000000000,0x000000000000a3c3\n"
".quad 0x0000000000000480,0x0d00002400000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001c47,0x0000000000000002,0x0000000000000000,0x000000000000a843\n"
".quad 0x0000000000000018,0x0000006200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000005cc,0x0000000000000002,0x0000000000000000,0x000000000000a85b\n"
".quad 0x000000000000001c,0x0000006200000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001c15,0x0000000000000003,0x0000000000000000,0x000000000000a877\n"
".quad 0x0000000000000030,0x0000006200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000542,0x0000000000100006,0x0000000000000000,0x000000000000a877\n"
".quad 0x0000000000000418,0x0c00002200000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001191,0x0000000000000002,0x0000000000000000,0x000000000000ac8f\n"
".quad 0x0000000000000014,0x0000006600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000056f,0x0000000000000002,0x0000000000000000,0x000000000000aca3\n"
".quad 0x000000000000001c,0x0000006600000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x000000080000115f,0x0000000000000003,0x0000000000000000,0x000000000000acbf\n"
".quad 0x0000000000000030,0x0000006600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000004e7,0x0000000000100006,0x0000000000000000,0x000000000000acbf\n"
".quad 0x00000000000003b0,0x0b00002000000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000014f2,0x0000000000000002,0x0000000000000000,0x000000000000b06f\n"
".quad 0x0000000000000010,0x0000006a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000513,0x0000000000000002,0x0000000000000000,0x000000000000b07f\n"
".quad 0x000000000000001c,0x0000006a00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000014c1,0x0000000000000003,0x0000000000000000,0x000000000000b09b\n"
".quad 0x0000000000000030,0x0000006a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000048c,0x0000000000100006,0x0000000000000000,0x000000000000b09b\n"
".quad 0x0000000000000358,0x0b00001e00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000010c2,0x0000000000000002,0x0000000000000000,0x000000000000b3f3\n"
".quad 0x000000000000000c,0x0000006e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000004b8,0x0000000000000002,0x0000000000000000,0x000000000000b3ff\n"
".quad 0x000000000000001c,0x0000006e00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001091,0x0000000000000003,0x0000000000000000,0x000000000000b41b\n"
".quad 0x0000000000000030,0x0000006e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000431,0x0000000000100006,0x0000000000000000,0x000000000000b41b\n"
".quad 0x0000000000000300,0x0b00001c00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000f28,0x0000000000000002,0x0000000000000000,0x000000000000b71b\n"
".quad 0x000000000000000c,0x0000007200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000045d,0x0000000000000002,0x0000000000000000,0x000000000000b727\n"
".quad 0x000000000000001c,0x0000007200000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800000ef7,0x0000000000000003,0x0000000000000000,0x000000000000b743\n"
".quad 0x0000000000000030,0x0000007200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000003d6,0x0000000000100006,0x0000000000000000,0x000000000000b743\n"
".quad 0x00000000000002b8,0x0b00001a00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001ddc,0x0000000000000002,0x0000000000000000,0x000000000000b9fb\n"
".quad 0x000000000000000c,0x0000007600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000402,0x0000000000000002,0x0000000000000000,0x000000000000ba07\n"
".quad 0x000000000000001c,0x0000007600000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001dab,0x0000000000000003,0x0000000000000000,0x000000000000ba23\n"
".quad 0x0000000000000030,0x0000007600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000377,0x0000000000100006,0x0000000000000000,0x000000000000ba23\n"
".quad 0x0000000000000680,0x0f00001800000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001129,0x0000000000000002,0x0000000000000000,0x000000000000c0a3\n"
".quad 0x000000000000002c,0x0000007a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000003a5,0x0000000000000002,0x0000000000000000,0x000000000000c0cf\n"
".quad 0x000000000000001c,0x0000007a00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000010f6,0x0000000000000003,0x0000000000000000,0x000000000000c0eb\n"
".quad 0x0000000000000030,0x0000007a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000318,0x0000000000100006,0x0000000000000000,0x000000000000c0eb\n"
".quad 0x0000000000000608,0x0f00001600000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000ec1,0x0000000000000002,0x0000000000000000,0x000000000000c6f3\n"
".quad 0x0000000000000028,0x0000007e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000346,0x0000000000000002,0x0000000000000000,0x000000000000c71b\n"
".quad 0x000000000000001c,0x0000007e00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800000e8e,0x0000000000000003,0x0000000000000000,0x000000000000c737\n"
".quad 0x0000000000000030,0x0000007e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000002b9,0x0000000000100006,0x0000000000000000,0x000000000000c737\n"
".quad 0x0000000000000590,0x0e00001400000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000011f9,0x0000000000000002,0x0000000000000000,0x000000000000ccc7\n"
".quad 0x0000000000000024,0x0000008200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000002e7,0x0000000000000002,0x0000000000000000,0x000000000000cceb\n"
".quad 0x000000000000001c,0x0000008200000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000011c6,0x0000000000000003,0x0000000000000000,0x000000000000cd07\n"
".quad 0x0000000000000030,0x0000008200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000025c,0x0000000000100006,0x0000000000000000,0x000000000000cd07\n"
".quad 0x0000000000000518,0x0e00001200000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001980,0x0000000000000002,0x0000000000000000,0x000000000000d21f\n"
".quad 0x0000000000000020,0x0000008600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000289,0x0000000000000002,0x0000000000000000,0x000000000000d23f\n"
".quad 0x000000000000001c,0x0000008600000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x000000080000194e,0x0000000000000003,0x0000000000000000,0x000000000000d25b\n"
".quad 0x0000000000000030,0x0000008600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000001ff,0x0000000000100006,0x0000000000000000,0x000000000000d25b\n"
".quad 0x00000000000004a0,0x0d00001000000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001ab1,0x0000000000000002,0x0000000000000000,0x000000000000d6fb\n"
".quad 0x0000000000000020,0x0000008a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000022c,0x0000000000000002,0x0000000000000000,0x000000000000d71b\n"
".quad 0x000000000000001c,0x0000008a00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001a7f,0x0000000000000003,0x0000000000000000,0x000000000000d737\n"
".quad 0x0000000000000030,0x0000008a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000001a2,0x0000000000100006,0x0000000000000000,0x000000000000d737\n"
".quad 0x0000000000000438,0x0c00000e00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000105c,0x0000000000000002,0x0000000000000000,0x000000000000db6f\n"
".quad 0x000000000000001c,0x0000008e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000001cf,0x0000000000000002,0x0000000000000000,0x000000000000db8b\n"
".quad 0x000000000000001c,0x0000008e00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x000000080000102a,0x0000000000000003,0x0000000000000000,0x000000000000dba7\n"
".quad 0x0000000000000030,0x0000008e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000147,0x0000000000100006,0x0000000000000000,0x000000000000dba7\n"
".quad 0x00000000000003d0,0x0b00000c00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x000000010000132c,0x0000000000000002,0x0000000000000000,0x000000000000df77\n"
".quad 0x0000000000000018,0x0000009200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000173,0x0000000000000002,0x0000000000000000,0x000000000000df8f\n"
".quad 0x000000000000001c,0x0000009200000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x00000008000012fb,0x0000000000000003,0x0000000000000000,0x000000000000dfab\n"
".quad 0x0000000000000030,0x0000009200000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000000ec,0x0000000000100006,0x0000000000000000,0x000000000000dfab\n"
".quad 0x0000000000000378,0x0b00000a00000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000f8d,0x0000000000000002,0x0000000000000000,0x000000000000e323\n"
".quad 0x0000000000000014,0x0000009600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000118,0x0000000000000002,0x0000000000000000,0x000000000000e337\n"
".quad 0x000000000000001c,0x0000009600000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800000f5c,0x0000000000000003,0x0000000000000000,0x000000000000e353\n"
".quad 0x0000000000000030,0x0000009600000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000091,0x0000000000100006,0x0000000000000000,0x000000000000e353\n"
".quad 0x0000000000000320,0x0b00000800000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001d77,0x0000000000000002,0x0000000000000000,0x000000000000e673\n"
".quad 0x0000000000000014,0x0000009a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x00000001000000bd,0x0000000000000002,0x0000000000000000,0x000000000000e687\n"
".quad 0x000000000000001c,0x0000009a00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001d46,0x0000000000000003,0x0000000000000000,0x000000000000e6a3\n"
".quad 0x0000000000000030,0x0000009a00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000036,0x0000000000100006,0x0000000000000000,0x000000000000e6a3\n"
".quad 0x00000000000002d8,0x0b00000600000003,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001d12,0x0000000000000002,0x0000000000000000,0x000000000000e97b\n"
".quad 0x0000000000000014,0x0000009e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100000062,0x0000000000000002,0x0000000000000000,0x000000000000e98f\n"
".quad 0x000000000000001c,0x0000009e00000000,0x0000000000000001,0x0000000000000000\n"
".quad 0x0000000800001ce1,0x0000000000000003,0x0000000000000000,0x000000000000e9ab\n"
".quad 0x0000000000000030,0x0000009e00000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x0000000100001e10,0x0000000000000002,0x0000000000000000,0x000000000000e9ab\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000000000008,0x0000000000000000\n"
".quad 0x0000000900001e1f,0x0000000000000000,0x0000000000000000,0x000000000000e9af\n"
".quad 0x0000000000000010,0x000000a200000003,0x0000000000000004,0x0000000000000010\n"
".quad 0x000000010000001b,0x0000000000000003,0x0000000000000000,0x000000000000e9bf\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000000000004,0x0000000000000000\n"
".quad 0x7472747368732e00,0x747274732e006261,0x746d79732e006261,0x672e766e2e006261\n"
".quad 0x6e692e6c61626f6c,0x672e766e2e007469,0x742e006c61626f6c,0x36315a5f2e747865\n"
".quad 0x6953656375646572,0x73736150656c676e,0x30624c45316a4c49,0x6650664b50764545\n"
".quad 0x6e692e766e2e006a,0x7236315a5f2e6f66,0x6e69536563756465,0x4973736150656c67\n"
".quad 0x4530624c45316a4c,0x6a6650664b507645,0x5f2e747865742e00,0x637564657236315a\n"
".quad 0x50656c676e695365,0x45326a4c49737361,0x4b5076454530624c,0x766e2e006a665066\n"
".quad 0x5a5f2e6f666e692e,0x6563756465723631,0x6150656c676e6953,0x4c45326a4c497373\n"
".quad 0x664b507645453062,0x7865742e006a6650,0x657236315a5f2e74,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x454530624c45346a,0x006a6650664b5076,0x6f666e692e766e2e\n"
".quad 0x64657236315a5f2e,0x6c676e6953656375,0x6a4c497373615065,0x76454530624c4534\n"
".quad 0x2e006a6650664b50,0x315a5f2e74786574,0x5365637564657236,0x736150656c676e69\n"
".quad 0x624c45386a4c4973,0x50664b5076454530,0x692e766e2e006a66,0x36315a5f2e6f666e\n"
".quad 0x6953656375646572,0x73736150656c676e,0x30624c45386a4c49,0x6650664b50764545\n"
".quad 0x2e747865742e006a,0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150\n"
".quad 0x76454530624c4536,0x2e006a6650664b50,0x2e6f666e692e766e,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x316a4c4973736150,0x76454530624c4536,0x2e006a6650664b50\n"
".quad 0x315a5f2e74786574,0x5365637564657236,0x736150656c676e69,0x4c4532336a4c4973\n"
".quad 0x664b507645453062,0x2e766e2e006a6650,0x315a5f2e6f666e69,0x5365637564657236\n"
".quad 0x736150656c676e69,0x4c4532336a4c4973,0x664b507645453062,0x7865742e006a6650\n"
".quad 0x657236315a5f2e74,0x676e695365637564,0x4c4973736150656c,0x4530624c4534366a\n"
".quad 0x6a6650664b507645,0x666e692e766e2e00,0x657236315a5f2e6f,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x4530624c4534366a,0x6a6650664b507645,0x5f2e747865742e00\n"
".quad 0x637564657236315a,0x50656c676e695365,0x32316a4c49737361,0x76454530624c4538\n"
".quad 0x2e006a6650664b50,0x2e6f666e692e766e,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x316a4c4973736150,0x454530624c453832,0x006a6650664b5076,0x5a5f2e747865742e\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x3635326a4c497373,0x5076454530624c45\n"
".quad 0x6e2e006a6650664b,0x5f2e6f666e692e76,0x637564657236315a,0x50656c676e695365\n"
".quad 0x35326a4c49737361,0x76454530624c4536,0x2e006a6650664b50,0x315a5f2e74786574\n"
".quad 0x5365637564657236,0x736150656c676e69,0x453231356a4c4973,0x4b5076454530624c\n"
".quad 0x766e2e006a665066,0x5a5f2e6f666e692e,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x3231356a4c497373,0x5076454530624c45,0x742e006a6650664b,0x36315a5f2e747865\n"
".quad 0x6953656375646572,0x73736150656c676e,0x31624c45316a4c49,0x6650664b50764545\n"
".quad 0x6e692e766e2e006a,0x7236315a5f2e6f66,0x6e69536563756465,0x4973736150656c67\n"
".quad 0x4531624c45316a4c,0x6a6650664b507645,0x5f2e747865742e00,0x637564657236315a\n"
".quad 0x50656c676e695365,0x45326a4c49737361,0x4b5076454531624c,0x766e2e006a665066\n"
".quad 0x5a5f2e6f666e692e,0x6563756465723631,0x6150656c676e6953,0x4c45326a4c497373\n"
".quad 0x664b507645453162,0x7865742e006a6650,0x657236315a5f2e74,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x454531624c45346a,0x006a6650664b5076,0x6f666e692e766e2e\n"
".quad 0x64657236315a5f2e,0x6c676e6953656375,0x6a4c497373615065,0x76454531624c4534\n"
".quad 0x2e006a6650664b50,0x315a5f2e74786574,0x5365637564657236,0x736150656c676e69\n"
".quad 0x624c45386a4c4973,0x50664b5076454531,0x692e766e2e006a66,0x36315a5f2e6f666e\n"
".quad 0x6953656375646572,0x73736150656c676e,0x31624c45386a4c49,0x6650664b50764545\n"
".quad 0x2e747865742e006a,0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150\n"
".quad 0x76454531624c4536,0x2e006a6650664b50,0x2e6f666e692e766e,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x316a4c4973736150,0x76454531624c4536,0x2e006a6650664b50\n"
".quad 0x315a5f2e74786574,0x5365637564657236,0x736150656c676e69,0x4c4532336a4c4973\n"
".quad 0x664b507645453162,0x2e766e2e006a6650,0x315a5f2e6f666e69,0x5365637564657236\n"
".quad 0x736150656c676e69,0x4c4532336a4c4973,0x664b507645453162,0x7865742e006a6650\n"
".quad 0x657236315a5f2e74,0x676e695365637564,0x4c4973736150656c,0x4531624c4534366a\n"
".quad 0x6a6650664b507645,0x666e692e766e2e00,0x657236315a5f2e6f,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x4531624c4534366a,0x6a6650664b507645,0x5f2e747865742e00\n"
".quad 0x637564657236315a,0x50656c676e695365,0x32316a4c49737361,0x76454531624c4538\n"
".quad 0x2e006a6650664b50,0x2e6f666e692e766e,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x316a4c4973736150,0x454531624c453832,0x006a6650664b5076,0x5a5f2e747865742e\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x3635326a4c497373,0x5076454531624c45\n"
".quad 0x6e2e006a6650664b,0x5f2e6f666e692e76,0x637564657236315a,0x50656c676e695365\n"
".quad 0x35326a4c49737361,0x76454531624c4536,0x2e006a6650664b50,0x315a5f2e74786574\n"
".quad 0x5365637564657236,0x736150656c676e69,0x453231356a4c4973,0x4b5076454531624c\n"
".quad 0x766e2e006a665066,0x5a5f2e6f666e692e,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x3231356a4c497373,0x5076454531624c45,0x742e006a6650664b,0x35315a5f2e747865\n"
".quad 0x754d656375646572,0x497373615069746c,0x4530624c45316a4c,0x6a6650664b507645\n"
".quad 0x666e692e766e2e00,0x657235315a5f2e6f,0x746c754d65637564,0x6a4c497373615069\n"
".quad 0x76454530624c4531,0x2e006a6650664b50,0x315a5f2e74786574,0x4d65637564657235\n"
".quad 0x7373615069746c75,0x30624c45326a4c49,0x6650664b50764545,0x6e692e766e2e006a\n"
".quad 0x7235315a5f2e6f66,0x6c754d6563756465,0x4c49737361506974,0x454530624c45326a\n"
".quad 0x006a6650664b5076,0x5a5f2e747865742e,0x6563756465723531,0x73615069746c754d\n"
".quad 0x624c45346a4c4973,0x50664b5076454530,0x692e766e2e006a66,0x35315a5f2e6f666e\n"
".quad 0x754d656375646572,0x497373615069746c,0x4530624c45346a4c,0x6a6650664b507645\n"
".quad 0x5f2e747865742e00,0x637564657235315a,0x615069746c754d65,0x4c45386a4c497373\n"
".quad 0x664b507645453062,0x2e766e2e006a6650,0x315a5f2e6f666e69,0x4d65637564657235\n"
".quad 0x7373615069746c75,0x30624c45386a4c49,0x6650664b50764545,0x2e747865742e006a\n"
".quad 0x7564657235315a5f,0x5069746c754d6563,0x36316a4c49737361,0x5076454530624c45\n"
".quad 0x6e2e006a6650664b,0x5f2e6f666e692e76,0x637564657235315a,0x615069746c754d65\n"
".quad 0x4536316a4c497373,0x4b5076454530624c,0x65742e006a665066,0x7235315a5f2e7478\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x4530624c4532336a,0x6a6650664b507645\n"
".quad 0x666e692e766e2e00,0x657235315a5f2e6f,0x746c754d65637564,0x6a4c497373615069\n"
".quad 0x454530624c453233,0x006a6650664b5076,0x5a5f2e747865742e,0x6563756465723531\n"
".quad 0x73615069746c754d,0x4c4534366a4c4973,0x664b507645453062,0x2e766e2e006a6650\n"
".quad 0x315a5f2e6f666e69,0x4d65637564657235,0x7373615069746c75,0x624c4534366a4c49\n"
".quad 0x50664b5076454530,0x747865742e006a66,0x64657235315a5f2e,0x69746c754d656375\n"
".quad 0x316a4c4973736150,0x454530624c453832,0x006a6650664b5076,0x6f666e692e766e2e\n"
".quad 0x64657235315a5f2e,0x69746c754d656375,0x316a4c4973736150,0x454530624c453832\n"
".quad 0x006a6650664b5076,0x5a5f2e747865742e,0x6563756465723531,0x73615069746c754d\n"
".quad 0x453635326a4c4973,0x4b5076454530624c,0x766e2e006a665066,0x5a5f2e6f666e692e\n"
".quad 0x6563756465723531,0x73615069746c754d,0x453635326a4c4973,0x4b5076454530624c\n"
".quad 0x65742e006a665066,0x7235315a5f2e7478,0x6c754d6563756465,0x4c49737361506974\n"
".quad 0x30624c453231356a,0x6650664b50764545,0x6e692e766e2e006a,0x7235315a5f2e6f66\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x30624c453231356a,0x6650664b50764545\n"
".quad 0x2e747865742e006a,0x7564657235315a5f,0x5069746c754d6563,0x45316a4c49737361\n"
".quad 0x4b5076454531624c,0x766e2e006a665066,0x5a5f2e6f666e692e,0x6563756465723531\n"
".quad 0x73615069746c754d,0x624c45316a4c4973,0x50664b5076454531,0x747865742e006a66\n"
".quad 0x64657235315a5f2e,0x69746c754d656375,0x326a4c4973736150,0x5076454531624c45\n"
".quad 0x6e2e006a6650664b,0x5f2e6f666e692e76,0x637564657235315a,0x615069746c754d65\n"
".quad 0x4c45326a4c497373,0x664b507645453162,0x7865742e006a6650,0x657235315a5f2e74\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x76454531624c4534,0x2e006a6650664b50\n"
".quad 0x2e6f666e692e766e,0x7564657235315a5f,0x5069746c754d6563,0x45346a4c49737361\n"
".quad 0x4b5076454531624c,0x65742e006a665066,0x7235315a5f2e7478,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x454531624c45386a,0x006a6650664b5076,0x6f666e692e766e2e\n"
".quad 0x64657235315a5f2e,0x69746c754d656375,0x386a4c4973736150,0x5076454531624c45\n"
".quad 0x742e006a6650664b,0x35315a5f2e747865,0x754d656375646572,0x497373615069746c\n"
".quad 0x31624c4536316a4c,0x6650664b50764545,0x6e692e766e2e006a,0x7235315a5f2e6f66\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x4531624c4536316a,0x6a6650664b507645\n"
".quad 0x5f2e747865742e00,0x637564657235315a,0x615069746c754d65,0x4532336a4c497373\n"
".quad 0x4b5076454531624c,0x766e2e006a665066,0x5a5f2e6f666e692e,0x6563756465723531\n"
".quad 0x73615069746c754d,0x4c4532336a4c4973,0x664b507645453162,0x7865742e006a6650\n"
".quad 0x657235315a5f2e74,0x746c754d65637564,0x6a4c497373615069,0x454531624c453436\n"
".quad 0x006a6650664b5076,0x6f666e692e766e2e,0x64657235315a5f2e,0x69746c754d656375\n"
".quad 0x366a4c4973736150,0x76454531624c4534,0x2e006a6650664b50,0x315a5f2e74786574\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x4c453832316a4c49,0x664b507645453162\n"
".quad 0x2e766e2e006a6650,0x315a5f2e6f666e69,0x4d65637564657235,0x7373615069746c75\n"
".quad 0x4c453832316a4c49,0x664b507645453162,0x7865742e006a6650,0x657235315a5f2e74\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x4531624c45363532,0x6a6650664b507645\n"
".quad 0x666e692e766e2e00,0x657235315a5f2e6f,0x746c754d65637564,0x6a4c497373615069\n"
".quad 0x4531624c45363532,0x6a6650664b507645,0x5f2e747865742e00,0x637564657235315a\n"
".quad 0x615069746c754d65,0x3231356a4c497373,0x5076454531624c45,0x6e2e006a6650664b\n"
".quad 0x5f2e6f666e692e76,0x637564657235315a,0x615069746c754d65,0x3231356a4c497373\n"
".quad 0x5076454531624c45,0x6e2e006a6650664b,0x6465726168732e76,0x64657236315a5f2e\n"
".quad 0x6c676e6953656375,0x6a4c497373615065,0x4530624c45363532,0x6a6650664b507645\n"
".quad 0x6e6f632e766e2e00,0x5f2e31746e617473,0x637564657236315a,0x50656c676e695365\n"
".quad 0x35326a4c49737361,0x76454530624c4536,0x2e006a6650664b50,0x65726168732e766e\n"
".quad 0x657236315a5f2e64,0x676e695365637564,0x4c4973736150656c,0x454531624c45326a\n"
".quad 0x006a6650664b5076,0x736e6f632e766e2e,0x5a5f2e31746e6174,0x6563756465723631\n"
".quad 0x6150656c676e6953,0x4c45326a4c497373,0x664b507645453162,0x2e766e2e006a6650\n"
".quad 0x5f2e646572616873,0x637564657236315a,0x50656c676e695365,0x45346a4c49737361\n"
".quad 0x4b5076454530624c,0x766e2e006a665066,0x6e6174736e6f632e,0x7236315a5f2e3174\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x4530624c45346a4c,0x6a6650664b507645\n"
".quad 0x6168732e766e2e00,0x36315a5f2e646572,0x6953656375646572,0x73736150656c676e\n"
".quad 0x4c453635326a4c49,0x664b507645453162,0x2e766e2e006a6650,0x746e6174736e6f63\n"
".quad 0x657236315a5f2e31,0x676e695365637564,0x4c4973736150656c,0x31624c453635326a\n"
".quad 0x6650664b50764545,0x68732e766e2e006a,0x315a5f2e64657261,0x5365637564657236\n"
".quad 0x736150656c676e69,0x4c4536316a4c4973,0x664b507645453062,0x2e766e2e006a6650\n"
".quad 0x746e6174736e6f63,0x657236315a5f2e31,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x4530624c4536316a,0x6a6650664b507645,0x6168732e766e2e00,0x36315a5f2e646572\n"
".quad 0x6953656375646572,0x73736150656c676e,0x31624c45346a4c49,0x6650664b50764545\n"
".quad 0x6f632e766e2e006a,0x2e31746e6174736e,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x346a4c4973736150,0x5076454531624c45,0x6e2e006a6650664b,0x6465726168732e76\n"
".quad 0x64657236315a5f2e,0x6c676e6953656375,0x6a4c497373615065,0x4530624c45323135\n"
".quad 0x6a6650664b507645,0x6e6f632e766e2e00,0x5f2e31746e617473,0x637564657236315a\n"
".quad 0x50656c676e695365,0x31356a4c49737361,0x76454530624c4532,0x2e006a6650664b50\n"
".quad 0x65726168732e766e,0x657236315a5f2e64,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x4531624c4536316a,0x6a6650664b507645,0x6e6f632e766e2e00,0x5f2e31746e617473\n"
".quad 0x637564657236315a,0x50656c676e695365,0x36316a4c49737361,0x5076454531624c45\n"
".quad 0x6e2e006a6650664b,0x6465726168732e76,0x64657236315a5f2e,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x4530624c45383231,0x6a6650664b507645,0x6e6f632e766e2e00\n"
".quad 0x5f2e31746e617473,0x637564657236315a,0x50656c676e695365,0x32316a4c49737361\n"
".quad 0x76454530624c4538,0x2e006a6650664b50,0x65726168732e766e,0x657236315a5f2e64\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x31624c453231356a,0x6650664b50764545\n"
".quad 0x6f632e766e2e006a,0x2e31746e6174736e,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x356a4c4973736150,0x454531624c453231,0x006a6650664b5076,0x726168732e766e2e\n"
".quad 0x7235315a5f2e6465,0x6c754d6563756465,0x4c49737361506974,0x454530624c45316a\n"
".quad 0x006a6650664b5076,0x736e6f632e766e2e,0x5a5f2e31746e6174,0x6563756465723531\n"
".quad 0x73615069746c754d,0x624c45316a4c4973,0x50664b5076454530,0x732e766e2e006a66\n"
".quad 0x5a5f2e6465726168,0x6563756465723631,0x6150656c676e6953,0x4c45386a4c497373\n"
".quad 0x664b507645453062,0x2e766e2e006a6650,0x746e6174736e6f63,0x657236315a5f2e31\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x454530624c45386a,0x006a6650664b5076\n"
".quad 0x726168732e766e2e,0x7236315a5f2e6465,0x6e69536563756465,0x4973736150656c67\n"
".quad 0x624c453832316a4c,0x50664b5076454531,0x632e766e2e006a66,0x31746e6174736e6f\n"
".quad 0x64657236315a5f2e,0x6c676e6953656375,0x6a4c497373615065,0x4531624c45383231\n"
".quad 0x6a6650664b507645,0x6168732e766e2e00,0x35315a5f2e646572,0x754d656375646572\n"
".quad 0x497373615069746c,0x4530624c45326a4c,0x6a6650664b507645,0x6e6f632e766e2e00\n"
".quad 0x5f2e31746e617473,0x637564657235315a,0x615069746c754d65,0x4c45326a4c497373\n"
".quad 0x664b507645453062,0x2e766e2e006a6650,0x5f2e646572616873,0x637564657235315a\n"
".quad 0x615069746c754d65,0x4534366a4c497373,0x4b5076454530624c,0x766e2e006a665066\n"
".quad 0x6e6174736e6f632e,0x7235315a5f2e3174,0x6c754d6563756465,0x4c49737361506974\n"
".quad 0x4530624c4534366a,0x6a6650664b507645,0x6168732e766e2e00,0x35315a5f2e646572\n"
".quad 0x754d656375646572,0x497373615069746c,0x4531624c45316a4c,0x6a6650664b507645\n"
".quad 0x6168732e766e2e00,0x36315a5f2e646572,0x6953656375646572,0x73736150656c676e\n"
".quad 0x31624c45386a4c49,0x6650664b50764545,0x6f632e766e2e006a,0x2e31746e6174736e\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x386a4c4973736150,0x5076454531624c45\n"
".quad 0x6e2e006a6650664b,0x6465726168732e76,0x64657235315a5f2e,0x69746c754d656375\n"
".quad 0x336a4c4973736150,0x76454530624c4532,0x2e006a6650664b50,0x74736e6f632e766e\n"
".quad 0x315a5f2e31746e61,0x4d65637564657235,0x7373615069746c75,0x624c4532336a4c49\n"
".quad 0x50664b5076454530,0x732e766e2e006a66,0x5a5f2e6465726168,0x6563756465723531\n"
".quad 0x73615069746c754d,0x453635326a4c4973,0x4b5076454530624c,0x766e2e006a665066\n"
".quad 0x6e6174736e6f632e,0x7235315a5f2e3174,0x6c754d6563756465,0x4c49737361506974\n"
".quad 0x30624c453635326a,0x6650664b50764545,0x68732e766e2e006a,0x315a5f2e64657261\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x31624c45326a4c49,0x6650664b50764545\n"
".quad 0x68732e766e2e006a,0x315a5f2e64657261,0x4d65637564657235,0x7373615069746c75\n"
".quad 0x624c4534366a4c49,0x50664b5076454531,0x632e766e2e006a66,0x31746e6174736e6f\n"
".quad 0x64657235315a5f2e,0x69746c754d656375,0x366a4c4973736150,0x76454531624c4534\n"
".quad 0x2e006a6650664b50,0x65726168732e766e,0x657235315a5f2e64,0x746c754d65637564\n"
".quad 0x6a4c497373615069,0x76454530624c4534,0x2e006a6650664b50,0x74736e6f632e766e\n"
".quad 0x315a5f2e31746e61,0x4d65637564657235,0x7373615069746c75,0x30624c45346a4c49\n"
".quad 0x6650664b50764545,0x68732e766e2e006a,0x315a5f2e64657261,0x4d65637564657235\n"
".quad 0x7373615069746c75,0x624c4532336a4c49,0x50664b5076454531,0x632e766e2e006a66\n"
".quad 0x31746e6174736e6f,0x64657235315a5f2e,0x69746c754d656375,0x336a4c4973736150\n"
".quad 0x76454531624c4532,0x2e006a6650664b50,0x65726168732e766e,0x657235315a5f2e64\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x4531624c45363532,0x6a6650664b507645\n"
".quad 0x6e6f632e766e2e00,0x5f2e31746e617473,0x637564657235315a,0x615069746c754d65\n"
".quad 0x3635326a4c497373,0x5076454531624c45,0x6e2e006a6650664b,0x6465726168732e76\n"
".quad 0x64657235315a5f2e,0x69746c754d656375,0x346a4c4973736150,0x5076454531624c45\n"
".quad 0x6e2e006a6650664b,0x6174736e6f632e76,0x35315a5f2e31746e,0x754d656375646572\n"
".quad 0x497373615069746c,0x4531624c45346a4c,0x6a6650664b507645,0x6168732e766e2e00\n"
".quad 0x35315a5f2e646572,0x754d656375646572,0x497373615069746c,0x624c453231356a4c\n"
".quad 0x50664b5076454530,0x632e766e2e006a66,0x31746e6174736e6f,0x64657235315a5f2e\n"
".quad 0x69746c754d656375,0x356a4c4973736150,0x454530624c453231,0x006a6650664b5076\n"
".quad 0x726168732e766e2e,0x7235315a5f2e6465,0x6c754d6563756465,0x4c49737361506974\n"
".quad 0x30624c453832316a,0x6650664b50764545,0x6f632e766e2e006a,0x2e31746e6174736e\n"
".quad 0x7564657235315a5f,0x5069746c754d6563,0x32316a4c49737361,0x76454530624c4538\n"
".quad 0x2e006a6650664b50,0x65726168732e766e,0x657235315a5f2e64,0x746c754d65637564\n"
".quad 0x6a4c497373615069,0x4531624c45323135,0x6a6650664b507645,0x6e6f632e766e2e00\n"
".quad 0x5f2e31746e617473,0x637564657235315a,0x615069746c754d65,0x3231356a4c497373\n"
".quad 0x5076454531624c45,0x6e2e006a6650664b,0x6465726168732e76,0x64657236315a5f2e\n"
".quad 0x6c676e6953656375,0x6a4c497373615065,0x454530624c453436,0x006a6650664b5076\n"
".quad 0x736e6f632e766e2e,0x5a5f2e31746e6174,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x4534366a4c497373,0x4b5076454530624c,0x766e2e006a665066,0x2e6465726168732e\n"
".quad 0x7564657235315a5f,0x5069746c754d6563,0x45386a4c49737361,0x4b5076454530624c\n"
".quad 0x766e2e006a665066,0x6e6174736e6f632e,0x7235315a5f2e3174,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x454530624c45386a,0x006a6650664b5076,0x726168732e766e2e\n"
".quad 0x7235315a5f2e6465,0x6c754d6563756465,0x4c49737361506974,0x31624c453832316a\n"
".quad 0x6650664b50764545,0x6f632e766e2e006a,0x2e31746e6174736e,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x32316a4c49737361,0x76454531624c4538,0x2e006a6650664b50\n"
".quad 0x65726168732e766e,0x657236315a5f2e64,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x4530624c4532336a,0x6a6650664b507645,0x6e6f632e766e2e00,0x5f2e31746e617473\n"
".quad 0x637564657236315a,0x50656c676e695365,0x32336a4c49737361,0x5076454530624c45\n"
".quad 0x6e2e006a6650664b,0x6465726168732e76,0x64657236315a5f2e,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x454531624c453436,0x006a6650664b5076,0x736e6f632e766e2e\n"
".quad 0x5a5f2e31746e6174,0x6563756465723631,0x6150656c676e6953,0x4534366a4c497373\n"
".quad 0x4b5076454531624c,0x766e2e006a665066,0x2e6465726168732e,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x36316a4c49737361,0x5076454530624c45,0x6e2e006a6650664b\n"
".quad 0x6174736e6f632e76,0x35315a5f2e31746e,0x754d656375646572,0x497373615069746c\n"
".quad 0x30624c4536316a4c,0x6650664b50764545,0x68732e766e2e006a,0x315a5f2e64657261\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x31624c45386a4c49,0x6650664b50764545\n"
".quad 0x6f632e766e2e006a,0x2e31746e6174736e,0x7564657235315a5f,0x5069746c754d6563\n"
".quad 0x45386a4c49737361,0x4b5076454531624c,0x766e2e006a665066,0x2e6465726168732e\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x336a4c4973736150,0x76454531624c4532\n"
".quad 0x2e006a6650664b50,0x74736e6f632e766e,0x315a5f2e31746e61,0x5365637564657236\n"
".quad 0x736150656c676e69,0x4c4532336a4c4973,0x664b507645453162,0x2e766e2e006a6650\n"
".quad 0x5f2e646572616873,0x637564657235315a,0x615069746c754d65,0x4536316a4c497373\n"
".quad 0x4b5076454531624c,0x766e2e006a665066,0x6e6174736e6f632e,0x7235315a5f2e3174\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x4531624c4536316a,0x6a6650664b507645\n"
".quad 0x6168732e766e2e00,0x36315a5f2e646572,0x6953656375646572,0x73736150656c676e\n"
".quad 0x30624c45316a4c49,0x6650664b50764545,0x6f632e766e2e006a,0x2e31746e6174736e\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150,0x5076454530624c45\n"
".quad 0x6e2e006a6650664b,0x6465726168732e76,0x64657236315a5f2e,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x76454530624c4532,0x2e006a6650664b50,0x74736e6f632e766e\n"
".quad 0x315a5f2e31746e61,0x5365637564657236,0x736150656c676e69,0x624c45326a4c4973\n"
".quad 0x50664b5076454530,0x732e766e2e006a66,0x5a5f2e6465726168,0x6563756465723631\n"
".quad 0x6150656c676e6953,0x4c45316a4c497373,0x664b507645453162,0x2e766e2e006a6650\n"
".quad 0x746e6174736e6f63,0x657236315a5f2e31,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x454531624c45316a,0x006a6650664b5076,0x736e6f632e766e2e,0x2e003431746e6174\n"
".quad 0x632e766e2e6c6572,0x31746e6174736e6f,0x7236315a5f000034,0x6e69536563756465\n"
".quad 0x4973736150656c67,0x4530624c45316a4c,0x6a6650664b507645,0x64657236315a5f00\n"
".quad 0x6c676e6953656375,0x6a4c497373615065,0x76454530624c4532,0x5f006a6650664b50\n"
".quad 0x637564657236315a,0x50656c676e695365,0x45346a4c49737361,0x4b5076454530624c\n"
".quad 0x315a5f006a665066,0x5365637564657236,0x736150656c676e69,0x624c45386a4c4973\n"
".quad 0x50664b5076454530,0x7236315a5f006a66,0x6e69536563756465,0x4973736150656c67\n"
".quad 0x30624c4536316a4c,0x6650664b50764545,0x657236315a5f006a,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x4530624c4532336a,0x6a6650664b507645,0x64657236315a5f00\n"
".quad 0x6c676e6953656375,0x6a4c497373615065,0x454530624c453436,0x006a6650664b5076\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150,0x454530624c453832\n"
".quad 0x006a6650664b5076,0x7564657236315a5f,0x656c676e69536563,0x326a4c4973736150\n"
".quad 0x454530624c453635,0x006a6650664b5076,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x356a4c4973736150,0x454530624c453231,0x006a6650664b5076,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x316a4c4973736150,0x5076454531624c45,0x5a5f006a6650664b\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4c45326a4c497373,0x664b507645453162\n"
".quad 0x36315a5f006a6650,0x6953656375646572,0x73736150656c676e,0x31624c45346a4c49\n"
".quad 0x6650664b50764545,0x657236315a5f006a,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x454531624c45386a,0x006a6650664b5076,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x316a4c4973736150,0x76454531624c4536,0x5f006a6650664b50,0x637564657236315a\n"
".quad 0x50656c676e695365,0x32336a4c49737361,0x5076454531624c45,0x5a5f006a6650664b\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4534366a4c497373,0x4b5076454531624c\n"
".quad 0x315a5f006a665066,0x5365637564657236,0x736150656c676e69,0x453832316a4c4973\n"
".quad 0x4b5076454531624c,0x315a5f006a665066,0x5365637564657236,0x736150656c676e69\n"
".quad 0x453635326a4c4973,0x4b5076454531624c,0x315a5f006a665066,0x5365637564657236\n"
".quad 0x736150656c676e69,0x453231356a4c4973,0x4b5076454531624c,0x315a5f006a665066\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x30624c45316a4c49,0x6650664b50764545\n"
".quad 0x657235315a5f006a,0x746c754d65637564,0x6a4c497373615069,0x76454530624c4532\n"
".quad 0x5f006a6650664b50,0x637564657235315a,0x615069746c754d65,0x4c45346a4c497373\n"
".quad 0x664b507645453062,0x35315a5f006a6650,0x754d656375646572,0x497373615069746c\n"
".quad 0x4530624c45386a4c,0x6a6650664b507645,0x64657235315a5f00,0x69746c754d656375\n"
".quad 0x316a4c4973736150,0x76454530624c4536,0x5f006a6650664b50,0x637564657235315a\n"
".quad 0x615069746c754d65,0x4532336a4c497373,0x4b5076454530624c,0x315a5f006a665066\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x624c4534366a4c49,0x50664b5076454530\n"
".quad 0x7235315a5f006a66,0x6c754d6563756465,0x4c49737361506974,0x30624c453832316a\n"
".quad 0x6650664b50764545,0x657235315a5f006a,0x746c754d65637564,0x6a4c497373615069\n"
".quad 0x4530624c45363532,0x6a6650664b507645,0x64657235315a5f00,0x69746c754d656375\n"
".quad 0x356a4c4973736150,0x454530624c453231,0x006a6650664b5076,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x45316a4c49737361,0x4b5076454531624c,0x315a5f006a665066\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x31624c45326a4c49,0x6650664b50764545\n"
".quad 0x657235315a5f006a,0x746c754d65637564,0x6a4c497373615069,0x76454531624c4534\n"
".quad 0x5f006a6650664b50,0x637564657235315a,0x615069746c754d65,0x4c45386a4c497373\n"
".quad 0x664b507645453162,0x35315a5f006a6650,0x754d656375646572,0x497373615069746c\n"
".quad 0x31624c4536316a4c,0x6650664b50764545,0x657235315a5f006a,0x746c754d65637564\n"
".quad 0x6a4c497373615069,0x454531624c453233,0x006a6650664b5076,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x34366a4c49737361,0x5076454531624c45,0x5a5f006a6650664b\n"
".quad 0x6563756465723531,0x73615069746c754d,0x453832316a4c4973,0x4b5076454531624c\n"
".quad 0x315a5f006a665066,0x4d65637564657235,0x7373615069746c75,0x4c453635326a4c49\n"
".quad 0x664b507645453162,0x35315a5f006a6650,0x754d656375646572,0x497373615069746c\n"
".quad 0x624c453231356a4c,0x50664b5076454531,0x7269746572006a66,0x756f43746e656d65\n"
".quad 0x000000000000746e,0x0000000000000000,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000000100,0x0000000000000000,0x0300000000000000,0x0000000000000200\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000000300,0x0000000000000000\n"
".quad 0x0300000000000000,0x000000000000a400,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0300000000000000,0x0000000000009e00\n"
".quad 0x00000002d8000000,0x0300000000000000,0x000000000000a000,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000009a00,0x0000000320000000,0x0300000000000000\n"
".quad 0x0000000000009c00,0x0000000000000000,0x0300000000000000,0x0000000000009600\n"
".quad 0x0000000378000000,0x0300000000000000,0x0000000000009800,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000009200,0x00000003d0000000,0x0300000000000000\n"
".quad 0x0000000000009400,0x0000000000000000,0x0300000000000000,0x0000000000008e00\n"
".quad 0x0000000438000000,0x0300000000000000,0x0000000000009000,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000008a00,0x00000004a0000000,0x0300000000000000\n"
".quad 0x0000000000008c00,0x0000000000000000,0x0300000000000000,0x0000000000008600\n"
".quad 0x0000000518000000,0x0300000000000000,0x0000000000008800,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000008200,0x0000000590000000,0x0300000000000000\n"
".quad 0x0000000000008400,0x0000000000000000,0x0300000000000000,0x0000000000007e00\n"
".quad 0x0000000608000000,0x0300000000000000,0x0000000000008000,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000007a00,0x0000000680000000,0x0300000000000000\n"
".quad 0x0000000000007c00,0x0000000000000000,0x0300000000000000,0x0000000000007600\n"
".quad 0x00000002b8000000,0x0300000000000000,0x0000000000007800,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000007200,0x0000000300000000,0x0300000000000000\n"
".quad 0x0000000000007400,0x0000000000000000,0x0300000000000000,0x0000000000006e00\n"
".quad 0x0000000358000000,0x0300000000000000,0x0000000000007000,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000006a00,0x00000003b0000000,0x0300000000000000\n"
".quad 0x0000000000006c00,0x0000000000000000,0x0300000000000000,0x0000000000006600\n"
".quad 0x0000000418000000,0x0300000000000000,0x0000000000006800,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000006200,0x0000000480000000,0x0300000000000000\n"
".quad 0x0000000000006400,0x0000000000000000,0x0300000000000000,0x0000000000005e00\n"
".quad 0x00000004f8000000,0x0300000000000000,0x0000000000006000,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000005a00,0x0000000570000000,0x0300000000000000\n"
".quad 0x0000000000005c00,0x0000000000000000,0x0300000000000000,0x0000000000005600\n"
".quad 0x00000005e8000000,0x0300000000000000,0x0000000000005800,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000005200,0x0000000660000000,0x0300000000000000\n"
".quad 0x0000000000005400,0x0000000000000000,0x0300000000000000,0x0000000000004e00\n"
".quad 0x0000000128000000,0x0300000000000000,0x0000000000005000,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000004a00,0x0000000158000000,0x0300000000000000\n"
".quad 0x0000000000004c00,0x0000000000000000,0x0300000000000000,0x0000000000004600\n"
".quad 0x0000000188000000,0x0300000000000000,0x0000000000004800,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000004200,0x00000001b8000000,0x0300000000000000\n"
".quad 0x0000000000004400,0x0000000000000000,0x0300000000000000,0x0000000000003e00\n"
".quad 0x00000001e8000000,0x0300000000000000,0x0000000000004000,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000003a00,0x0000000218000000,0x0300000000000000\n"
".quad 0x0000000000003c00,0x0000000000000000,0x0300000000000000,0x0000000000003600\n"
".quad 0x0000000250000000,0x0300000000000000,0x0000000000003800,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000003200,0x0000000288000000,0x0300000000000000\n"
".quad 0x0000000000003400,0x0000000000000000,0x0300000000000000,0x0000000000002e00\n"
".quad 0x00000002c0000000,0x0300000000000000,0x0000000000003000,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000002a00,0x00000002f8000000,0x0300000000000000\n"
".quad 0x0000000000002c00,0x0000000000000000,0x0300000000000000,0x0000000000002700\n"
".quad 0x0000000108000000,0x0300000000000000,0x0000000000002800,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000002400,0x0000000138000000,0x0300000000000000\n"
".quad 0x0000000000002500,0x0000000000000000,0x0300000000000000,0x0000000000002000\n"
".quad 0x0000000168000000,0x0300000000000000,0x0000000000002200,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000001c00,0x0000000198000000,0x0300000000000000\n"
".quad 0x0000000000001e00,0x0000000000000000,0x0300000000000000,0x0000000000001800\n"
".quad 0x00000001c8000000,0x0300000000000000,0x0000000000001a00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000001400,0x00000001f8000000,0x0300000000000000\n"
".quad 0x0000000000001600,0x0000000000000000,0x0300000000000000,0x0000000000001000\n"
".quad 0x0000000230000000,0x0300000000000000,0x0000000000001200,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000000c00,0x0000000268000000,0x0300000000000000\n"
".quad 0x0000000000000e00,0x0000000000000000,0x0300000000000000,0x0000000000000800\n"
".quad 0x00000002a0000000,0x0300000000000000,0x0000000000000a00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000000400,0x00000002d8000000,0x0300000000000000\n"
".quad 0x0000000000000600,0x0000000000000000,0x0300000000000000,0x0000000000008100\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000007f00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000007500,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000007300,0x0000000000000000,0x0300000000000000,0x0000000000009900\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000009700,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000005900,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000005700,0x0000000000000000,0x0300000000000000,0x0000000000009100\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000008f00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000007100,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000006f00,0x0000000000000000,0x0300000000000000,0x0000000000007d00\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000007b00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000006900,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000006700,0x0000000000000000,0x0300000000000000,0x0000000000008500\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000008300,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000005500,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000005300,0x0000000000000000,0x0300000000000000,0x0000000000005100\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000004f00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000009500,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000009300,0x0000000000000000,0x0300000000000000,0x0000000000005d00\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000005b00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000004d00,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000004b00,0x0000000000000000,0x0300000000000000,0x0000000000003900\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000003700,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000002900,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000006d00,0x0000000000000000,0x0300000000000000,0x0000000000006b00\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000003d00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000003b00,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000003100,0x0000000000000000,0x0300000000000000,0x0000000000002f00\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000002600,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000001300,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000001100,0x0000000000000000,0x0300000000000000,0x0000000000004900\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000004700,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000001700,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000001500,0x0000000000000000,0x0300000000000000,0x0000000000000b00\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000000900,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000002300,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000002100,0x0000000000000000,0x0300000000000000,0x0000000000002d00\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000002b00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000003500,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000003300,0x0000000000000000,0x0300000000000000,0x0000000000000700\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000000500,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000008900,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000008700,0x0000000000000000,0x0300000000000000,0x0000000000004500\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000004300,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000000f00,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000000d00,0x0000000000000000,0x0300000000000000,0x0000000000008d00\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000008b00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000006100,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000005f00,0x0000000000000000,0x0300000000000000,0x0000000000004100\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000003f00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000001f00,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000001d00,0x0000000000000000,0x0300000000000000,0x0000000000006500\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000006300,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000001b00,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000001900,0x0000000000000000,0x0300000000000000,0x000000000000a100\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000009f00,0x0000000000000000\n"
".quad 0x0300000000000000,0x0000000000009d00,0x0000000000000000,0x0300000000000000\n"
".quad 0x0000000000009b00,0x0000000000000000,0x0300000000000000,0x0000000000007900\n"
".quad 0x0000000000000000,0x0300000000000000,0x0000000000007700,0x0000000000000000\n"
".quad 0x0300000000000000,0x000000000000a200,0x0000000000000000,0x0300000000000000\n"
".quad 0x000000000000a300,0x0000000000000000,0x1200000001000000,0x0000000000009e10\n"
".quad 0x0000000000000000,0x1200000027000000,0x0000000000009a10,0x0000000000000000\n"
".quad 0x120000004d000000,0x0000000000009610,0x0000000000000000,0x1200000073000000\n"
".quad 0x0000000000009210,0x0000000000000000,0x1200000099000000,0x0000000000008e10\n"
".quad 0x0000000000000000,0x12000000c0000000,0x0000000000008a10,0x0000000000000000\n"
".quad 0x12000000e7000000,0x0000000000008610,0x0000000000000000,0x120000010e000000\n"
".quad 0x0000000000008210,0x0000000000000000,0x1200000136000000,0x0000000000007e10\n"
".quad 0x0000000000000000,0x120000015e000000,0x0000000000007a10,0x0000000000000000\n"
".quad 0x1200000186000000,0x0000000000007610,0x0000000000000000,0x12000001ac000000\n"
".quad 0x0000000000007210,0x0000000000000000,0x12000001d2000000,0x0000000000006e10\n"
".quad 0x0000000000000000,0x12000001f8000000,0x0000000000006a10,0x0000000000000000\n"
".quad 0x120000021e000000,0x0000000000006610,0x0000000000000000,0x1200000245000000\n"
".quad 0x0000000000006210,0x0000000000000000,0x120000026c000000,0x0000000000005e10\n"
".quad 0x0000000000000000,0x1200000293000000,0x0000000000005a10,0x0000000000000000\n"
".quad 0x12000002bb000000,0x0000000000005610,0x0000000000000000,0x12000002e3000000\n"
".quad 0x0000000000005210,0x0000000000000000,0x120000030b000000,0x0000000000004e10\n"
".quad 0x0000000000000000,0x1200000330000000,0x0000000000004a10,0x0000000000000000\n"
".quad 0x1200000355000000,0x0000000000004610,0x0000000000000000,0x120000037a000000\n"
".quad 0x0000000000004210,0x0000000000000000,0x120000039f000000,0x0000000000003e10\n"
".quad 0x0000000000000000,0x12000003c5000000,0x0000000000003a10,0x0000000000000000\n"
".quad 0x12000003eb000000,0x0000000000003610,0x0000000000000000,0x1200000411000000\n"
".quad 0x0000000000003210,0x0000000000000000,0x1200000438000000,0x0000000000002e10\n"
".quad 0x0000000000000000,0x120000045f000000,0x0000000000002a10,0x0000000000000000\n"
".quad 0x1200000486000000,0x0000000000002710,0x0000000000000000,0x12000004ab000000\n"
".quad 0x0000000000002410,0x0000000000000000,0x12000004d0000000,0x0000000000002010\n"
".quad 0x0000000000000000,0x12000004f5000000,0x0000000000001c10,0x0000000000000000\n"
".quad 0x120000051a000000,0x0000000000001810,0x0000000000000000,0x1200000540000000\n"
".quad 0x0000000000001410,0x0000000000000000,0x1200000566000000,0x0000000000001010\n"
".quad 0x0000000000000000,0x120000058c000000,0x0000000000000c10,0x0000000000000000\n"
".quad 0x12000005b3000000,0x0000000000000810,0x0000000000000000,0x12000005da000000\n"
".quad 0x0000000000000410,0x0000000000000000,0x1100000601000000,0x000000000000a400\n"
".quad 0x0000000004000000,0x80a0004c05000000,0x80a0000009042007,0x80300a0201040007\n"
".quad 0x8020000401c41007,0x8000020405040007,0x00a001a003c00007,0xc83000d1fd000000\n"
".quad 0x801000f80d6420c7,0x80040018010403c7,0x801001a003e43f07,0x8030020011000002\n"
".quad 0x4341002819c41007,0x802000c815000000,0x8030020c11042107,0x8320008a1dc41007\n"
".quad 0x80d00e0a21000000,0x80d00e0e1d80c007,0x80b000100d80c007,0x80000204050000c7\n"
".quad 0x8020000c01c00007,0x8004001801040007,0x80b000060de420c7,0xc83000d1fd0001c7\n"
".quad 0x8020000a15642107,0x8004001801040107,0x801000e003e420c7,0x02f0000001000002\n"
".quad 0x00861ffe03e00000,0xc8308005fd000000,0x0000020405644107,0x00d4086009c00005\n"
".quad 0x0018000001200005,0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005\n"
".quad 0xc8308105fd000000,0x0000020405644107,0x00d4046009c00005,0x0018000001200005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308205fd000000\n"
".quad 0x0000020405644107,0x00d4026009c00005,0x0018000001200005,0x00b400d8014400c5\n"
".quad 0x0004001801002005,0x00861ffe03e42005,0xc8308305fd000000,0x0000020405644107\n"
".quad 0x00d4016009c00005,0x0018000001200005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xc8308405fd000000,0x0000020405644107,0x0014003801c00005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308505fd000000\n"
".quad 0x0000020405644107,0x0014002801c00005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xc8308605fd000000,0x0000020405644107,0x0014002001c00005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308705fd000000\n"
".quad 0x0000020405644107,0x0014001c01c00005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xd0307c0401000000,0xc8a00001fd640087,0x80000204050c0147\n"
".quad 0x8014001a01c00016,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0x0030000003000000,0x8030020205000001,0x041100f800c41007,0x81d00e02012101ec\n"
".quad 0x7f000000ffa0c007,0x1f0000003f000000,0x070000000f000000,0x0100000003000000\n"
".quad 0x00000c0b04000000,0x1000000008000000,0x0800080d04000000,0x0500000020002101\n"
".quad 0x0904200780a0004c,0x0104000780a00000,0x01c4100780300902,0x0504000780200004\n"
".quad 0x03c0000780000204,0xfd00000000a001a0,0x0d6420c7c83000d1,0x010403c7801000f8\n"
".quad 0x03e43f0780040018,0x11000002801001a0,0x19c4100780300200,0x1500000023410028\n"
".quad 0x11042107802000c8,0x1dc410078030020c,0x210000004320008a,0x1d80c00780d00e0a\n"
".quad 0x0d80c00780d00e0e,0x050000c780b00010,0x01c0000780000204,0x010400078020000c\n"
".quad 0x0de420c780040018,0xfd0001c780b00006,0x15642107c83000d1,0x010401078020000a\n"
".quad 0x03e420c780040018,0x01000002801000e0,0x03e0000002f00000,0xfd00000000861ffe\n"
".quad 0x05644107c8308005,0x09c0000500000204,0x0120000500d40460,0x014400c500180000\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308105\n"
".quad 0x09c0000500000204,0x0120000500d40260,0x014400c500180000,0x0100200500b400d8\n"
".quad 0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308205,0x09c0000500000204\n"
".quad 0x0120000500d40160,0x014400c500180000,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0xfd00000000861ffe,0x05644107c8308305,0x01c0000500000204,0x014400c500140038\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308405\n"
".quad 0x01c0000500000204,0x014400c500140028,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0xfd00000000861ffe,0x05644107c8308505,0x01c0000500000204,0x014400c500140020\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308605\n"
".quad 0x01c0000500000204,0x014400c50014001c,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0x0100000000861ffe,0xfd640087d0307c04,0x050c0147c8a00001,0x01c0001680000204\n"
".quad 0x014400d68014001a,0x0100201680b400d8,0x03e4201680040018,0x0300000000861ffe\n"
".quad 0x0500000100300000,0x00c4100780300202,0x012101ec041100f8,0x7fa0c00781d00e02\n"
".quad 0x1f0000003f000000,0x070000000f000000,0x0100000003000000,0x00000c0b04000000\n"
".quad 0x1000000008000000,0x0800080d04000000,0x0500000020002101,0x0904200780a0004c\n"
".quad 0x0104000780a00000,0x01c4100780300802,0x0504000780200004,0x03c0000780000204\n"
".quad 0xfd00000000a001a0,0x0d6420c7c83000d1,0x010403c7801000f8,0x03e43f0780040018\n"
".quad 0x11000002801001a0,0x19c4100780300200,0x1500000013410028,0x11042107802000c8\n"
".quad 0x1dc410078030020c,0x210000002320008a,0x1d80c00780d00e0a,0x0d80c00780d00e0e\n"
".quad 0x050000c780b00010,0x01c0000780000204,0x010400078020000c,0x0de420c780040018\n"
".quad 0xfd0001c780b00006,0x15642107c83000d1,0x010401078020000a,0x03e420c780040018\n"
".quad 0x01000002801000e0,0x03e0000002f00000,0xfd00000000861ffe,0x05644107c8308005\n"
".quad 0x09c0000500000204,0x0120000500d40260,0x014400c500180000,0x0100200500b400d8\n"
".quad 0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308105,0x09c0000500000204\n"
".quad 0x0120000500d40160,0x014400c500180000,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0xfd00000000861ffe,0x05644107c8308205,0x01c0000500000204,0x014400c500140038\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308305\n"
".quad 0x01c0000500000204,0x014400c500140028,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0xfd00000000861ffe,0x05644107c8308405,0x01c0000500000204,0x014400c500140020\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308505\n"
".quad 0x01c0000500000204,0x014400c50014001c,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0x0100000000861ffe,0xfd640087d0307c04,0x050c0147c8a00001,0x01c0001680000204\n"
".quad 0x014400d68014001a,0x0100201680b400d8,0x03e4201680040018,0x0300000000861ffe\n"
".quad 0x0500000100300000,0x00c4100780300202,0x012101ec041100f8,0x3fa0c00781d00e02\n"
".quad 0x0f0000001f000000,0x0300000007000000,0x0400000001000000,0x0800000000000c0b\n"
".quad 0x0400000010000000,0x200021010800080d,0x80a0004c05000000,0x80a0000009042007\n"
".quad 0x8030070201040007,0x8020000401c41007,0x8000020405040007,0x00a001a003c00007\n"
".quad 0xc83000d1fd000000,0x801000f80d6420c7,0x80040018010403c7,0x801001a003e43f07\n"
".quad 0x8030020011000002,0x0b41002819c41007,0x802000c815000000,0x8030020c11042107\n"
".quad 0x1320008a1dc41007,0x80d00e0a21000000,0x80d00e0e1d80c007,0x80b000100d80c007\n"
".quad 0x80000204050000c7,0x8020000c01c00007,0x8004001801040007,0x80b000060de420c7\n"
".quad 0xc83000d1fd0001c7,0x8020000a15642107,0x8004001801040107,0x801000e003e420c7\n"
".quad 0x02f0000001000002,0x00861ffe03e00000,0xc8308005fd000000,0x0000020405644107\n"
".quad 0x00d4016009c00005,0x0018000001200005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xc8308105fd000000,0x0000020405644107,0x0014003801c00005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308205fd000000\n"
".quad 0x0000020405644107,0x0014002801c00005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xc8308305fd000000,0x0000020405644107,0x0014002001c00005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308405fd000000\n"
".quad 0x0000020405644107,0x0014001c01c00005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xd0307c0401000000,0xc8a00001fd640087,0x80000204050c0147\n"
".quad 0x8014001a01c00016,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0x0030000003000000,0x8030020205000001,0x041100f800c41007,0x81d00e02012101ec\n"
".quad 0x0f0000001fa0c007,0x0300000007000000,0x0400000001000000,0x0800000000000c0b\n"
".quad 0x0400000010000000,0x200021010800080d,0x80a0004c05000000,0x80a0000009042007\n"
".quad 0x8030060201040007,0x8020000401c41007,0x8000020405040007,0x00a001a003c00007\n"
".quad 0xc83000d1fd000000,0x801000f80d6420c7,0x80040018010403c7,0x801001a003e43f07\n"
".quad 0x8030020011000002,0x0741002819c41007,0x802000c815000000,0x8030020c11042107\n"
".quad 0x0b20008a1dc41007,0x80d00e0a21000000,0x80d00e0e1d80c007,0x80b000100d80c007\n"
".quad 0x80000204050000c7,0x8020000c01c00007,0x8004001801040007,0x80b000060de420c7\n"
".quad 0xc83000d1fd0001c7,0x8020000a15642107,0x8004001801040107,0x801000e003e420c7\n"
".quad 0x02f0000001000002,0x00861ffe03e00000,0xc8308005fd000000,0x0000020405644107\n"
".quad 0x0014003801c00005,0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005\n"
".quad 0xc8308105fd000000,0x0000020405644107,0x0014002801c00005,0x00b400d8014400c5\n"
".quad 0x0004001801002005,0x00861ffe03e42005,0xc8308205fd000000,0x0000020405644107\n"
".quad 0x0014002001c00005,0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005\n"
".quad 0xc8308305fd000000,0x0000020405644107,0x0014001c01c00005,0x00b400d8014400c5\n"
".quad 0x0004001801002005,0x00861ffe03e42005,0xd0307c0401000000,0xc8a00001fd640087\n"
".quad 0x80000204050c0147,0x8014001a01c00016,0x80b400d8014400d6,0x8004001801002016\n"
".quad 0x00861ffe03e42016,0x0030000003000000,0x8030020205000001,0x041100f800c41007\n"
".quad 0x81d00e02012101ec,0x070000000fa0c007,0x0100000003000000,0x00000c0b04000000\n"
".quad 0x1000000008000000,0x0800080d04000000,0x0500000020002101,0x0904200780a0004c\n"
".quad 0x0104000780a00000,0x01c4100780300502,0x0504000780200004,0x03c0000780000204\n"
".quad 0xfd00000000a001a0,0x0d6420c7c83000d1,0x010403c7801000f8,0x03e43f0780040018\n"
".quad 0x11000002801001a0,0x19c4100780300200,0x1500000003412028,0x11042107802000c8\n"
".quad 0x1dc410078030020c,0x210000000720008a,0x1d80c00780d00e0a,0x0d80c00780d00e0e\n"
".quad 0x050000c780b00010,0x01c0000780000204,0x010400078020000c,0x0de420c780040018\n"
".quad 0xfd0001c780b00006,0x15642107c83000d1,0x010401078020000a,0x03e420c780040018\n"
".quad 0x01000002801000e0,0x03e0000002f00000,0xfd00000000861ffe,0x05644107c8308005\n"
".quad 0x01c0000500000204,0x014400c500140028,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0xfd00000000861ffe,0x05644107c8308105,0x01c0000500000204,0x014400c500140020\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308205\n"
".quad 0x01c0000500000204,0x014400c50014001c,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0x0100000000861ffe,0xfd640087d0307c04,0x050c0147c8a00001,0x01c0001680000204\n"
".quad 0x014400d68014001a,0x0100201680b400d8,0x03e4201680040018,0x0300000000861ffe\n"
".quad 0x0500000100300000,0x00c4100780300202,0x012101ec041100f8,0x07a0c00781d00e02\n"
".quad 0x0100000003000000,0x00000c0b04000000,0x1000000008000000,0x0800080d04000000\n"
".quad 0x0500000020002101,0x0904200780a0004c,0x0104000780a00000,0x01c4100780300402\n"
".quad 0x0504000780200004,0x03c0000780000204,0xfd00000000a001a0,0x0d6420c7c83000d1\n"
".quad 0x010403c7801000f8,0x03e43f0780040018,0x11000002801001a0,0x19c4100780300200\n"
".quad 0x1500000003411028,0x11042107802000c8,0x1dc410078030020c,0x210000000320208a\n"
".quad 0x1d80c00780d00e0a,0x0d80c00780d00e0e,0x050000c780b00010,0x01c0000780000204\n"
".quad 0x010400078020000c,0x0de420c780040018,0xfd0001c780b00006,0x15642107c83000d1\n"
".quad 0x010401078020000a,0x03e420c780040018,0x01000002801000e0,0x03e0000002f00000\n"
".quad 0xfd00000000861ffe,0x05644107c8308005,0x01c0000500000204,0x014400c500140020\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308105\n"
".quad 0x01c0000500000204,0x014400c50014001c,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0x0100000000861ffe,0xfd640087d0307c04,0x050c0147c8a00001,0x01c0001680000204\n"
".quad 0x014400d68014001a,0x0100201680b400d8,0x03e4201680040018,0x0300000000861ffe\n"
".quad 0x0500000100300000,0x00c4100780300202,0x012101ec041100f8,0x03a0c00781d00e02\n"
".quad 0x0400000001000000,0x0800000000000c0b,0x0400000010000000,0x200021010800080d\n"
".quad 0x80a0004c05000000,0x80a0000009042007,0x8030030201040007,0x8020000401c41007\n"
".quad 0x8000020405040007,0x00a001a003c00007,0xc83000d1fd000000,0x801000f80d6420c7\n"
".quad 0x80040018010403c7,0x801001a003e43f07,0x8030020011000002,0x0341082819c41007\n"
".quad 0x802000c815000000,0x8030020c11042107,0x0320108a1dc41007,0x80d00e0a21000000\n"
".quad 0x80d00e0e1d80c007,0x80b000100d80c007,0x80000204050000c7,0x8020000c01c00007\n"
".quad 0x8004001801040007,0x80b000060de420c7,0xc83000d1fd0001c7,0x8020000a15642107\n"
".quad 0x8004001801040107,0x801000e003e420c7,0x02f0000001000002,0x00861ffe03e00000\n"
".quad 0xc8308005fd000000,0x0000020405644107,0x0014001c01c00005,0x00b400d8014400c5\n"
".quad 0x0004001801002005,0x00861ffe03e42005,0xd0307c0401000000,0xc8a00001fd640087\n"
".quad 0x80000204050c0147,0x8014001a01c00016,0x80b400d8014400d6,0x8004001801002016\n"
".quad 0x00861ffe03e42016,0x0030000003000000,0x8030020205000001,0x041100f800c41007\n"
".quad 0x81d00e02012101ec,0x0400000001a0c007,0x0800000000000c0b,0x0400000010000000\n"
".quad 0x200021010800080d,0x80a0004c0d000000,0x80a0000005042007,0x8030020601040007\n"
".quad 0x8020000201c41007,0x8000020205040007,0x00a001a003c00007,0xc83000d1fd000000\n"
".quad 0x801000f8096420c7,0x80040018010403c7,0x801001a003e43f07,0x8030020011000002\n"
".quad 0x0341042819c41007,0x802000c815000000,0x8030020c11042107,0x0320088a1dc41007\n"
".quad 0x80d00e0a21000000,0x80d00e0e1d80c007,0x80b000100980c007,0x8000020205000087\n"
".quad 0x8020000c01c00007,0x8004001801040007,0x80b0000409e42087,0xc83000d1fd0001c7\n"
".quad 0x8020000a15642107,0x8004001801040107,0x801000e003e42087,0x02f0000001000002\n"
".quad 0x00861ffe03e00000,0xd0307c0201000000,0xc8a00001fd640087,0x80000202050c0147\n"
".quad 0x8014001a01c00016,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0x0030000003000000,0x8030020605000001,0x041100f800c41007,0x81d00e02012101ec\n"
".quad 0x00000c0b04a0c007,0x1000000008000000,0x0800080d04000000,0x0d00000020002101\n"
".quad 0x0504200780a0004c,0x0104000780a00000,0x01c4100780300106,0x0504000780200002\n"
".quad 0x03c0000780000202,0xfd00000000a001a0,0x096420c7c83000d1,0x010403c7801000f8\n"
".quad 0x03e43f0780040018,0x11000002801001a0,0x19c4100780300200,0x1500000003410228\n"
".quad 0x11042107802000c8,0x1dc410078030020c,0x210000000320048a,0x1d80c00780d00e0a\n"
".quad 0x0980c00780d00e0e,0x0500008780b00010,0x01c0000780000202,0x010400078020000c\n"
".quad 0x09e4208780040018,0xfd0001c780b00004,0x15642107c83000d1,0x010401078020000a\n"
".quad 0x03e4208780040018,0x01000002801000e0,0x03e0000002f00000,0xfd00000000861ffe\n"
".quad 0x03640147c8307c03,0x0500000280300000,0x00c4100780300206,0x012101ec041100f8\n"
".quad 0x04a0c00781d00e02,0x0800000000000c0b,0x0400000010000000,0x200021010800080d\n"
".quad 0x80a0004c05000000,0x80a0000009042007,0x80300a0201040007,0x802000040dc41007\n"
".quad 0x8000020405040007,0xc83003d1fdc00007,0x00a001e0036420c7,0x801000f801000000\n"
".quad 0x80040018010403c7,0x801001e003e43f07,0x8030020611000002,0x434100281dc41007\n"
".quad 0x2320008615000000,0x232100f019000000,0x802000c811000000,0x8030020e0d042107\n"
".quad 0x80d00e0821c41007,0x80b000100180c007,0x8000020405000007,0xc83005d1fdc00007\n"
".quad 0x80040018016420c7,0x0021000821e42007,0x00d00e1021044205,0x00b000100180c005\n"
".quad 0x0000020405000005,0x0004001801c00005,0x8020000a15e42005,0xc830060bfd0401c7\n"
".quad 0x8020000811640047,0x80100100030400c7,0x02f0000001000002,0x00861ffe03e00000\n"
".quad 0xc8308005fd000000,0x0000020405644107,0x00d4086009c00005,0x0018000001200005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308105fd000000\n"
".quad 0x0000020405644107,0x00d4046009c00005,0x0018000001200005,0x00b400d8014400c5\n"
".quad 0x0004001801002005,0x00861ffe03e42005,0xc8308205fd000000,0x0000020405644107\n"
".quad 0x00d4026009c00005,0x0018000001200005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xc8308305fd000000,0x0000020405644107,0x00d4016009c00005\n"
".quad 0x0018000001200005,0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005\n"
".quad 0xc8308405fd000000,0x0000020405644107,0x0014003801c00005,0x00b400d8014400c5\n"
".quad 0x0004001801002005,0x00861ffe03e42005,0xc8308505fd000000,0x0000020405644107\n"
".quad 0x0014002801c00005,0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005\n"
".quad 0xc8308605fd000000,0x0000020405644107,0x0014002001c00005,0x00b400d8014400c5\n"
".quad 0x0004001801002005,0x00861ffe03e42005,0xc8308705fd000000,0x0000020405644107\n"
".quad 0x0014001c01c00005,0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005\n"
".quad 0xd0307c0401000000,0xc8a00001fd640087,0x80000204050c0147,0x8014001a01c00016\n"
".quad 0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016,0x0030000003000000\n"
".quad 0x8030020205000001,0x041100f800c41007,0x81d00e02012101ec,0x7f000000ffa0c007\n"
".quad 0x1f0000003f000000,0x070000000f000000,0x0100000003000000,0x0000000800000000\n"
".quad 0x00000c0b04000000,0x1000000008000000,0x0800080d04000000,0x0500000020002101\n"
".quad 0x0904200780a0004c,0x0104000780a00000,0x0dc4100780300902,0x0504000780200004\n"
".quad 0xfdc0000780000204,0x036420c7c83003d1,0x0100000000a001e0,0x010403c7801000f8\n"
".quad 0x03e43f0780040018,0x11000002801001e0,0x1dc4100780300206,0x1500000023410028\n"
".quad 0x1900000013200086,0x11000000132100f0,0x0d042107802000c8,0x21c410078030020e\n"
".quad 0x0180c00780d00e08,0x0500000780b00010,0xfdc0000780000204,0x016420c7c83005d1\n"
".quad 0x21e4200780040018,0x210441c500210008,0x0180c00500d00e10,0x0500000500b00010\n"
".quad 0x01c0000500000204,0x15e4200500040018,0xfd0401c78020000a,0x11640047c830060b\n"
".quad 0x030400c780200008,0x0100000280100100,0x03e0000002f00000,0xfd00000000861ffe\n"
".quad 0x05644107c8308005,0x09c0000500000204,0x0120000500d40460,0x014400c500180000\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308105\n"
".quad 0x09c0000500000204,0x0120000500d40260,0x014400c500180000,0x0100200500b400d8\n"
".quad 0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308205,0x09c0000500000204\n"
".quad 0x0120000500d40160,0x014400c500180000,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0xfd00000000861ffe,0x05644107c8308305,0x01c0000500000204,0x014400c500140038\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308405\n"
".quad 0x01c0000500000204,0x014400c500140028,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0xfd00000000861ffe,0x05644107c8308505,0x01c0000500000204,0x014400c500140020\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308605\n"
".quad 0x01c0000500000204,0x014400c50014001c,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0x0100000000861ffe,0xfd640087d0307c04,0x050c0147c8a00001,0x01c0001680000204\n"
".quad 0x014400d68014001a,0x0100201680b400d8,0x03e4201680040018,0x0300000000861ffe\n"
".quad 0x0500000100300000,0x00c4100780300202,0x012101ec041100f8,0x7fa0c00781d00e02\n"
".quad 0x1f0000003f000000,0x070000000f000000,0x0100000003000000,0x0000000400000000\n"
".quad 0x00000c0b04000000,0x1000000008000000,0x0800080d04000000,0x0500000020002101\n"
".quad 0x0904200780a0004c,0x0104000780a00000,0x0dc4100780300802,0x0504000780200004\n"
".quad 0xfdc0000780000204,0x036420c7c83003d1,0x0100000000a001e0,0x010403c7801000f8\n"
".quad 0x03e43f0780040018,0x11000002801001e0,0x1dc4100780300206,0x1500000013410028\n"
".quad 0x190000000b200086,0x110000000b2100f0,0x0d042107802000c8,0x21c410078030020e\n"
".quad 0x0180c00780d00e08,0x0500000780b00010,0xfdc0000780000204,0x016420c7c83005d1\n"
".quad 0x21e4200780040018,0x2104418500210008,0x0180c00500d00e10,0x0500000500b00010\n"
".quad 0x01c0000500000204,0x15e4200500040018,0xfd0401c78020000a,0x11640047c830060b\n"
".quad 0x030400c780200008,0x0100000280100100,0x03e0000002f00000,0xfd00000000861ffe\n"
".quad 0x05644107c8308005,0x09c0000500000204,0x0120000500d40260,0x014400c500180000\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308105\n"
".quad 0x09c0000500000204,0x0120000500d40160,0x014400c500180000,0x0100200500b400d8\n"
".quad 0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308205,0x01c0000500000204\n"
".quad 0x014400c500140038,0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe\n"
".quad 0x05644107c8308305,0x01c0000500000204,0x014400c500140028,0x0100200500b400d8\n"
".quad 0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308405,0x01c0000500000204\n"
".quad 0x014400c500140020,0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe\n"
".quad 0x05644107c8308505,0x01c0000500000204,0x014400c50014001c,0x0100200500b400d8\n"
".quad 0x03e4200500040018,0x0100000000861ffe,0xfd640087d0307c04,0x050c0147c8a00001\n"
".quad 0x01c0001680000204,0x014400d68014001a,0x0100201680b400d8,0x03e4201680040018\n"
".quad 0x0300000000861ffe,0x0500000100300000,0x00c4100780300202,0x012101ec041100f8\n"
".quad 0x3fa0c00781d00e02,0x0f0000001f000000,0x0300000007000000,0x0000000001000000\n"
".quad 0x0400000000000002,0x0800000000000c0b,0x0400000010000000,0x200021010800080d\n"
".quad 0x80a0004c05000000,0x80a0000009042007,0x8030070201040007,0x802000040dc41007\n"
".quad 0x8000020405040007,0xc83003d1fdc00007,0x00a001e0036420c7,0x801000f801000000\n"
".quad 0x80040018010403c7,0x801001e003e43f07,0x8030020611000002,0x0b4100281dc41007\n"
".quad 0x0720008615000000,0x072100f019000000,0x802000c811000000,0x8030020e0d042107\n"
".quad 0x80d00e0821c41007,0x80b000100180c007,0x8000020405000007,0xc83005d1fdc00007\n"
".quad 0x80040018016420c7,0x0021000821e42007,0x00d00e1021044145,0x00b000100180c005\n"
".quad 0x0000020405000005,0x0004001801c00005,0x8020000a15e42005,0xc830060bfd0401c7\n"
".quad 0x8020000811640047,0x80100100030400c7,0x02f0000001000002,0x00861ffe03e00000\n"
".quad 0xc8308005fd000000,0x0000020405644107,0x00d4016009c00005,0x0018000001200005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308105fd000000\n"
".quad 0x0000020405644107,0x0014003801c00005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xc8308205fd000000,0x0000020405644107,0x0014002801c00005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308305fd000000\n"
".quad 0x0000020405644107,0x0014002001c00005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xc8308405fd000000,0x0000020405644107,0x0014001c01c00005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xd0307c0401000000\n"
".quad 0xc8a00001fd640087,0x80000204050c0147,0x8014001a01c00016,0x80b400d8014400d6\n"
".quad 0x8004001801002016,0x00861ffe03e42016,0x0030000003000000,0x8030020205000001\n"
".quad 0x041100f800c41007,0x81d00e02012101ec,0x0f0000001fa0c007,0x0300000007000000\n"
".quad 0x0000000001000000,0x0400000000000001,0x0800000000000c0b,0x0400000010000000\n"
".quad 0x200021010800080d,0x80a0004c05000000,0x80a0000009042007,0x8030060201040007\n"
".quad 0x802000040dc41007,0x8000020405040007,0xc83003d1fdc00007,0x00a001e0036420c7\n"
".quad 0x801000f801000000,0x80040018010403c7,0x801001e003e43f07,0x8030020611000002\n"
".quad 0x074100281dc41007,0x0320208615000000,0x032120f019000000,0x802000c811000000\n"
".quad 0x8030020e0d042107,0x80d00e0821c41007,0x80b000100180c007,0x8000020405000007\n"
".quad 0xc83005d1fdc00007,0x80040018016420c7,0x0021000821e42007,0x00d00e1021044105\n"
".quad 0x00b000100180c005,0x0000020405000005,0x0004001801c00005,0x8020000a15e42005\n"
".quad 0xc830060bfd0401c7,0x8020000811640047,0x80100100030400c7,0x02f0000001000002\n"
".quad 0x00861ffe03e00000,0xc8308005fd000000,0x0000020405644107,0x0014003801c00005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308105fd000000\n"
".quad 0x0000020405644107,0x0014002801c00005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xc8308205fd000000,0x0000020405644107,0x0014002001c00005\n"
".quad 0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005,0xc8308305fd000000\n"
".quad 0x0000020405644107,0x0014001c01c00005,0x00b400d8014400c5,0x0004001801002005\n"
".quad 0x00861ffe03e42005,0xd0307c0401000000,0xc8a00001fd640087,0x80000204050c0147\n"
".quad 0x8014001a01c00016,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0x0030000003000000,0x8030020205000001,0x041100f800c41007,0x81d00e02012101ec\n"
".quad 0x070000000fa0c007,0x0100000003000000,0x0000000080000000,0x00000c0b04000000\n"
".quad 0x1000000008000000,0x0800080d04000000,0x0500000020002101,0x0904200780a0004c\n"
".quad 0x0104000780a00000,0x0dc4100780300502,0x0504000780200004,0xfdc0000780000204\n"
".quad 0x036420c7c83003d1,0x0100000000a001e0,0x010403c7801000f8,0x03e43f0780040018\n"
".quad 0x11000002801001e0,0x1dc4100780300206,0x1500000003412028,0x1900000003201086\n"
".quad 0x11000000032110f0,0x0d042107802000c8,0x21c410078030020e,0x0180c00780d00e08\n"
".quad 0x0500000780b00010,0xfdc0000780000204,0x016420c7c83005d1,0x21e4200780040018\n"
".quad 0x210440c500210008,0x0180c00500d00e10,0x0500000500b00010,0x01c0000500000204\n"
".quad 0x15e4200500040018,0xfd0401c78020000a,0x11640047c830060b,0x030400c780200008\n"
".quad 0x0100000280100100,0x03e0000002f00000,0xfd00000000861ffe,0x05644107c8308005\n"
".quad 0x01c0000500000204,0x014400c500140028,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0xfd00000000861ffe,0x05644107c8308105,0x01c0000500000204,0x014400c500140020\n"
".quad 0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe,0x05644107c8308205\n"
".quad 0x01c0000500000204,0x014400c50014001c,0x0100200500b400d8,0x03e4200500040018\n"
".quad 0x0100000000861ffe,0xfd640087d0307c04,0x050c0147c8a00001,0x01c0001680000204\n"
".quad 0x014400d68014001a,0x0100201680b400d8,0x03e4201680040018,0x0300000000861ffe\n"
".quad 0x0500000100300000,0x00c4100780300202,0x012101ec041100f8,0x07a0c00781d00e02\n"
".quad 0x0100000003000000,0x0000000040000000,0x00000c0b04000000,0x1000000008000000\n"
".quad 0x0800080d04000000,0x0500000020002101,0x0904200780a0004c,0x0104000780a00000\n"
".quad 0x0dc4100780300402,0x0504000780200004,0xfdc0000780000204,0x036420c7c83003d1\n"
".quad 0x0100000000a001e0,0x010403c7801000f8,0x03e43f0780040018,0x11000002801001e0\n"
".quad 0x1dc4100780300206,0x1500000003411028,0x1900000003200886,0x11000000032108f0\n"
".quad 0x0d042107802000c8,0x21c410078030020e,0x0180c00780d00e08,0x0500000780b00010\n"
".quad 0xfdc0000780000204,0x016420c7c83005d1,0x21e4200780040018,0x2104408500210008\n"
".quad 0x0180c00500d00e10,0x0500000500b00010,0x01c0000500000204,0x15e4200500040018\n"
".quad 0xfd0401c78020000a,0x11640047c830060b,0x030400c780200008,0x0100000280100100\n"
".quad 0x03e0000002f00000,0xfd00000000861ffe,0x05644107c8308005,0x01c0000500000204\n"
".quad 0x014400c500140020,0x0100200500b400d8,0x03e4200500040018,0xfd00000000861ffe\n"
".quad 0x05644107c8308105,0x01c0000500000204,0x014400c50014001c,0x0100200500b400d8\n"
".quad 0x03e4200500040018,0x0100000000861ffe,0xfd640087d0307c04,0x050c0147c8a00001\n"
".quad 0x01c0001680000204,0x014400d68014001a,0x0100201680b400d8,0x03e4201680040018\n"
".quad 0x0300000000861ffe,0x0500000100300000,0x00c4100780300202,0x012101ec041100f8\n"
".quad 0x03a0c00781d00e02,0x2000000001000000,0x0400000000000000,0x0800000000000c0b\n"
".quad 0x0400000010000000,0x200021010800080d,0x80a0004c05000000,0x80a0000009042007\n"
".quad 0x8030030201040007,0x802000040dc41007,0x8000020405040007,0xc83003d1fdc00007\n"
".quad 0x00a001e0036420c7,0x801000f801000000,0x80040018010403c7,0x801001e003e43f07\n"
".quad 0x8030020611000002,0x034108281dc41007,0x0320048615000000,0x032104f019000000\n"
".quad 0x802000c811000000,0x8030020e0d042107,0x80d00e0821c41007,0x80b000100180c007\n"
".quad 0x8000020405000007,0xc83005d1fdc00007,0x80040018016420c7,0x0021000821e42007\n"
".quad 0x00d00e1021044045,0x00b000100180c005,0x0000020405000005,0x0004001801c00005\n"
".quad 0x8020000a15e42005,0xc830060bfd0401c7,0x8020000811640047,0x80100100030400c7\n"
".quad 0x02f0000001000002,0x00861ffe03e00000,0xc8308005fd000000,0x0000020405644107\n"
".quad 0x0014001c01c00005,0x00b400d8014400c5,0x0004001801002005,0x00861ffe03e42005\n"
".quad 0xd0307c0401000000,0xc8a00001fd640087,0x80000204050c0147,0x8014001a01c00016\n"
".quad 0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016,0x0030000003000000\n"
".quad 0x8030020205000001,0x041100f800c41007,0x81d00e02012101ec,0x1000000001a0c007\n"
".quad 0x0400000000000000,0x0800000000000c0b,0x0400000010000000,0x200021010800080d\n"
".quad 0x80a0004c05000000,0x80a0000001042007,0x8030020209040007,0x802000000dc41007\n"
".quad 0x8000020005040087,0xc83003d1fdc00007,0x00a001e0036420c7,0x801000f809000000\n"
".quad 0x80040018010403c7,0x801001e003e43f07,0x8030020611000002,0x034104281dc41007\n"
".quad 0x0320028615000000,0x032102f019000000,0x802000c811000000,0x8030020e0d042107\n"
".quad 0x80d00e0821c41007,0x80b000100980c007,0x8000020005000087,0xc83005d1fdc00007\n"
".quad 0x80040018016420c7,0x0021000821e42087,0x00d00e1021044005,0x00b000100980c005\n"
".quad 0x0000020005000085,0x0004001801c00005,0x8020000a15e42085,0xc830060bfd0401c7\n"
".quad 0x8020000811640047,0x80100100030400c7,0x02f0000001000002,0x00861ffe03e00000\n"
".quad 0xd0307c0009000000,0xc8a00005fd640087,0x80000200050c0147,0x8014001a01c00016\n"
".quad 0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016,0x0030000003000000\n"
".quad 0x8030020205000001,0x041100f800c41007,0x81d00e02012101ec,0x0000000008a0c007\n"
".quad 0x00000c0b04000000,0x1000000008000000,0x0800080d04000000,0x0900000020002101\n"
".quad 0x0104200780a0004c,0x0504000780a00000,0x0dc4100780300104,0x0504004780200000\n"
".quad 0xfdc0000780000200,0x036420c7c83003d1,0x0500000000a001e0,0x010403c7801000f8\n"
".quad 0x03e43f0780040018,0x11000002801001e0,0x1dc4100780300206,0x1500000003410228\n"
".quad 0x1900000003200186,0x11000000032101f0,0x0d042107802000c8,0x21c410078030020e\n"
".quad 0x0580c00780d00e08,0x0500004780b00010,0xfdc0000780000200,0x016420c7c83005d1\n"
".quad 0x21e4204780040018,0x2104400500210008,0x0580c00500d00e10,0x0500004500b00010\n"
".quad 0x01c0000500000200,0x15e4204500040018,0xfd0401c78020000a,0x11640047c830060b\n"
".quad 0x030400c780200008,0x0100000280100100,0x03e0000002f00000,0xfd00000000861ffe\n"
".quad 0x03640147c8307c01,0x0500000280300000,0x00c4100780300204,0x012101ec041100f8\n"
".quad 0x04a0c00781d00e02,0x0400000000000000,0x0800000000000c0b,0x0400000010000000\n"
".quad 0x200021010800080d,0x80a0004c11000000,0x80a0000009042007,0x80300a0801040007\n"
".quad 0x00a001c003c41007,0x8020000401000000,0x801000f815040007,0x80000204050603c7\n"
".quad 0x80a000480dc00007,0xc83000d1fd042007,0x80300204056420c7,0x8004001801c41007\n"
".quad 0x801001c003e43f07,0x803002001d000002,0x80300a0621c41007,0x80300c0619c41007\n"
".quad 0x802000c81dc41007,0x8320008e250421c7,0x80d00e0e29000000,0x80d00e122580c007\n"
".quad 0x80b000141580c007,0x8000000205000147,0x8020001001c00007,0x8004001801040007\n"
".quad 0x80b0000a15e42147,0xc83000d1fd000247,0x8020000e1d642107,0x8004001801040187\n"
".quad 0x8010010003e42147,0x02f0000001000002,0x00861ffe03e00000,0xc030800401000000\n"
".quad 0xf8a00001fd6440c7,0x80000000150c0147,0x8000000205200037,0x80d4086009c00006\n"
".quad 0x8018000001200006,0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006\n"
".quad 0xc030810401000000,0xf8a00001fd6440c7,0x80000000190c0147,0x8000000205200037\n"
".quad 0x80d4046009c00006,0x8018000001200006,0x80b400d8014400c6,0x8004001801002006\n"
".quad 0x00861ffe03e42006,0xc030820401000000,0xf8a00001fd6440c7,0x800000001d0c0147\n"
".quad 0x8000000205200037,0x80d4026009c00006,0x8018000001200006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xc030830401000000,0xf8a00001fd6440c7\n"
".quad 0x80000000210c0147,0x8000000205200037,0x80d4016009c00006,0x8018000001200006\n"
".quad 0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006,0xc030840401000000\n"
".quad 0xf8a00001fd6440c7,0x80000000250c0147,0x8000000205200037,0x8014003801c00006\n"
".quad 0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006,0xc030850401000000\n"
".quad 0xf8a00001fd6440c7,0x80000000290c0147,0x8000000205200037,0x8014002801c00006\n"
".quad 0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006,0xd030860401000000\n"
".quad 0xc8a00001fd6440c7,0x80000002050c0147,0x8014002001c00016,0x80b400d8014400d6\n"
".quad 0x8004001801002016,0x00861ffe03e42016,0xe030870401000000,0xd8a00001fd6440c7\n"
".quad 0x80000002050c0147,0x8014001c01c00026,0x80b400d8014400e6,0x8004001801002026\n"
".quad 0x00861ffe03e42026,0xf0307c0401000000,0xe8a00001fd640087,0x80000002050c0147\n"
".quad 0x8014001a01c00036,0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036\n"
".quad 0x8030020811000000,0x8010001801c41026,0x802000cc114400e6,0x80d00e0801042126\n"
".quad 0xf8308707fda0c026,0x80300000036440c7,0x8000000001000032,0x80d0830001600007\n"
".quad 0x8030020011044007,0x1320008831c41007,0x1320009835000000,0x1320009a01000000\n"
".quad 0x80d00f082d000000,0x80d00f183180c007,0x80d00f1a3580c007,0x80d00f003980c007\n"
".quad 0x132000801180c007,0x1320008801000000,0x88a00017fd000000,0x132000802d0c0147\n"
".quad 0x88a00019fd000000,0x88a0001bfd0c0147,0x88a0001dfd0c0147,0x13200096310c0147\n"
".quad 0x80d00f0811000000,0x80d00f000180c007,0x80d00f162d80c007,0x80d00f183180c007\n"
".quad 0x88a00009fd80c007,0x88a00001fd0c0147,0x88a00017fd0c0147,0x88a00019fd0c0147\n"
".quad 0x80100000010c0147,0x80210006112780e6,0x90d7030001044226,0x8030040001e0c026\n"
".quad 0x80a00000016400a6,0x8000004801280166,0x00861ffe03e04026,0x80d0004805000000\n"
".quad 0xf8a40001fd200007,0x00300000030c2187,0xf8300207fd000031,0x002000cc016400c7\n"
".quad 0x00d00e0001042075,0x801000f80180c035,0x80000002050403f2,0x8004001801c00007\n"
".quad 0x00861ffe03e42007,0xf000000a01000000,0x80d4086009a00007,0x8018000001200036\n"
".quad 0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036,0xf000000c01000000\n"
".quad 0x80d4046009a00007,0x8018000001200036,0x80b400d8014400f6,0x8004001801002036\n"
".quad 0x00861ffe03e42036,0xf000000e01000000,0x80d4026009a00007,0x8018000001200036\n"
".quad 0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036,0xf000001001000000\n"
".quad 0x80d4016009a00007,0x8018000001200036,0x80b400d8014400f6,0x8004001801002036\n"
".quad 0x00861ffe03e42036,0xf000001201000000,0x8014003801a00007,0x80b400d8014400f6\n"
".quad 0x8004001801002036,0x00861ffe03e42036,0xf000001401000000,0x8014002801a00007\n"
".quad 0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036,0x8014002001000000\n"
".quad 0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006,0x8014001c01000000\n"
".quad 0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016,0x8014001a01000000\n"
".quad 0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026,0x0030000003000000\n"
".quad 0x001100ec04000021,0x80d00e02011100f8,0x8010000005a0c007,0x03100080012780c7\n"
".quad 0x81d00e0201000000,0x7f000000ffa0c007,0x1f0000003f000000,0x070000000f000000\n"
".quad 0x0100000003000000,0x04ffffffff000000,0x0800000000000c0b,0x0400000010000000\n"
".quad 0x200021010800080d,0x80a0004c11000000,0x80a0000009042007,0x8030090801040007\n"
".quad 0x00a001c003c41007,0x8020000401000000,0x801000f815040007,0x80000204050603c7\n"
".quad 0x80a000480dc00007,0xc83000d1fd042007,0x80300204056420c7,0x8004001801c41007\n"
".quad 0x801001c003e43f07,0x803002001d000002,0x8030090621c41007,0x80300b0619c41007\n"
".quad 0x802000c81dc41007,0x4320008e250421c7,0x80d00e0e29000000,0x80d00e122580c007\n"
".quad 0x80b000141580c007,0x8000000205000147,0x8020001001c00007,0x8004001801040007\n"
".quad 0x80b0000a15e42147,0xc83000d1fd000247,0x8020000e1d642107,0x8004001801040187\n"
".quad 0x8010010003e42147,0x02f0000001000002,0x00861ffe03e00000,0xc030800401000000\n"
".quad 0xe8a00001fd6440c7,0x80000000150c0147,0x8000000205200027,0x80d4046009c00006\n"
".quad 0x8018000001200006,0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006\n"
".quad 0xc030810401000000,0xe8a00001fd6440c7,0x80000000190c0147,0x8000000205200027\n"
".quad 0x80d4026009c00006,0x8018000001200006,0x80b400d8014400c6,0x8004001801002006\n"
".quad 0x00861ffe03e42006,0xc030820401000000,0xe8a00001fd6440c7,0x800000001d0c0147\n"
".quad 0x8000000205200027,0x80d4016009c00006,0x8018000001200006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xc030830401000000,0xe8a00001fd6440c7\n"
".quad 0x80000000210c0147,0x8000000205200027,0x8014003801c00006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xc030840401000000,0xe8a00001fd6440c7\n"
".quad 0x80000000250c0147,0x8000000205200027,0x8014002801c00006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xd030850401000000,0xc8a00001fd6440c7\n"
".quad 0x80000002050c0147,0x8014002001c00016,0x80b400d8014400d6,0x8004001801002016\n"
".quad 0x00861ffe03e42016,0xe030860401000000,0xd8a00001fd6440c7,0x80000002050c0147\n"
".quad 0x8014001c01c00026,0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026\n"
".quad 0xe0307c0401000000,0xf8a00001fd640087,0x80000002050c0147,0x8014001a01c00026\n"
".quad 0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026,0x8030020811000000\n"
".quad 0x8010001801c41036,0x802000cc114400f6,0x80d00e0801042136,0xe8308607fda0c036\n"
".quad 0x80300000036440c7,0x8000000001000022,0x80d0820001600007,0x8030020001044007\n"
".quad 0x1320008011c41007,0x1320008829000000,0x132000942d000000,0x80d00f0031000000\n"
".quad 0x80d00f080180c007,0x80d00f142980c007,0x80d00f161180c007,0x132000963580c007\n"
".quad 0x1320009a2d000000,0x88a00019fd000000,0x13200096310c0147,0x88a00001fd000000\n"
".quad 0x88a00015fd0c0147,0x88a00009fd0c0147,0x13200098390c0147,0x80d00f1a01000000\n"
".quad 0x80d00f161180c007,0x80d00f182980c007,0x80d00f1c2d80c007,0x88a00001fd80c007\n"
".quad 0x88a00009fd0c0147,0x88a00015fd0c0147,0x88a00017fd0c0147,0x80100000010c0147\n"
".quad 0x80210006112780f6,0x90d70300010441f6,0x8030040001e0c036,0x80a00000016400b6\n"
".quad 0x8000004801280176,0x00861ffe03e04036,0x80d0004805000000,0xe8a40001fd200007\n"
".quad 0x00300000030c2187,0xe8300207fd000021,0x002000cc016400c7,0x00d00e0001042065\n"
".quad 0x801000f80180c025,0x80000002050403e2,0x8004001801c00007,0x00861ffe03e42007\n"
".quad 0xe000000a01000000,0x80d4046009a00007,0x8018000001200026,0x80b400d8014400e6\n"
".quad 0x8004001801002026,0x00861ffe03e42026,0xe000000c01000000,0x80d4026009a00007\n"
".quad 0x8018000001200026,0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026\n"
".quad 0xe000000e01000000,0x80d4016009a00007,0x8018000001200026,0x80b400d8014400e6\n"
".quad 0x8004001801002026,0x00861ffe03e42026,0xe000001001000000,0x8014003801a00007\n"
".quad 0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026,0xe000001201000000\n"
".quad 0x8014002801a00007,0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026\n"
".quad 0x8014002001000000,0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006\n"
".quad 0x8014001c01000000,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0x8014001a01000000,0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036\n"
".quad 0x0030000003000000,0x001100ec04000031,0x80d00e02011100f8,0x8010000005a0c007\n"
".quad 0x03100080012780c7,0x81d00e0201000000,0x3f0000007fa0c007,0x0f0000001f000000\n"
".quad 0x0300000007000000,0xff00000001000000,0x00000c0b04ffffff,0x1000000008000000\n"
".quad 0x0800080d04000000,0x2100000020002101,0x0904200780a0004c,0x0104000780a00000\n"
".quad 0x03c4100780300810,0x0100000000a001c0,0x1104000780200004,0x050603c7801000f8\n"
".quad 0x0dc0000780000204,0xfd04200780a00048,0x056420c7c83000d1,0x01c4100780300204\n"
".quad 0x03e43f0780040018,0x19000002801001c0,0x1dc4100780300200,0x15c4100780300806\n"
".quad 0x19c4100780300a06,0x25042187802000c8,0x290000002320008c,0x2580c00780d00e0c\n"
".quad 0x1180c00780d00e12,0x0500010780b00014,0x01c0000780000002,0x010400078020000e\n"
".quad 0x11e4210780040018,0xfd00024780b00008,0x19642107c83000d1,0x010401478020000c\n"
".quad 0x03e4210780040018,0x0100000280100100,0x03e0000002f00000,0x0100000000861ffe\n"
".quad 0xfd6440c7c0308004,0x110c0147f8a00001,0x0520003780000000,0x09c0000680000002\n"
".quad 0x0120000680d40260,0x014400c680180000,0x0100200680b400d8,0x03e4200680040018\n"
".quad 0x0100000000861ffe,0xfd6440c7c0308104,0x150c0147f8a00001,0x0520003780000000\n"
".quad 0x09c0000680000002,0x0120000680d40160,0x014400c680180000,0x0100200680b400d8\n"
".quad 0x03e4200680040018,0x0100000000861ffe,0xfd6440c7c0308204,0x190c0147f8a00001\n"
".quad 0x0520003780000000,0x01c0000680000002,0x014400c680140038,0x0100200680b400d8\n"
".quad 0x03e4200680040018,0x0100000000861ffe,0xfd6440c7c0308304,0x1d0c0147f8a00001\n"
".quad 0x0520003780000000,0x01c0000680000002,0x014400c680140028,0x0100200680b400d8\n"
".quad 0x03e4200680040018,0x0100000000861ffe,0xfd6440c7d0308404,0x050c0147c8a00001\n"
".quad 0x01c0001680000002,0x014400d680140020,0x0100201680b400d8,0x03e4201680040018\n"
".quad 0x0100000000861ffe,0xfd6440c7e0308504,0x050c0147d8a00001,0x01c0002680000002\n"
".quad 0x014400e68014001c,0x0100202680b400d8,0x03e4202680040018,0x0100000000861ffe\n"
".quad 0xfd640087f0307c04,0x050c0147e8a00001,0x01c0003680000002,0x014400f68014001a\n"
".quad 0x0100203680b400d8,0x03e4203680040018,0x2100000000861ffe,0x01c4102680300210\n"
".quad 0x214400e680100018,0x01042226802000cc,0xfda0c02680d00e10,0x036440c7f8308507\n"
".quad 0x2100003280300000,0x2160000780000000,0x2104400780d08110,0x25c4100780300210\n"
".quad 0x2900000013200090,0x3500000013200092,0x2100000013200094,0x2580c00780d00f10\n"
".quad 0x2d80c00780d00f12,0x3180c00780d00f14,0x3580c00780d00f1a,0x290000001320009a\n"
".quad 0xfd0000001320009a,0x210c014788a00011,0xfd00000013200094,0xfd0c014788a00013\n"
".quad 0xfd0c014788a00017,0x2d0c014788a00019,0x2500000013200090,0x2980c00780d00f1a\n"
".quad 0x2180c00780d00f14,0x2d80c00780d00f10,0xfd80c00780d00f16,0xfd0c014788a00013\n"
".quad 0xfd0c014788a00015,0xfd0c014788a00011,0x010c014788a00017,0x212780e680100000\n"
".quad 0x010441a680210006,0x01e0c02690d70300,0x016400a680300800,0x0128016680a00000\n"
".quad 0x03e0402680000048,0x0500000000861ffe,0xfd20000780d00048,0x030c2187f8a40001\n"
".quad 0xfd00003100300000,0x016400c7f8300207,0x01042075002000cc,0x0180c03500d00e00\n"
".quad 0x050403f2801000f8,0x01c0000780000002,0x03e4200780040018,0x0100000000861ffe\n"
".quad 0x09a00007f0000008,0x0120003680d40260,0x014400f680180000,0x0100203680b400d8\n"
".quad 0x03e4203680040018,0x0100000000861ffe,0x09a00007f000000a,0x0120003680d40160\n"
".quad 0x014400f680180000,0x0100203680b400d8,0x03e4203680040018,0x0100000000861ffe\n"
".quad 0x01a00007f000000c,0x014400f680140038,0x0100203680b400d8,0x03e4203680040018\n"
".quad 0x0100000000861ffe,0x01a00007f000000e,0x014400f680140028,0x0100203680b400d8\n"
".quad 0x03e4203680040018,0x0100000000861ffe,0x014400c680140020,0x0100200680b400d8\n"
".quad 0x03e4200680040018,0x0100000000861ffe,0x014400d68014001c,0x0100201680b400d8\n"
".quad 0x03e4201680040018,0x0100000000861ffe,0x014400e68014001a,0x0100202680b400d8\n"
".quad 0x03e4202680040018,0x0300000000861ffe,0x0400002100300000,0x011100f8001100ec\n"
".quad 0x05a0c00780d00e02,0x012780c780100000,0x0100000003100080,0x3fa0c00781d00e02\n"
".quad 0x0f0000001f000000,0x0300000007000000,0xff00000001000000,0x00000c0b04ffffff\n"
".quad 0x1000000008000000,0x0800080d04000000,0x1100000020002101,0x0904200780a0004c\n"
".quad 0x0104000780a00000,0x03c4100780300708,0x0100000000a001c0,0x1504000780200004\n"
".quad 0x050603c7801000f8,0x0dc0000780000204,0xfd04200780a00048,0x056420c7c83000d1\n"
".quad 0x01c4100780300204,0x03e43f0780040018,0x1d000002801001c0,0x21c4100780300200\n"
".quad 0x19c4100780300706,0x1dc4100780300906,0x250421c7802000c8,0x290000001320008e\n"
".quad 0x2580c00780d00e0e,0x1580c00780d00e12,0x0500014780b00014,0x01c0000780000002\n"
".quad 0x0104000780200010,0x15e4214780040018,0xfd00024780b0000a,0x1d642107c83000d1\n"
".quad 0x010401878020000e,0x03e4214780040018,0x0100000280100100,0x03e0000002f00000\n"
".quad 0x0100000000861ffe,0xfd6440c7c0308004,0x150c0147f8a00001,0x0520003780000000\n"
".quad 0x09c0000680000002,0x0120000680d40160,0x014400c680180000,0x0100200680b400d8\n"
".quad 0x03e4200680040018,0x0100000000861ffe,0xfd6440c7c0308104,0x190c0147f8a00001\n"
".quad 0x0520003780000000,0x01c0000680000002,0x014400c680140038,0x0100200680b400d8\n"
".quad 0x03e4200680040018,0x0100000000861ffe,0xfd6440c7c0308204,0x1d0c0147f8a00001\n"
".quad 0x0520003780000000,0x01c0000680000002,0x014400c680140028,0x0100200680b400d8\n"
".quad 0x03e4200680040018,0x0100000000861ffe,0xfd6440c7d0308304,0x050c0147c8a00001\n"
".quad 0x01c0001680000002,0x014400d680140020,0x0100201680b400d8,0x03e4201680040018\n"
".quad 0x0100000000861ffe,0xfd6440c7e0308404,0x050c0147d8a00001,0x01c0002680000002\n"
".quad 0x014400e68014001c,0x0100202680b400d8,0x03e4202680040018,0x0100000000861ffe\n"
".quad 0xfd640087f0307c04,0x050c0147e8a00001,0x01c0003680000002,0x014400f68014001a\n"
".quad 0x0100203680b400d8,0x03e4203680040018,0x1100000000861ffe,0x01c4102680300208\n"
".quad 0x114400e680100018,0x01042126802000cc,0xfda0c02680d00e08,0x036440c7f8308407\n"
".quad 0x1100003280300000,0x1160000780000000,0x1104400780d08008,0x21c4100780300208\n"
".quad 0x2500000013200088,0x2d00000013200090,0x1100000013200092,0x2180c00780d00f08\n"
".quad 0x2580c00780d00f10,0x2980c00780d00f12,0x2d80c00780d00f16,0x3100000013200096\n"
".quad 0xfd00000013200096,0x350c014788a00009,0xfd00000013200098,0xfd0c014788a00011\n"
".quad 0xfd0c014788a00013,0x290c014788a00015,0x110000001320009a,0x2180c00780d00f16\n"
".quad 0x2580c00780d00f18,0x2980c00780d00f1a,0xfd80c00780d00f14,0xfd0c014788a00009\n"
".quad 0xfd0c014788a00011,0xfd0c014788a00013,0x010c014788a00015,0x112780e680100000\n"
".quad 0x0104416680210006,0x01e0c02690d70300,0x016400a680300400,0x0128016680a00000\n"
".quad 0x03e0402680000048,0x0500000000861ffe,0xfd20000780d00048,0x030c2187f8a40001\n"
".quad 0xfd00003100300000,0x016400c7f8300207,0x01042075002000cc,0x0180c03500d00e00\n"
".quad 0x050403f2801000f8,0x01c0000780000002,0x03e4200780040018,0x0100000000861ffe\n"
".quad 0x09a00007f000000a,0x0120003680d40160,0x014400f680180000,0x0100203680b400d8\n"
".quad 0x03e4203680040018,0x0100000000861ffe,0x01a00007f000000c,0x014400f680140038\n"
".quad 0x0100203680b400d8,0x03e4203680040018,0x0100000000861ffe,0x01a00007f000000e\n"
".quad 0x014400f680140028,0x0100203680b400d8,0x03e4203680040018,0x0100000000861ffe\n"
".quad 0x014400c680140020,0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe\n"
".quad 0x014400d68014001c,0x0100201680b400d8,0x03e4201680040018,0x0100000000861ffe\n"
".quad 0x014400e68014001a,0x0100202680b400d8,0x03e4202680040018,0x0300000000861ffe\n"
".quad 0x0400002100300000,0x011100f8001100ec,0x05a0c00780d00e02,0x012780c780100000\n"
".quad 0x0100000003100080,0x1fa0c00781d00e02,0x070000000f000000,0x0100000003000000\n"
".quad 0x04ffffffff000000,0x0800000000000c0b,0x0400000010000000,0x200021010800080d\n"
".quad 0x80a0004c11000000,0x80a0000009042007,0x8030060801040007,0x00a001c003c41007\n"
".quad 0x8020000401000000,0x801000f815040007,0x80000204050603c7,0x80a000480dc00007\n"
".quad 0xc83000d1fd042007,0x80300204056420c7,0x8004001801c41007,0x801001c003e43f07\n"
".quad 0x803002001d000002,0x8030060621c41007,0x8030080619c41007,0x802000c81dc41007\n"
".quad 0x0b20008e250421c7,0x80d00e0e29000000,0x80d00e122580c007,0x80b000141580c007\n"
".quad 0x8000000205000147,0x8020001001c00007,0x8004001801040007,0x80b0000a15e42147\n"
".quad 0xc83000d1fd000247,0x8020000e1d642107,0x8004001801040187,0x8010010003e42147\n"
".quad 0x02f0000001000002,0x00861ffe03e00000,0xc030800401000000,0xf8a00001fd6440c7\n"
".quad 0x80000000150c0147,0x8000000205200037,0x8014003801c00006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xc030810401000000,0xf8a00001fd6440c7\n"
".quad 0x80000000190c0147,0x8000000205200037,0x8014002801c00006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xd030820401000000,0xc8a00001fd6440c7\n"
".quad 0x80000002050c0147,0x8014002001c00016,0x80b400d8014400d6,0x8004001801002016\n"
".quad 0x00861ffe03e42016,0xe030830401000000,0xd8a00001fd6440c7,0x80000002050c0147\n"
".quad 0x8014001c01c00026,0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026\n"
".quad 0xf0307c0401000000,0xe8a00001fd640087,0x80000002050c0147,0x8014001a01c00036\n"
".quad 0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036,0x8030020811000000\n"
".quad 0x8010001801c41026,0x802000cc114400e6,0x80d00e0801042126,0xf8308307fda0c026\n"
".quad 0x80300000036440c7,0x8000000011000032,0x80d0840811600007,0x8030020811044007\n"
".quad 0x132000881dc41007,0x1320008e21000000,0x1320009029000000,0x80d00f0811000000\n"
".quad 0x80d00f0e1d80c007,0x80d00f102180c007,0x80d00f142580c007,0x132000942980c007\n"
".quad 0x132000942d000000,0x88a00009fd000000,0x13200096310c0147,0x88a0000ffd000000\n"
".quad 0x88a00011fd0c0147,0x88a00013fd0c0147,0x13200098250c0147,0x80d00f1411000000\n"
".quad 0x80d00f161d80c007,0x80d00f182180c007,0x80d00f122580c007,0x88a00009fd80c007\n"
".quad 0x88a0000ffd0c0147,0x88a00011fd0c0147,0x88a00013fd0c0147,0x80100000010c0147\n"
".quad 0x80210006112780e6,0x90d7030001044166,0x8030040001e0c026,0x80a00000016400a6\n"
".quad 0x8000004801280166,0x00861ffe03e04026,0x80d0004805000000,0xf8a40001fd200007\n"
".quad 0x00300000030c2187,0xf8300207fd000031,0x002000cc016400c7,0x00d00e0001042075\n"
".quad 0x801000f80180c035,0x80000002050403f2,0x8004001801c00007,0x00861ffe03e42007\n"
".quad 0xf000000a01000000,0x8014003801a00007,0x80b400d8014400f6,0x8004001801002036\n"
".quad 0x00861ffe03e42036,0xf000000c01000000,0x8014002801a00007,0x80b400d8014400f6\n"
".quad 0x8004001801002036,0x00861ffe03e42036,0x8014002001000000,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0x8014001c01000000,0x80b400d8014400d6\n"
".quad 0x8004001801002016,0x00861ffe03e42016,0x8014001a01000000,0x80b400d8014400e6\n"
".quad 0x8004001801002026,0x00861ffe03e42026,0x0030000003000000,0x001100ec04000021\n"
".quad 0x80d00e02011100f8,0x8010000005a0c007,0x03100080012780c7,0x81d00e0201000000\n"
".quad 0x070000000fa0c007,0x0100000003000000,0xff0000001f000000,0x00000c0b04ffffff\n"
".quad 0x1000000008000000,0x0800080d04000000,0x0d00000020002101,0x0904200780a0004c\n"
".quad 0x0104000780a00000,0x03c4100780300506,0x0100000000a001c0,0x1504000780200004\n"
".quad 0x050603c7801000f8,0x11c0000780000204,0xfd04200780a00048,0x056420c7c83000d1\n"
".quad 0x01c4100780300204,0x03e43f0780040018,0x1d000002801001c0,0x21c4100780300200\n"
".quad 0x19c4100780300508,0x1dc4100780300708,0x250421c7802000c8,0x290000000720008e\n"
".quad 0x2580c00780d00e0e,0x1580c00780d00e12,0x0500014780b00014,0x01c0000780000002\n"
".quad 0x0104000780200010,0x15e4214780040018,0xfd00024780b0000a,0x1d642107c83000d1\n"
".quad 0x010401878020000e,0x03e4214780040018,0x0100000280100100,0x03e0000002f00000\n"
".quad 0x0100000000861ffe,0xfd6440c7c0308004,0x150c0147e8a00001,0x0520002780000000\n"
".quad 0x01c0000680000002,0x014400c680140028,0x0100200680b400d8,0x03e4200680040018\n"
".quad 0x0100000000861ffe,0xfd6440c7d0308104,0x050c0147c8a00001,0x01c0001680000002\n"
".quad 0x014400d680140020,0x0100201680b400d8,0x03e4201680040018,0x0100000000861ffe\n"
".quad 0xfd6440c7e0308204,0x050c0147d8a00001,0x01c0002680000002,0x014400e68014001c\n"
".quad 0x0100202680b400d8,0x03e4202680040018,0x0100000000861ffe,0xfd640087e0307c04\n"
".quad 0x050c0147f8a00001,0x01c0002680000002,0x014400e68014001a,0x0100202680b400d8\n"
".quad 0x03e4202680040018,0x0d00000000861ffe,0x01c4103680300206,0x0d4400f680100018\n"
".quad 0x010420f6802000cc,0xfda0c03680d00e06,0x036440c7e8308209,0x0d00002280300000\n"
".quad 0x0d60000780000000,0x0d04400780d08306,0x19c4100780300206,0x1d00000013200086\n"
".quad 0x250000001320008c,0x0d0000001320008e,0x1980c00780d00f06,0x1d80c00780d00f0c\n"
".quad 0x2180c00780d00f0e,0x2580c00780d00f12,0x2900000013200092,0xfd00000013200092\n"
".quad 0x2d0c014788a00007,0xfd00000013200094,0xfd0c014788a0000d,0xfd0c014788a0000f\n"
".quad 0x210c014788a00011,0x0d00000013200096,0x1980c00780d00f12,0x1d80c00780d00f14\n"
".quad 0x2180c00780d00f16,0xfd80c00780d00f10,0xfd0c014788a00007,0xfd0c014788a0000d\n"
".quad 0xfd0c014788a0000f,0x010c014788a00011,0x0d2780f680100000,0x0104413680210008\n"
".quad 0x01e0c03690d70400,0x016400b680300300,0x0128017680a00000,0x03e0403680000048\n"
".quad 0x0500000000861ffe,0xfd20000780d00048,0x030c2187e8a40001,0xfd00002100300000\n"
".quad 0x016400c7e8300209,0x01042065002000cc,0x0180c02500d00e00,0x050403e2801000f8\n"
".quad 0x01c0000780000002,0x03e4200780040018,0x0100000000861ffe,0x01a00007e000000a\n"
".quad 0x014400e680140028,0x0100202680b400d8,0x03e4202680040018,0x0100000000861ffe\n"
".quad 0x014400c680140020,0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe\n"
".quad 0x014400d68014001c,0x0100201680b400d8,0x03e4201680040018,0x0100000000861ffe\n"
".quad 0x014400f68014001a,0x0100203680b400d8,0x03e4203680040018,0x0300000000861ffe\n"
".quad 0x0400003100300000,0x011100f8001100ec,0x05a0c00780d00e02,0x012780c780100000\n"
".quad 0x0100000003100080,0x07a0c00781d00e02,0x0100000003000000,0xff0000001f000000\n"
".quad 0x00000c0b04ffffff,0x1000000008000000,0x0800080d04000000,0x0d00000020002101\n"
".quad 0x0904200780a0004c,0x0104000780a00000,0x03c4100780300406,0x0100000000a001c0\n"
".quad 0x1504000780200004,0x050603c7801000f8,0x11c0000780000204,0xfd04200780a00048\n"
".quad 0x056420c7c83000d1,0x01c4100780300204,0x03e43f0780040018,0x1d000002801001c0\n"
".quad 0x21c4100780300200,0x19c4100780300408,0x1dc4100780300608,0x250421c7802000c8\n"
".quad 0x290000000320208e,0x2580c00780d00e0e,0x1580c00780d00e12,0x0500014780b00014\n"
".quad 0x01c0000780000002,0x0104000780200010,0x15e4214780040018,0xfd00024780b0000a\n"
".quad 0x1d642107c83000d1,0x010401878020000e,0x03e4214780040018,0x0100000280100100\n"
".quad 0x03e0000002f00000,0x0100000000861ffe,0xfd6440c7d0308004,0x050c0147c8a00001\n"
".quad 0x01c0001680000002,0x014400d680140020,0x0100201680b400d8,0x03e4201680040018\n"
".quad 0x0100000000861ffe,0xfd6440c7e0308104,0x050c0147d8a00001,0x01c0002680000002\n"
".quad 0x014400e68014001c,0x0100202680b400d8,0x03e4202680040018,0x0100000000861ffe\n"
".quad 0xfd640087f0307c04,0x050c0147e8a00001,0x01c0003680000002,0x014400f68014001a\n"
".quad 0x0100203680b400d8,0x03e4203680040018,0x0d00000000861ffe,0x01c4102680300206\n"
".quad 0x0d4400e680100018,0x010420e6802000cc,0xfda0c02680d00e06,0x036440c7f8308109\n"
".quad 0x0d00003280300000,0x0d60000780000000,0x0d04400780d08206,0x15c4100780300206\n"
".quad 0x1900000013200086,0x210000001320008a,0x0d0000001320008c,0x1580c00780d00f06\n"
".quad 0x1980c00780d00f0a,0x1d80c00780d00f0c,0x2180c00780d00f10,0x2500000013200090\n"
".quad 0xfd00000013200090,0x290c014788a00007,0xfd00000013200092,0xfd0c014788a0000b\n"
".quad 0xfd0c014788a0000d,0x1d0c014788a0000f,0x0d00000013200094,0x1580c00780d00f10\n"
".quad 0x1980c00780d00f12,0x1d80c00780d00f14,0xfd80c00780d00f0e,0xfd0c014788a00007\n"
".quad 0xfd0c014788a0000b,0xfd0c014788a0000d,0x010c014788a0000f,0x0d2780e680100000\n"
".quad 0x010440e680210008,0x01e0c02690d70400,0x016400a680300300,0x0128016680a00000\n"
".quad 0x03e0402680000048,0x0500000000861ffe,0xfd20000780d00048,0x030c2187f8a40001\n"
".quad 0xfd00003100300000,0x016400c7f8300209,0x01042075002000cc,0x0180c03500d00e00\n"
".quad 0x050403f2801000f8,0x01c0000780000002,0x03e4200780040018,0x0100000000861ffe\n"
".quad 0x014400c680140020,0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe\n"
".quad 0x014400d68014001c,0x0100201680b400d8,0x03e4201680040018,0x0100000000861ffe\n"
".quad 0x014400e68014001a,0x0100202680b400d8,0x03e4202680040018,0x0300000000861ffe\n"
".quad 0x0400002100300000,0x011100f8001100ec,0x05a0c00780d00e02,0x012780c780100000\n"
".quad 0x0100000003100080,0x03a0c00781d00e02,0x1f00000001000000,0x04ffffffff000000\n"
".quad 0x0800000000000c0b,0x0400000010000000,0x200021010800080d,0x80a0004c0d000000\n"
".quad 0x80a0000009042007,0x8030030601040007,0x00a001c003c41007,0x8020000401000000\n"
".quad 0x801000f815040007,0x80000204050603c7,0x80a0004811c00007,0xc83000d1fd042007\n"
".quad 0x80300204056420c7,0x8004001801c41007,0x801001c003e43f07,0x803002001d000002\n"
".quad 0x8030030821c41007,0x8030050819c41007,0x802000c81dc41007,0x0320108e250421c7\n"
".quad 0x80d00e0e29000000,0x80d00e122580c007,0x80b000141580c007,0x8000000205000147\n"
".quad 0x8020001001c00007,0x8004001801040007,0x80b0000a15e42147,0xc83000d1fd000247\n"
".quad 0x8020000e1d642107,0x8004001801040187,0x8010010003e42147,0x02f0000001000002\n"
".quad 0x00861ffe03e00000,0xd030800401000000,0xc8a00001fd6440c7,0x80000002050c0147\n"
".quad 0x8014001c01c00016,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0xe0307c0401000000,0xd8a00001fd640087,0x80000002050c0147,0x8014001a01c00026\n"
".quad 0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026,0x803002060d000000\n"
".quad 0x8010001801c41016,0x802000cc0d4400d6,0x80d00e06010420d6,0xe8308009fda0c016\n"
".quad 0x80300000036440c7,0x800000000d000022,0x80d081060d600007,0x803002060d044007\n"
".quad 0x1320008615c41007,0x1320008a19000000,0x1320008c21000000,0x80d00f060d000000\n"
".quad 0x80d00f0a1580c007,0x80d00f0c1980c007,0x80d00f101d80c007,0x132000902180c007\n"
".quad 0x1320009025000000,0x88a00007fd000000,0x13200092290c0147,0x88a0000bfd000000\n"
".quad 0x88a0000dfd0c0147,0x88a0000ffd0c0147,0x132000941d0c0147,0x80d00f100d000000\n"
".quad 0x80d00f121580c007,0x80d00f141980c007,0x80d00f0e1d80c007,0x88a00007fd80c007\n"
".quad 0x88a0000bfd0c0147,0x88a0000dfd0c0147,0x88a0000ffd0c0147,0x80100000010c0147\n"
".quad 0x802100080d2780d6,0x90d7040001044096,0x8030030001e0c016,0x80a0000001640096\n"
".quad 0x8000004801280156,0x00861ffe03e04016,0x80d0004805000000,0xe8a40001fd200007\n"
".quad 0x00300000030c2187,0xe8300209fd000021,0x002000cc016400c7,0x00d00e0001042065\n"
".quad 0x801000f80180c025,0x80000002050403e2,0x8004001801c00007,0x00861ffe03e42007\n"
".quad 0x8014001c01000000,0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006\n"
".quad 0x8014001a01000000,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0x0030000003000000,0x001100ec04000011,0x80d00e02011100f8,0x8010000005a0c007\n"
".quad 0x03100080012780c7,0x81d00e0201000000,0x1f00000001a0c007,0x04ffffffff000000\n"
".quad 0x0800000000000c0b,0x0400000010000000,0x200021010800080d,0x80a0004c0d000000\n"
".quad 0x80a0000009042007,0x8030020601040007,0x00a001c003c41007,0x8020000401000000\n"
".quad 0x801000f815040007,0x80000204050603c7,0x80a0004811c00007,0xc83000d1fd042007\n"
".quad 0x80300204056420c7,0x8004001801c41007,0x801001c003e43f07,0x803002001d000002\n"
".quad 0x8030020821c41007,0x8030040819c41007,0x802000c81dc41007,0x0320088e250421c7\n"
".quad 0x80d00e0e29000000,0x80d00e122580c007,0x80b000141580c007,0x8000000205000147\n"
".quad 0x8020001001c00007,0x8004001801040007,0x80b0000a15e42147,0xc83000d1fd000247\n"
".quad 0x8020000e1d642107,0x8004001801040187,0x8010010003e42147,0x02f0000001000002\n"
".quad 0x00861ffe03e00000,0xd0307c0401000000,0xc8a00001fd640087,0x80000002050c0147\n"
".quad 0x8014001a01c00016,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0x803002060d000000,0x8010001801c41006,0x802000cc0d4400c6,0x80d00e06010420c6\n"
".quad 0xd8308009fda0c006,0x80300000036440c7,0x800000000d000012,0x80d081060d600007\n"
".quad 0x803002060d044007,0x1320008615c41007,0x1320008a19000000,0x1320008c21000000\n"
".quad 0x80d00f060d000000,0x80d00f0a1580c007,0x80d00f0c1980c007,0x80d00f101d80c007\n"
".quad 0x132000902180c007,0x1320009025000000,0x88a00007fd000000,0x13200092290c0147\n"
".quad 0x88a0000bfd000000,0x88a0000dfd0c0147,0x88a0000ffd0c0147,0x132000941d0c0147\n"
".quad 0x80d00f100d000000,0x80d00f121580c007,0x80d00f141980c007,0x80d00f0e1d80c007\n"
".quad 0x88a00007fd80c007,0x88a0000bfd0c0147,0x88a0000dfd0c0147,0x88a0000ffd0c0147\n"
".quad 0x80100000010c0147,0x802100080d2780c6,0x90d7040001044086,0x8030030001e0c006\n"
".quad 0x80a0000001640086,0x8000004801280146,0x00861ffe03e04006,0x80d0004805000000\n"
".quad 0xd8a40001fd200007,0x00300000030c2187,0xd8300209fd000011,0x002000cc016400c7\n"
".quad 0x00d00e0001042055,0x801000f80180c015,0x80000002050403d2,0x8004001801c00007\n"
".quad 0x00861ffe03e42007,0x8014001a01000000,0x80b400d8014400c6,0x8004001801002006\n"
".quad 0x00861ffe03e42006,0x0030000003000000,0x001100ec04000001,0x80d00e02011100f8\n"
".quad 0x8010000005a0c007,0x03100080012780c7,0x81d00e0201000000,0x1f00000001a0c007\n"
".quad 0x04ffffffff000000,0x0800000000000c0b,0x0400000010000000,0x200021010800080d\n"
".quad 0x80a0004c15000000,0x80a0000009042007,0x8030010a01040007,0x00a001c003c41007\n"
".quad 0x8020000401000000,0x801000f811040007,0x80000204050603c7,0x80a000480dc00007\n"
".quad 0xc83000d1fd042007,0x80300204056420c7,0x8004001801c41007,0x801001c003e43f07\n"
".quad 0x803002001d000002,0x8030010621c41007,0x8030030619c41007,0x802000c81dc41007\n"
".quad 0x0320048e250421c7,0x80d00e0e29000000,0x80d00e122580c007,0x80b000141180c007\n"
".quad 0x8000000205000107,0x8020001001c00007,0x8004001801040007,0x80b0000811e42107\n"
".quad 0xc83000d1fd000247,0x8020000e1d642107,0x8004001801040187,0x8010010003e42107\n"
".quad 0x02f0000001000002,0x00861ffe03e00000,0xd0307c0401000000,0xc8a00001fd640087\n"
".quad 0x8030020a110c0147,0x8010001801c41016,0x802000cc114400d6,0x80d00e0801042116\n"
".quad 0xd8308007fda0c016,0x80300000036440c7,0x8000000011000012,0x80d0810811600007\n"
".quad 0x8030020811044007,0x1320008815c41007,0x1320008a19000000,0x1320008c21000000\n"
".quad 0x80d00f0811000000,0x80d00f0a1580c007,0x80d00f0c1980c007,0x80d00f101d80c007\n"
".quad 0x132000902180c007,0x1320009025000000,0x88a00009fd000000,0x13200092290c0147\n"
".quad 0x88a0000bfd000000,0x88a0000dfd0c0147,0x88a0000ffd0c0147,0x132000941d0c0147\n"
".quad 0x80d00f1011000000,0x80d00f121580c007,0x80d00f141980c007,0x80d00f0e1d80c007\n"
".quad 0x88a00009fd80c007,0x88a0000bfd0c0147,0x88a0000dfd0c0147,0x88a0000ffd0c0147\n"
".quad 0x80100000010c0147,0x80210006112780c6,0x90d7030001044086,0x8030040001e0c006\n"
".quad 0x80a0000001640086,0x8000004801280146,0x00861ffe03e04006,0x80d0004805000000\n"
".quad 0xd8a40001fd200007,0x00300000030c2187,0xd8300207fd000011,0x002000cc016400c7\n"
".quad 0x00d00e0001042055,0x801000f80180c015,0x80000002050403d2,0x8004001801c00007\n"
".quad 0x00861ffe03e42007,0x0030000003000000,0x001100ec04000001,0x80d00e02011100f8\n"
".quad 0x8010000005a0c007,0x03100080012780c7,0x81d00e0201000000,0x1f00000001a0c007\n"
".quad 0x04ffffffff000000,0x0800000000000c0b,0x0400000010000000,0x200021010800080d\n"
".quad 0x80a0004c19000000,0x80a0000009042007,0x80300a0c01040007,0x8020000411c41007\n"
".quad 0x00a0020003040007,0x801000f801000000,0x80000204050603c7,0xc83004d1fdc00007\n"
".quad 0x80a000480d6420c7,0x8030020405042007,0x8004001801c41007,0x8010020003e43f07\n"
".quad 0x232000881d000002,0x8030020815000000,0x232100f021c41007,0x80300a0625000000\n"
".quad 0x80300c0611c41007,0x802000c815c41007,0x80d00e0a29042147,0x80b000140180c007\n"
".quad 0x8000000205000007,0xc83007d1fdc00007,0x80040018016420c7,0x0021000a29e42007\n"
".quad 0x00d00e1429044205,0x00b000140180c005,0x0000000205000005,0x0004001801c00005\n"
".quad 0x8020000e1de42005,0xc830080ffd040247,0x8020000a15640047,0x8010012003040107\n"
".quad 0x02f0000001000002,0x00861ffe03e00000,0xc030800401000000,0xf8a00001fd6440c7\n"
".quad 0x80000000110c0147,0x8000000205200037,0x80d4086009c00006,0x8018000001200006\n"
".quad 0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006,0xc030810401000000\n"
".quad 0xf8a00001fd6440c7,0x80000000150c0147,0x8000000205200037,0x80d4046009c00006\n"
".quad 0x8018000001200006,0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006\n"
".quad 0xc030820401000000,0xf8a00001fd6440c7,0x800000001d0c0147,0x8000000205200037\n"
".quad 0x80d4026009c00006,0x8018000001200006,0x80b400d8014400c6,0x8004001801002006\n"
".quad 0x00861ffe03e42006,0xc030830401000000,0xf8a00001fd6440c7,0x80000000210c0147\n"
".quad 0x8000000205200037,0x80d4016009c00006,0x8018000001200006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xc030840401000000,0xf8a00001fd6440c7\n"
".quad 0x80000000250c0147,0x8000000205200037,0x8014003801c00006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xc030850401000000,0xf8a00001fd6440c7\n"
".quad 0x80000000290c0147,0x8000000205200037,0x8014002801c00006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xd030860401000000,0xc8a00001fd6440c7\n"
".quad 0x80000002050c0147,0x8014002001c00016,0x80b400d8014400d6,0x8004001801002016\n"
".quad 0x00861ffe03e42016,0xe030870401000000,0xd8a00001fd6440c7,0x80000002050c0147\n"
".quad 0x8014001c01c00026,0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026\n"
".quad 0xf0307c0401000000,0xe8a00001fd640087,0x80000002050c0147,0x8014001a01c00036\n"
".quad 0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036,0x8030020c19000000\n"
".quad 0x8010001801c41026,0x802000cc194400e6,0x80d00e0c010421a6,0xf8308707fda0c026\n"
".quad 0x80300000036440c7,0x8000000001000032,0x80d0830001600007,0x8030020019044007\n"
".quad 0x1320008c31c41007,0x1320009835000000,0x1320009a01000000,0x80d00f0c2d000000\n"
".quad 0x80d00f183180c007,0x80d00f1a3580c007,0x80d00f003980c007,0x132000801980c007\n"
".quad 0x1320008c01000000,0x88a00017fd000000,0x132000802d0c0147,0x88a00019fd000000\n"
".quad 0x88a0001bfd0c0147,0x88a0001dfd0c0147,0x13200096310c0147,0x80d00f0c19000000\n"
".quad 0x80d00f000180c007,0x80d00f162d80c007,0x80d00f183180c007,0x88a0000dfd80c007\n"
".quad 0x88a00001fd0c0147,0x88a00017fd0c0147,0x88a00019fd0c0147,0x80100000010c0147\n"
".quad 0x80210006192780e6,0x90d70300010442a6,0x8030060001e0c026,0x80a00000016400a6\n"
".quad 0x8000004801280166,0x00861ffe03e04026,0x80d0004805000000,0xf8a40001fd200007\n"
".quad 0x00300000030c2187,0xf8300207fd000031,0x002000cc016400c7,0x00d00e0001042075\n"
".quad 0x801000f80180c035,0x80000002050403f2,0x8004001801c00007,0x00861ffe03e42007\n"
".quad 0xf000000801000000,0x80d4086009a00007,0x8018000001200036,0x80b400d8014400f6\n"
".quad 0x8004001801002036,0x00861ffe03e42036,0xf000000a01000000,0x80d4046009a00007\n"
".quad 0x8018000001200036,0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036\n"
".quad 0xf000000e01000000,0x80d4026009a00007,0x8018000001200036,0x80b400d8014400f6\n"
".quad 0x8004001801002036,0x00861ffe03e42036,0xf000001001000000,0x80d4016009a00007\n"
".quad 0x8018000001200036,0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036\n"
".quad 0xf000001201000000,0x8014003801a00007,0x80b400d8014400f6,0x8004001801002036\n"
".quad 0x00861ffe03e42036,0xf000001401000000,0x8014002801a00007,0x80b400d8014400f6\n"
".quad 0x8004001801002036,0x00861ffe03e42036,0x8014002001000000,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0x8014001c01000000,0x80b400d8014400d6\n"
".quad 0x8004001801002016,0x00861ffe03e42016,0x8014001a01000000,0x80b400d8014400e6\n"
".quad 0x8004001801002026,0x00861ffe03e42026,0x0030000003000000,0x001100ec04000021\n"
".quad 0x80d00e02011100f8,0x8010000005a0c007,0x03100080012780c7,0x81d00e0201000000\n"
".quad 0x7f000000ffa0c007,0x1f0000003f000000,0x070000000f000000,0x0100000003000000\n"
".quad 0x0000000800000000,0x04ffffffff000000,0x0800000000000c0b,0x0400000010000000\n"
".quad 0x200021010800080d,0x80a0004c1d000000,0x80a0000009042007,0x8030090e01040007\n"
".quad 0x8020000411c41007,0x00a0020003040007,0x801000f801000000,0x80000204050603c7\n"
".quad 0xc83004d1fdc00007,0x80a000480d6420c7,0x8030020405042007,0x8004001801c41007\n"
".quad 0x8010020003e43f07,0x1320008819000002,0x8030020815000000,0x132100f021c41007\n"
".quad 0x8030090625000000,0x80300b0611c41007,0x802000c815c41007,0x80d00e0a29042147\n"
".quad 0x80b000140180c007,0x8000000205000007,0xc83006d1fdc00007,0x80040018016420c7\n"
".quad 0x0021000a29e42007,0x00d00e14290441c5,0x00b000140180c005,0x0000000205000005\n"
".quad 0x0004001801c00005,0x8020000c19e42005,0xc830080dfd040247,0x8020000a15640047\n"
".quad 0x8010012003040107,0x02f0000001000002,0x00861ffe03e00000,0xc030800401000000\n"
".quad 0xe8a00001fd6440c7,0x80000000110c0147,0x8000000205200027,0x80d4046009c00006\n"
".quad 0x8018000001200006,0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006\n"
".quad 0xc030810401000000,0xe8a00001fd6440c7,0x80000000150c0147,0x8000000205200027\n"
".quad 0x80d4026009c00006,0x8018000001200006,0x80b400d8014400c6,0x8004001801002006\n"
".quad 0x00861ffe03e42006,0xc030820401000000,0xe8a00001fd6440c7,0x80000000190c0147\n"
".quad 0x8000000205200027,0x80d4016009c00006,0x8018000001200006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xc030830401000000,0xe8a00001fd6440c7\n"
".quad 0x80000000210c0147,0x8000000205200027,0x8014003801c00006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xc030840401000000,0xe8a00001fd6440c7\n"
".quad 0x80000000250c0147,0x8000000205200027,0x8014002801c00006,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0xd030850401000000,0xc8a00001fd6440c7\n"
".quad 0x80000002050c0147,0x8014002001c00016,0x80b400d8014400d6,0x8004001801002016\n"
".quad 0x00861ffe03e42016,0xe030860401000000,0xd8a00001fd6440c7,0x80000002050c0147\n"
".quad 0x8014001c01c00026,0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026\n"
".quad 0xe0307c0401000000,0xf8a00001fd640087,0x80000002050c0147,0x8014001a01c00026\n"
".quad 0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026,0x8030020e1d000000\n"
".quad 0x8010001801c41036,0x802000cc1d4400f6,0x80d00e0e010421f6,0xe8308607fda0c036\n"
".quad 0x80300000036440c7,0x8000000001000022,0x80d0820001600007,0x8030020001044007\n"
".quad 0x132000801dc41007,0x1320008e29000000,0x132000942d000000,0x80d00f0031000000\n"
".quad 0x80d00f0e0180c007,0x80d00f142980c007,0x80d00f161d80c007,0x132000963580c007\n"
".quad 0x1320009a2d000000,0x88a00019fd000000,0x13200096310c0147,0x88a00001fd000000\n"
".quad 0x88a00015fd0c0147,0x88a0000ffd0c0147,0x13200098390c0147,0x80d00f1a01000000\n"
".quad 0x80d00f161d80c007,0x80d00f182980c007,0x80d00f1c2d80c007,0x88a00001fd80c007\n"
".quad 0x88a0000ffd0c0147,0x88a00015fd0c0147,0x88a00017fd0c0147,0x80100000010c0147\n"
".quad 0x802100061d2780f6,0x90d7030001044276,0x8030070001e0c036,0x80a00000016400b6\n"
".quad 0x8000004801280176,0x00861ffe03e04036,0x80d0004805000000,0xe8a40001fd200007\n"
".quad 0x00300000030c2187,0xe8300207fd000021,0x002000cc016400c7,0x00d00e0001042065\n"
".quad 0x801000f80180c025,0x80000002050403e2,0x8004001801c00007,0x00861ffe03e42007\n"
".quad 0xe000000801000000,0x80d4046009a00007,0x8018000001200026,0x80b400d8014400e6\n"
".quad 0x8004001801002026,0x00861ffe03e42026,0xe000000a01000000,0x80d4026009a00007\n"
".quad 0x8018000001200026,0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026\n"
".quad 0xe000000c01000000,0x80d4016009a00007,0x8018000001200026,0x80b400d8014400e6\n"
".quad 0x8004001801002026,0x00861ffe03e42026,0xe000001001000000,0x8014003801a00007\n"
".quad 0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026,0xe000001201000000\n"
".quad 0x8014002801a00007,0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026\n"
".quad 0x8014002001000000,0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006\n"
".quad 0x8014001c01000000,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0x8014001a01000000,0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036\n"
".quad 0x0030000003000000,0x001100ec04000031,0x80d00e02011100f8,0x8010000005a0c007\n"
".quad 0x03100080012780c7,0x81d00e0201000000,0x3f0000007fa0c007,0x0f0000001f000000\n"
".quad 0x0300000007000000,0x0000000001000000,0xff00000000000004,0x00000c0b04ffffff\n"
".quad 0x1000000008000000,0x0800080d04000000,0x2100000020002101,0x0904200780a0004c\n"
".quad 0x0104000780a00000,0x11c4100780300810,0x0304000780200004,0x0100000000a00200\n"
".quad 0x050603c7801000f8,0xfdc0000780000204,0x0d6420c7c83004d1,0x0504200780a00048\n"
".quad 0x01c4100780300204,0x03e43f0780040018,0x1900000280100200,0x150000000b200088\n"
".quad 0x1dc4100780300208,0x250000000b2100f0,0x11c4100780300806,0x15c4100780300a06\n"
".quad 0x29042147802000c8,0x0180c00780d00e0a,0x0500000780b00014,0xfdc0000780000002\n"
".quad 0x016420c7c83006d1,0x29e4200780040018,0x290441850021000a,0x0180c00500d00e14\n"
".quad 0x0500000500b00014,0x01c0000500000002,0x19e4200500040018,0xfd0402478020000c\n"
".quad 0x15640047c830070d,0x030401078020000a,0x0100000280100120,0x03e0000002f00000\n"
".quad 0x0100000000861ffe,0xfd6440c7c0308004,0x110c0147f8a00001,0x0520003780000000\n"
".quad 0x09c0000680000002,0x0120000680d40260,0x014400c680180000,0x0100200680b400d8\n"
".quad 0x03e4200680040018,0x0100000000861ffe,0xfd6440c7c0308104,0x150c0147f8a00001\n"
".quad 0x0520003780000000,0x09c0000680000002,0x0120000680d40160,0x014400c680180000\n"
".quad 0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe,0xfd6440c7c0308204\n"
".quad 0x190c0147f8a00001,0x0520003780000000,0x01c0000680000002,0x014400c680140038\n"
".quad 0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe,0xfd6440c7c0308304\n"
".quad 0x1d0c0147f8a00001,0x0520003780000000,0x01c0000680000002,0x014400c680140028\n"
".quad 0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe,0xfd6440c7d0308404\n"
".quad 0x050c0147c8a00001,0x01c0001680000002,0x014400d680140020,0x0100201680b400d8\n"
".quad 0x03e4201680040018,0x0100000000861ffe,0xfd6440c7e0308504,0x050c0147d8a00001\n"
".quad 0x01c0002680000002,0x014400e68014001c,0x0100202680b400d8,0x03e4202680040018\n"
".quad 0x0100000000861ffe,0xfd640087f0307c04,0x050c0147e8a00001,0x01c0003680000002\n"
".quad 0x014400f68014001a,0x0100203680b400d8,0x03e4203680040018,0x2100000000861ffe\n"
".quad 0x01c4102680300210,0x214400e680100018,0x01042226802000cc,0xfda0c02680d00e10\n"
".quad 0x036440c7f8308507,0x2100003280300000,0x2160000780000000,0x2104400780d08110\n"
".quad 0x25c4100780300210,0x2900000013200090,0x3500000013200092,0x2100000013200094\n"
".quad 0x2580c00780d00f10,0x2d80c00780d00f12,0x3180c00780d00f14,0x3580c00780d00f1a\n"
".quad 0x290000001320009a,0xfd0000001320009a,0x210c014788a00011,0xfd00000013200094\n"
".quad 0xfd0c014788a00013,0xfd0c014788a00017,0x2d0c014788a00019,0x2500000013200090\n"
".quad 0x2980c00780d00f1a,0x2180c00780d00f14,0x2d80c00780d00f10,0xfd80c00780d00f16\n"
".quad 0xfd0c014788a00013,0xfd0c014788a00015,0xfd0c014788a00011,0x010c014788a00017\n"
".quad 0x212780e680100000,0x0104422680210006,0x01e0c02690d70300,0x016400a680300800\n"
".quad 0x0128016680a00000,0x03e0402680000048,0x0500000000861ffe,0xfd20000780d00048\n"
".quad 0x030c2187f8a40001,0xfd00003100300000,0x016400c7f8300207,0x01042075002000cc\n"
".quad 0x0180c03500d00e00,0x050403f2801000f8,0x01c0000780000002,0x03e4200780040018\n"
".quad 0x0100000000861ffe,0x09a00007f0000008,0x0120003680d40260,0x014400f680180000\n"
".quad 0x0100203680b400d8,0x03e4203680040018,0x0100000000861ffe,0x09a00007f000000a\n"
".quad 0x0120003680d40160,0x014400f680180000,0x0100203680b400d8,0x03e4203680040018\n"
".quad 0x0100000000861ffe,0x01a00007f000000c,0x014400f680140038,0x0100203680b400d8\n"
".quad 0x03e4203680040018,0x0100000000861ffe,0x01a00007f000000e,0x014400f680140028\n"
".quad 0x0100203680b400d8,0x03e4203680040018,0x0100000000861ffe,0x014400c680140020\n"
".quad 0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe,0x014400d68014001c\n"
".quad 0x0100201680b400d8,0x03e4201680040018,0x0100000000861ffe,0x014400e68014001a\n"
".quad 0x0100202680b400d8,0x03e4202680040018,0x0300000000861ffe,0x0400002100300000\n"
".quad 0x011100f8001100ec,0x05a0c00780d00e02,0x012780c780100000,0x0100000003100080\n"
".quad 0x3fa0c00781d00e02,0x0f0000001f000000,0x0300000007000000,0x0000000001000000\n"
".quad 0xff00000000000002,0x00000c0b04ffffff,0x1000000008000000,0x0800080d04000000\n"
".quad 0x1100000020002101,0x0904200780a0004c,0x0104000780a00000,0x15c4100780300708\n"
".quad 0x0304000780200004,0x0100000000a00200,0x050603c7801000f8,0xfdc0000780000204\n"
".quad 0x0d6420c7c83005d1,0x0504200780a00048,0x01c4100780300204,0x03e43f0780040018\n"
".quad 0x1d00000280100200,0x190000000720008a,0x21c410078030020a,0x25000000072100f0\n"
".quad 0x15c4100780300706,0x19c4100780300906,0x29042187802000c8,0x0180c00780d00e0c\n"
".quad 0x0500000780b00014,0xfdc0000780000002,0x016420c7c83007d1,0x29e4200780040018\n"
".quad 0x290441450021000c,0x0180c00500d00e14,0x0500000500b00014,0x01c0000500000002\n"
".quad 0x1de4200500040018,0xfd0402478020000e,0x19640047c830080f,0x030401478020000c\n"
".quad 0x0100000280100120,0x03e0000002f00000,0x0100000000861ffe,0xfd6440c7c0308004\n"
".quad 0x150c0147f8a00001,0x0520003780000000,0x09c0000680000002,0x0120000680d40160\n"
".quad 0x014400c680180000,0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe\n"
".quad 0xfd6440c7c0308104,0x190c0147f8a00001,0x0520003780000000,0x01c0000680000002\n"
".quad 0x014400c680140038,0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe\n"
".quad 0xfd6440c7c0308204,0x1d0c0147f8a00001,0x0520003780000000,0x01c0000680000002\n"
".quad 0x014400c680140028,0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe\n"
".quad 0xfd6440c7d0308304,0x050c0147c8a00001,0x01c0001680000002,0x014400d680140020\n"
".quad 0x0100201680b400d8,0x03e4201680040018,0x0100000000861ffe,0xfd6440c7e0308404\n"
".quad 0x050c0147d8a00001,0x01c0002680000002,0x014400e68014001c,0x0100202680b400d8\n"
".quad 0x03e4202680040018,0x0100000000861ffe,0xfd640087f0307c04,0x050c0147e8a00001\n"
".quad 0x01c0003680000002,0x014400f68014001a,0x0100203680b400d8,0x03e4203680040018\n"
".quad 0x1100000000861ffe,0x01c4102680300208,0x114400e680100018,0x01042126802000cc\n"
".quad 0xfda0c02680d00e08,0x036440c7f8308407,0x1100003280300000,0x1160000780000000\n"
".quad 0x1104400780d08008,0x21c4100780300208,0x2500000013200088,0x2d00000013200090\n"
".quad 0x1100000013200092,0x2180c00780d00f08,0x2580c00780d00f10,0x2980c00780d00f12\n"
".quad 0x2d80c00780d00f16,0x3100000013200096,0xfd00000013200096,0x350c014788a00009\n"
".quad 0xfd00000013200098,0xfd0c014788a00011,0xfd0c014788a00013,0x290c014788a00015\n"
".quad 0x110000001320009a,0x2180c00780d00f16,0x2580c00780d00f18,0x2980c00780d00f1a\n"
".quad 0xfd80c00780d00f14,0xfd0c014788a00009,0xfd0c014788a00011,0xfd0c014788a00013\n"
".quad 0x010c014788a00015,0x112780e680100000,0x010441e680210006,0x01e0c02690d70300\n"
".quad 0x016400a680300400,0x0128016680a00000,0x03e0402680000048,0x0500000000861ffe\n"
".quad 0xfd20000780d00048,0x030c2187f8a40001,0xfd00003100300000,0x016400c7f8300207\n"
".quad 0x01042075002000cc,0x0180c03500d00e00,0x050403f2801000f8,0x01c0000780000002\n"
".quad 0x03e4200780040018,0x0100000000861ffe,0x09a00007f000000a,0x0120003680d40160\n"
".quad 0x014400f680180000,0x0100203680b400d8,0x03e4203680040018,0x0100000000861ffe\n"
".quad 0x01a00007f000000c,0x014400f680140038,0x0100203680b400d8,0x03e4203680040018\n"
".quad 0x0100000000861ffe,0x01a00007f000000e,0x014400f680140028,0x0100203680b400d8\n"
".quad 0x03e4203680040018,0x0100000000861ffe,0x014400c680140020,0x0100200680b400d8\n"
".quad 0x03e4200680040018,0x0100000000861ffe,0x014400d68014001c,0x0100201680b400d8\n"
".quad 0x03e4201680040018,0x0100000000861ffe,0x014400e68014001a,0x0100202680b400d8\n"
".quad 0x03e4202680040018,0x0300000000861ffe,0x0400002100300000,0x011100f8001100ec\n"
".quad 0x05a0c00780d00e02,0x012780c780100000,0x0100000003100080,0x1fa0c00781d00e02\n"
".quad 0x070000000f000000,0x0100000003000000,0x0000000100000000,0x04ffffffff000000\n"
".quad 0x0800000000000c0b,0x0400000010000000,0x200021010800080d,0x80a0004c11000000\n"
".quad 0x80a0000009042007,0x8030060801040007,0x8020000415c41007,0x00a0020003040007\n"
".quad 0x801000f801000000,0x80000204050603c7,0xc83005d1fdc00007,0x80a000480d6420c7\n"
".quad 0x8030020405042007,0x8004001801c41007,0x8010020003e43f07,0x0320208a1d000002\n"
".quad 0x8030020a19000000,0x032120f021c41007,0x8030060625000000,0x8030080615c41007\n"
".quad 0x802000c819c41007,0x80d00e0c29042187,0x80b000140180c007,0x8000000205000007\n"
".quad 0xc83007d1fdc00007,0x80040018016420c7,0x0021000c29e42007,0x00d00e1429044145\n"
".quad 0x00b000140180c005,0x0000000205000005,0x0004001801c00005,0x8020000e1de42005\n"
".quad 0xc830080ffd040247,0x8020000c19640047,0x8010012003040147,0x02f0000001000002\n"
".quad 0x00861ffe03e00000,0xc030800401000000,0xf8a00001fd6440c7,0x80000000150c0147\n"
".quad 0x8000000205200037,0x8014003801c00006,0x80b400d8014400c6,0x8004001801002006\n"
".quad 0x00861ffe03e42006,0xc030810401000000,0xf8a00001fd6440c7,0x80000000190c0147\n"
".quad 0x8000000205200037,0x8014002801c00006,0x80b400d8014400c6,0x8004001801002006\n"
".quad 0x00861ffe03e42006,0xd030820401000000,0xc8a00001fd6440c7,0x80000002050c0147\n"
".quad 0x8014002001c00016,0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016\n"
".quad 0xe030830401000000,0xd8a00001fd6440c7,0x80000002050c0147,0x8014001c01c00026\n"
".quad 0x80b400d8014400e6,0x8004001801002026,0x00861ffe03e42026,0xf0307c0401000000\n"
".quad 0xe8a00001fd640087,0x80000002050c0147,0x8014001a01c00036,0x80b400d8014400f6\n"
".quad 0x8004001801002036,0x00861ffe03e42036,0x8030020811000000,0x8010001801c41026\n"
".quad 0x802000cc114400e6,0x80d00e0801042126,0xf8308307fda0c026,0x80300000036440c7\n"
".quad 0x8000000011000032,0x80d0840811600007,0x8030020811044007,0x132000881dc41007\n"
".quad 0x1320008e21000000,0x1320009029000000,0x80d00f0811000000,0x80d00f0e1d80c007\n"
".quad 0x80d00f102180c007,0x80d00f142580c007,0x132000942980c007,0x132000942d000000\n"
".quad 0x88a00009fd000000,0x13200096310c0147,0x88a0000ffd000000,0x88a00011fd0c0147\n"
".quad 0x88a00013fd0c0147,0x13200098250c0147,0x80d00f1411000000,0x80d00f161d80c007\n"
".quad 0x80d00f182180c007,0x80d00f122580c007,0x88a00009fd80c007,0x88a0000ffd0c0147\n"
".quad 0x88a00011fd0c0147,0x88a00013fd0c0147,0x80100000010c0147,0x80210006112780e6\n"
".quad 0x90d70300010441e6,0x8030040001e0c026,0x80a00000016400a6,0x8000004801280166\n"
".quad 0x00861ffe03e04026,0x80d0004805000000,0xf8a40001fd200007,0x00300000030c2187\n"
".quad 0xf8300207fd000031,0x002000cc016400c7,0x00d00e0001042075,0x801000f80180c035\n"
".quad 0x80000002050403f2,0x8004001801c00007,0x00861ffe03e42007,0xf000000a01000000\n"
".quad 0x8014003801a00007,0x80b400d8014400f6,0x8004001801002036,0x00861ffe03e42036\n"
".quad 0xf000000c01000000,0x8014002801a00007,0x80b400d8014400f6,0x8004001801002036\n"
".quad 0x00861ffe03e42036,0x8014002001000000,0x80b400d8014400c6,0x8004001801002006\n"
".quad 0x00861ffe03e42006,0x8014001c01000000,0x80b400d8014400d6,0x8004001801002016\n"
".quad 0x00861ffe03e42016,0x8014001a01000000,0x80b400d8014400e6,0x8004001801002026\n"
".quad 0x00861ffe03e42026,0x0030000003000000,0x001100ec04000021,0x80d00e02011100f8\n"
".quad 0x8010000005a0c007,0x03100080012780c7,0x81d00e0201000000,0x070000000fa0c007\n"
".quad 0x0100000003000000,0x800000001f000000,0xff00000000000000,0x00000c0b04ffffff\n"
".quad 0x1000000008000000,0x0800080d04000000,0x1100000020002101,0x0904200780a0004c\n"
".quad 0x0104000780a00000,0x15c4100780300508,0x0304000780200004,0x0100000000a00200\n"
".quad 0x050603c7801000f8,0xfdc0000780000204,0x0d6420c7c83005d1,0x0504200780a00048\n"
".quad 0x01c4100780300204,0x03e43f0780040018,0x1d00000280100200,0x190000000320108a\n"
".quad 0x21c410078030020a,0x25000000032110f0,0x15c4100780300506,0x19c4100780300706\n"
".quad 0x29042187802000c8,0x0180c00780d00e0c,0x0500000780b00014,0xfdc0000780000002\n"
".quad 0x016420c7c83007d1,0x29e4200780040018,0x290441050021000c,0x0180c00500d00e14\n"
".quad 0x0500000500b00014,0x01c0000500000002,0x1de4200500040018,0xfd0402478020000e\n"
".quad 0x19640047c830080f,0x030401478020000c,0x0100000280100120,0x03e0000002f00000\n"
".quad 0x0100000000861ffe,0xfd6440c7c0308004,0x150c0147e8a00001,0x0520002780000000\n"
".quad 0x01c0000680000002,0x014400c680140028,0x0100200680b400d8,0x03e4200680040018\n"
".quad 0x0100000000861ffe,0xfd6440c7d0308104,0x050c0147c8a00001,0x01c0001680000002\n"
".quad 0x014400d680140020,0x0100201680b400d8,0x03e4201680040018,0x0100000000861ffe\n"
".quad 0xfd6440c7e0308204,0x050c0147d8a00001,0x01c0002680000002,0x014400e68014001c\n"
".quad 0x0100202680b400d8,0x03e4202680040018,0x0100000000861ffe,0xfd640087e0307c04\n"
".quad 0x050c0147f8a00001,0x01c0002680000002,0x014400e68014001a,0x0100202680b400d8\n"
".quad 0x03e4202680040018,0x1100000000861ffe,0x01c4103680300208,0x114400f680100018\n"
".quad 0x01042136802000cc,0xfda0c03680d00e08,0x036440c7e8308207,0x1100002280300000\n"
".quad 0x1160000780000000,0x1104400780d08308,0x19c4100780300208,0x1d00000013200088\n"
".quad 0x250000001320008c,0x110000001320008e,0x1980c00780d00f08,0x1d80c00780d00f0c\n"
".quad 0x2180c00780d00f0e,0x2580c00780d00f12,0x2900000013200092,0xfd00000013200092\n"
".quad 0x2d0c014788a00009,0xfd00000013200094,0xfd0c014788a0000d,0xfd0c014788a0000f\n"
".quad 0x210c014788a00011,0x1100000013200096,0x1980c00780d00f12,0x1d80c00780d00f14\n"
".quad 0x2180c00780d00f16,0xfd80c00780d00f10,0xfd0c014788a00009,0xfd0c014788a0000d\n"
".quad 0xfd0c014788a0000f,0x010c014788a00011,0x112780f680100000,0x010441b680210006\n"
".quad 0x01e0c03690d70300,0x016400b680300400,0x0128017680a00000,0x03e0403680000048\n"
".quad 0x0500000000861ffe,0xfd20000780d00048,0x030c2187e8a40001,0xfd00002100300000\n"
".quad 0x016400c7e8300207,0x01042065002000cc,0x0180c02500d00e00,0x050403e2801000f8\n"
".quad 0x01c0000780000002,0x03e4200780040018,0x0100000000861ffe,0x01a00007e000000a\n"
".quad 0x014400e680140028,0x0100202680b400d8,0x03e4202680040018,0x0100000000861ffe\n"
".quad 0x014400c680140020,0x0100200680b400d8,0x03e4200680040018,0x0100000000861ffe\n"
".quad 0x014400d68014001c,0x0100201680b400d8,0x03e4201680040018,0x0100000000861ffe\n"
".quad 0x014400f68014001a,0x0100203680b400d8,0x03e4203680040018,0x0300000000861ffe\n"
".quad 0x0400003100300000,0x011100f8001100ec,0x05a0c00780d00e02,0x012780c780100000\n"
".quad 0x0100000003100080,0x07a0c00781d00e02,0x0100000003000000,0x400000001f000000\n"
".quad 0xff00000000000000,0x00000c0b04ffffff,0x1000000008000000,0x0800080d04000000\n"
".quad 0x0d00000020002101,0x0904200780a0004c,0x0104000780a00000,0x15c4100780300406\n"
".quad 0x0304000780200004,0x0100000000a00200,0x050603c7801000f8,0xfdc0000780000204\n"
".quad 0x116420c7c83005d1,0x0504200780a00048,0x01c4100780300204,0x03e43f0780040018\n"
".quad 0x1d00000280100200,0x190000000320088a,0x21c410078030020a,0x25000000032108f0\n"
".quad 0x15c4100780300408,0x19c4100780300608,0x29042187802000c8,0x0180c00780d00e0c\n"
".quad 0x0500000780b00014,0xfdc0000780000002,0x016420c7c83007d1,0x29e4200780040018\n"
".quad 0x290440c50021000c,0x0180c00500d00e14,0x0500000500b00014,0x01c0000500000002\n"
".quad 0x1de4200500040018,0xfd0402478020000e,0x19640047c830080f,0x030401478020000c\n"
".quad 0x0100000280100120,0x03e0000002f00000,0x0100000000861ffe,0xfd6440c7d0308004\n"
".quad 0x050c0147c8a00001,0x01c0001680000002,0x014400d680140020,0x0100201680b400d8\n"
".quad 0x03e4201680040018,0x0100000000861ffe,0xfd6440c7e0308104,0x050c0147d8a00001\n"
".quad 0x01c0002680000002,0x014400e68014001c,0x0100202680b400d8,0x03e4202680040018\n"
".quad 0x0100000000861ffe,0xfd640087f0307c04,0x050c0147e8a00001,0x01c0003680000002\n"
".quad 0x014400f68014001a,0x0100203680b400d8,0x03e4203680040018,0x0d00000000861ffe\n"
".quad 0x01c4102680300206,0x0d4400e680100018,0x010420e6802000cc,0xfda0c02680d00e06\n"
".quad 0x036440c7f8308109,0x0d00003280300000,0x0d60000780000000,0x0d04400780d08206\n"
".quad 0x15c4100780300206,0x1900000013200086,0x210000001320008a,0x0d0000001320008c\n"
".quad 0x1580c00780d00f06,0x1980c00780d00f0a,0x1d80c00780d00f0c,0x2180c00780d00f10\n"
".quad 0x2500000013200090,0xfd00000013200090,0x290c014788a00007,0xfd00000013200092\n"
".quad 0xfd0c014788a0000b,0xfd0c014788a0000d,0x1d0c014788a0000f,0x0d00000013200094\n"
".quad 0x1580c00780d00f10,0x1980c00780d00f12,0x1d80c00780d00f14,0xfd80c00780d00f0e\n"
".quad 0xfd0c014788a00007,0xfd0c014788a0000b,0xfd0c014788a0000d,0x010c014788a0000f\n"
".quad 0x0d2780e680100000,0x0104416680210008,0x01e0c02690d70400,0x016400a680300300\n"
".quad 0x0128016680a00000,0x03e0402680000048,0x0500000000861ffe,0xfd20000780d00048\n"
".quad 0x030c2187f8a40001,0xfd00003100300000,0x016400c7f8300209,0x01042075002000cc\n"
".quad 0x0180c03500d00e00,0x050403f2801000f8,0x01c0000780000002,0x03e4200780040018\n"
".quad 0x0100000000861ffe,0x014400c680140020,0x0100200680b400d8,0x03e4200680040018\n"
".quad 0x0100000000861ffe,0x014400d68014001c,0x0100201680b400d8,0x03e4201680040018\n"
".quad 0x0100000000861ffe,0x014400e68014001a,0x0100202680b400d8,0x03e4202680040018\n"
".quad 0x0300000000861ffe,0x0400002100300000,0x011100f8001100ec,0x05a0c00780d00e02\n"
".quad 0x012780c780100000,0x0100000003100080,0x03a0c00781d00e02,0x1f00000001000000\n"
".quad 0x0000000020000000,0x04ffffffff000000,0x0800000000000c0b,0x0400000010000000\n"
".quad 0x200021010800080d,0x80a0004c0d000000,0x80a0000009042007,0x8030030601040007\n"
".quad 0x8020000415c41007,0x00a0020003040007,0x801000f801000000,0x80000204050603c7\n"
".quad 0xc83005d1fdc00007,0x80a00048116420c7,0x8030020405042007,0x8004001801c41007\n"
".quad 0x8010020003e43f07,0x0320048a1d000002,0x8030020a19000000,0x032104f021c41007\n"
".quad 0x8030030825000000,0x8030050815c41007,0x802000c819c41007,0x80d00e0c29042187\n"
".quad 0x80b000140180c007,0x8000000205000007,0xc83007d1fdc00007,0x80040018016420c7\n"
".quad 0x0021000c29e42007,0x00d00e1429044085,0x00b000140180c005,0x0000000205000005\n"
".quad 0x0004001801c00005,0x8020000e1de42005,0xc830080ffd040247,0x8020000c19640047\n"
".quad 0x8010012003040147,0x02f0000001000002,0x00861ffe03e00000,0xd030800401000000\n"
".quad 0xc8a00001fd6440c7,0x80000002050c0147,0x8014001c01c00016,0x80b400d8014400d6\n"
".quad 0x8004001801002016,0x00861ffe03e42016,0xe0307c0401000000,0xd8a00001fd640087\n"
".quad 0x80000002050c0147,0x8014001a01c00026,0x80b400d8014400e6,0x8004001801002026\n"
".quad 0x00861ffe03e42026,0x803002060d000000,0x8010001801c41016,0x802000cc0d4400d6\n"
".quad 0x80d00e06010420d6,0xe8308009fda0c016,0x80300000036440c7,0x800000000d000022\n"
".quad 0x80d081060d600007,0x803002060d044007,0x1320008615c41007,0x1320008a19000000\n"
".quad 0x1320008c21000000,0x80d00f060d000000,0x80d00f0a1580c007,0x80d00f0c1980c007\n"
".quad 0x80d00f101d80c007,0x132000902180c007,0x1320009025000000,0x88a00007fd000000\n"
".quad 0x13200092290c0147,0x88a0000bfd000000,0x88a0000dfd0c0147,0x88a0000ffd0c0147\n"
".quad 0x132000941d0c0147,0x80d00f100d000000,0x80d00f121580c007,0x80d00f141980c007\n"
".quad 0x80d00f0e1d80c007,0x88a00007fd80c007,0x88a0000bfd0c0147,0x88a0000dfd0c0147\n"
".quad 0x88a0000ffd0c0147,0x80100000010c0147,0x802100080d2780d6,0x90d7040001044116\n"
".quad 0x8030030001e0c016,0x80a0000001640096,0x8000004801280156,0x00861ffe03e04016\n"
".quad 0x80d0004805000000,0xe8a40001fd200007,0x00300000030c2187,0xe8300209fd000021\n"
".quad 0x002000cc016400c7,0x00d00e0001042065,0x801000f80180c025,0x80000002050403e2\n"
".quad 0x8004001801c00007,0x00861ffe03e42007,0x8014001c01000000,0x80b400d8014400c6\n"
".quad 0x8004001801002006,0x00861ffe03e42006,0x8014001a01000000,0x80b400d8014400d6\n"
".quad 0x8004001801002016,0x00861ffe03e42016,0x0030000003000000,0x001100ec04000011\n"
".quad 0x80d00e02011100f8,0x8010000005a0c007,0x03100080012780c7,0x81d00e0201000000\n"
".quad 0x1f00000001a0c007,0x0000000010000000,0x04ffffffff000000,0x0800000000000c0b\n"
".quad 0x0400000010000000,0x200021010800080d,0x80a0004c0d000000,0x80a0000009042007\n"
".quad 0x8030020601040007,0x8020000415c41007,0x00a0020003040007,0x801000f801000000\n"
".quad 0x80000204050603c7,0xc83005d1fdc00007,0x80a00048116420c7,0x8030020405042007\n"
".quad 0x8004001801c41007,0x8010020003e43f07,0x0320028a1d000002,0x8030020a19000000\n"
".quad 0x032102f021c41007,0x8030020825000000,0x8030040815c41007,0x802000c819c41007\n"
".quad 0x80d00e0c29042187,0x80b000140180c007,0x8000000205000007,0xc83007d1fdc00007\n"
".quad 0x80040018016420c7,0x0021000c29e42007,0x00d00e1429044085,0x00b000140180c005\n"
".quad 0x0000000205000005,0x0004001801c00005,0x8020000e1de42005,0xc830080ffd040247\n"
".quad 0x8020000c19640047,0x8010012003040147,0x02f0000001000002,0x00861ffe03e00000\n"
".quad 0xd0307c0401000000,0xc8a00001fd640087,0x80000002050c0147,0x8014001a01c00016\n"
".quad 0x80b400d8014400d6,0x8004001801002016,0x00861ffe03e42016,0x803002060d000000\n"
".quad 0x8010001801c41006,0x802000cc0d4400c6,0x80d00e06010420c6,0xd8308009fda0c006\n"
".quad 0x80300000036440c7,0x800000000d000012,0x80d081060d600007,0x803002060d044007\n"
".quad 0x1320008615c41007,0x1320008a19000000,0x1320008c21000000,0x80d00f060d000000\n"
".quad 0x80d00f0a1580c007,0x80d00f0c1980c007,0x80d00f101d80c007,0x132000902180c007\n"
".quad 0x1320009025000000,0x88a00007fd000000,0x13200092290c0147,0x88a0000bfd000000\n"
".quad 0x88a0000dfd0c0147,0x88a0000ffd0c0147,0x132000941d0c0147,0x80d00f100d000000\n"
".quad 0x80d00f121580c007,0x80d00f141980c007,0x80d00f0e1d80c007,0x88a00007fd80c007\n"
".quad 0x88a0000bfd0c0147,0x88a0000dfd0c0147,0x88a0000ffd0c0147,0x80100000010c0147\n"
".quad 0x802100080d2780c6,0x90d7040001044106,0x8030030001e0c006,0x80a0000001640086\n"
".quad 0x8000004801280146,0x00861ffe03e04006,0x80d0004805000000,0xd8a40001fd200007\n"
".quad 0x00300000030c2187,0xd8300209fd000011,0x002000cc016400c7,0x00d00e0001042055\n"
".quad 0x801000f80180c015,0x80000002050403d2,0x8004001801c00007,0x00861ffe03e42007\n"
".quad 0x8014001a01000000,0x80b400d8014400c6,0x8004001801002006,0x00861ffe03e42006\n"
".quad 0x0030000003000000,0x001100ec04000001,0x80d00e02011100f8,0x8010000005a0c007\n"
".quad 0x03100080012780c7,0x81d00e0201000000,0x1f00000001a0c007,0x0000000008000000\n"
".quad 0x04ffffffff000000,0x0800000000000c0b,0x0400000010000000,0x200021010800080d\n"
".quad 0x80a0004c0d000000,0x80a0000009042007,0x8030010601040007,0x8020000415c41007\n"
".quad 0x00a0020003040007,0x801000f801000000,0x80000204050603c7,0xc83005d1fdc00007\n"
".quad 0x80a00048116420c7,0x8030020405042007,0x8004001801c41007,0x8010020003e43f07\n"
".quad 0x0320018a1d000002,0x8030020a19000000,0x032101f021c41007,0x8030010825000000\n"
".quad 0x8030030815c41007,0x802000c819c41007,0x80d00e0c29042187,0x80b000140180c007\n"
".quad 0x8000000205000007,0xc83007d1fdc00007,0x80040018016420c7,0x0021000c29e42007\n"
".quad 0x00d00e1429044085,0x00b000140180c005,0x0000000205000005,0x0004001801c00005\n"
".quad 0x8020000e1de42005,0xc830080ffd040247,0x8020000c19640047,0x8010012003040147\n"
".quad 0x02f0000001000002,0x00861ffe03e00000,0xd0307c0401000000,0xc8a00001fd640087\n"
".quad 0x803002060d0c0147,0x8010001801c41016,0x802000cc0d4400d6,0x80d00e06010420d6\n"
".quad 0xd8308009fda0c016,0x80300000036440c7,0x800000000d000012,0x80d081060d600007\n"
".quad 0x803002060d044007,0x1320008615c41007,0x1320008a19000000,0x1320008c21000000\n"
".quad 0x80d00f060d000000,0x80d00f0a1580c007,0x80d00f0c1980c007,0x80d00f101d80c007\n"
".quad 0x132000902180c007,0x1320009025000000,0x88a00007fd000000,0x13200092290c0147\n"
".quad 0x88a0000bfd000000,0x88a0000dfd0c0147,0x88a0000ffd0c0147,0x132000941d0c0147\n"
".quad 0x80d00f100d000000,0x80d00f121580c007,0x80d00f141980c007,0x80d00f0e1d80c007\n"
".quad 0x88a00007fd80c007,0x88a0000bfd0c0147,0x88a0000dfd0c0147,0x88a0000ffd0c0147\n"
".quad 0x80100000010c0147,0x802100080d2780c6,0x90d7040001044106,0x8030030001e0c006\n"
".quad 0x80a0000001640086,0x8000004801280146,0x00861ffe03e04006,0x80d0004805000000\n"
".quad 0xd8a40001fd200007,0x00300000030c2187,0xd8300209fd000011,0x002000cc016400c7\n"
".quad 0x00d00e0001042055,0x801000f80180c015,0x80000002050403d2,0x8004001801c00007\n"
".quad 0x00861ffe03e42007,0x0030000003000000,0x001100ec04000001,0x80d00e02011100f8\n"
".quad 0x8010000005a0c007,0x03100080012780c7,0x81d00e0201000000,0x1f00000001a0c007\n"
".quad 0x0000000004000000,0x04ffffffff000000,0x0800000000000c0b,0x0400000010000000\n"
".quad 0x200021010800080d,0x0000000000000000,0x0100000000000000,0x00000000ce000000\n"
".quad 0x0000000600000000,0x0000e9c400000005,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000122800000000,0x0000122800000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000612b0000cd05,0x0000000000000000,0x0000000000000000,0x0000031400000000\n"
".quad 0x0000031400000000,0x0000000400000000,0x6000000000000000,0x0000643f0000cd06\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000643f0000cc05,0x0000000000000000\n"
".quad 0x0000000000000000,0x000002d800000000,0x000002d800000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x000067170000cc06,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x000067170000cb05,0x0000000000000000,0x0000000000000000,0x0000029c00000000\n"
".quad 0x0000029c00000000,0x0000000400000000,0x6000000000000000,0x000069b30000cb06\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x000069b30000ca05,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000026000000000,0x0000026000000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x00006c130000ca06,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x00006c130000c905,0x0000000000000000,0x0000000000000000,0x0000022400000000\n"
".quad 0x0000022400000000,0x0000000400000000,0x6000000000000000,0x00006e370000c906\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x00006e370000c805,0x0000000000000000\n"
".quad 0x0000000000000000,0x000001f000000000,0x000001f000000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x000070270000c806,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x000070270000c705,0x0000000000000000,0x0000000000000000,0x000001bc00000000\n"
".quad 0x000001bc00000000,0x0000000400000000,0x6000000000000000,0x000071e30000c706\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x000071e30000c605,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000018800000000,0x0000018800000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000736b0000c606,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000736b0000c505,0x0000000000000000,0x0000000000000000,0x0000015400000000\n"
".quad 0x0000015400000000,0x0000000400000000,0x6000000000000000,0x000074bf0000c506\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x000074bf0000c405,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000012400000000,0x0000012400000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x000075e30000c406,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x000075e30000c305,0x0000000000000000,0x0000000000000000,0x0000033c00000000\n"
".quad 0x0000033c00000000,0x0000000400000000,0x6000000000000000,0x0000791f0000c306\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000791f0000c205,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000030000000000,0x0000030000000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x00007c1f0000c206,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x00007c1f0000c105,0x0000000000000000,0x0000000000000000,0x000002c400000000\n"
".quad 0x000002c400000000,0x0000000400000000,0x6000000000000000,0x00007ee30000c106\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x00007ee30000c005,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000028800000000,0x0000028800000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000816b0000c006,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000816b0000bf05,0x0000000000000000,0x0000000000000000,0x0000024c00000000\n"
".quad 0x0000024c00000000,0x0000000400000000,0x6000000000000000,0x000083b70000bf06\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x000083b70000be05,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000021800000000,0x0000021800000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x000085cf0000be06,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x000085cf0000bd05,0x0000000000000000,0x0000000000000000,0x000001e400000000\n"
".quad 0x000001e400000000,0x0000000400000000,0x6000000000000000,0x000087b30000bd06\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x000087b30000bc05,0x0000000000000000\n"
".quad 0x0000000000000000,0x000001b000000000,0x000001b000000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x000089630000bc06,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x000089630000bb05,0x0000000000000000,0x0000000000000000,0x0000017c00000000\n"
".quad 0x0000017c00000000,0x0000000400000000,0x6000000000000000,0x00008adf0000bb06\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x00008adf0000ba05,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000014c00000000,0x0000014c00000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x00008c2b0000ba06,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x00008c2b0000b905,0x0000000000000000,0x0000000000000000,0x000006a000000000\n"
".quad 0x000006a000000000,0x0000000400000000,0x6000000000000000,0x000092cb0000b906\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x000092cb0000b805,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000062400000000,0x0000062400000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x000098ef0000b806,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x000098ef0000b705,0x0000000000000000,0x0000000000000000,0x000005a800000000\n"
".quad 0x000005a800000000,0x0000000400000000,0x6000000000000000,0x00009e970000b706\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x00009e970000b605,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000052c00000000,0x0000052c00000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000a3c30000b606,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000a3c30000b505,0x0000000000000000,0x0000000000000000,0x000004b400000000\n"
".quad 0x000004b400000000,0x0000000400000000,0x6000000000000000,0x0000a8770000b506\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000a8770000b405,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000044800000000,0x0000044800000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000acbf0000b406,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000acbf0000b305,0x0000000000000000,0x0000000000000000,0x000003dc00000000\n"
".quad 0x000003dc00000000,0x0000000400000000,0x6000000000000000,0x0000b09b0000b306\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000b09b0000b205,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000038000000000,0x0000038000000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000b41b0000b206,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000b41b0000b105,0x0000000000000000,0x0000000000000000,0x0000032800000000\n"
".quad 0x0000032800000000,0x0000000400000000,0x6000000000000000,0x0000b7430000b106\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000b7430000b005,0x0000000000000000\n"
".quad 0x0000000000000000,0x000002e000000000,0x000002e000000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000ba230000b006,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000ba230000af05,0x0000000000000000,0x0000000000000000,0x000006c800000000\n"
".quad 0x000006c800000000,0x0000000400000000,0x6000000000000000,0x0000c0eb0000af06\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000c0eb0000ae05,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000064c00000000,0x0000064c00000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000c7370000ae06,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000c7370000ad05,0x0000000000000000,0x0000000000000000,0x000005d000000000\n"
".quad 0x000005d000000000,0x0000000400000000,0x6000000000000000,0x0000cd070000ad06\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000cd070000ac05,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000055400000000,0x0000055400000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000d25b0000ac06,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000d25b0000ab05,0x0000000000000000,0x0000000000000000,0x000004dc00000000\n"
".quad 0x000004dc00000000,0x0000000400000000,0x6000000000000000,0x0000d7370000ab06\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000d7370000aa05,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000047000000000,0x0000047000000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000dba70000aa06,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000dba70000a905,0x0000000000000000,0x0000000000000000,0x0000040400000000\n"
".quad 0x0000040400000000,0x0000000400000000,0x6000000000000000,0x0000dfab0000a906\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000dfab0000a805,0x0000000000000000\n"
".quad 0x0000000000000000,0x000003a800000000,0x000003a800000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000e3530000a806,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x6000000000000000\n"
".quad 0x0000e3530000a705,0x0000000000000000,0x0000000000000000,0x0000035000000000\n"
".quad 0x0000035000000000,0x0000000400000000,0x6000000000000000,0x0000e6a30000a706\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000003000000000\n"
".quad 0x0000000400000000,0x6000000000000000,0x0000e6a30000a605,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000030800000000,0x0000030800000000,0x0000000400000000\n"
".quad 0x6000000000000000,0x0000e9ab0000a606,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000003000000000,0x0000000400000000,0x0000000100000000\n"
".quad 0x0000e9ab00000005,0x0000000000000000,0x0000000000000000,0x0000001400000000\n"
".quad 0x0000001400000000,0x0000000400000000,0x0000000100000000,0x0000e9bf00000006\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000400000000,0x0000000400000000\n"
".quad 0x0000000400000000,0x0000000000000000\n"
".text");

extern "C" {

extern const unsigned long long __deviceText_$sm_13$[8062];

}

asm(
".section .rodata\n"
".align 32\n"
"__deviceText_$compute_13$:\n"
".quad 0x6f69737265762e09,0x2e090a342e31206e,0x7320746567726174,0x2f2f090a33315f6d\n"
".quad 0x656c69706d6f6320,0x2f20687469772064,0x61636f6c2f727375,0x6f2f616475632f6c\n"
".quad 0x696c2f34366e6570,0x2f090a65622f2f62,0x6e65706f766e202f,0x6220312e33206363\n"
".quad 0x206e6f20746c6975,0x2d34302d30313032,0x2d2f2f090a0a3732,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x43202f2f090a2d2d,0x676e696c69706d6f\n"
".quad 0x6d742f706d742f20,0x3030305f74667870,0x30305f6236323230,0x372d303030303030\n"
".quad 0x466461657268745f,0x7564655265636e65,0x70632e6e6f697463,0x742f2820692e3370\n"
".quad 0x23494263632f706d,0x296b744a7078492e,0x2d2d2d2d2f2f090a,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x0a2d2d2d2d2d2d2d,0x2d2d2d2d2f2f090a,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x0a2d2d2d2d2d2d2d,0x6974704f202f2f09,0x2f2f090a3a736e6f\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x202f2f090a2d2d2d\n"
".quad 0x3a74656772615420,0x415349202c787470,0x202c33315f6d733a,0x6c3a6e6169646e45\n"
".quad 0x50202c656c747469,0x53207265746e696f,0x090a34363a657a69,0x09334f2d20202f2f\n"
".quad 0x7a696d6974704f28,0x656c206e6f697461,0x2f2f090a296c6576,0x44280930672d2020\n"
".quad 0x76656c2067756265,0x202f2f090a296c65,0x65522809326d2d20,0x7664612074726f70\n"
".quad 0x29736569726f7369,0x2d2d2d2d2f2f090a,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x0a2d2d2d2d2d2d2d,0x09656c69662e090a,0x6d6d6f633c220931,0x656e696c2d646e61\n"
".quad 0x6c69662e090a223e,0x6d742f2209320965,0x746678706d742f70,0x363232303030305f\n"
".quad 0x3030303030305f62,0x7268745f362d3030,0x65636e6546646165,0x6f69746375646552\n"
".quad 0x6566616475632e6e,0x090a227570672e32,0x093309656c69662e,0x696c2f7273752f22\n"
".quad 0x38782f6363672f62,0x6e696c2d34365f36,0x342f756e672d7875,0x636e692f312e342e\n"
".quad 0x6474732f6564756c,0x090a22682e666564,0x093409656c69662e,0x6f6c2f7273752f22\n"
".quad 0x616475632f6c6163,0x2f2e2e2f6e69622f,0x2f6564756c636e69,0x697665642f747263\n"
".quad 0x69746e75725f6563,0x2e090a22682e656d,0x22093509656c6966,0x636f6c2f7273752f\n"
".quad 0x2f616475632f6c61,0x692f2e2e2f6e6962,0x682f6564756c636e,0x696665645f74736f\n"
".quad 0x090a22682e73656e,0x093609656c69662e,0x6f6c2f7273752f22,0x616475632f6c6163\n"
".quad 0x2f2e2e2f6e69622f,0x2f6564756c636e69,0x5f6e69746c697562,0x22682e7365707974\n"
".quad 0x09656c69662e090a,0x2f7273752f220937,0x75632f6c61636f6c,0x2e2f6e69622f6164\n"
".quad 0x64756c636e692f2e,0x6563697665642f65,0x682e73657079745f,0x656c69662e090a22\n"
".quad 0x7273752f22093809,0x632f6c61636f6c2f,0x2f6e69622f616475,0x756c636e692f2e2e\n"
".quad 0x65766972642f6564,0x2e73657079745f72,0x6c69662e090a2268,0x73752f2209390965\n"
".quad 0x2f6c61636f6c2f72,0x6e69622f61647563,0x6c636e692f2e2e2f,0x667275732f656475\n"
".quad 0x657079745f656361,0x662e090a22682e73,0x2209303109656c69,0x636f6c2f7273752f\n"
".quad 0x2f616475632f6c61,0x692f2e2e2f6e6962,0x742f6564756c636e,0x745f657275747865\n"
".quad 0x0a22682e73657079,0x3109656c69662e09,0x2f7273752f220931,0x75632f6c61636f6c\n"
".quad 0x2e2f6e69622f6164,0x64756c636e692f2e,0x726f746365762f65,0x682e73657079745f\n"
".quad 0x656c69662e090a22,0x73752f2209323109,0x2f6c61636f6c2f72,0x6e69622f61647563\n"
".quad 0x6c636e692f2e2e2f,0x697665642f656475,0x636e75616c5f6563,0x656d617261705f68\n"
".quad 0x0a22682e73726574,0x3109656c69662e09,0x2f7273752f220933,0x75632f6c61636f6c\n"
".quad 0x2e2f6e69622f6164,0x64756c636e692f2e,0x74732f7472632f65,0x6c635f656761726f\n"
".quad 0x090a22682e737361,0x343109656c69662e,0x692f7273752f2209,0x622f6564756c636e\n"
".quad 0x657079742f737469,0x662e090a22682e73,0x2209353109656c69,0x636e692f7273752f\n"
".quad 0x6d69742f6564756c,0x662e090a22682e65,0x2209363109656c69,0x6546646165726874\n"
".quad 0x637564655265636e,0x72656b5f6e6f6974,0x0a2275632e6c656e,0x3109656c69662e09\n"
".quad 0x2f7273752f220937,0x75632f6c61636f6c,0x2e2f6e69622f6164,0x64756c636e692f2e\n"
".quad 0x6e6f6d6d6f632f65,0x6f6974636e75665f,0x2e090a22682e736e,0x09383109656c6966\n"
".quad 0x6f6c2f7273752f22,0x616475632f6c6163,0x2f2e2e2f6e69622f,0x2f6564756c636e69\n"
".quad 0x6e75665f6874616d,0x682e736e6f697463,0x656c69662e090a22,0x73752f2209393109\n"
".quad 0x2f6c61636f6c2f72,0x6e69622f61647563,0x6c636e692f2e2e2f,0x6874616d2f656475\n"
".quad 0x6e6174736e6f635f,0x2e090a22682e7374,0x09303209656c6966,0x6f6c2f7273752f22\n"
".quad 0x616475632f6c6163,0x2f2e2e2f6e69622f,0x2f6564756c636e69,0x665f656369766564\n"
".quad 0x736e6f6974636e75,0x69662e090a22682e,0x2f2209313209656c,0x61636f6c2f727375\n"
".quad 0x622f616475632f6c,0x6e692f2e2e2f6e69,0x6d732f6564756c63,0x6d6f74615f31315f\n"
".quad 0x74636e75665f6369,0x0a22682e736e6f69,0x3209656c69662e09,0x2f7273752f220932\n"
".quad 0x75632f6c61636f6c,0x2e2f6e69622f6164,0x64756c636e692f2e,0x5f32315f6d732f65\n"
".quad 0x665f63696d6f7461,0x736e6f6974636e75,0x69662e090a22682e,0x2f2209333209656c\n"
".quad 0x61636f6c2f727375,0x622f616475632f6c,0x6e692f2e2e2f6e69,0x6d732f6564756c63\n"
".quad 0x62756f645f33315f,0x74636e75665f656c,0x0a22682e736e6f69,0x3209656c69662e09\n"
".quad 0x2f7273752f220934,0x75632f6c61636f6c,0x2e2f6e69622f6164,0x64756c636e692f2e\n"
".quad 0x5f30325f6d732f65,0x665f63696d6f7461,0x736e6f6974636e75,0x69662e090a22682e\n"
".quad 0x2f2209353209656c,0x61636f6c2f727375,0x622f616475632f6c,0x6e692f2e2e2f6e69\n"
".quad 0x6d732f6564756c63,0x72746e695f30325f,0x682e736369736e69,0x656c69662e090a22\n"
".quad 0x73752f2209363209,0x2f6c61636f6c2f72,0x6e69622f61647563,0x6c636e692f2e2e2f\n"
".quad 0x667275732f656475,0x636e75665f656361,0x22682e736e6f6974,0x09656c69662e090a\n"
".quad 0x7273752f22093732,0x632f6c61636f6c2f,0x2f6e69622f616475,0x756c636e692f2e2e\n"
".quad 0x75747865742f6564,0x68637465665f6572,0x6f6974636e75665f,0x2e090a22682e736e\n"
".quad 0x09383209656c6966,0x6f6c2f7273752f22,0x616475632f6c6163,0x2f2e2e2f6e69622f\n"
".quad 0x2f6564756c636e69,0x6e75665f6874616d,0x645f736e6f697463,0x2e337874705f6c62\n"
".quad 0x78652e090a0a2268,0x68732e096e726574,0x6c612e2064657261,0x622e2034206e6769\n"
".quad 0x5b61746164732038,0x7478652e090a3b5d,0x6168732e096e7265,0x696c612e20646572\n"
".quad 0x38622e2034206e67,0x3b5d5b6d656d7320,0x61626f6c672e090a,0x72203233752e206c\n"
".quad 0x6e656d6572697465,0x3d20746e756f4374,0x652e090a0a3b3020,0x315a5f207972746e\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x4c453231356a4c49,0x664b507645453162\n"
".quad 0x09090a28206a6650,0x2e206d617261702e,0x75635f5f20343675,0x5f5f6d7261706164\n"
".quad 0x637564657235315a,0x615069746c754d65,0x3231356a4c497373,0x5076454531624c45\n"
".quad 0x5f675f6a6650664b,0x090a2c6174616469,0x206d617261702e09,0x635f5f203436752e\n"
".quad 0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563,0x31356a4c49737361\n"
".quad 0x76454531624c4532,0x675f6a6650664b50,0x0a2c617461646f5f,0x6d617261702e0909\n"
".quad 0x5f5f203233752e20,0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375\n"
".quad 0x356a4c4973736150,0x454531624c453231,0x5f6a6650664b5076,0x2e090a7b090a296e\n"
".quad 0x3631752e20676572,0x3b3e333c68722520,0x2e206765722e090a,0x313c722520323375\n"
".quad 0x65722e090a3b3e38,0x25203436752e2067,0x0a3b3e36313c6472,0x662e206765722e09\n"
".quad 0x35333c6625203233,0x6765722e090a3b3e,0x2520646572702e20,0x090a3b3e33313c70\n"
".quad 0x09363109636f6c2e,0x4c240a3009323131,0x35315a5f5f314242,0x754d656375646572\n"
".quad 0x497373615069746c,0x624c453231356a4c,0x50664b5076454531,0x6f6c2e090a3a6a66\n"
".quad 0x0936380936310963,0x752e747663090a30,0x09203631752e3233,0x697425202c317225\n"
".quad 0x6f6d090a3b782e64,0x2509203436752e76,0x616473202c316472,0x747663090a3b6174\n"
".quad 0x3233752e3436752e,0x202c326472250920,0x756d090a3b317225,0x752e656469772e6c\n"
".quad 0x3364722509203233,0x34202c317225202c,0x752e646461090a3b,0x3464722509203436\n"
".quad 0x202c31647225202c,0x6d090a3b33647225,0x09203233662e766f,0x306630202c316625\n"
".quad 0x3b30303030303030,0x2f2f092020202020,0x2e766f6d090a3020,0x3266250920323366\n"
".quad 0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x090a3b326625202c,0x2e3233752e747663\n"
".quad 0x3272250920363175,0x646961746325202c,0x6c756d090a3b782e,0x203233752e6f6c2e\n"
".quad 0x7225202c33722509,0x3b34323031202c32,0x33752e646461090a,0x202c347225092032\n"
".quad 0x317225202c337225,0x732e766f6d090a3b,0x2c35722509203233,0x6c090a3b34722520\n"
".quad 0x2e6d617261702e64,0x3672250920323375,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723531,0x73615069746c754d,0x453231356a4c4973,0x4b5076454531624c\n"
".quad 0x3b5d6e5f6a665066,0x672e70746573090a,0x2509203233752e65,0x2c347225202c3170\n"
".quad 0x40090a3b36722520,0x2061726220317025,0x315f305f744c2409,0x6d090a3b34333032\n"
".quad 0x09203631752e766f,0x6e25202c31687225,0x3b782e6469617463,0x69772e6c756d090a\n"
".quad 0x09203631752e6564,0x687225202c377225,0x3b34323031202c31,0x36732e747663090a\n"
".quad 0x2509203233752e34,0x377225202c356472,0x61702e646c090a3b,0x203436752e6d6172\n"
".quad 0x5b202c3664722509,0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x31624c453231356a,0x6650664b50764545,0x746164695f675f6a\n"
".quad 0x747663090a3b5d61,0x3233752e3436752e,0x202c376472250920,0x756d090a3b347225\n"
".quad 0x752e656469772e6c,0x3864722509203233,0x34202c347225202c,0x752e646461090a3b\n"
".quad 0x3964722509203436,0x202c36647225202c,0x6d090a3b38647225,0x2e656469772e6c75\n"
".quad 0x6472250920323375,0x2c377225202c3031,0x5f744c240a3b3420,0x3a36343532315f30\n"
".quad 0x6f6f6c3c2f2f200a,0x20706f6f4c203e70,0x6e696c2079646f62,0x656e202c36382065\n"
".quad 0x656420676e697473,0x202c31203a687470,0x6574616d69747365,0x7461726574692064\n"
".quad 0x6e75203a736e6f69,0x2e090a6e776f6e6b,0x3909363109636f6c,0x2e646c090a300933\n"
".quad 0x662e6c61626f6c67,0x2c33662509203233,0x302b396472255b20,0x2e646461090a3b5d\n"
".quad 0x3466250920323366,0x25202c336625202c,0x2e7473090a3b3166,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x636f6c2e090a3b34,0x3009363909363109\n"
".quad 0x6f6c672e646c090a,0x203233662e6c6162,0x255b202c35662509,0x383430322b396472\n"
".quad 0x2e646461090a3b5d,0x3166250920323366,0x25202c356625202c,0x2e7473090a3b3466\n"
".quad 0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34,0x2e646461090a3b31\n"
".quad 0x3572250920323375,0x25202c377225202c,0x646461090a3b3572,0x722509203436752e\n"
".quad 0x39647225202c3964,0x3b3031647225202c,0x3109636f6c2e090a,0x090a300936380936\n"
".quad 0x6d617261702e646c,0x722509203233752e,0x75635f5f5b202c36,0x5f5f6d7261706164\n"
".quad 0x637564657235315a,0x615069746c754d65,0x3231356a4c497373,0x5076454531624c45\n"
".quad 0x5d6e5f6a6650664b,0x09636f6c2e090a3b,0x0a30093639093631,0x746c2e7074657309\n"
".quad 0x702509203233752e,0x202c357225202c32,0x2540090a3b367225,0x0920617262203270\n"
".quad 0x32315f305f744c24,0x744c240a3b363435,0x34333032315f305f,0x09636f6c2e090a3a\n"
".quad 0x3009303031093631,0x79732e726162090a,0x090a3b300920636e,0x09363109636f6c2e\n"
".quad 0x6d090a3009333031,0x09203233752e766f,0x353532202c387225,0x2e70746573090a3b\n"
".quad 0x09203233752e7467,0x317225202c337025,0x090a3b387225202c,0x6172622033702540\n"
".quad 0x5f305f744c240920,0x090a3b3835303331,0x09363109636f6c2e,0x646c090a30093336\n"
".quad 0x2e6465726168732e,0x3666250920323366,0x2b346472255b202c,0x2e646c090a3b5d30\n"
".quad 0x662e646572616873,0x2c37662509203233,0x312b346472255b20,0x61090a3b5d343230\n"
".quad 0x09203233662e6464,0x366625202c386625,0x090a3b376625202c,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x2c5d302b34647225,0x4c240a3b38662520,0x353033315f305f74\n"
".quad 0x2e726162090a3a38,0x3b300920636e7973,0x33752e766f6d090a,0x202c397225092032\n"
".quad 0x6573090a3b373231,0x33752e74672e7074,0x202c347025092032,0x397225202c317225\n"
".quad 0x2034702540090a3b,0x744c240920617262,0x30373533315f305f,0x09636f6c2e090a3b\n"
".quad 0x0a30093436093631,0x726168732e646c09,0x09203233662e6465,0x72255b202c396625\n"
".quad 0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64,0x72255b202c303166\n"
".quad 0x3b5d3231352b3464,0x33662e646461090a,0x2c31316625092032,0x6625202c39662520\n"
".quad 0x2e7473090a3b3031,0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34\n"
".quad 0x5f744c240a3b3131,0x3a30373533315f30,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x203233752e766f6d,0x36202c3031722509,0x70746573090a3b33,0x203233752e74672e\n"
".quad 0x7225202c35702509,0x3b30317225202c31,0x622035702540090a,0x5f744c2409206172\n"
".quad 0x3b32383034315f30,0x3109636f6c2e090a,0x090a300935360936,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c323166,0x090a3b5d302b3464,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c333166,0x3b5d3635322b3464,0x33662e646461090a\n"
".quad 0x2c34316625092032,0x25202c3231662520,0x7473090a3b333166,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b343166,0x32383034315f305f\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09,0x202c313172250920\n"
".quad 0x746573090a3b3133,0x3233752e74672e70,0x25202c3670250920,0x31317225202c3172\n"
".quad 0x2036702540090a3b,0x744c240920617262,0x34393534315f305f,0x09636f6c2e090a3b\n"
".quad 0x0a30093736093631,0x726168732e646c09,0x09203233662e6465,0x255b202c35316625\n"
".quad 0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465,0x255b202c36316625\n"
".quad 0x5d3832312b346472,0x662e646461090a3b,0x3731662509203233,0x202c35316625202c\n"
".quad 0x73090a3b36316625,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x4c240a3b37316625,0x393534315f305f74,0x2e726162090a3a34,0x3b300920636e7973\n"
".quad 0x33752e766f6d090a,0x2c32317225092032,0x6573090a3b353120,0x33752e74672e7074\n"
".quad 0x202c377025092032,0x317225202c317225,0x37702540090a3b32,0x4c24092061726220\n"
".quad 0x303135315f305f74,0x636f6c2e090a3b36,0x3009383609363109,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3831662509,0x3b5d302b34647225,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3931662509,0x5d34362b34647225,0x662e646461090a3b\n"
".quad 0x3032662509203233,0x202c38316625202c,0x73090a3b39316625,0x6465726168732e74\n"
".quad 0x255b09203233662e,0x202c5d302b346472,0x4c240a3b30326625,0x303135315f305f74\n"
".quad 0x2e726162090a3a36,0x3b300920636e7973,0x33752e766f6d090a,0x2c33317225092032\n"
".quad 0x746573090a3b3720,0x3233752e74672e70,0x25202c3870250920,0x33317225202c3172\n"
".quad 0x2038702540090a3b,0x744c240920617262,0x38313635315f305f,0x09636f6c2e090a3b\n"
".quad 0x0a30093936093631,0x726168732e646c09,0x09203233662e6465,0x255b202c31326625\n"
".quad 0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465,0x255b202c32326625\n"
".quad 0x3b5d32332b346472,0x33662e646461090a,0x2c33326625092032,0x25202c3132662520\n"
".quad 0x7473090a3b323266,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x744c240a3b333266,0x38313635315f305f,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x3233752e766f6d09,0x202c343172250920,0x70746573090a3b33,0x203233752e74672e\n"
".quad 0x7225202c39702509,0x3b34317225202c31,0x622039702540090a,0x5f744c2409206172\n"
".quad 0x3b30333136315f30,0x3109636f6c2e090a,0x090a300930370936,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c343266,0x090a3b5d302b3464,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c353266,0x0a3b5d36312b3464,0x3233662e64646109\n"
".quad 0x202c363266250920,0x6625202c34326625,0x2e7473090a3b3532,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3632,0x3a30333136315f30\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d,0x31202c3531722509\n"
".quad 0x2e70746573090a3b,0x09203233752e7467,0x7225202c30317025,0x3b35317225202c31\n"
".quad 0x203031702540090a,0x744c240920617262,0x32343636315f305f,0x09636f6c2e090a3b\n"
".quad 0x0a30093137093631,0x726168732e646c09,0x09203233662e6465,0x255b202c37326625\n"
".quad 0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465,0x255b202c38326625\n"
".quad 0x0a3b5d382b346472,0x3233662e64646109,0x202c393266250920,0x6625202c37326625\n"
".quad 0x2e7473090a3b3832,0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34\n"
".quad 0x5f744c240a3b3932,0x3a32343636315f30,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x203233752e766f6d,0x30202c3631722509,0x2e70746573090a3b,0x09203233752e7165\n"
".quad 0x7225202c31317025,0x3b36317225202c31,0x313170252140090a,0x4c24092061726220\n"
".quad 0x353137315f305f74,0x636f6c2e090a3b34,0x3009323709363109,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3033662509,0x3b5d302b34647225,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3133662509,0x3b5d342b34647225,0x33662e646461090a\n"
".quad 0x2c32336625092032,0x25202c3033662520,0x7473090a3b313366,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b323366,0x34353137315f305f\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x363109636f6c2e09,0x090a300933303109\n"
".quad 0x6220313170252140,0x5f744c2409206172,0x3b36363637315f30,0x3109636f6c2e090a\n"
".quad 0x0a30093630310936,0x726168732e646c09,0x09203233662e6465,0x735b202c33336625\n"
".quad 0x3b5d302b61746164,0x7261702e646c090a,0x09203436752e6d61,0x5b202c3131647225\n"
".quad 0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974\n"
".quad 0x31624c453231356a,0x6650664b50764545,0x7461646f5f675f6a,0x747663090a3b5d61\n"
".quad 0x3233752e3436752e,0x2c32316472250920,0x6d090a3b32722520,0x2e656469772e6c75\n"
".quad 0x6472250920323375,0x2c327225202c3331,0x646461090a3b3420,0x722509203436752e\n"
".quad 0x647225202c343164,0x31647225202c3131,0x672e7473090a3b33,0x33662e6c61626f6c\n"
".quad 0x316472255b092032,0x6625202c5d302b34,0x5f744c240a3b3333,0x3a36363637315f30\n"
".quad 0x3109636f6c2e090a,0x0a30093531310936,0x240a3b7469786509,0x5f5f646e6557444c\n"
".quad 0x637564657235315a,0x615069746c754d65,0x3231356a4c497373,0x5076454531624c45\n"
".quad 0x090a3a6a6650664b,0x315a5f202f2f207d,0x4d65637564657235,0x7373615069746c75\n"
".quad 0x4c453231356a4c49,0x664b507645453162,0x652e090a0a6a6650,0x315a5f207972746e\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x4c453635326a4c49,0x664b507645453162\n"
".quad 0x09090a28206a6650,0x2e206d617261702e,0x75635f5f20343675,0x5f5f6d7261706164\n"
".quad 0x637564657235315a,0x615069746c754d65,0x3635326a4c497373,0x5076454531624c45\n"
".quad 0x5f675f6a6650664b,0x090a2c6174616469,0x206d617261702e09,0x635f5f203436752e\n"
".quad 0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563,0x35326a4c49737361\n"
".quad 0x76454531624c4536,0x675f6a6650664b50,0x0a2c617461646f5f,0x6d617261702e0909\n"
".quad 0x5f5f203233752e20,0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375\n"
".quad 0x326a4c4973736150,0x454531624c453635,0x5f6a6650664b5076,0x2e090a7b090a296e\n"
".quad 0x3631752e20676572,0x3b3e333c68722520,0x2e206765722e090a,0x313c722520323375\n"
".quad 0x65722e090a3b3e37,0x25203436752e2067,0x0a3b3e36313c6472,0x662e206765722e09\n"
".quad 0x32333c6625203233,0x6765722e090a3b3e,0x2520646572702e20,0x090a3b3e32313c70\n"
".quad 0x09363109636f6c2e,0x4c240a3009323131,0x35315a5f5f314242,0x754d656375646572\n"
".quad 0x497373615069746c,0x624c453635326a4c,0x50664b5076454531,0x6f6c2e090a3a6a66\n"
".quad 0x0936380936310963,0x752e747663090a30,0x09203631752e3233,0x697425202c317225\n"
".quad 0x6f6d090a3b782e64,0x2509203436752e76,0x616473202c316472,0x747663090a3b6174\n"
".quad 0x3233752e3436752e,0x202c326472250920,0x756d090a3b317225,0x752e656469772e6c\n"
".quad 0x3364722509203233,0x34202c317225202c,0x752e646461090a3b,0x3464722509203436\n"
".quad 0x202c31647225202c,0x6d090a3b33647225,0x09203233662e766f,0x306630202c316625\n"
".quad 0x3b30303030303030,0x2f2f092020202020,0x2e766f6d090a3020,0x3266250920323366\n"
".quad 0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x090a3b326625202c,0x2e3233752e747663\n"
".quad 0x3272250920363175,0x646961746325202c,0x6c756d090a3b782e,0x203233752e6f6c2e\n"
".quad 0x7225202c33722509,0x0a3b323135202c32,0x3233752e64646109,0x25202c3472250920\n"
".quad 0x3b317225202c3372,0x33732e766f6d090a,0x202c357225092032,0x646c090a3b347225\n"
".quad 0x752e6d617261702e,0x2c36722509203233,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x4c453635326a4c49,0x664b507645453162\n"
".quad 0x0a3b5d6e5f6a6650,0x65672e7074657309,0x702509203233752e,0x202c347225202c31\n"
".quad 0x2540090a3b367225,0x0920617262203170,0x32315f315f744c24,0x6f6d090a3b303932\n"
".quad 0x2509203631752e76,0x636e25202c316872,0x0a3b782e64696174,0x6469772e6c756d09\n"
".quad 0x2509203631752e65,0x31687225202c3772,0x090a3b323135202c,0x2e3436732e747663\n"
".quad 0x6472250920323375,0x0a3b377225202c35,0x617261702e646c09,0x2509203436752e6d\n"
".quad 0x5f5f5b202c366472,0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375\n"
".quad 0x326a4c4973736150,0x454531624c453635,0x5f6a6650664b5076,0x5d61746164695f67\n"
".quad 0x752e747663090a3b,0x09203233752e3436,0x7225202c37647225,0x2e6c756d090a3b34\n"
".quad 0x3233752e65646977,0x202c386472250920,0x0a3b34202c347225,0x3436752e64646109\n"
".quad 0x202c396472250920,0x7225202c36647225,0x6c756d090a3b3864,0x33752e656469772e\n"
".quad 0x3031647225092032,0x34202c377225202c,0x5f315f744c240a3b,0x200a3a3230383231\n"
".quad 0x3e706f6f6c3c2f2f,0x6f6220706f6f4c20,0x20656e696c207964,0x7473656e202c3638\n"
".quad 0x7470656420676e69,0x7365202c31203a68,0x20646574616d6974,0x6f69746172657469\n"
".quad 0x6e6b6e75203a736e,0x6f6c2e090a6e776f,0x0933390936310963,0x6c672e646c090a30\n"
".quad 0x3233662e6c61626f,0x5b202c3366250920,0x3b5d302b39647225,0x33662e646461090a\n"
".quad 0x202c346625092032,0x316625202c336625,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x2b346472255b0920,0x3b346625202c5d30,0x3109636f6c2e090a,0x090a300936390936\n"
".quad 0x61626f6c672e646c,0x2509203233662e6c,0x6472255b202c3566,0x3b5d343230312b39\n"
".quad 0x33662e646461090a,0x202c316625092032,0x346625202c356625,0x68732e7473090a3b\n"
".quad 0x3233662e64657261,0x2b346472255b0920,0x3b316625202c5d30,0x33752e646461090a\n"
".quad 0x202c357225092032,0x357225202c377225,0x752e646461090a3b,0x3964722509203436\n"
".quad 0x202c39647225202c,0x090a3b3031647225,0x09363109636f6c2e,0x646c090a30093638\n"
".quad 0x752e6d617261702e,0x2c36722509203233,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x4c453635326a4c49,0x664b507645453162\n"
".quad 0x0a3b5d6e5f6a6650,0x363109636f6c2e09,0x73090a3009363909,0x752e746c2e707465\n"
".quad 0x2c32702509203233,0x7225202c35722520,0x32702540090a3b36,0x4c24092061726220\n"
".quad 0x303832315f315f74,0x315f744c240a3b32,0x0a3a30393232315f,0x363109636f6c2e09\n"
".quad 0x090a300930303109,0x636e79732e726162,0x6c2e090a3b300920,0x303109363109636f\n"
".quad 0x766f6d090a300933,0x722509203233752e,0x0a3b373231202c38,0x74672e7074657309\n"
".quad 0x702509203233752e,0x202c317225202c33,0x2540090a3b387225,0x0920617262203370\n"
".quad 0x33315f315f744c24,0x6c2e090a3b343133,0x343609363109636f,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x202c366625092032,0x5d302b346472255b,0x68732e646c090a3b\n"
".quad 0x3233662e64657261,0x5b202c3766250920,0x3231352b34647225,0x2e646461090a3b5d\n"
".quad 0x3866250920323366,0x25202c366625202c,0x2e7473090a3b3766,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x315f744c240a3b38,0x0a3a34313333315f\n"
".quad 0x6e79732e72616209,0x6d090a3b30092063,0x09203233752e766f,0x3b3336202c397225\n"
".quad 0x672e70746573090a,0x2509203233752e74,0x2c317225202c3470,0x40090a3b39722520\n"
".quad 0x2061726220347025,0x315f315f744c2409,0x2e090a3b36323833,0x3609363109636f6c\n"
".quad 0x2e646c090a300935,0x662e646572616873,0x2c39662509203233,0x302b346472255b20\n"
".quad 0x732e646c090a3b5d,0x33662e6465726168,0x2c30316625092032,0x322b346472255b20\n"
".quad 0x6461090a3b5d3635,0x2509203233662e64,0x396625202c313166,0x0a3b30316625202c\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x0a3b31316625202c\n"
".quad 0x33315f315f744c24,0x6162090a3a363238,0x0920636e79732e72,0x2e766f6d090a3b30\n"
".quad 0x3172250920323375,0x090a3b3133202c30,0x2e74672e70746573,0x3570250920323375\n"
".quad 0x25202c317225202c,0x2540090a3b303172,0x0920617262203570,0x34315f315f744c24\n"
".quad 0x6c2e090a3b383333,0x373609363109636f,0x732e646c090a3009,0x33662e6465726168\n"
".quad 0x2c32316625092032,0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x2c33316625092032,0x312b346472255b20,0x6461090a3b5d3832,0x2509203233662e64\n"
".quad 0x316625202c343166,0x3b33316625202c32,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x302b346472255b09,0x3b34316625202c5d,0x315f315f744c240a,0x62090a3a38333334\n"
".quad 0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e,0x0a3b3531202c3131\n"
".quad 0x74672e7074657309,0x702509203233752e,0x202c317225202c36,0x40090a3b31317225\n"
".quad 0x2061726220367025,0x315f315f744c2409,0x2e090a3b30353834,0x3609363109636f6c\n"
".quad 0x2e646c090a300938,0x662e646572616873,0x3531662509203233,0x2b346472255b202c\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3631662509203233,0x2b346472255b202c\n"
".quad 0x6461090a3b5d3436,0x2509203233662e64,0x316625202c373166,0x3b36316625202c35\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x3b37316625202c5d\n"
".quad 0x315f315f744c240a,0x62090a3a30353834,0x20636e79732e7261,0x766f6d090a3b3009\n"
".quad 0x722509203233752e,0x090a3b37202c3231,0x2e74672e70746573,0x3770250920323375\n"
".quad 0x25202c317225202c,0x2540090a3b323172,0x0920617262203770,0x35315f315f744c24\n"
".quad 0x6c2e090a3b323633,0x393609363109636f,0x732e646c090a3009,0x33662e6465726168\n"
".quad 0x2c38316625092032,0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x2c39316625092032,0x332b346472255b20,0x646461090a3b5d32,0x662509203233662e\n"
".quad 0x38316625202c3032,0x0a3b39316625202c,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x0a3b30326625202c,0x35315f315f744c24,0x6162090a3a323633\n"
".quad 0x0920636e79732e72,0x2e766f6d090a3b30,0x3172250920323375,0x73090a3b33202c33\n"
".quad 0x752e74672e707465,0x2c38702509203233,0x7225202c31722520,0x702540090a3b3331\n"
".quad 0x2409206172622038,0x3835315f315f744c,0x6f6c2e090a3b3437,0x0930370936310963\n"
".quad 0x68732e646c090a30,0x3233662e64657261,0x202c313266250920,0x5d302b346472255b\n"
".quad 0x68732e646c090a3b,0x3233662e64657261,0x202c323266250920,0x36312b346472255b\n"
".quad 0x2e646461090a3b5d,0x3266250920323366,0x2c31326625202c33,0x090a3b3232662520\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x240a3b3332662520\n"
".quad 0x3835315f315f744c,0x726162090a3a3437,0x300920636e79732e,0x752e766f6d090a3b\n"
".quad 0x3431722509203233,0x6573090a3b31202c,0x33752e74672e7074,0x202c397025092032\n"
".quad 0x317225202c317225,0x39702540090a3b34,0x4c24092061726220,0x383336315f315f74\n"
".quad 0x636f6c2e090a3b36,0x3009313709363109,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3432662509,0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3532662509,0x3b5d382b34647225,0x33662e646461090a,0x2c36326625092032\n"
".quad 0x25202c3432662520,0x7473090a3b353266,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x744c240a3b363266,0x36383336315f315f,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x3233752e766f6d09,0x202c353172250920,0x70746573090a3b30\n"
".quad 0x203233752e71652e,0x25202c3031702509,0x35317225202c3172,0x3170252140090a3b\n"
".quad 0x2409206172622030,0x3836315f315f744c,0x6f6c2e090a3b3839,0x0932370936310963\n"
".quad 0x68732e646c090a30,0x3233662e64657261,0x202c373266250920,0x5d302b346472255b\n"
".quad 0x68732e646c090a3b,0x3233662e64657261,0x202c383266250920,0x5d342b346472255b\n"
".quad 0x662e646461090a3b,0x3932662509203233,0x202c37326625202c,0x73090a3b38326625\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472,0x4c240a3b39326625\n"
".quad 0x393836315f315f74,0x2e726162090a3a38,0x3b300920636e7973,0x3109636f6c2e090a\n"
".quad 0x0a30093330310936,0x2030317025214009,0x744c240920617262,0x30313437315f315f\n"
".quad 0x09636f6c2e090a3b,0x3009363031093631,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3033662509,0x5d302b6174616473,0x61702e646c090a3b,0x203436752e6d6172\n"
".quad 0x202c313164722509,0x70616475635f5f5b,0x35315a5f5f6d7261,0x754d656375646572\n"
".quad 0x497373615069746c,0x624c453635326a4c,0x50664b5076454531,0x61646f5f675f6a66\n"
".quad 0x7663090a3b5d6174,0x33752e3436752e74,0x3231647225092032,0x090a3b327225202c\n"
".quad 0x656469772e6c756d,0x722509203233752e,0x327225202c333164,0x6461090a3b34202c\n"
".quad 0x2509203436752e64,0x7225202c34316472,0x647225202c313164,0x2e7473090a3b3331\n"
".quad 0x662e6c61626f6c67,0x6472255b09203233,0x25202c5d302b3431,0x744c240a3b303366\n"
".quad 0x30313437315f315f,0x09636f6c2e090a3a,0x3009353131093631,0x0a3b74697865090a\n"
".quad 0x5f646e6557444c24,0x7564657235315a5f,0x5069746c754d6563,0x35326a4c49737361\n"
".quad 0x76454531624c4536,0x0a3a6a6650664b50,0x5a5f202f2f207d09,0x6563756465723531\n"
".quad 0x73615069746c754d,0x453635326a4c4973,0x4b5076454531624c,0x2e090a0a6a665066\n"
".quad 0x5a5f207972746e65,0x6563756465723531,0x73615069746c754d,0x453832316a4c4973\n"
".quad 0x4b5076454531624c,0x090a28206a665066,0x206d617261702e09,0x635f5f203436752e\n"
".quad 0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563,0x32316a4c49737361\n"
".quad 0x76454531624c4538,0x675f6a6650664b50,0x0a2c61746164695f,0x6d617261702e0909\n"
".quad 0x5f5f203436752e20,0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375\n"
".quad 0x316a4c4973736150,0x454531624c453832,0x5f6a6650664b5076,0x2c617461646f5f67\n"
".quad 0x617261702e09090a,0x5f203233752e206d,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x4531624c45383231,0x6a6650664b507645\n"
".quad 0x090a7b090a296e5f,0x31752e206765722e,0x3e333c6872252036,0x206765722e090a3b\n"
".quad 0x3c7225203233752e,0x722e090a3b3e3631,0x203436752e206765,0x3b3e36313c647225\n"
".quad 0x2e206765722e090a,0x323c662520323366,0x65722e090a3b3e39,0x20646572702e2067\n"
".quad 0x0a3b3e31313c7025,0x363109636f6c2e09,0x240a300932313109,0x315a5f5f3142424c\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x4c453832316a4c49,0x664b507645453162\n"
".quad 0x6c2e090a3a6a6650,0x363809363109636f,0x2e747663090a3009,0x203631752e323375\n"
".quad 0x7425202c31722509,0x6d090a3b782e6469,0x09203436752e766f,0x6473202c31647225\n"
".quad 0x7663090a3b617461,0x33752e3436752e74,0x2c32647225092032,0x6d090a3b31722520\n"
".quad 0x2e656469772e6c75,0x6472250920323375,0x202c317225202c33,0x2e646461090a3b34\n"
".quad 0x6472250920343675,0x2c31647225202c34,0x090a3b3364722520,0x203233662e766f6d\n"
".quad 0x6630202c31662509,0x3030303030303030,0x2f0920202020203b,0x766f6d090a30202f\n"
".quad 0x662509203233662e,0x3030306630202c32,0x20203b3030303030,0x30202f2f09202020\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x0a3b326625202c5d\n"
".quad 0x3233752e74766309,0x722509203631752e,0x6961746325202c32,0x756d090a3b782e64\n"
".quad 0x3233752e6f6c2e6c,0x25202c3372250920,0x3b363532202c3272,0x33752e646461090a\n"
".quad 0x202c347225092032,0x317225202c337225,0x732e766f6d090a3b,0x2c35722509203233\n"
".quad 0x6c090a3b34722520,0x2e6d617261702e64,0x3672250920323375,0x6475635f5f5b202c\n"
".quad 0x5a5f5f6d72617061,0x6563756465723531,0x73615069746c754d,0x453832316a4c4973\n"
".quad 0x4b5076454531624c,0x3b5d6e5f6a665066,0x672e70746573090a,0x2509203233752e65\n"
".quad 0x2c347225202c3170,0x40090a3b36722520,0x2061726220317025,0x315f325f744c2409\n"
".quad 0x6d090a3b36343532,0x09203631752e766f,0x6e25202c31687225,0x3b782e6469617463\n"
".quad 0x69772e6c756d090a,0x09203631752e6564,0x687225202c377225,0x0a3b363532202c31\n"
".quad 0x3436732e74766309,0x722509203233752e,0x3b377225202c3564,0x7261702e646c090a\n"
".quad 0x09203436752e6d61,0x5f5b202c36647225,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x4531624c45383231,0x6a6650664b507645\n"
".quad 0x61746164695f675f,0x2e747663090a3b5d,0x203233752e343675,0x25202c3764722509\n"
".quad 0x6c756d090a3b3472,0x33752e656469772e,0x2c38647225092032,0x3b34202c34722520\n"
".quad 0x36752e646461090a,0x2c39647225092034,0x25202c3664722520,0x756d090a3b386472\n"
".quad 0x752e656469772e6c,0x3164722509203233,0x202c377225202c30,0x325f744c240a3b34\n"
".quad 0x0a3a38353033315f,0x706f6f6c3c2f2f20,0x6220706f6f4c203e,0x656e696c2079646f\n"
".quad 0x73656e202c363820,0x70656420676e6974,0x65202c31203a6874,0x646574616d697473\n"
".quad 0x6974617265746920,0x6b6e75203a736e6f,0x6c2e090a6e776f6e,0x333909363109636f\n"
".quad 0x672e646c090a3009,0x33662e6c61626f6c,0x202c336625092032,0x5d302b396472255b\n"
".quad 0x662e646461090a3b,0x2c34662509203233,0x6625202c33662520,0x732e7473090a3b31\n"
".quad 0x33662e6465726168,0x346472255b092032,0x346625202c5d302b,0x09636f6c2e090a3b\n"
".quad 0x0a30093639093631,0x626f6c672e646c09,0x09203233662e6c61,0x72255b202c356625\n"
".quad 0x3b5d3231352b3964,0x33662e646461090a,0x202c316625092032,0x346625202c356625\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920,0x3b316625202c5d30\n"
".quad 0x33752e646461090a,0x202c357225092032,0x357225202c377225,0x752e646461090a3b\n"
".quad 0x3964722509203436,0x202c39647225202c,0x090a3b3031647225,0x09363109636f6c2e\n"
".quad 0x646c090a30093638,0x752e6d617261702e,0x2c36722509203233,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x4d65637564657235,0x7373615069746c75,0x4c453832316a4c49\n"
".quad 0x664b507645453162,0x0a3b5d6e5f6a6650,0x363109636f6c2e09,0x73090a3009363909\n"
".quad 0x752e746c2e707465,0x2c32702509203233,0x7225202c35722520,0x32702540090a3b36\n"
".quad 0x4c24092061726220,0x353033315f325f74,0x325f744c240a3b38,0x0a3a36343532315f\n"
".quad 0x363109636f6c2e09,0x090a300930303109,0x636e79732e726162,0x6c2e090a3b300920\n"
".quad 0x303109363109636f,0x766f6d090a300933,0x722509203233752e,0x090a3b3336202c38\n"
".quad 0x2e74672e70746573,0x3370250920323375,0x25202c317225202c,0x702540090a3b3872\n"
".quad 0x2409206172622033,0x3533315f325f744c,0x6f6c2e090a3b3037,0x0935360936310963\n"
".quad 0x68732e646c090a30,0x3233662e64657261,0x5b202c3666250920,0x3b5d302b34647225\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x255b202c37662509,0x5d3635322b346472\n"
".quad 0x662e646461090a3b,0x2c38662509203233,0x6625202c36662520,0x732e7473090a3b37\n"
".quad 0x33662e6465726168,0x346472255b092032,0x386625202c5d302b,0x5f325f744c240a3b\n"
".quad 0x090a3a3037353331,0x636e79732e726162,0x6f6d090a3b300920,0x2509203233752e76\n"
".quad 0x0a3b3133202c3972,0x74672e7074657309,0x702509203233752e,0x202c317225202c34\n"
".quad 0x2540090a3b397225,0x0920617262203470,0x34315f325f744c24,0x6c2e090a3b323830\n"
".quad 0x373609363109636f,0x732e646c090a3009,0x33662e6465726168,0x202c396625092032\n"
".quad 0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261,0x202c303166250920\n"
".quad 0x32312b346472255b,0x646461090a3b5d38,0x662509203233662e,0x2c396625202c3131\n"
".quad 0x090a3b3031662520,0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225\n"
".quad 0x240a3b3131662520,0x3034315f325f744c,0x726162090a3a3238,0x300920636e79732e\n"
".quad 0x752e766f6d090a3b,0x3031722509203233,0x73090a3b3531202c,0x752e74672e707465\n"
".quad 0x2c35702509203233,0x7225202c31722520,0x702540090a3b3031,0x2409206172622035\n"
".quad 0x3534315f325f744c,0x6f6c2e090a3b3439,0x0938360936310963,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x202c323166250920,0x5d302b346472255b,0x68732e646c090a3b\n"
".quad 0x3233662e64657261,0x202c333166250920,0x34362b346472255b,0x2e646461090a3b5d\n"
".quad 0x3166250920323366,0x2c32316625202c34,0x090a3b3331662520,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x2c5d302b34647225,0x240a3b3431662520,0x3534315f325f744c\n"
".quad 0x726162090a3a3439,0x300920636e79732e,0x752e766f6d090a3b,0x3131722509203233\n"
".quad 0x6573090a3b37202c,0x33752e74672e7074,0x202c367025092032,0x317225202c317225\n"
".quad 0x36702540090a3b31,0x4c24092061726220,0x303135315f325f74,0x636f6c2e090a3b36\n"
".quad 0x3009393609363109,0x6168732e646c090a,0x203233662e646572,0x5b202c3531662509\n"
".quad 0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572,0x5b202c3631662509\n"
".quad 0x5d32332b34647225,0x662e646461090a3b,0x3731662509203233,0x202c35316625202c\n"
".quad 0x73090a3b36316625,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x4c240a3b37316625,0x303135315f325f74,0x2e726162090a3a36,0x3b300920636e7973\n"
".quad 0x33752e766f6d090a,0x2c32317225092032,0x746573090a3b3320,0x3233752e74672e70\n"
".quad 0x25202c3770250920,0x32317225202c3172,0x2037702540090a3b,0x744c240920617262\n"
".quad 0x38313635315f325f,0x09636f6c2e090a3b,0x0a30093037093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c38316625,0x0a3b5d302b346472,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c39316625,0x3b5d36312b346472,0x33662e646461090a\n"
".quad 0x2c30326625092032,0x25202c3831662520,0x7473090a3b393166,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b303266,0x38313635315f325f\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09,0x202c333172250920\n"
".quad 0x70746573090a3b31,0x203233752e74672e,0x7225202c38702509,0x3b33317225202c31\n"
".quad 0x622038702540090a,0x5f744c2409206172,0x3b30333136315f32,0x3109636f6c2e090a\n"
".quad 0x090a300931370936,0x65726168732e646c,0x2509203233662e64,0x72255b202c313266\n"
".quad 0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64,0x72255b202c323266\n"
".quad 0x090a3b5d382b3464,0x203233662e646461,0x25202c3332662509,0x326625202c313266\n"
".quad 0x732e7473090a3b32,0x33662e6465726168,0x346472255b092032,0x326625202c5d302b\n"
".quad 0x325f744c240a3b33,0x0a3a30333136315f,0x6e79732e72616209,0x6d090a3b30092063\n"
".quad 0x09203233752e766f,0x3b30202c34317225,0x652e70746573090a,0x2509203233752e71\n"
".quad 0x2c317225202c3970,0x090a3b3431722520,0x7262203970252140,0x325f744c24092061\n"
".quad 0x0a3b32343636315f,0x363109636f6c2e09,0x6c090a3009323709,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3432,0x6c090a3b5d302b34,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3532,0x61090a3b5d342b34,0x09203233662e6464\n"
".quad 0x6625202c36326625,0x35326625202c3432,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x2b346472255b0920,0x36326625202c5d30,0x5f325f744c240a3b,0x090a3a3234363631\n"
".quad 0x636e79732e726162,0x6c2e090a3b300920,0x303109363109636f,0x252140090a300933\n"
".quad 0x0920617262203970,0x37315f325f744c24,0x6c2e090a3b343531,0x303109363109636f\n"
".quad 0x2e646c090a300936,0x662e646572616873,0x3732662509203233,0x61746164735b202c\n"
".quad 0x646c090a3b5d302b,0x752e6d617261702e,0x3164722509203436,0x75635f5f5b202c31\n"
".quad 0x5f5f6d7261706164,0x637564657235315a,0x615069746c754d65,0x3832316a4c497373\n"
".quad 0x5076454531624c45,0x5f675f6a6650664b,0x0a3b5d617461646f,0x3436752e74766309\n"
".quad 0x722509203233752e,0x327225202c323164,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x202c333164722509,0x0a3b34202c327225,0x3436752e64646109,0x2c34316472250920\n"
".quad 0x202c313164722520,0x090a3b3331647225,0x61626f6c672e7473,0x5b09203233662e6c\n"
".quad 0x5d302b3431647225,0x0a3b37326625202c,0x37315f325f744c24,0x6c2e090a3a343531\n"
".quad 0x313109363109636f,0x697865090a300935,0x6557444c240a3b74,0x7235315a5f5f646e\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x31624c453832316a,0x6650664b50764545\n"
".quad 0x2f2f207d090a3a6a,0x64657235315a5f20,0x69746c754d656375,0x316a4c4973736150\n"
".quad 0x454531624c453832,0x0a6a6650664b5076,0x7972746e652e090a,0x64657235315a5f20\n"
".quad 0x69746c754d656375,0x366a4c4973736150,0x76454531624c4534,0x28206a6650664b50\n"
".quad 0x617261702e09090a,0x5f203436752e206d,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x454531624c453436,0x5f6a6650664b5076\n"
".quad 0x2c61746164695f67,0x617261702e09090a,0x5f203436752e206d,0x726170616475635f\n"
".quad 0x657235315a5f5f6d,0x746c754d65637564,0x6a4c497373615069,0x454531624c453436\n"
".quad 0x5f6a6650664b5076,0x2c617461646f5f67,0x617261702e09090a,0x5f203233752e206d\n"
".quad 0x726170616475635f,0x657235315a5f5f6d,0x746c754d65637564,0x6a4c497373615069\n"
".quad 0x454531624c453436,0x5f6a6650664b5076,0x2e090a7b090a296e,0x3631752e20676572\n"
".quad 0x3b3e333c68722520,0x2e206765722e090a,0x313c722520323375,0x65722e090a3b3e35\n"
".quad 0x25203436752e2067,0x0a3b3e36313c6472,0x662e206765722e09,0x36323c6625203233\n"
".quad 0x6765722e090a3b3e,0x2520646572702e20,0x090a3b3e30313c70,0x09363109636f6c2e\n"
".quad 0x4c240a3009323131,0x35315a5f5f314242,0x754d656375646572,0x497373615069746c\n"
".quad 0x31624c4534366a4c,0x6650664b50764545,0x636f6c2e090a3a6a,0x3009363809363109\n"
".quad 0x33752e747663090a,0x2509203631752e32,0x64697425202c3172,0x766f6d090a3b782e\n"
".quad 0x722509203436752e,0x74616473202c3164,0x2e747663090a3b61,0x203233752e343675\n"
".quad 0x25202c3264722509,0x6c756d090a3b3172,0x33752e656469772e,0x2c33647225092032\n"
".quad 0x3b34202c31722520,0x36752e646461090a,0x2c34647225092034,0x25202c3164722520\n"
".quad 0x6f6d090a3b336472,0x2509203233662e76,0x30306630202c3166,0x203b303030303030\n"
".quad 0x202f2f0920202020,0x662e766f6d090a30,0x2c32662509203233,0x3030303030663020\n"
".quad 0x202020203b303030,0x090a30202f2f0920,0x65726168732e7473,0x5b09203233662e64\n"
".quad 0x2c5d302b34647225,0x63090a3b32662520,0x752e3233752e7476,0x2c32722509203631\n"
".quad 0x2e64696174632520,0x326c756d090a3b78,0x3233752e6f6c2e34,0x25202c3372250920\n"
".quad 0x3b383231202c3272,0x33752e646461090a,0x202c347225092032,0x317225202c337225\n"
".quad 0x732e766f6d090a3b,0x2c35722509203233,0x6c090a3b34722520,0x2e6d617261702e64\n"
".quad 0x3672250920323375,0x6475635f5f5b202c,0x5a5f5f6d72617061,0x6563756465723531\n"
".quad 0x73615069746c754d,0x4c4534366a4c4973,0x664b507645453162,0x0a3b5d6e5f6a6650\n"
".quad 0x65672e7074657309,0x702509203233752e,0x202c347225202c31,0x2540090a3b367225\n"
".quad 0x0920617262203170,0x32315f335f744c24,0x6f6d090a3b323038,0x2509203631752e76\n"
".quad 0x636e25202c316872,0x0a3b782e64696174,0x6469772e6c756d09,0x2509203631752e65\n"
".quad 0x31687225202c3772,0x090a3b383231202c,0x2e3436732e747663,0x6472250920323375\n"
".quad 0x0a3b377225202c35,0x617261702e646c09,0x2509203436752e6d,0x5f5f5b202c366472\n"
".quad 0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375,0x366a4c4973736150\n"
".quad 0x76454531624c4534,0x675f6a6650664b50,0x3b5d61746164695f,0x36752e747663090a\n"
".quad 0x2509203233752e34,0x347225202c376472,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x25202c3864722509,0x090a3b34202c3472,0x203436752e646461,0x25202c3964722509\n"
".quad 0x647225202c366472,0x2e6c756d090a3b38,0x3233752e65646977,0x2c30316472250920\n"
".quad 0x3b34202c37722520,0x315f335f744c240a,0x2f200a3a34313333,0x203e706f6f6c3c2f\n"
".quad 0x646f6220706f6f4c,0x3820656e696c2079,0x697473656e202c36,0x687470656420676e\n"
".quad 0x747365202c31203a,0x6920646574616d69,0x6e6f697461726574,0x6f6e6b6e75203a73\n"
".quad 0x636f6c2e090a6e77,0x3009333909363109,0x6f6c672e646c090a,0x203233662e6c6162\n"
".quad 0x255b202c33662509,0x0a3b5d302b396472,0x3233662e64646109,0x25202c3466250920\n"
".quad 0x3b316625202c3366,0x6168732e7473090a,0x203233662e646572,0x302b346472255b09\n"
".quad 0x0a3b346625202c5d,0x363109636f6c2e09,0x6c090a3009363909,0x6c61626f6c672e64\n"
".quad 0x662509203233662e,0x396472255b202c35,0x090a3b5d3635322b,0x203233662e646461\n"
".quad 0x6625202c31662509,0x0a3b346625202c35,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x090a3b316625202c,0x203233752e646461,0x7225202c35722509\n"
".quad 0x0a3b357225202c37,0x3436752e64646109,0x202c396472250920,0x7225202c39647225\n"
".quad 0x6c2e090a3b303164,0x363809363109636f,0x702e646c090a3009,0x3233752e6d617261\n"
".quad 0x5b202c3672250920,0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x4531624c4534366a,0x6a6650664b507645,0x6c2e090a3b5d6e5f\n"
".quad 0x363909363109636f,0x70746573090a3009,0x203233752e746c2e,0x7225202c32702509\n"
".quad 0x0a3b367225202c35,0x7262203270254009,0x335f744c24092061,0x0a3b34313333315f\n"
".quad 0x32315f335f744c24,0x6c2e090a3a323038,0x303109363109636f,0x726162090a300930\n"
".quad 0x300920636e79732e,0x09636f6c2e090a3b,0x3009333031093631,0x33752e766f6d090a\n"
".quad 0x202c387225092032,0x746573090a3b3133,0x3233752e74672e70,0x25202c3370250920\n"
".quad 0x3b387225202c3172,0x622033702540090a,0x5f744c2409206172,0x3b36323833315f33\n"
".quad 0x3109636f6c2e090a,0x090a300937360936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x6472255b202c3666,0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e\n"
".quad 0x346472255b202c37,0x090a3b5d3832312b,0x203233662e646461,0x6625202c38662509\n"
".quad 0x0a3b376625202c36,0x726168732e747309,0x09203233662e6465,0x5d302b346472255b\n"
".quad 0x240a3b386625202c,0x3833315f335f744c,0x726162090a3a3632,0x300920636e79732e\n"
".quad 0x752e766f6d090a3b,0x2c39722509203233,0x6573090a3b353120,0x33752e74672e7074\n"
".quad 0x202c347025092032,0x397225202c317225,0x2034702540090a3b,0x744c240920617262\n"
".quad 0x38333334315f335f,0x09636f6c2e090a3b,0x0a30093836093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x72255b202c396625,0x090a3b5d302b3464,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c303166,0x0a3b5d34362b3464,0x3233662e64646109\n"
".quad 0x202c313166250920,0x316625202c396625,0x732e7473090a3b30,0x33662e6465726168\n"
".quad 0x346472255b092032,0x316625202c5d302b,0x335f744c240a3b31,0x0a3a38333334315f\n"
".quad 0x6e79732e72616209,0x6d090a3b30092063,0x09203233752e766f,0x3b37202c30317225\n"
".quad 0x672e70746573090a,0x2509203233752e74,0x2c317225202c3570,0x090a3b3031722520\n"
".quad 0x6172622035702540,0x5f335f744c240920,0x090a3b3035383431,0x09363109636f6c2e\n"
".quad 0x646c090a30093936,0x2e6465726168732e,0x3166250920323366,0x346472255b202c32\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3166250920323366,0x346472255b202c33\n"
".quad 0x61090a3b5d32332b,0x09203233662e6464,0x6625202c34316625,0x33316625202c3231\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920,0x34316625202c5d30\n"
".quad 0x5f335f744c240a3b,0x090a3a3035383431,0x636e79732e726162,0x6f6d090a3b300920\n"
".quad 0x2509203233752e76,0x0a3b33202c313172,0x74672e7074657309,0x702509203233752e\n"
".quad 0x202c317225202c36,0x40090a3b31317225,0x2061726220367025,0x315f335f744c2409\n"
".quad 0x2e090a3b32363335,0x3709363109636f6c,0x2e646c090a300930,0x662e646572616873\n"
".quad 0x3531662509203233,0x2b346472255b202c,0x2e646c090a3b5d30,0x662e646572616873\n"
".quad 0x3631662509203233,0x2b346472255b202c,0x6461090a3b5d3631,0x2509203233662e64\n"
".quad 0x316625202c373166,0x3b36316625202c35,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x302b346472255b09,0x3b37316625202c5d,0x315f335f744c240a,0x62090a3a32363335\n"
".quad 0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e,0x090a3b31202c3231\n"
".quad 0x2e74672e70746573,0x3770250920323375,0x25202c317225202c,0x2540090a3b323172\n"
".quad 0x0920617262203770,0x35315f335f744c24,0x6c2e090a3b343738,0x313709363109636f\n"
".quad 0x732e646c090a3009,0x33662e6465726168,0x2c38316625092032,0x302b346472255b20\n"
".quad 0x732e646c090a3b5d,0x33662e6465726168,0x2c39316625092032,0x382b346472255b20\n"
".quad 0x2e646461090a3b5d,0x3266250920323366,0x2c38316625202c30,0x090a3b3931662520\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x240a3b3032662520\n"
".quad 0x3835315f335f744c,0x726162090a3a3437,0x300920636e79732e,0x752e766f6d090a3b\n"
".quad 0x3331722509203233,0x6573090a3b30202c,0x33752e71652e7074,0x202c387025092032\n"
".quad 0x317225202c317225,0x70252140090a3b33,0x2409206172622038,0x3336315f335f744c\n"
".quad 0x6f6c2e090a3b3638,0x0932370936310963,0x68732e646c090a30,0x3233662e64657261\n"
".quad 0x202c313266250920,0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261\n"
".quad 0x202c323266250920,0x5d342b346472255b,0x662e646461090a3b,0x3332662509203233\n"
".quad 0x202c31326625202c,0x73090a3b32326625,0x6465726168732e74,0x255b09203233662e\n"
".quad 0x202c5d302b346472,0x4c240a3b33326625,0x383336315f335f74,0x2e726162090a3a36\n"
".quad 0x3b300920636e7973,0x3109636f6c2e090a,0x0a30093330310936,0x6220387025214009\n"
".quad 0x5f744c2409206172,0x3b38393836315f33,0x3109636f6c2e090a,0x0a30093630310936\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x735b202c34326625,0x3b5d302b61746164\n"
".quad 0x7261702e646c090a,0x09203436752e6d61,0x5b202c3131647225,0x6170616475635f5f\n"
".quad 0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974,0x4531624c4534366a\n"
".quad 0x6a6650664b507645,0x617461646f5f675f,0x2e747663090a3b5d,0x203233752e343675\n"
".quad 0x202c323164722509,0x756d090a3b327225,0x752e656469772e6c,0x3164722509203233\n"
".quad 0x202c327225202c33,0x2e646461090a3b34,0x6472250920343675,0x31647225202c3431\n"
".quad 0x3331647225202c31,0x6c672e7473090a3b,0x3233662e6c61626f,0x34316472255b0920\n"
".quad 0x326625202c5d302b,0x335f744c240a3b34,0x0a3a38393836315f,0x363109636f6c2e09\n"
".quad 0x090a300935313109,0x4c240a3b74697865,0x5a5f5f646e655744,0x6563756465723531\n"
".quad 0x73615069746c754d,0x4c4534366a4c4973,0x664b507645453162,0x207d090a3a6a6650\n"
".quad 0x7235315a5f202f2f,0x6c754d6563756465,0x4c49737361506974,0x4531624c4534366a\n"
".quad 0x6a6650664b507645,0x72746e652e090a0a,0x657235315a5f2079,0x746c754d65637564\n"
".quad 0x6a4c497373615069,0x454531624c453233,0x206a6650664b5076,0x7261702e09090a28\n"
".quad 0x203436752e206d61,0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x4531624c4532336a,0x6a6650664b507645,0x61746164695f675f\n"
".quad 0x7261702e09090a2c,0x203436752e206d61,0x6170616475635f5f,0x7235315a5f5f6d72\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x4531624c4532336a,0x6a6650664b507645\n"
".quad 0x617461646f5f675f,0x7261702e09090a2c,0x203233752e206d61,0x6170616475635f5f\n"
".quad 0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974,0x4531624c4532336a\n"
".quad 0x6a6650664b507645,0x090a7b090a296e5f,0x31752e206765722e,0x3e333c6872252036\n"
".quad 0x206765722e090a3b,0x3c7225203233752e,0x722e090a3b3e3431,0x203436752e206765\n"
".quad 0x3b3e36313c647225,0x2e206765722e090a,0x323c662520323366,0x65722e090a3b3e33\n"
".quad 0x20646572702e2067,0x090a3b3e393c7025,0x09363109636f6c2e,0x4c240a3009323131\n"
".quad 0x35315a5f5f314242,0x754d656375646572,0x497373615069746c,0x31624c4532336a4c\n"
".quad 0x6650664b50764545,0x636f6c2e090a3a6a,0x3009363809363109,0x33752e747663090a\n"
".quad 0x2509203631752e32,0x64697425202c3172,0x766f6d090a3b782e,0x722509203436752e\n"
".quad 0x74616473202c3164,0x2e747663090a3b61,0x203233752e343675,0x25202c3264722509\n"
".quad 0x6c756d090a3b3172,0x33752e656469772e,0x2c33647225092032,0x3b34202c31722520\n"
".quad 0x36752e646461090a,0x2c34647225092034,0x25202c3164722520,0x6f6d090a3b336472\n"
".quad 0x2509203233662e76,0x30306630202c3166,0x203b303030303030,0x202f2f0920202020\n"
".quad 0x662e766f6d090a30,0x2c32662509203233,0x3030303030663020,0x202020203b303030\n"
".quad 0x090a30202f2f0920,0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225\n"
".quad 0x63090a3b32662520,0x752e3233752e7476,0x2c32722509203631,0x2e64696174632520\n"
".quad 0x326c756d090a3b78,0x3233752e6f6c2e34,0x25202c3372250920,0x0a3b3436202c3272\n"
".quad 0x3233752e64646109,0x25202c3472250920,0x3b317225202c3372,0x33732e766f6d090a\n"
".quad 0x202c357225092032,0x646c090a3b347225,0x752e6d617261702e,0x2c36722509203233\n"
".quad 0x616475635f5f5b20,0x315a5f5f6d726170,0x4d65637564657235,0x7373615069746c75\n"
".quad 0x624c4532336a4c49,0x50664b5076454531,0x090a3b5d6e5f6a66,0x2e65672e70746573\n"
".quad 0x3170250920323375,0x25202c347225202c,0x702540090a3b3672,0x2409206172622031\n"
".quad 0x3033315f345f744c,0x766f6d090a3b3835,0x722509203631752e,0x74636e25202c3168\n"
".quad 0x090a3b782e646961,0x656469772e6c756d,0x722509203631752e,0x2c31687225202c37\n"
".quad 0x7663090a3b343620,0x33752e3436732e74,0x2c35647225092032,0x6c090a3b37722520\n"
".quad 0x2e6d617261702e64,0x6472250920343675,0x75635f5f5b202c36,0x5f5f6d7261706164\n"
".quad 0x637564657235315a,0x615069746c754d65,0x4532336a4c497373,0x4b5076454531624c\n"
".quad 0x695f675f6a665066,0x090a3b5d61746164,0x2e3436752e747663,0x6472250920323375\n"
".quad 0x0a3b347225202c37,0x6469772e6c756d09,0x2509203233752e65,0x347225202c386472\n"
".quad 0x6461090a3b34202c,0x2509203436752e64,0x647225202c396472,0x3b38647225202c36\n"
".quad 0x69772e6c756d090a,0x09203233752e6564,0x25202c3031647225,0x240a3b34202c3772\n"
".quad 0x3533315f345f744c,0x3c2f2f200a3a3037,0x6f4c203e706f6f6c,0x2079646f6220706f\n"
".quad 0x2c363820656e696c,0x676e697473656e20,0x203a687470656420,0x6d69747365202c31\n"
".quad 0x6574692064657461,0x3a736e6f69746172,0x6e776f6e6b6e7520,0x3109636f6c2e090a\n"
".quad 0x090a300933390936,0x61626f6c672e646c,0x2509203233662e6c,0x6472255b202c3366\n"
".quad 0x61090a3b5d302b39,0x09203233662e6464,0x336625202c346625,0x090a3b316625202c\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x2e090a3b34662520\n"
".quad 0x3909363109636f6c,0x2e646c090a300936,0x662e6c61626f6c67,0x2c35662509203233\n"
".quad 0x312b396472255b20,0x6461090a3b5d3832,0x2509203233662e64,0x2c356625202c3166\n"
".quad 0x73090a3b34662520,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x6461090a3b316625,0x2509203233752e64,0x2c377225202c3572,0x61090a3b35722520\n"
".quad 0x09203436752e6464,0x7225202c39647225,0x31647225202c3964,0x636f6c2e090a3b30\n"
".quad 0x3009363809363109,0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c367225\n"
".quad 0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375,0x336a4c4973736150\n"
".quad 0x76454531624c4532,0x6e5f6a6650664b50,0x636f6c2e090a3b5d,0x3009363909363109\n"
".quad 0x6c2e70746573090a,0x2509203233752e74,0x2c357225202c3270,0x40090a3b36722520\n"
".quad 0x2061726220327025,0x315f345f744c2409,0x4c240a3b30373533,0x353033315f345f74\n"
".quad 0x636f6c2e090a3a38,0x3009373609363109,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x203233752e766f6d,0x3531202c38722509,0x2e70746573090a3b,0x09203233752e7467\n"
".quad 0x317225202c337025,0x090a3b387225202c,0x6172622033702540,0x5f345f744c240920\n"
".quad 0x090a3b3238303431,0x09363109636f6c2e,0x646c090a30093836,0x2e6465726168732e\n"
".quad 0x3666250920323366,0x2b346472255b202c,0x2e646c090a3b5d30,0x662e646572616873\n"
".quad 0x2c37662509203233,0x362b346472255b20,0x646461090a3b5d34,0x662509203233662e\n"
".quad 0x202c366625202c38,0x7473090a3b376625,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x5f744c240a3b3866,0x3a32383034315f34,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x203233752e766f6d,0x3b37202c39722509,0x672e70746573090a\n"
".quad 0x2509203233752e74,0x2c317225202c3470,0x40090a3b39722520,0x2061726220347025\n"
".quad 0x315f345f744c2409,0x2e090a3b34393534,0x3609363109636f6c,0x2e646c090a300939\n"
".quad 0x662e646572616873,0x2c39662509203233,0x302b346472255b20,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x2c30316625092032,0x332b346472255b20,0x646461090a3b5d32\n"
".quad 0x662509203233662e,0x2c396625202c3131,0x090a3b3031662520,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x2c5d302b34647225,0x240a3b3131662520,0x3534315f345f744c\n"
".quad 0x726162090a3a3439,0x300920636e79732e,0x752e766f6d090a3b,0x3031722509203233\n"
".quad 0x6573090a3b33202c,0x33752e74672e7074,0x202c357025092032,0x317225202c317225\n"
".quad 0x35702540090a3b30,0x4c24092061726220,0x303135315f345f74,0x636f6c2e090a3b36\n"
".quad 0x3009303709363109,0x6168732e646c090a,0x203233662e646572,0x5b202c3231662509\n"
".quad 0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572,0x5b202c3331662509\n"
".quad 0x5d36312b34647225,0x662e646461090a3b,0x3431662509203233,0x202c32316625202c\n"
".quad 0x73090a3b33316625,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x4c240a3b34316625,0x303135315f345f74,0x2e726162090a3a36,0x3b300920636e7973\n"
".quad 0x33752e766f6d090a,0x2c31317225092032,0x746573090a3b3120,0x3233752e74672e70\n"
".quad 0x25202c3670250920,0x31317225202c3172,0x2036702540090a3b,0x744c240920617262\n"
".quad 0x38313635315f345f,0x09636f6c2e090a3b,0x0a30093137093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c35316625,0x0a3b5d302b346472,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c36316625,0x0a3b5d382b346472,0x3233662e64646109\n"
".quad 0x202c373166250920,0x6625202c35316625,0x2e7473090a3b3631,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3731,0x3a38313635315f34\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d,0x30202c3231722509\n"
".quad 0x2e70746573090a3b,0x09203233752e7165,0x317225202c377025,0x0a3b32317225202c\n"
".quad 0x6220377025214009,0x5f744c2409206172,0x3b30333136315f34,0x3109636f6c2e090a\n"
".quad 0x090a300932370936,0x65726168732e646c,0x2509203233662e64,0x72255b202c383166\n"
".quad 0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64,0x72255b202c393166\n"
".quad 0x090a3b5d342b3464,0x203233662e646461,0x25202c3032662509,0x316625202c383166\n"
".quad 0x732e7473090a3b39,0x33662e6465726168,0x346472255b092032,0x326625202c5d302b\n"
".quad 0x345f744c240a3b30,0x0a3a30333136315f,0x6e79732e72616209,0x2e090a3b30092063\n"
".quad 0x3109363109636f6c,0x2140090a30093330,0x2061726220377025,0x315f345f744c2409\n"
".quad 0x2e090a3b32343636,0x3109363109636f6c,0x646c090a30093630,0x2e6465726168732e\n"
".quad 0x3266250920323366,0x746164735b202c31,0x6c090a3b5d302b61,0x2e6d617261702e64\n"
".quad 0x6472250920343675,0x635f5f5b202c3131,0x5f6d726170616475,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x32336a4c49737361,0x5076454531624c45,0x5f675f6a6650664b\n"
".quad 0x0a3b5d617461646f,0x3436752e74766309,0x722509203233752e,0x327225202c323164\n"
".quad 0x772e6c756d090a3b,0x203233752e656469,0x202c333164722509,0x0a3b34202c327225\n"
".quad 0x3436752e64646109,0x2c34316472250920,0x202c313164722520,0x090a3b3331647225\n"
".quad 0x61626f6c672e7473,0x5b09203233662e6c,0x5d302b3431647225,0x0a3b31326625202c\n"
".quad 0x36315f345f744c24,0x6c2e090a3a323436,0x313109363109636f,0x697865090a300935\n"
".quad 0x6557444c240a3b74,0x7235315a5f5f646e,0x6c754d6563756465,0x4c49737361506974\n"
".quad 0x4531624c4532336a,0x6a6650664b507645,0x202f2f207d090a3a,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x32336a4c49737361,0x5076454531624c45,0x090a0a6a6650664b\n"
".quad 0x5f207972746e652e,0x637564657235315a,0x615069746c754d65,0x4536316a4c497373\n"
".quad 0x4b5076454531624c,0x090a28206a665066,0x206d617261702e09,0x635f5f203436752e\n"
".quad 0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563,0x36316a4c49737361\n"
".quad 0x5076454531624c45,0x5f675f6a6650664b,0x090a2c6174616469,0x206d617261702e09\n"
".quad 0x635f5f203436752e,0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563\n"
".quad 0x36316a4c49737361,0x5076454531624c45,0x5f675f6a6650664b,0x090a2c617461646f\n"
".quad 0x206d617261702e09,0x635f5f203233752e,0x5f6d726170616475,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x36316a4c49737361,0x5076454531624c45,0x296e5f6a6650664b\n"
".quad 0x65722e090a7b090a,0x25203631752e2067,0x090a3b3e333c6872,0x33752e206765722e\n"
".quad 0x3e33313c72252032,0x206765722e090a3b,0x647225203436752e,0x2e090a3b3e36313c\n"
".quad 0x3233662e20676572,0x3b3e30323c662520,0x2e206765722e090a,0x3c70252064657270\n"
".quad 0x6f6c2e090a3b3e38,0x3231310936310963,0x3142424c240a3009,0x64657235315a5f5f\n"
".quad 0x69746c754d656375,0x316a4c4973736150,0x76454531624c4536,0x0a3a6a6650664b50\n"
".quad 0x363109636f6c2e09,0x63090a3009363809,0x752e3233752e7476,0x2c31722509203631\n"
".quad 0x3b782e6469742520,0x36752e766f6d090a,0x2c31647225092034,0x0a3b617461647320\n"
".quad 0x3436752e74766309,0x722509203233752e,0x3b317225202c3264,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x7225202c33647225,0x61090a3b34202c31,0x09203436752e6464\n"
".quad 0x7225202c34647225,0x33647225202c3164,0x662e766f6d090a3b,0x2c31662509203233\n"
".quad 0x3030303030663020,0x202020203b303030,0x090a30202f2f0920,0x203233662e766f6d\n"
".quad 0x6630202c32662509,0x3030303030303030,0x2f0920202020203b,0x2e7473090a30202f\n"
".quad 0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34,0x2e747663090a3b32\n"
".quad 0x203631752e323375,0x6325202c32722509,0x0a3b782e64696174,0x6c2e34326c756d09\n"
".quad 0x2509203233752e6f,0x2c327225202c3372,0x6461090a3b323320,0x2509203233752e64\n"
".quad 0x2c337225202c3472,0x6d090a3b31722520,0x09203233732e766f,0x347225202c357225\n"
".quad 0x61702e646c090a3b,0x203233752e6d6172,0x5f5b202c36722509,0x726170616475635f\n"
".quad 0x657235315a5f5f6d,0x746c754d65637564,0x6a4c497373615069,0x454531624c453631\n"
".quad 0x5f6a6650664b5076,0x746573090a3b5d6e,0x3233752e65672e70,0x25202c3170250920\n"
".quad 0x3b367225202c3472,0x622031702540090a,0x5f744c2409206172,0x3b34313333315f35\n"
".quad 0x31752e766f6d090a,0x2c31687225092036,0x64696174636e2520,0x6c756d090a3b782e\n"
".quad 0x31752e656469772e,0x202c377225092036,0x3233202c31687225,0x732e747663090a3b\n"
".quad 0x09203233752e3436,0x7225202c35647225,0x702e646c090a3b37,0x3436752e6d617261\n"
".quad 0x202c366472250920,0x70616475635f5f5b,0x35315a5f5f6d7261,0x754d656375646572\n"
".quad 0x497373615069746c,0x31624c4536316a4c,0x6650664b50764545,0x746164695f675f6a\n"
".quad 0x747663090a3b5d61,0x3233752e3436752e,0x202c376472250920,0x756d090a3b347225\n"
".quad 0x752e656469772e6c,0x3864722509203233,0x34202c347225202c,0x752e646461090a3b\n"
".quad 0x3964722509203436,0x202c36647225202c,0x6d090a3b38647225,0x2e656469772e6c75\n"
".quad 0x6472250920323375,0x2c377225202c3031,0x5f744c240a3b3420,0x3a36323833315f35\n"
".quad 0x6f6f6c3c2f2f200a,0x20706f6f4c203e70,0x6e696c2079646f62,0x656e202c36382065\n"
".quad 0x656420676e697473,0x202c31203a687470,0x6574616d69747365,0x7461726574692064\n"
".quad 0x6e75203a736e6f69,0x2e090a6e776f6e6b,0x3909363109636f6c,0x2e646c090a300933\n"
".quad 0x662e6c61626f6c67,0x2c33662509203233,0x302b396472255b20,0x2e646461090a3b5d\n"
".quad 0x3466250920323366,0x25202c336625202c,0x2e7473090a3b3166,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x636f6c2e090a3b34,0x3009363909363109\n"
".quad 0x6f6c672e646c090a,0x203233662e6c6162,0x255b202c35662509,0x3b5d34362b396472\n"
".quad 0x33662e646461090a,0x202c316625092032,0x346625202c356625,0x68732e7473090a3b\n"
".quad 0x3233662e64657261,0x2b346472255b0920,0x3b316625202c5d30,0x33752e646461090a\n"
".quad 0x202c357225092032,0x357225202c377225,0x752e646461090a3b,0x3964722509203436\n"
".quad 0x202c39647225202c,0x090a3b3031647225,0x09363109636f6c2e,0x646c090a30093638\n"
".quad 0x752e6d617261702e,0x2c36722509203233,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x624c4536316a4c49,0x50664b5076454531\n"
".quad 0x090a3b5d6e5f6a66,0x09363109636f6c2e,0x6573090a30093639,0x33752e746c2e7074\n"
".quad 0x202c327025092032,0x367225202c357225,0x2032702540090a3b,0x744c240920617262\n"
".quad 0x36323833315f355f,0x5f355f744c240a3b,0x090a3a3431333331,0x09363109636f6c2e\n"
".quad 0x6162090a30093836,0x0920636e79732e72,0x2e766f6d090a3b30,0x3872250920323375\n"
".quad 0x6573090a3b37202c,0x33752e74672e7074,0x202c337025092032,0x387225202c317225\n"
".quad 0x2033702540090a3b,0x744c240920617262,0x38333334315f355f,0x09636f6c2e090a3b\n"
".quad 0x0a30093936093631,0x726168732e646c09,0x09203233662e6465,0x72255b202c366625\n"
".quad 0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64,0x6472255b202c3766\n"
".quad 0x090a3b5d32332b34,0x203233662e646461,0x6625202c38662509,0x0a3b376625202c36\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x240a3b386625202c\n"
".quad 0x3334315f355f744c,0x726162090a3a3833,0x300920636e79732e,0x752e766f6d090a3b\n"
".quad 0x2c39722509203233,0x746573090a3b3320,0x3233752e74672e70,0x25202c3470250920\n"
".quad 0x3b397225202c3172,0x622034702540090a,0x5f744c2409206172,0x3b30353834315f35\n"
".quad 0x3109636f6c2e090a,0x090a300930370936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x6472255b202c3966,0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3031,0x090a3b5d36312b34,0x203233662e646461,0x25202c3131662509\n"
".quad 0x30316625202c3966,0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920\n"
".quad 0x31316625202c5d30,0x5f355f744c240a3b,0x090a3a3035383431,0x636e79732e726162\n"
".quad 0x6f6d090a3b300920,0x2509203233752e76,0x0a3b31202c303172,0x74672e7074657309\n"
".quad 0x702509203233752e,0x202c317225202c35,0x40090a3b30317225,0x2061726220357025\n"
".quad 0x315f355f744c2409,0x2e090a3b32363335,0x3709363109636f6c,0x2e646c090a300931\n"
".quad 0x662e646572616873,0x3231662509203233,0x2b346472255b202c,0x2e646c090a3b5d30\n"
".quad 0x662e646572616873,0x3331662509203233,0x2b346472255b202c,0x646461090a3b5d38\n"
".quad 0x662509203233662e,0x32316625202c3431,0x0a3b33316625202c,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x0a3b34316625202c,0x35315f355f744c24\n"
".quad 0x6162090a3a323633,0x0920636e79732e72,0x2e766f6d090a3b30,0x3172250920323375\n"
".quad 0x73090a3b30202c31,0x752e71652e707465,0x2c36702509203233,0x7225202c31722520\n"
".quad 0x252140090a3b3131,0x0920617262203670,0x35315f355f744c24,0x6c2e090a3b343738\n"
".quad 0x323709363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c35316625092032\n"
".quad 0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168,0x2c36316625092032\n"
".quad 0x342b346472255b20,0x2e646461090a3b5d,0x3166250920323366,0x2c35316625202c37\n"
".quad 0x090a3b3631662520,0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225\n"
".quad 0x240a3b3731662520,0x3835315f355f744c,0x726162090a3a3437,0x300920636e79732e\n"
".quad 0x09636f6c2e090a3b,0x3009333031093631,0x203670252140090a,0x744c240920617262\n"
".quad 0x36383336315f355f,0x09636f6c2e090a3b,0x3009363031093631,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3831662509,0x5d302b6174616473,0x61702e646c090a3b\n"
".quad 0x203436752e6d6172,0x202c313164722509,0x70616475635f5f5b,0x35315a5f5f6d7261\n"
".quad 0x754d656375646572,0x497373615069746c,0x31624c4536316a4c,0x6650664b50764545\n"
".quad 0x7461646f5f675f6a,0x747663090a3b5d61,0x3233752e3436752e,0x2c32316472250920\n"
".quad 0x6d090a3b32722520,0x2e656469772e6c75,0x6472250920323375,0x2c327225202c3331\n"
".quad 0x646461090a3b3420,0x722509203436752e,0x647225202c343164,0x31647225202c3131\n"
".quad 0x672e7473090a3b33,0x33662e6c61626f6c,0x316472255b092032,0x6625202c5d302b34\n"
".quad 0x5f744c240a3b3831,0x3a36383336315f35,0x3109636f6c2e090a,0x0a30093531310936\n"
".quad 0x240a3b7469786509,0x5f5f646e6557444c,0x637564657235315a,0x615069746c754d65\n"
".quad 0x4536316a4c497373,0x4b5076454531624c,0x7d090a3a6a665066,0x35315a5f202f2f20\n"
".quad 0x754d656375646572,0x497373615069746c,0x31624c4536316a4c,0x6650664b50764545\n"
".quad 0x746e652e090a0a6a,0x7235315a5f207972,0x6c754d6563756465,0x4c49737361506974\n"
".quad 0x454531624c45386a,0x206a6650664b5076,0x7261702e09090a28,0x203436752e206d61\n"
".quad 0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974\n"
".quad 0x454531624c45386a,0x5f6a6650664b5076,0x2c61746164695f67,0x617261702e09090a\n"
".quad 0x5f203436752e206d,0x726170616475635f,0x657235315a5f5f6d,0x746c754d65637564\n"
".quad 0x6a4c497373615069,0x76454531624c4538,0x675f6a6650664b50,0x0a2c617461646f5f\n"
".quad 0x6d617261702e0909,0x5f5f203233752e20,0x6d72617061647563,0x64657235315a5f5f\n"
".quad 0x69746c754d656375,0x386a4c4973736150,0x5076454531624c45,0x296e5f6a6650664b\n"
".quad 0x65722e090a7b090a,0x25203631752e2067,0x090a3b3e333c6872,0x33752e206765722e\n"
".quad 0x3e32313c72252032,0x206765722e090a3b,0x647225203436752e,0x2e090a3b3e36313c\n"
".quad 0x3233662e20676572,0x3b3e37313c662520,0x2e206765722e090a,0x3c70252064657270\n"
".quad 0x6f6c2e090a3b3e37,0x3231310936310963,0x3142424c240a3009,0x64657235315a5f5f\n"
".quad 0x69746c754d656375,0x386a4c4973736150,0x5076454531624c45,0x090a3a6a6650664b\n"
".quad 0x09363109636f6c2e,0x7663090a30093638,0x31752e3233752e74,0x202c317225092036\n"
".quad 0x0a3b782e64697425,0x3436752e766f6d09,0x202c316472250920,0x090a3b6174616473\n"
".quad 0x2e3436752e747663,0x6472250920323375,0x0a3b317225202c32,0x6469772e6c756d09\n"
".quad 0x2509203233752e65,0x317225202c336472,0x6461090a3b34202c,0x2509203436752e64\n"
".quad 0x647225202c346472,0x3b33647225202c31,0x33662e766f6d090a,0x202c316625092032\n"
".quad 0x3030303030306630,0x20202020203b3030,0x6d090a30202f2f09,0x09203233662e766f\n"
".quad 0x306630202c326625,0x3b30303030303030,0x2f2f092020202020,0x732e7473090a3020\n"
".quad 0x33662e6465726168,0x346472255b092032,0x326625202c5d302b,0x752e747663090a3b\n"
".quad 0x09203631752e3233,0x746325202c327225,0x090a3b782e646961,0x6f6c2e34326c756d\n"
".quad 0x722509203233752e,0x202c327225202c33,0x646461090a3b3631,0x722509203233752e\n"
".quad 0x202c337225202c34,0x6f6d090a3b317225,0x2509203233732e76,0x3b347225202c3572\n"
".quad 0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c367225,0x6d72617061647563\n"
".quad 0x64657235315a5f5f,0x69746c754d656375,0x386a4c4973736150,0x5076454531624c45\n"
".quad 0x5d6e5f6a6650664b,0x2e70746573090a3b,0x09203233752e6567,0x347225202c317025\n"
".quad 0x090a3b367225202c,0x6172622031702540,0x5f365f744c240920,0x090a3b3037353331\n"
".quad 0x203631752e766f6d,0x25202c3168722509,0x782e64696174636e,0x772e6c756d090a3b\n"
".quad 0x203631752e656469,0x7225202c37722509,0x0a3b3631202c3168,0x3436732e74766309\n"
".quad 0x722509203233752e,0x3b377225202c3564,0x7261702e646c090a,0x09203436752e6d61\n"
".quad 0x5f5b202c36647225,0x726170616475635f,0x657235315a5f5f6d,0x746c754d65637564\n"
".quad 0x6a4c497373615069,0x76454531624c4538,0x675f6a6650664b50,0x3b5d61746164695f\n"
".quad 0x36752e747663090a,0x2509203233752e34,0x347225202c376472,0x772e6c756d090a3b\n"
".quad 0x203233752e656469,0x25202c3864722509,0x090a3b34202c3472,0x203436752e646461\n"
".quad 0x25202c3964722509,0x647225202c366472,0x2e6c756d090a3b38,0x3233752e65646977\n"
".quad 0x2c30316472250920,0x3b34202c37722520,0x315f365f744c240a,0x2f200a3a32383034\n"
".quad 0x203e706f6f6c3c2f,0x646f6220706f6f4c,0x3820656e696c2079,0x697473656e202c36\n"
".quad 0x687470656420676e,0x747365202c31203a,0x6920646574616d69,0x6e6f697461726574\n"
".quad 0x6f6e6b6e75203a73,0x636f6c2e090a6e77,0x3009333909363109,0x6f6c672e646c090a\n"
".quad 0x203233662e6c6162,0x255b202c33662509,0x0a3b5d302b396472,0x3233662e64646109\n"
".quad 0x25202c3466250920,0x3b316625202c3366,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x302b346472255b09,0x0a3b346625202c5d,0x363109636f6c2e09,0x6c090a3009363909\n"
".quad 0x6c61626f6c672e64,0x662509203233662e,0x396472255b202c35,0x61090a3b5d32332b\n"
".quad 0x09203233662e6464,0x356625202c316625,0x090a3b346625202c,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x2c5d302b34647225,0x61090a3b31662520,0x09203233752e6464\n"
".quad 0x377225202c357225,0x090a3b357225202c,0x203436752e646461,0x25202c3964722509\n"
".quad 0x647225202c396472,0x6f6c2e090a3b3031,0x0936380936310963,0x61702e646c090a30\n"
".quad 0x203233752e6d6172,0x5f5b202c36722509,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x76454531624c4538,0x6e5f6a6650664b50\n"
".quad 0x636f6c2e090a3b5d,0x3009363909363109,0x6c2e70746573090a,0x2509203233752e74\n"
".quad 0x2c357225202c3270,0x40090a3b36722520,0x2061726220327025,0x315f365f744c2409\n"
".quad 0x4c240a3b32383034,0x373533315f365f74,0x636f6c2e090a3a30,0x3009393609363109\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d,0x3b33202c38722509\n"
".quad 0x672e70746573090a,0x2509203233752e74,0x2c317225202c3370,0x40090a3b38722520\n"
".quad 0x2061726220337025,0x315f365f744c2409,0x2e090a3b34393534,0x3709363109636f6c\n"
".quad 0x2e646c090a300930,0x662e646572616873,0x2c36662509203233,0x302b346472255b20\n"
".quad 0x732e646c090a3b5d,0x33662e6465726168,0x202c376625092032,0x36312b346472255b\n"
".quad 0x2e646461090a3b5d,0x3866250920323366,0x25202c366625202c,0x2e7473090a3b3766\n"
".quad 0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34,0x365f744c240a3b38\n"
".quad 0x0a3a34393534315f,0x6e79732e72616209,0x6d090a3b30092063,0x09203233752e766f\n"
".quad 0x0a3b31202c397225,0x74672e7074657309,0x702509203233752e,0x202c317225202c34\n"
".quad 0x2540090a3b397225,0x0920617262203470,0x35315f365f744c24,0x6c2e090a3b363031\n"
".quad 0x313709363109636f,0x732e646c090a3009,0x33662e6465726168,0x202c396625092032\n"
".quad 0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261,0x202c303166250920\n"
".quad 0x5d382b346472255b,0x662e646461090a3b,0x3131662509203233,0x25202c396625202c\n"
".quad 0x7473090a3b303166,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x744c240a3b313166,0x36303135315f365f,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x3233752e766f6d09,0x202c303172250920,0x70746573090a3b30,0x203233752e71652e\n"
".quad 0x7225202c35702509,0x3b30317225202c31,0x203570252140090a,0x744c240920617262\n"
".quad 0x38313635315f365f,0x09636f6c2e090a3b,0x0a30093237093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c32316625,0x0a3b5d302b346472,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c33316625,0x0a3b5d342b346472,0x3233662e64646109\n"
".quad 0x202c343166250920,0x6625202c32316625,0x2e7473090a3b3331,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3431,0x3a38313635315f36\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x09363109636f6c2e,0x40090a3009333031\n"
".quad 0x6172622035702521,0x5f365f744c240920,0x090a3b3033313631,0x09363109636f6c2e\n"
".quad 0x6c090a3009363031,0x6465726168732e64,0x662509203233662e,0x6164735b202c3531\n"
".quad 0x090a3b5d302b6174,0x6d617261702e646c,0x722509203436752e,0x5f5f5b202c313164\n"
".quad 0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375,0x386a4c4973736150\n"
".quad 0x5076454531624c45,0x5f675f6a6650664b,0x0a3b5d617461646f,0x3436752e74766309\n"
".quad 0x722509203233752e,0x327225202c323164,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x202c333164722509,0x0a3b34202c327225,0x3436752e64646109,0x2c34316472250920\n"
".quad 0x202c313164722520,0x090a3b3331647225,0x61626f6c672e7473,0x5b09203233662e6c\n"
".quad 0x5d302b3431647225,0x0a3b35316625202c,0x36315f365f744c24,0x6c2e090a3a303331\n"
".quad 0x313109363109636f,0x697865090a300935,0x6557444c240a3b74,0x7235315a5f5f646e\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x454531624c45386a,0x3a6a6650664b5076\n"
".quad 0x5f202f2f207d090a,0x637564657235315a,0x615069746c754d65,0x4c45386a4c497373\n"
".quad 0x664b507645453162,0x652e090a0a6a6650,0x315a5f207972746e,0x4d65637564657235\n"
".quad 0x7373615069746c75,0x31624c45346a4c49,0x6650664b50764545,0x702e09090a28206a\n"
".quad 0x36752e206d617261,0x616475635f5f2034,0x315a5f5f6d726170,0x4d65637564657235\n"
".quad 0x7373615069746c75,0x31624c45346a4c49,0x6650664b50764545,0x746164695f675f6a\n"
".quad 0x61702e09090a2c61,0x3436752e206d6172,0x70616475635f5f20,0x35315a5f5f6d7261\n"
".quad 0x754d656375646572,0x497373615069746c,0x4531624c45346a4c,0x6a6650664b507645\n"
".quad 0x617461646f5f675f,0x7261702e09090a2c,0x203233752e206d61,0x6170616475635f5f\n"
".quad 0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974,0x454531624c45346a\n"
".quad 0x5f6a6650664b5076,0x2e090a7b090a296e,0x3631752e20676572,0x3b3e333c68722520\n"
".quad 0x2e206765722e090a,0x313c722520323375,0x65722e090a3b3e31,0x25203436752e2067\n"
".quad 0x0a3b3e36313c6472,0x662e206765722e09,0x34313c6625203233,0x6765722e090a3b3e\n"
".quad 0x2520646572702e20,0x2e090a3b3e363c70,0x3109363109636f6c,0x424c240a30093231\n"
".quad 0x7235315a5f5f3142,0x6c754d6563756465,0x4c49737361506974,0x454531624c45346a\n"
".quad 0x3a6a6650664b5076,0x3109636f6c2e090a,0x090a300936380936,0x2e3233752e747663\n"
".quad 0x3172250920363175,0x782e64697425202c,0x752e766f6d090a3b,0x3164722509203436\n"
".quad 0x3b6174616473202c,0x36752e747663090a,0x2509203233752e34,0x317225202c326472\n"
".quad 0x772e6c756d090a3b,0x203233752e656469,0x25202c3364722509,0x090a3b34202c3172\n"
".quad 0x203436752e646461,0x25202c3464722509,0x647225202c316472,0x2e766f6d090a3b33\n"
".quad 0x3166250920323366,0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020\n"
".quad 0x3233662e766f6d09,0x30202c3266250920,0x3030303030303066,0x0920202020203b30\n"
".quad 0x7473090a30202f2f,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x747663090a3b3266,0x3631752e3233752e,0x25202c3272250920,0x3b782e6469617463\n"
".quad 0x2e34326c756d090a,0x09203233752e6f6c,0x327225202c337225,0x6461090a3b38202c\n"
".quad 0x2509203233752e64,0x2c337225202c3472,0x6d090a3b31722520,0x09203233732e766f\n"
".quad 0x347225202c357225,0x61702e646c090a3b,0x203233752e6d6172,0x5f5b202c36722509\n"
".quad 0x726170616475635f,0x657235315a5f5f6d,0x746c754d65637564,0x6a4c497373615069\n"
".quad 0x76454531624c4534,0x6e5f6a6650664b50,0x70746573090a3b5d,0x203233752e65672e\n"
".quad 0x7225202c31702509,0x0a3b367225202c34,0x7262203170254009,0x375f744c24092061\n"
".quad 0x0a3b36323833315f,0x3631752e766f6d09,0x202c316872250920,0x2e64696174636e25\n"
".quad 0x2e6c756d090a3b78,0x3631752e65646977,0x25202c3772250920,0x0a3b38202c316872\n"
".quad 0x3436732e74766309,0x722509203233752e,0x3b377225202c3564,0x7261702e646c090a\n"
".quad 0x09203436752e6d61,0x5f5b202c36647225,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x76454531624c4534,0x675f6a6650664b50\n"
".quad 0x3b5d61746164695f,0x36752e747663090a,0x2509203233752e34,0x347225202c376472\n"
".quad 0x772e6c756d090a3b,0x203233752e656469,0x25202c3864722509,0x090a3b34202c3472\n"
".quad 0x203436752e646461,0x25202c3964722509,0x647225202c366472,0x2e6c756d090a3b38\n"
".quad 0x3233752e65646977,0x2c30316472250920,0x3b34202c37722520,0x315f375f744c240a\n"
".quad 0x2f200a3a38333334,0x203e706f6f6c3c2f,0x646f6220706f6f4c,0x3820656e696c2079\n"
".quad 0x697473656e202c36,0x687470656420676e,0x747365202c31203a,0x6920646574616d69\n"
".quad 0x6e6f697461726574,0x6f6e6b6e75203a73,0x636f6c2e090a6e77,0x3009333909363109\n"
".quad 0x6f6c672e646c090a,0x203233662e6c6162,0x255b202c33662509,0x0a3b5d302b396472\n"
".quad 0x3233662e64646109,0x25202c3466250920,0x3b316625202c3366,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x302b346472255b09,0x0a3b346625202c5d,0x363109636f6c2e09\n"
".quad 0x6c090a3009363909,0x6c61626f6c672e64,0x662509203233662e,0x396472255b202c35\n"
".quad 0x61090a3b5d36312b,0x09203233662e6464,0x356625202c316625,0x090a3b346625202c\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x61090a3b31662520\n"
".quad 0x09203233752e6464,0x377225202c357225,0x090a3b357225202c,0x203436752e646461\n"
".quad 0x25202c3964722509,0x647225202c396472,0x6f6c2e090a3b3031,0x0936380936310963\n"
".quad 0x61702e646c090a30,0x203233752e6d6172,0x5f5b202c36722509,0x726170616475635f\n"
".quad 0x657235315a5f5f6d,0x746c754d65637564,0x6a4c497373615069,0x76454531624c4534\n"
".quad 0x6e5f6a6650664b50,0x636f6c2e090a3b5d,0x3009363909363109,0x6c2e70746573090a\n"
".quad 0x2509203233752e74,0x2c357225202c3270,0x40090a3b36722520,0x2061726220327025\n"
".quad 0x315f375f744c2409,0x4c240a3b38333334,0x323833315f375f74,0x636f6c2e090a3a36\n"
".quad 0x3009303709363109,0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d\n"
".quad 0x3b31202c38722509,0x672e70746573090a,0x2509203233752e74,0x2c317225202c3370\n"
".quad 0x40090a3b38722520,0x2061726220337025,0x315f375f744c2409,0x2e090a3b30353834\n"
".quad 0x3709363109636f6c,0x2e646c090a300931,0x662e646572616873,0x2c36662509203233\n"
".quad 0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168,0x202c376625092032\n"
".quad 0x5d382b346472255b,0x662e646461090a3b,0x2c38662509203233,0x6625202c36662520\n"
".quad 0x732e7473090a3b37,0x33662e6465726168,0x346472255b092032,0x386625202c5d302b\n"
".quad 0x5f375f744c240a3b,0x090a3a3035383431,0x636e79732e726162,0x6f6d090a3b300920\n"
".quad 0x2509203233752e76,0x090a3b30202c3972,0x2e71652e70746573,0x3470250920323375\n"
".quad 0x25202c317225202c,0x252140090a3b3972,0x0920617262203470,0x35315f375f744c24\n"
".quad 0x6c2e090a3b323633,0x323709363109636f,0x732e646c090a3009,0x33662e6465726168\n"
".quad 0x202c396625092032,0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261\n"
".quad 0x202c303166250920,0x5d342b346472255b,0x662e646461090a3b,0x3131662509203233\n"
".quad 0x25202c396625202c,0x7473090a3b303166,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x744c240a3b313166,0x32363335315f375f,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x363109636f6c2e09,0x090a300933303109,0x7262203470252140\n"
".quad 0x375f744c24092061,0x0a3b34373835315f,0x363109636f6c2e09,0x090a300936303109\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x64735b202c323166,0x0a3b5d302b617461\n"
".quad 0x617261702e646c09,0x2509203436752e6d,0x5f5b202c31316472,0x726170616475635f\n"
".quad 0x657235315a5f5f6d,0x746c754d65637564,0x6a4c497373615069,0x76454531624c4534\n"
".quad 0x675f6a6650664b50,0x3b5d617461646f5f,0x36752e747663090a,0x2509203233752e34\n"
".quad 0x7225202c32316472,0x2e6c756d090a3b32,0x3233752e65646977,0x2c33316472250920\n"
".quad 0x3b34202c32722520,0x36752e646461090a,0x3431647225092034,0x2c3131647225202c\n"
".quad 0x0a3b333164722520,0x626f6c672e747309,0x09203233662e6c61,0x302b34316472255b\n"
".quad 0x3b32316625202c5d,0x315f375f744c240a,0x2e090a3a34373835,0x3109363109636f6c\n"
".quad 0x7865090a30093531,0x57444c240a3b7469,0x35315a5f5f646e65,0x754d656375646572\n"
".quad 0x497373615069746c,0x4531624c45346a4c,0x6a6650664b507645,0x202f2f207d090a3a\n"
".quad 0x7564657235315a5f,0x5069746c754d6563,0x45346a4c49737361,0x4b5076454531624c\n"
".quad 0x2e090a0a6a665066,0x5a5f207972746e65,0x6563756465723531,0x73615069746c754d\n"
".quad 0x624c45326a4c4973,0x50664b5076454531,0x2e09090a28206a66,0x752e206d61726170\n"
".quad 0x6475635f5f203436,0x5a5f5f6d72617061,0x6563756465723531,0x73615069746c754d\n"
".quad 0x624c45326a4c4973,0x50664b5076454531,0x6164695f675f6a66,0x702e09090a2c6174\n"
".quad 0x36752e206d617261,0x616475635f5f2034,0x315a5f5f6d726170,0x4d65637564657235\n"
".quad 0x7373615069746c75,0x31624c45326a4c49,0x6650664b50764545,0x7461646f5f675f6a\n"
".quad 0x61702e09090a2c61,0x3233752e206d6172,0x70616475635f5f20,0x35315a5f5f6d7261\n"
".quad 0x754d656375646572,0x497373615069746c,0x4531624c45326a4c,0x6a6650664b507645\n"
".quad 0x090a7b090a296e5f,0x31752e206765722e,0x3e333c6872252036,0x206765722e090a3b\n"
".quad 0x3c7225203233752e,0x722e090a3b3e3031,0x203436752e206765,0x3b3e36313c647225\n"
".quad 0x2e206765722e090a,0x313c662520323366,0x65722e090a3b3e31,0x20646572702e2067\n"
".quad 0x090a3b3e353c7025,0x09363109636f6c2e,0x4c240a3009323131,0x35315a5f5f314242\n"
".quad 0x754d656375646572,0x497373615069746c,0x4531624c45326a4c,0x6a6650664b507645\n"
".quad 0x09636f6c2e090a3a,0x0a30093638093631,0x3233752e74766309,0x722509203631752e\n"
".quad 0x2e64697425202c31,0x2e766f6d090a3b78,0x6472250920343675,0x6174616473202c31\n"
".quad 0x752e747663090a3b,0x09203233752e3436,0x7225202c32647225,0x2e6c756d090a3b31\n"
".quad 0x3233752e65646977,0x202c336472250920,0x0a3b34202c317225,0x3436752e64646109\n"
".quad 0x202c346472250920,0x7225202c31647225,0x766f6d090a3b3364,0x662509203233662e\n"
".quad 0x3030306630202c31,0x20203b3030303030,0x30202f2f09202020,0x33662e766f6d090a\n"
".quad 0x202c326625092032,0x3030303030306630,0x20202020203b3030,0x73090a30202f2f09\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472,0x7663090a3b326625\n"
".quad 0x31752e3233752e74,0x202c327225092036,0x782e646961746325,0x34326c756d090a3b\n"
".quad 0x203233752e6f6c2e,0x7225202c33722509,0x61090a3b34202c32,0x09203233752e6464\n"
".quad 0x337225202c347225,0x090a3b317225202c,0x203233732e766f6d,0x7225202c35722509\n"
".quad 0x702e646c090a3b34,0x3233752e6d617261,0x5b202c3672250920,0x6170616475635f5f\n"
".quad 0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974,0x454531624c45326a\n"
".quad 0x5f6a6650664b5076,0x746573090a3b5d6e,0x3233752e65672e70,0x25202c3170250920\n"
".quad 0x3b367225202c3472,0x622031702540090a,0x5f744c2409206172,0x3b32383034315f38\n"
".quad 0x31752e766f6d090a,0x2c31687225092036,0x64696174636e2520,0x6c756d090a3b782e\n"
".quad 0x31752e656469772e,0x202c377225092036,0x3b34202c31687225,0x36732e747663090a\n"
".quad 0x2509203233752e34,0x377225202c356472,0x61702e646c090a3b,0x203436752e6d6172\n"
".quad 0x5b202c3664722509,0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x454531624c45326a,0x5f6a6650664b5076,0x5d61746164695f67\n"
".quad 0x752e747663090a3b,0x09203233752e3436,0x7225202c37647225,0x2e6c756d090a3b34\n"
".quad 0x3233752e65646977,0x202c386472250920,0x0a3b34202c347225,0x3436752e64646109\n"
".quad 0x202c396472250920,0x7225202c36647225,0x6c756d090a3b3864,0x33752e656469772e\n"
".quad 0x3031647225092032,0x34202c377225202c,0x5f385f744c240a3b,0x200a3a3439353431\n"
".quad 0x3e706f6f6c3c2f2f,0x6f6220706f6f4c20,0x20656e696c207964,0x7473656e202c3638\n"
".quad 0x7470656420676e69,0x7365202c31203a68,0x20646574616d6974,0x6f69746172657469\n"
".quad 0x6e6b6e75203a736e,0x6f6c2e090a6e776f,0x0933390936310963,0x6c672e646c090a30\n"
".quad 0x3233662e6c61626f,0x5b202c3366250920,0x3b5d302b39647225,0x33662e646461090a\n"
".quad 0x202c346625092032,0x316625202c336625,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x2b346472255b0920,0x3b346625202c5d30,0x3109636f6c2e090a,0x090a300936390936\n"
".quad 0x61626f6c672e646c,0x2509203233662e6c,0x6472255b202c3566,0x61090a3b5d382b39\n"
".quad 0x09203233662e6464,0x356625202c316625,0x090a3b346625202c,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x2c5d302b34647225,0x61090a3b31662520,0x09203233752e6464\n"
".quad 0x377225202c357225,0x090a3b357225202c,0x203436752e646461,0x25202c3964722509\n"
".quad 0x647225202c396472,0x6f6c2e090a3b3031,0x0936380936310963,0x61702e646c090a30\n"
".quad 0x203233752e6d6172,0x5f5b202c36722509,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x76454531624c4532,0x6e5f6a6650664b50\n"
".quad 0x636f6c2e090a3b5d,0x3009363909363109,0x6c2e70746573090a,0x2509203233752e74\n"
".quad 0x2c357225202c3270,0x40090a3b36722520,0x2061726220327025,0x315f385f744c2409\n"
".quad 0x4c240a3b34393534,0x383034315f385f74,0x636f6c2e090a3a32,0x3009313709363109\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d,0x3b30202c38722509\n"
".quad 0x652e70746573090a,0x2509203233752e71,0x2c317225202c3370,0x40090a3b38722520\n"
".quad 0x6172622033702521,0x5f385f744c240920,0x090a3b3630313531,0x09363109636f6c2e\n"
".quad 0x646c090a30093237,0x2e6465726168732e,0x3666250920323366,0x2b346472255b202c\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x2c37662509203233,0x342b346472255b20\n"
".quad 0x2e646461090a3b5d,0x3866250920323366,0x25202c366625202c,0x2e7473090a3b3766\n"
".quad 0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34,0x385f744c240a3b38\n"
".quad 0x0a3a36303135315f,0x6e79732e72616209,0x2e090a3b30092063,0x3109363109636f6c\n"
".quad 0x2140090a30093330,0x2061726220337025,0x315f385f744c2409,0x2e090a3b38313635\n"
".quad 0x3109363109636f6c,0x646c090a30093630,0x2e6465726168732e,0x3966250920323366\n"
".quad 0x61746164735b202c,0x646c090a3b5d302b,0x752e6d617261702e,0x3164722509203436\n"
".quad 0x75635f5f5b202c31,0x5f5f6d7261706164,0x637564657235315a,0x615069746c754d65\n"
".quad 0x4c45326a4c497373,0x664b507645453162,0x646f5f675f6a6650,0x63090a3b5d617461\n"
".quad 0x752e3436752e7476,0x3164722509203233,0x0a3b327225202c32,0x6469772e6c756d09\n"
".quad 0x2509203233752e65,0x7225202c33316472,0x61090a3b34202c32,0x09203436752e6464\n"
".quad 0x25202c3431647225,0x7225202c31316472,0x7473090a3b333164,0x2e6c61626f6c672e\n"
".quad 0x72255b0920323366,0x202c5d302b343164,0x744c240a3b396625,0x38313635315f385f\n"
".quad 0x09636f6c2e090a3a,0x3009353131093631,0x0a3b74697865090a,0x5f646e6557444c24\n"
".quad 0x7564657235315a5f,0x5069746c754d6563,0x45326a4c49737361,0x4b5076454531624c\n"
".quad 0x7d090a3a6a665066,0x35315a5f202f2f20,0x754d656375646572,0x497373615069746c\n"
".quad 0x4531624c45326a4c,0x6a6650664b507645,0x72746e652e090a0a,0x657235315a5f2079\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x76454531624c4531,0x28206a6650664b50\n"
".quad 0x617261702e09090a,0x5f203436752e206d,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x76454531624c4531,0x675f6a6650664b50\n"
".quad 0x0a2c61746164695f,0x6d617261702e0909,0x5f5f203436752e20,0x6d72617061647563\n"
".quad 0x64657235315a5f5f,0x69746c754d656375,0x316a4c4973736150,0x5076454531624c45\n"
".quad 0x5f675f6a6650664b,0x090a2c617461646f,0x206d617261702e09,0x635f5f203233752e\n"
".quad 0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563,0x45316a4c49737361\n"
".quad 0x4b5076454531624c,0x0a296e5f6a665066,0x6765722e090a7b09,0x7225203631752e20\n"
".quad 0x2e090a3b3e333c68,0x3233752e20676572,0x3b3e30313c722520,0x2e206765722e090a\n"
".quad 0x3c64722520343675,0x722e090a3b3e3631,0x203233662e206765,0x090a3b3e383c6625\n"
".quad 0x72702e206765722e,0x3e353c7025206465,0x09636f6c2e090a3b,0x3009323131093631\n"
".quad 0x5f5f3142424c240a,0x637564657235315a,0x615069746c754d65,0x4c45316a4c497373\n"
".quad 0x664b507645453162,0x6c2e090a3a6a6650,0x363809363109636f,0x2e747663090a3009\n"
".quad 0x203631752e323375,0x7425202c31722509,0x6d090a3b782e6469,0x09203436752e766f\n"
".quad 0x6473202c31647225,0x7663090a3b617461,0x33752e3436752e74,0x2c32647225092032\n"
".quad 0x6d090a3b31722520,0x2e656469772e6c75,0x6472250920323375,0x202c317225202c33\n"
".quad 0x2e646461090a3b34,0x6472250920343675,0x2c31647225202c34,0x090a3b3364722520\n"
".quad 0x203233662e766f6d,0x6630202c31662509,0x3030303030303030,0x2f0920202020203b\n"
".quad 0x766f6d090a30202f,0x662509203233662e,0x3030306630202c32,0x20203b3030303030\n"
".quad 0x30202f2f09202020,0x6168732e7473090a,0x203233662e646572,0x302b346472255b09\n"
".quad 0x0a3b326625202c5d,0x3233752e74766309,0x722509203631752e,0x6961746325202c32\n"
".quad 0x756d090a3b782e64,0x752e6f6c2e34326c,0x2c33722509203233,0x3b32202c32722520\n"
".quad 0x33752e646461090a,0x202c347225092032,0x317225202c337225,0x732e766f6d090a3b\n"
".quad 0x2c35722509203233,0x6c090a3b34722520,0x2e6d617261702e64,0x3672250920323375\n"
".quad 0x6475635f5f5b202c,0x5a5f5f6d72617061,0x6563756465723531,0x73615069746c754d\n"
".quad 0x624c45316a4c4973,0x50664b5076454531,0x090a3b5d6e5f6a66,0x2e65672e70746573\n"
".quad 0x3170250920323375,0x25202c347225202c,0x702540090a3b3672,0x2409206172622031\n"
".quad 0x3334315f395f744c,0x766f6d090a3b3833,0x722509203631752e,0x74636e25202c3168\n"
".quad 0x090a3b782e646961,0x656469772e6c756d,0x722509203631752e,0x2c31687225202c37\n"
".quad 0x747663090a3b3220,0x3233752e3436732e,0x202c356472250920,0x646c090a3b377225\n"
".quad 0x752e6d617261702e,0x3664722509203436,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723531,0x73615069746c754d,0x624c45316a4c4973,0x50664b5076454531\n"
".quad 0x6164695f675f6a66,0x7663090a3b5d6174,0x33752e3436752e74,0x2c37647225092032\n"
".quad 0x6d090a3b34722520,0x2e656469772e6c75,0x6472250920323375,0x202c347225202c38\n"
".quad 0x2e646461090a3b34,0x6472250920343675,0x2c36647225202c39,0x090a3b3864722520\n"
".quad 0x656469772e6c756d,0x722509203233752e,0x377225202c303164,0x744c240a3b34202c\n"
".quad 0x30353834315f395f,0x6f6c3c2f2f200a3a,0x706f6f4c203e706f,0x696c2079646f6220\n"
".quad 0x6e202c363820656e,0x6420676e69747365,0x2c31203a68747065,0x74616d6974736520\n"
".quad 0x6172657469206465,0x75203a736e6f6974,0x090a6e776f6e6b6e,0x09363109636f6c2e\n"
".quad 0x646c090a30093339,0x2e6c61626f6c672e,0x3366250920323366,0x2b396472255b202c\n"
".quad 0x646461090a3b5d30,0x662509203233662e,0x202c336625202c34,0x7473090a3b316625\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464,0x6f6c2e090a3b3466\n"
".quad 0x0936390936310963,0x6c672e646c090a30,0x3233662e6c61626f,0x5b202c3566250920\n"
".quad 0x3b5d342b39647225,0x33662e646461090a,0x202c316625092032,0x346625202c356625\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920,0x3b316625202c5d30\n"
".quad 0x33752e646461090a,0x202c357225092032,0x357225202c377225,0x752e646461090a3b\n"
".quad 0x3964722509203436,0x202c39647225202c,0x090a3b3031647225,0x09363109636f6c2e\n"
".quad 0x646c090a30093638,0x752e6d617261702e,0x2c36722509203233,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x4d65637564657235,0x7373615069746c75,0x31624c45316a4c49\n"
".quad 0x6650664b50764545,0x2e090a3b5d6e5f6a,0x3909363109636f6c,0x746573090a300936\n"
".quad 0x3233752e746c2e70,0x25202c3270250920,0x3b367225202c3572,0x622032702540090a\n"
".quad 0x5f744c2409206172,0x3b30353834315f39,0x315f395f744c240a,0x2e090a3a38333334\n"
".quad 0x3709363109636f6c,0x726162090a300932,0x300920636e79732e,0x09636f6c2e090a3b\n"
".quad 0x3009333031093631,0x33752e766f6d090a,0x202c387225092032,0x70746573090a3b30\n"
".quad 0x203233752e656e2e,0x7225202c33702509,0x0a3b387225202c31,0x7262203370254009\n"
".quad 0x395f744c24092061,0x0a3b32363335315f,0x363109636f6c2e09,0x090a300936303109\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x6164735b202c3666,0x090a3b5d302b6174\n"
".quad 0x6d617261702e646c,0x722509203436752e,0x5f5f5b202c313164,0x6d72617061647563\n"
".quad 0x64657235315a5f5f,0x69746c754d656375,0x316a4c4973736150,0x5076454531624c45\n"
".quad 0x5f675f6a6650664b,0x0a3b5d617461646f,0x3436752e74766309,0x722509203233752e\n"
".quad 0x327225202c323164,0x772e6c756d090a3b,0x203233752e656469,0x202c333164722509\n"
".quad 0x0a3b34202c327225,0x3436752e64646109,0x2c34316472250920,0x202c313164722520\n"
".quad 0x090a3b3331647225,0x61626f6c672e7473,0x5b09203233662e6c,0x5d302b3431647225\n"
".quad 0x240a3b366625202c,0x3335315f395f744c,0x6f6c2e090a3a3236,0x3531310936310963\n"
".quad 0x74697865090a3009,0x6e6557444c240a3b,0x657235315a5f5f64,0x746c754d65637564\n"
".quad 0x6a4c497373615069,0x76454531624c4531,0x0a3a6a6650664b50,0x5a5f202f2f207d09\n"
".quad 0x6563756465723531,0x73615069746c754d,0x624c45316a4c4973,0x50664b5076454531\n"
".quad 0x6e652e090a0a6a66,0x35315a5f20797274,0x754d656375646572,0x497373615069746c\n"
".quad 0x624c453231356a4c,0x50664b5076454530,0x2e09090a28206a66,0x752e206d61726170\n"
".quad 0x6475635f5f203436,0x5a5f5f6d72617061,0x6563756465723531,0x73615069746c754d\n"
".quad 0x453231356a4c4973,0x4b5076454530624c,0x695f675f6a665066,0x09090a2c61746164\n"
".quad 0x2e206d617261702e,0x75635f5f20343675,0x5f5f6d7261706164,0x637564657235315a\n"
".quad 0x615069746c754d65,0x3231356a4c497373,0x5076454530624c45,0x5f675f6a6650664b\n"
".quad 0x090a2c617461646f,0x206d617261702e09,0x635f5f203233752e,0x5f6d726170616475\n"
".quad 0x7564657235315a5f,0x5069746c754d6563,0x31356a4c49737361,0x76454530624c4532\n"
".quad 0x6e5f6a6650664b50,0x722e090a7b090a29,0x203631752e206765,0x0a3b3e333c687225\n"
".quad 0x752e206765722e09,0x39313c7225203233,0x6765722e090a3b3e,0x7225203436752e20\n"
".quad 0x090a3b3e36313c64,0x33662e206765722e,0x3e34333c66252032,0x206765722e090a3b\n"
".quad 0x702520646572702e,0x2e090a3b3e34313c,0x3109363109636f6c,0x424c240a30093231\n"
".quad 0x7235315a5f5f3142,0x6c754d6563756465,0x4c49737361506974,0x30624c453231356a\n"
".quad 0x6650664b50764545,0x636f6c2e090a3a6a,0x3009363809363109,0x33752e747663090a\n"
".quad 0x2509203631752e32,0x64697425202c3172,0x766f6d090a3b782e,0x722509203436752e\n"
".quad 0x74616473202c3164,0x2e747663090a3b61,0x203233752e343675,0x25202c3264722509\n"
".quad 0x6c756d090a3b3172,0x33752e656469772e,0x2c33647225092032,0x3b34202c31722520\n"
".quad 0x36752e646461090a,0x2c34647225092034,0x25202c3164722520,0x6f6d090a3b336472\n"
".quad 0x2509203233662e76,0x30306630202c3166,0x203b303030303030,0x202f2f0920202020\n"
".quad 0x662e766f6d090a30,0x2c32662509203233,0x3030303030663020,0x202020203b303030\n"
".quad 0x090a30202f2f0920,0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225\n"
".quad 0x63090a3b32662520,0x752e3233752e7476,0x2c32722509203631,0x2e64696174632520\n"
".quad 0x2e6c756d090a3b78,0x09203233752e6f6c,0x327225202c337225,0x0a3b34323031202c\n"
".quad 0x3233752e64646109,0x25202c3472250920,0x3b317225202c3372,0x7261702e646c090a\n"
".quad 0x09203233752e6d61,0x5f5f5b202c357225,0x6d72617061647563,0x64657235315a5f5f\n"
".quad 0x69746c754d656375,0x356a4c4973736150,0x454530624c453231,0x5f6a6650664b5076\n"
".quad 0x746573090a3b5d6e,0x3233752e65672e70,0x25202c3170250920,0x3b357225202c3472\n"
".quad 0x622031702540090a,0x5f744c2409206172,0x34333032315f3031,0x752e646461090a3b\n"
".quad 0x2c36722509203233,0x3135202c34722520,0x702e646c090a3b32,0x3233752e6d617261\n"
".quad 0x5b202c3572250920,0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x30624c453231356a,0x6650664b50764545,0x61090a3b5d6e5f6a\n"
".quad 0x09203233752e6464,0x357225202c377225,0x090a3b323135202c,0x203631752e766f6d\n"
".quad 0x25202c3168722509,0x782e64696174636e,0x772e6c756d090a3b,0x203631752e656469\n"
".quad 0x7225202c38722509,0x34323031202c3168,0x732e747663090a3b,0x09203233752e3436\n"
".quad 0x7225202c35647225,0x702e646c090a3b38,0x3436752e6d617261,0x202c366472250920\n"
".quad 0x70616475635f5f5b,0x35315a5f5f6d7261,0x754d656375646572,0x497373615069746c\n"
".quad 0x624c453231356a4c,0x50664b5076454530,0x6164695f675f6a66,0x7663090a3b5d6174\n"
".quad 0x33752e3436752e74,0x2c37647225092032,0x6d090a3b34722520,0x2e656469772e6c75\n"
".quad 0x6472250920323375,0x202c347225202c38,0x2e646461090a3b34,0x6472250920343675\n"
".quad 0x2c36647225202c39,0x090a3b3864722520,0x656469772e6c756d,0x722509203233752e\n"
".quad 0x387225202c303164,0x744c240a3b34202c,0x343532315f30315f,0x6c3c2f2f200a3a36\n"
".quad 0x6f6f4c203e706f6f,0x6c2079646f622070,0x202c363820656e69,0x20676e697473656e\n"
".quad 0x31203a6874706564,0x616d69747365202c,0x7265746920646574,0x203a736e6f697461\n"
".quad 0x0a6e776f6e6b6e75,0x363109636f6c2e09,0x6c090a3009333909,0x6c61626f6c672e64\n"
".quad 0x662509203233662e,0x396472255b202c33,0x6461090a3b5d302b,0x2509203233662e64\n"
".quad 0x2c336625202c3166,0x73090a3b31662520,0x6465726168732e74,0x255b09203233662e\n"
".quad 0x202c5d302b346472,0x6c2e090a3b316625,0x363809363109636f,0x702e646c090a3009\n"
".quad 0x3233752e6d617261,0x5b202c3572250920,0x6170616475635f5f,0x7235315a5f5f6d72\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x30624c453231356a,0x6650664b50764545\n"
".quad 0x2e090a3b5d6e5f6a,0x3909363109636f6c,0x746573090a300933,0x3233752e65672e70\n"
".quad 0x25202c3270250920,0x3b357225202c3672,0x622032702540090a,0x5f744c2409206172\n"
".quad 0x32303832315f3031,0x6f6c3c2f2f200a3b,0x74726150203e706f,0x706f6f6c20666f20\n"
".quad 0x696c2079646f6220,0x68202c363820656e,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x36343532315f3031,0x3109636f6c2e090a,0x090a300936390936,0x61626f6c672e646c\n"
".quad 0x2509203233662e6c,0x6472255b202c3466,0x3b5d383430322b39,0x33662e646461090a\n"
".quad 0x202c316625092032,0x316625202c346625,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x2b346472255b0920,0x3b316625202c5d30,0x5f30315f744c240a,0x200a3a3230383231\n"
".quad 0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964\n"
".quad 0x64616568202c3638,0x64656c6562616c20,0x5f30315f744c2420,0x61090a3634353231\n"
".quad 0x09203233752e6464,0x367225202c367225,0x090a3b387225202c,0x203436752e646461\n"
".quad 0x25202c3964722509,0x647225202c396472,0x746573090a3b3031,0x3233752e746c2e70\n"
".quad 0x25202c3370250920,0x3b377225202c3672,0x622033702540090a,0x5f744c2409206172\n"
".quad 0x36343532315f3031,0x30315f744c240a3b,0x0a3a34333032315f,0x363109636f6c2e09\n"
".quad 0x090a300930303109,0x636e79732e726162,0x6c2e090a3b300920,0x303109363109636f\n"
".quad 0x766f6d090a300933,0x722509203233752e,0x0a3b353532202c39,0x74672e7074657309\n"
".quad 0x702509203233752e,0x202c317225202c34,0x2540090a3b397225,0x0920617262203470\n"
".quad 0x315f30315f744c24,0x2e090a3b30373533,0x3609363109636f6c,0x2e646c090a300933\n"
".quad 0x662e646572616873,0x2c35662509203233,0x302b346472255b20,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x202c366625092032,0x30312b346472255b,0x6461090a3b5d3432\n"
".quad 0x2509203233662e64,0x2c356625202c3766,0x73090a3b36662520,0x6465726168732e74\n"
".quad 0x255b09203233662e,0x202c5d302b346472,0x744c240a3b376625,0x373533315f30315f\n"
".quad 0x2e726162090a3a30,0x3b300920636e7973,0x33752e766f6d090a,0x2c30317225092032\n"
".quad 0x73090a3b37323120,0x752e74672e707465,0x2c35702509203233,0x7225202c31722520\n"
".quad 0x702540090a3b3031,0x2409206172622035,0x34315f30315f744c,0x6c2e090a3b323830\n"
".quad 0x343609363109636f,0x732e646c090a3009,0x33662e6465726168,0x202c386625092032\n"
".quad 0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261,0x5b202c3966250920\n"
".quad 0x3231352b34647225,0x2e646461090a3b5d,0x3166250920323366,0x202c386625202c30\n"
".quad 0x7473090a3b396625,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x744c240a3b303166,0x383034315f30315f,0x2e726162090a3a32,0x3b300920636e7973\n"
".quad 0x33752e766f6d090a,0x2c31317225092032,0x6573090a3b333620,0x33752e74672e7074\n"
".quad 0x202c367025092032,0x317225202c317225,0x36702540090a3b31,0x4c24092061726220\n"
".quad 0x3534315f30315f74,0x6f6c2e090a3b3439,0x0935360936310963,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x202c313166250920,0x5d302b346472255b,0x68732e646c090a3b\n"
".quad 0x3233662e64657261,0x202c323166250920,0x35322b346472255b,0x646461090a3b5d36\n"
".quad 0x662509203233662e,0x31316625202c3331,0x0a3b32316625202c,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x0a3b33316625202c,0x315f30315f744c24\n"
".quad 0x62090a3a34393534,0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e\n"
".quad 0x0a3b3133202c3231,0x74672e7074657309,0x702509203233752e,0x202c317225202c37\n"
".quad 0x40090a3b32317225,0x2061726220377025,0x5f30315f744c2409,0x090a3b3630313531\n"
".quad 0x09363109636f6c2e,0x646c090a30093736,0x2e6465726168732e,0x3166250920323366\n"
".quad 0x346472255b202c34,0x646c090a3b5d302b,0x2e6465726168732e,0x3166250920323366\n"
".quad 0x346472255b202c35,0x090a3b5d3832312b,0x203233662e646461,0x25202c3631662509\n"
".quad 0x316625202c343166,0x732e7473090a3b35,0x33662e6465726168,0x346472255b092032\n"
".quad 0x316625202c5d302b,0x315f744c240a3b36,0x3a36303135315f30,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x203233752e766f6d,0x31202c3331722509,0x70746573090a3b35\n"
".quad 0x203233752e74672e,0x7225202c38702509,0x3b33317225202c31,0x622038702540090a\n"
".quad 0x5f744c2409206172,0x38313635315f3031,0x09636f6c2e090a3b,0x0a30093836093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c37316625,0x0a3b5d302b346472\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c38316625,0x3b5d34362b346472\n"
".quad 0x33662e646461090a,0x2c39316625092032,0x25202c3731662520,0x7473090a3b383166\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b393166\n"
".quad 0x313635315f30315f,0x2e726162090a3a38,0x3b300920636e7973,0x33752e766f6d090a\n"
".quad 0x2c34317225092032,0x746573090a3b3720,0x3233752e74672e70,0x25202c3970250920\n"
".quad 0x34317225202c3172,0x2039702540090a3b,0x744c240920617262,0x333136315f30315f\n"
".quad 0x636f6c2e090a3b30,0x3009393609363109,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3032662509,0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3132662509,0x5d32332b34647225,0x662e646461090a3b,0x3232662509203233\n"
".quad 0x202c30326625202c,0x73090a3b31326625,0x6465726168732e74,0x255b09203233662e\n"
".quad 0x202c5d302b346472,0x4c240a3b32326625,0x3136315f30315f74,0x726162090a3a3033\n"
".quad 0x300920636e79732e,0x752e766f6d090a3b,0x3531722509203233,0x6573090a3b33202c\n"
".quad 0x33752e74672e7074,0x2c30317025092032,0x7225202c31722520,0x702540090a3b3531\n"
".quad 0x0920617262203031,0x315f30315f744c24,0x2e090a3b32343636,0x3709363109636f6c\n"
".quad 0x2e646c090a300930,0x662e646572616873,0x3332662509203233,0x2b346472255b202c\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3432662509203233,0x2b346472255b202c\n"
".quad 0x6461090a3b5d3631,0x2509203233662e64,0x326625202c353266,0x3b34326625202c33\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x3b35326625202c5d\n"
".quad 0x5f30315f744c240a,0x090a3a3234363631,0x636e79732e726162,0x6f6d090a3b300920\n"
".quad 0x2509203233752e76,0x0a3b31202c363172,0x74672e7074657309,0x702509203233752e\n"
".quad 0x2c317225202c3131,0x090a3b3631722520,0x7262203131702540,0x315f744c24092061\n"
".quad 0x3b34353137315f30,0x3109636f6c2e090a,0x090a300931370936,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c363266,0x090a3b5d302b3464,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c373266,0x090a3b5d382b3464,0x203233662e646461\n"
".quad 0x25202c3832662509,0x326625202c363266,0x732e7473090a3b37,0x33662e6465726168\n"
".quad 0x346472255b092032,0x326625202c5d302b,0x315f744c240a3b38,0x3a34353137315f30\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d,0x30202c3731722509\n"
".quad 0x2e70746573090a3b,0x09203233752e7165,0x7225202c32317025,0x3b37317225202c31\n"
".quad 0x323170252140090a,0x4c24092061726220,0x3637315f30315f74,0x6f6c2e090a3b3636\n"
".quad 0x0932370936310963,0x68732e646c090a30,0x3233662e64657261,0x202c393266250920\n"
".quad 0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261,0x202c303366250920\n"
".quad 0x5d342b346472255b,0x662e646461090a3b,0x3133662509203233,0x202c39326625202c\n"
".quad 0x73090a3b30336625,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x4c240a3b31336625,0x3637315f30315f74,0x726162090a3a3636,0x300920636e79732e\n"
".quad 0x09636f6c2e090a3b,0x3009333031093631,0x323170252140090a,0x4c24092061726220\n"
".quad 0x3138315f30315f74,0x6f6c2e090a3b3837,0x3630310936310963,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x2c32336625092032,0x2b61746164735b20,0x2e646c090a3b5d30\n"
".quad 0x36752e6d61726170,0x3131647225092034,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723531,0x73615069746c754d,0x453231356a4c4973,0x4b5076454530624c\n"
".quad 0x6f5f675f6a665066,0x090a3b5d61746164,0x2e3436752e747663,0x6472250920323375\n"
".quad 0x3b327225202c3231,0x69772e6c756d090a,0x09203233752e6564,0x25202c3331647225\n"
".quad 0x090a3b34202c3272,0x203436752e646461,0x202c343164722509,0x25202c3131647225\n"
".quad 0x73090a3b33316472,0x6c61626f6c672e74,0x255b09203233662e,0x2c5d302b34316472\n"
".quad 0x240a3b3233662520,0x38315f30315f744c,0x6c2e090a3a383731,0x313109363109636f\n"
".quad 0x697865090a300935,0x6557444c240a3b74,0x7235315a5f5f646e,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x30624c453231356a,0x6650664b50764545,0x2f2f207d090a3a6a\n"
".quad 0x64657235315a5f20,0x69746c754d656375,0x356a4c4973736150,0x454530624c453231\n"
".quad 0x0a6a6650664b5076,0x7972746e652e090a,0x64657235315a5f20,0x69746c754d656375\n"
".quad 0x326a4c4973736150,0x454530624c453635,0x206a6650664b5076,0x7261702e09090a28\n"
".quad 0x203436752e206d61,0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x30624c453635326a,0x6650664b50764545,0x746164695f675f6a\n"
".quad 0x61702e09090a2c61,0x3436752e206d6172,0x70616475635f5f20,0x35315a5f5f6d7261\n"
".quad 0x754d656375646572,0x497373615069746c,0x624c453635326a4c,0x50664b5076454530\n"
".quad 0x61646f5f675f6a66,0x702e09090a2c6174,0x33752e206d617261,0x616475635f5f2032\n"
".quad 0x315a5f5f6d726170,0x4d65637564657235,0x7373615069746c75,0x4c453635326a4c49\n"
".quad 0x664b507645453062,0x090a296e5f6a6650,0x206765722e090a7b,0x687225203631752e\n"
".quad 0x722e090a3b3e333c,0x203233752e206765,0x0a3b3e38313c7225,0x752e206765722e09\n"
".quad 0x313c647225203436,0x65722e090a3b3e36,0x25203233662e2067,0x090a3b3e31333c66\n"
".quad 0x72702e206765722e,0x33313c7025206465,0x636f6c2e090a3b3e,0x0932313109363109\n"
".quad 0x5f3142424c240a30,0x7564657235315a5f,0x5069746c754d6563,0x35326a4c49737361\n"
".quad 0x76454530624c4536,0x0a3a6a6650664b50,0x363109636f6c2e09,0x63090a3009363809\n"
".quad 0x752e3233752e7476,0x2c31722509203631,0x3b782e6469742520,0x36752e766f6d090a\n"
".quad 0x2c31647225092034,0x0a3b617461647320,0x3436752e74766309,0x722509203233752e\n"
".quad 0x3b317225202c3264,0x69772e6c756d090a,0x09203233752e6564,0x7225202c33647225\n"
".quad 0x61090a3b34202c31,0x09203436752e6464,0x7225202c34647225,0x33647225202c3164\n"
".quad 0x662e766f6d090a3b,0x2c31662509203233,0x3030303030663020,0x202020203b303030\n"
".quad 0x090a30202f2f0920,0x203233662e766f6d,0x6630202c32662509,0x3030303030303030\n"
".quad 0x2f0920202020203b,0x2e7473090a30202f,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x2e747663090a3b32,0x203631752e323375,0x6325202c32722509\n"
".quad 0x0a3b782e64696174,0x2e6f6c2e6c756d09,0x3372250920323375,0x35202c327225202c\n"
".quad 0x646461090a3b3231,0x722509203233752e,0x202c337225202c34,0x646c090a3b317225\n"
".quad 0x752e6d617261702e,0x2c35722509203233,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x4c453635326a4c49,0x664b507645453062\n"
".quad 0x0a3b5d6e5f6a6650,0x65672e7074657309,0x702509203233752e,0x202c347225202c31\n"
".quad 0x2540090a3b357225,0x0920617262203170,0x315f31315f744c24,0x61090a3b30393232\n"
".quad 0x09203233752e6464,0x347225202c367225,0x090a3b363532202c,0x6d617261702e646c\n"
".quad 0x722509203233752e,0x75635f5f5b202c35,0x5f5f6d7261706164,0x637564657235315a\n"
".quad 0x615069746c754d65,0x3635326a4c497373,0x5076454530624c45,0x5d6e5f6a6650664b\n"
".quad 0x752e646461090a3b,0x2c37722509203233,0x3532202c35722520,0x2e766f6d090a3b36\n"
".quad 0x6872250920363175,0x6174636e25202c31,0x6d090a3b782e6469,0x2e656469772e6c75\n"
".quad 0x3872250920363175,0x202c31687225202c,0x7663090a3b323135,0x33752e3436732e74\n"
".quad 0x2c35647225092032,0x6c090a3b38722520,0x2e6d617261702e64,0x6472250920343675\n"
".quad 0x75635f5f5b202c36,0x5f5f6d7261706164,0x637564657235315a,0x615069746c754d65\n"
".quad 0x3635326a4c497373,0x5076454530624c45,0x5f675f6a6650664b,0x0a3b5d6174616469\n"
".quad 0x3436752e74766309,0x722509203233752e,0x3b347225202c3764,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x7225202c38647225,0x61090a3b34202c34,0x09203436752e6464\n"
".quad 0x7225202c39647225,0x38647225202c3664,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x202c303164722509,0x0a3b34202c387225,0x315f31315f744c24,0x2f200a3a32303832\n"
".quad 0x203e706f6f6c3c2f,0x646f6220706f6f4c,0x3820656e696c2079,0x697473656e202c36\n"
".quad 0x687470656420676e,0x747365202c31203a,0x6920646574616d69,0x6e6f697461726574\n"
".quad 0x6f6e6b6e75203a73,0x636f6c2e090a6e77,0x3009333909363109,0x6f6c672e646c090a\n"
".quad 0x203233662e6c6162,0x255b202c33662509,0x0a3b5d302b396472,0x3233662e64646109\n"
".quad 0x25202c3166250920,0x3b316625202c3366,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x302b346472255b09,0x0a3b316625202c5d,0x363109636f6c2e09,0x6c090a3009363809\n"
".quad 0x2e6d617261702e64,0x3572250920323375,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723531,0x73615069746c754d,0x453635326a4c4973,0x4b5076454530624c\n"
".quad 0x3b5d6e5f6a665066,0x3109636f6c2e090a,0x090a300933390936,0x2e65672e70746573\n"
".quad 0x3270250920323375,0x25202c367225202c,0x702540090a3b3572,0x2409206172622032\n"
".quad 0x33315f31315f744c,0x2f2f200a3b383530,0x50203e706f6f6c3c,0x6c20666f20747261\n"
".quad 0x79646f6220706f6f,0x363820656e696c20,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x32315f31315f744c,0x6f6c2e090a323038,0x0936390936310963,0x6c672e646c090a30\n"
".quad 0x3233662e6c61626f,0x5b202c3466250920,0x3230312b39647225,0x646461090a3b5d34\n"
".quad 0x662509203233662e,0x202c346625202c31,0x7473090a3b316625,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x25202c5d302b3464,0x5f744c240a3b3166,0x38353033315f3131\n"
".quad 0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220\n"
".quad 0x68202c363820656e,0x6562616c20646165,0x5f744c242064656c,0x32303832315f3131\n"
".quad 0x33752e646461090a,0x202c367225092032,0x387225202c367225,0x752e646461090a3b\n"
".quad 0x3964722509203436,0x202c39647225202c,0x090a3b3031647225,0x2e746c2e70746573\n"
".quad 0x3370250920323375,0x25202c367225202c,0x702540090a3b3772,0x2409206172622033\n"
".quad 0x32315f31315f744c,0x744c240a3b323038,0x393232315f31315f,0x636f6c2e090a3a30\n"
".quad 0x0930303109363109,0x732e726162090a30,0x0a3b300920636e79,0x363109636f6c2e09\n"
".quad 0x090a300933303109,0x203233752e766f6d,0x3231202c39722509,0x70746573090a3b37\n"
".quad 0x203233752e74672e,0x7225202c34702509,0x0a3b397225202c31,0x7262203470254009\n"
".quad 0x315f744c24092061,0x3b36323833315f31,0x3109636f6c2e090a,0x090a300934360936\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x6472255b202c3566,0x6c090a3b5d302b34\n"
".quad 0x6465726168732e64,0x662509203233662e,0x346472255b202c36,0x090a3b5d3231352b\n"
".quad 0x203233662e646461,0x6625202c37662509,0x0a3b366625202c35,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x240a3b376625202c,0x33315f31315f744c\n"
".quad 0x6162090a3a363238,0x0920636e79732e72,0x2e766f6d090a3b30,0x3172250920323375\n"
".quad 0x090a3b3336202c30,0x2e74672e70746573,0x3570250920323375,0x25202c317225202c\n"
".quad 0x2540090a3b303172,0x0920617262203570,0x315f31315f744c24,0x2e090a3b38333334\n"
".quad 0x3609363109636f6c,0x2e646c090a300935,0x662e646572616873,0x2c38662509203233\n"
".quad 0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168,0x202c396625092032\n"
".quad 0x35322b346472255b,0x646461090a3b5d36,0x662509203233662e,0x2c386625202c3031\n"
".quad 0x73090a3b39662520,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x4c240a3b30316625,0x3334315f31315f74,0x726162090a3a3833,0x300920636e79732e\n"
".quad 0x752e766f6d090a3b,0x3131722509203233,0x73090a3b3133202c,0x752e74672e707465\n"
".quad 0x2c36702509203233,0x7225202c31722520,0x702540090a3b3131,0x2409206172622036\n"
".quad 0x34315f31315f744c,0x6c2e090a3b303538,0x373609363109636f,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x2c31316625092032,0x302b346472255b20,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x2c32316625092032,0x312b346472255b20,0x6461090a3b5d3832\n"
".quad 0x2509203233662e64,0x316625202c333166,0x3b32316625202c31,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x302b346472255b09,0x3b33316625202c5d,0x5f31315f744c240a\n"
".quad 0x090a3a3035383431,0x636e79732e726162,0x6f6d090a3b300920,0x2509203233752e76\n"
".quad 0x3b3531202c323172,0x672e70746573090a,0x2509203233752e74,0x2c317225202c3770\n"
".quad 0x090a3b3231722520,0x6172622037702540,0x31315f744c240920,0x0a3b32363335315f\n"
".quad 0x363109636f6c2e09,0x6c090a3009383609,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3431,0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3531,0x090a3b5d34362b34,0x203233662e646461,0x25202c3631662509\n"
".quad 0x316625202c343166,0x732e7473090a3b35,0x33662e6465726168,0x346472255b092032\n"
".quad 0x316625202c5d302b,0x315f744c240a3b36,0x3a32363335315f31,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x203233752e766f6d,0x37202c3331722509,0x2e70746573090a3b\n"
".quad 0x09203233752e7467,0x317225202c387025,0x0a3b33317225202c,0x7262203870254009\n"
".quad 0x315f744c24092061,0x3b34373835315f31,0x3109636f6c2e090a,0x090a300939360936\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c373166,0x090a3b5d302b3464\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c383166,0x0a3b5d32332b3464\n"
".quad 0x3233662e64646109,0x202c393166250920,0x6625202c37316625,0x2e7473090a3b3831\n"
".quad 0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3931\n"
".quad 0x34373835315f3131,0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09\n"
".quad 0x202c343172250920,0x70746573090a3b33,0x203233752e74672e,0x7225202c39702509\n"
".quad 0x3b34317225202c31,0x622039702540090a,0x5f744c2409206172,0x36383336315f3131\n"
".quad 0x09636f6c2e090a3b,0x0a30093037093631,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c30326625,0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c31326625,0x3b5d36312b346472,0x33662e646461090a,0x2c32326625092032\n"
".quad 0x25202c3032662520,0x7473090a3b313266,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x744c240a3b323266,0x383336315f31315f,0x2e726162090a3a36\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c35317225092032,0x746573090a3b3120\n"
".quad 0x3233752e74672e70,0x202c303170250920,0x317225202c317225,0x31702540090a3b35\n"
".quad 0x2409206172622030,0x36315f31315f744c,0x6c2e090a3b383938,0x313709363109636f\n"
".quad 0x732e646c090a3009,0x33662e6465726168,0x2c33326625092032,0x302b346472255b20\n"
".quad 0x732e646c090a3b5d,0x33662e6465726168,0x2c34326625092032,0x382b346472255b20\n"
".quad 0x2e646461090a3b5d,0x3266250920323366,0x2c33326625202c35,0x090a3b3432662520\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x240a3b3532662520\n"
".quad 0x36315f31315f744c,0x6162090a3a383938,0x0920636e79732e72,0x2e766f6d090a3b30\n"
".quad 0x3172250920323375,0x73090a3b30202c36,0x752e71652e707465,0x3131702509203233\n"
".quad 0x25202c317225202c,0x2140090a3b363172,0x6172622031317025,0x31315f744c240920\n"
".quad 0x0a3b30313437315f,0x363109636f6c2e09,0x6c090a3009323709,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3632,0x6c090a3b5d302b34,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3732,0x61090a3b5d342b34,0x09203233662e6464\n"
".quad 0x6625202c38326625,0x37326625202c3632,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x2b346472255b0920,0x38326625202c5d30,0x31315f744c240a3b,0x0a3a30313437315f\n"
".quad 0x6e79732e72616209,0x2e090a3b30092063,0x3109363109636f6c,0x2140090a30093330\n"
".quad 0x6172622031317025,0x31315f744c240920,0x0a3b32323937315f,0x363109636f6c2e09\n"
".quad 0x090a300936303109,0x65726168732e646c,0x2509203233662e64,0x64735b202c393266\n"
".quad 0x0a3b5d302b617461,0x617261702e646c09,0x2509203436752e6d,0x5f5b202c31316472\n"
".quad 0x726170616475635f,0x657235315a5f5f6d,0x746c754d65637564,0x6a4c497373615069\n"
".quad 0x4530624c45363532,0x6a6650664b507645,0x617461646f5f675f,0x2e747663090a3b5d\n"
".quad 0x203233752e343675,0x202c323164722509,0x756d090a3b327225,0x752e656469772e6c\n"
".quad 0x3164722509203233,0x202c327225202c33,0x2e646461090a3b34,0x6472250920343675\n"
".quad 0x31647225202c3431,0x3331647225202c31,0x6c672e7473090a3b,0x3233662e6c61626f\n"
".quad 0x34316472255b0920,0x326625202c5d302b,0x315f744c240a3b39,0x3a32323937315f31\n"
".quad 0x3109636f6c2e090a,0x0a30093531310936,0x240a3b7469786509,0x5f5f646e6557444c\n"
".quad 0x637564657235315a,0x615069746c754d65,0x3635326a4c497373,0x5076454530624c45\n"
".quad 0x090a3a6a6650664b,0x315a5f202f2f207d,0x4d65637564657235,0x7373615069746c75\n"
".quad 0x4c453635326a4c49,0x664b507645453062,0x652e090a0a6a6650,0x315a5f207972746e\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x4c453832316a4c49,0x664b507645453062\n"
".quad 0x09090a28206a6650,0x2e206d617261702e,0x75635f5f20343675,0x5f5f6d7261706164\n"
".quad 0x637564657235315a,0x615069746c754d65,0x3832316a4c497373,0x5076454530624c45\n"
".quad 0x5f675f6a6650664b,0x090a2c6174616469,0x206d617261702e09,0x635f5f203436752e\n"
".quad 0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563,0x32316a4c49737361\n"
".quad 0x76454530624c4538,0x675f6a6650664b50,0x0a2c617461646f5f,0x6d617261702e0909\n"
".quad 0x5f5f203233752e20,0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375\n"
".quad 0x316a4c4973736150,0x454530624c453832,0x5f6a6650664b5076,0x2e090a7b090a296e\n"
".quad 0x3631752e20676572,0x3b3e333c68722520,0x2e206765722e090a,0x313c722520323375\n"
".quad 0x65722e090a3b3e37,0x25203436752e2067,0x0a3b3e36313c6472,0x662e206765722e09\n"
".quad 0x38323c6625203233,0x6765722e090a3b3e,0x2520646572702e20,0x090a3b3e32313c70\n"
".quad 0x09363109636f6c2e,0x4c240a3009323131,0x35315a5f5f314242,0x754d656375646572\n"
".quad 0x497373615069746c,0x624c453832316a4c,0x50664b5076454530,0x6f6c2e090a3a6a66\n"
".quad 0x0936380936310963,0x752e747663090a30,0x09203631752e3233,0x697425202c317225\n"
".quad 0x6f6d090a3b782e64,0x2509203436752e76,0x616473202c316472,0x747663090a3b6174\n"
".quad 0x3233752e3436752e,0x202c326472250920,0x756d090a3b317225,0x752e656469772e6c\n"
".quad 0x3364722509203233,0x34202c317225202c,0x752e646461090a3b,0x3464722509203436\n"
".quad 0x202c31647225202c,0x6d090a3b33647225,0x09203233662e766f,0x306630202c316625\n"
".quad 0x3b30303030303030,0x2f2f092020202020,0x2e766f6d090a3020,0x3266250920323366\n"
".quad 0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x090a3b326625202c,0x2e3233752e747663\n"
".quad 0x3272250920363175,0x646961746325202c,0x6c756d090a3b782e,0x203233752e6f6c2e\n"
".quad 0x7225202c33722509,0x0a3b363532202c32,0x3233752e64646109,0x25202c3472250920\n"
".quad 0x3b317225202c3372,0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c357225\n"
".quad 0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375,0x316a4c4973736150\n"
".quad 0x454530624c453832,0x5f6a6650664b5076,0x746573090a3b5d6e,0x3233752e65672e70\n"
".quad 0x25202c3170250920,0x3b357225202c3472,0x622031702540090a,0x5f744c2409206172\n"
".quad 0x36343532315f3231,0x752e646461090a3b,0x2c36722509203233,0x3231202c34722520\n"
".quad 0x702e646c090a3b38,0x3233752e6d617261,0x5b202c3572250920,0x6170616475635f5f\n"
".quad 0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974,0x30624c453832316a\n"
".quad 0x6650664b50764545,0x61090a3b5d6e5f6a,0x09203233752e6464,0x357225202c377225\n"
".quad 0x090a3b383231202c,0x203631752e766f6d,0x25202c3168722509,0x782e64696174636e\n"
".quad 0x772e6c756d090a3b,0x203631752e656469,0x7225202c38722509,0x3b363532202c3168\n"
".quad 0x36732e747663090a,0x2509203233752e34,0x387225202c356472,0x61702e646c090a3b\n"
".quad 0x203436752e6d6172,0x5b202c3664722509,0x6170616475635f5f,0x7235315a5f5f6d72\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x30624c453832316a,0x6650664b50764545\n"
".quad 0x746164695f675f6a,0x747663090a3b5d61,0x3233752e3436752e,0x202c376472250920\n"
".quad 0x756d090a3b347225,0x752e656469772e6c,0x3864722509203233,0x34202c347225202c\n"
".quad 0x752e646461090a3b,0x3964722509203436,0x202c36647225202c,0x6d090a3b38647225\n"
".quad 0x2e656469772e6c75,0x6472250920323375,0x2c387225202c3031,0x5f744c240a3b3420\n"
".quad 0x38353033315f3231,0x6f6c3c2f2f200a3a,0x706f6f4c203e706f,0x696c2079646f6220\n"
".quad 0x6e202c363820656e,0x6420676e69747365,0x2c31203a68747065,0x74616d6974736520\n"
".quad 0x6172657469206465,0x75203a736e6f6974,0x090a6e776f6e6b6e,0x09363109636f6c2e\n"
".quad 0x646c090a30093339,0x2e6c61626f6c672e,0x3366250920323366,0x2b396472255b202c\n"
".quad 0x646461090a3b5d30,0x662509203233662e,0x202c336625202c31,0x7473090a3b316625\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464,0x6f6c2e090a3b3166\n"
".quad 0x0936380936310963,0x61702e646c090a30,0x203233752e6d6172,0x5f5b202c35722509\n"
".quad 0x726170616475635f,0x657235315a5f5f6d,0x746c754d65637564,0x6a4c497373615069\n"
".quad 0x4530624c45383231,0x6a6650664b507645,0x6c2e090a3b5d6e5f,0x333909363109636f\n"
".quad 0x70746573090a3009,0x203233752e65672e,0x7225202c32702509,0x0a3b357225202c36\n"
".quad 0x7262203270254009,0x315f744c24092061,0x3b34313333315f32,0x6f6f6c3c2f2f200a\n"
".quad 0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62,0x6568202c36382065\n"
".quad 0x6c6562616c206461,0x315f744c24206465,0x0a38353033315f32,0x363109636f6c2e09\n"
".quad 0x6c090a3009363909,0x6c61626f6c672e64,0x662509203233662e,0x396472255b202c34\n"
".quad 0x090a3b5d3231352b,0x203233662e646461,0x6625202c31662509,0x0a3b316625202c34\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x240a3b316625202c\n"
".quad 0x33315f32315f744c,0x2f2f200a3a343133,0x50203e706f6f6c3c,0x6c20666f20747261\n"
".quad 0x79646f6220706f6f,0x363820656e696c20,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x33315f32315f744c,0x646461090a383530,0x722509203233752e,0x202c367225202c36\n"
".quad 0x6461090a3b387225,0x2509203436752e64,0x647225202c396472,0x3031647225202c39\n"
".quad 0x2e70746573090a3b,0x09203233752e746c,0x367225202c337025,0x090a3b377225202c\n"
".quad 0x6172622033702540,0x32315f744c240920,0x0a3b38353033315f,0x315f32315f744c24\n"
".quad 0x2e090a3a36343532,0x3109363109636f6c,0x6162090a30093030,0x0920636e79732e72\n"
".quad 0x636f6c2e090a3b30,0x0933303109363109,0x752e766f6d090a30,0x2c39722509203233\n"
".quad 0x6573090a3b333620,0x33752e74672e7074,0x202c347025092032,0x397225202c317225\n"
".quad 0x2034702540090a3b,0x744c240920617262,0x383034315f32315f,0x636f6c2e090a3b32\n"
".quad 0x3009353609363109,0x6168732e646c090a,0x203233662e646572,0x255b202c35662509\n"
".quad 0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465,0x72255b202c366625\n"
".quad 0x3b5d3635322b3464,0x33662e646461090a,0x202c376625092032,0x366625202c356625\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920,0x3b376625202c5d30\n"
".quad 0x5f32315f744c240a,0x090a3a3238303431,0x636e79732e726162,0x6f6d090a3b300920\n"
".quad 0x2509203233752e76,0x3b3133202c303172,0x672e70746573090a,0x2509203233752e74\n"
".quad 0x2c317225202c3570,0x090a3b3031722520,0x6172622035702540,0x32315f744c240920\n"
".quad 0x0a3b34393534315f,0x363109636f6c2e09,0x6c090a3009373609,0x6465726168732e64\n"
".quad 0x662509203233662e,0x346472255b202c38,0x646c090a3b5d302b,0x2e6465726168732e\n"
".quad 0x3966250920323366,0x2b346472255b202c,0x61090a3b5d383231,0x09203233662e6464\n"
".quad 0x6625202c30316625,0x0a3b396625202c38,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x0a3b30316625202c,0x315f32315f744c24,0x62090a3a34393534\n"
".quad 0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e,0x0a3b3531202c3131\n"
".quad 0x74672e7074657309,0x702509203233752e,0x202c317225202c36,0x40090a3b31317225\n"
".quad 0x2061726220367025,0x5f32315f744c2409,0x090a3b3630313531,0x09363109636f6c2e\n"
".quad 0x646c090a30093836,0x2e6465726168732e,0x3166250920323366,0x346472255b202c31\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3166250920323366,0x346472255b202c32\n"
".quad 0x61090a3b5d34362b,0x09203233662e6464,0x6625202c33316625,0x32316625202c3131\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920,0x33316625202c5d30\n"
".quad 0x32315f744c240a3b,0x0a3a36303135315f,0x6e79732e72616209,0x6d090a3b30092063\n"
".quad 0x09203233752e766f,0x3b37202c32317225,0x672e70746573090a,0x2509203233752e74\n"
".quad 0x2c317225202c3770,0x090a3b3231722520,0x6172622037702540,0x32315f744c240920\n"
".quad 0x0a3b38313635315f,0x363109636f6c2e09,0x6c090a3009393609,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3431,0x6c090a3b5d302b34,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3531,0x090a3b5d32332b34,0x203233662e646461\n"
".quad 0x25202c3631662509,0x316625202c343166,0x732e7473090a3b35,0x33662e6465726168\n"
".quad 0x346472255b092032,0x316625202c5d302b,0x315f744c240a3b36,0x3a38313635315f32\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d,0x33202c3331722509\n"
".quad 0x2e70746573090a3b,0x09203233752e7467,0x317225202c387025,0x0a3b33317225202c\n"
".quad 0x7262203870254009,0x315f744c24092061,0x3b30333136315f32,0x3109636f6c2e090a\n"
".quad 0x090a300930370936,0x65726168732e646c,0x2509203233662e64,0x72255b202c373166\n"
".quad 0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64,0x72255b202c383166\n"
".quad 0x0a3b5d36312b3464,0x3233662e64646109,0x202c393166250920,0x6625202c37316625\n"
".quad 0x2e7473090a3b3831,0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34\n"
".quad 0x5f744c240a3b3931,0x30333136315f3231,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x3233752e766f6d09,0x202c343172250920,0x70746573090a3b31,0x203233752e74672e\n"
".quad 0x7225202c39702509,0x3b34317225202c31,0x622039702540090a,0x5f744c2409206172\n"
".quad 0x32343636315f3231,0x09636f6c2e090a3b,0x0a30093137093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c30326625,0x0a3b5d302b346472,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c31326625,0x0a3b5d382b346472,0x3233662e64646109\n"
".quad 0x202c323266250920,0x6625202c30326625,0x2e7473090a3b3132,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3232,0x32343636315f3231\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09,0x202c353172250920\n"
".quad 0x70746573090a3b30,0x203233752e71652e,0x25202c3031702509,0x35317225202c3172\n"
".quad 0x3170252140090a3b,0x2409206172622030,0x37315f32315f744c,0x6c2e090a3b343531\n"
".quad 0x323709363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c33326625092032\n"
".quad 0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168,0x2c34326625092032\n"
".quad 0x342b346472255b20,0x2e646461090a3b5d,0x3266250920323366,0x2c33326625202c35\n"
".quad 0x090a3b3432662520,0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225\n"
".quad 0x240a3b3532662520,0x37315f32315f744c,0x6162090a3a343531,0x0920636e79732e72\n"
".quad 0x636f6c2e090a3b30,0x0933303109363109,0x3170252140090a30,0x2409206172622030\n"
".quad 0x37315f32315f744c,0x6c2e090a3b363636,0x303109363109636f,0x2e646c090a300936\n"
".quad 0x662e646572616873,0x3632662509203233,0x61746164735b202c,0x646c090a3b5d302b\n"
".quad 0x752e6d617261702e,0x3164722509203436,0x75635f5f5b202c31,0x5f5f6d7261706164\n"
".quad 0x637564657235315a,0x615069746c754d65,0x3832316a4c497373,0x5076454530624c45\n"
".quad 0x5f675f6a6650664b,0x0a3b5d617461646f,0x3436752e74766309,0x722509203233752e\n"
".quad 0x327225202c323164,0x772e6c756d090a3b,0x203233752e656469,0x202c333164722509\n"
".quad 0x0a3b34202c327225,0x3436752e64646109,0x2c34316472250920,0x202c313164722520\n"
".quad 0x090a3b3331647225,0x61626f6c672e7473,0x5b09203233662e6c,0x5d302b3431647225\n"
".quad 0x0a3b36326625202c,0x315f32315f744c24,0x2e090a3a36363637,0x3109363109636f6c\n"
".quad 0x7865090a30093531,0x57444c240a3b7469,0x35315a5f5f646e65,0x754d656375646572\n"
".quad 0x497373615069746c,0x624c453832316a4c,0x50664b5076454530,0x2f207d090a3a6a66\n"
".quad 0x657235315a5f202f,0x746c754d65637564,0x6a4c497373615069,0x4530624c45383231\n"
".quad 0x6a6650664b507645,0x72746e652e090a0a,0x657235315a5f2079,0x746c754d65637564\n"
".quad 0x6a4c497373615069,0x454530624c453436,0x206a6650664b5076,0x7261702e09090a28\n"
".quad 0x203436752e206d61,0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x4530624c4534366a,0x6a6650664b507645,0x61746164695f675f\n"
".quad 0x7261702e09090a2c,0x203436752e206d61,0x6170616475635f5f,0x7235315a5f5f6d72\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x4530624c4534366a,0x6a6650664b507645\n"
".quad 0x617461646f5f675f,0x7261702e09090a2c,0x203233752e206d61,0x6170616475635f5f\n"
".quad 0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974,0x4530624c4534366a\n"
".quad 0x6a6650664b507645,0x090a7b090a296e5f,0x31752e206765722e,0x3e333c6872252036\n"
".quad 0x206765722e090a3b,0x3c7225203233752e,0x722e090a3b3e3631,0x203436752e206765\n"
".quad 0x3b3e36313c647225,0x2e206765722e090a,0x323c662520323366,0x65722e090a3b3e35\n"
".quad 0x20646572702e2067,0x0a3b3e31313c7025,0x363109636f6c2e09,0x240a300932313109\n"
".quad 0x315a5f5f3142424c,0x4d65637564657235,0x7373615069746c75,0x624c4534366a4c49\n"
".quad 0x50664b5076454530,0x6f6c2e090a3a6a66,0x0936380936310963,0x752e747663090a30\n"
".quad 0x09203631752e3233,0x697425202c317225,0x6f6d090a3b782e64,0x2509203436752e76\n"
".quad 0x616473202c316472,0x747663090a3b6174,0x3233752e3436752e,0x202c326472250920\n"
".quad 0x756d090a3b317225,0x752e656469772e6c,0x3364722509203233,0x34202c317225202c\n"
".quad 0x752e646461090a3b,0x3464722509203436,0x202c31647225202c,0x6d090a3b33647225\n"
".quad 0x09203233662e766f,0x306630202c316625,0x3b30303030303030,0x2f2f092020202020\n"
".quad 0x2e766f6d090a3020,0x3266250920323366,0x303030306630202c,0x2020203b30303030\n"
".quad 0x0a30202f2f092020,0x726168732e747309,0x09203233662e6465,0x5d302b346472255b\n"
".quad 0x090a3b326625202c,0x2e3233752e747663,0x3272250920363175,0x646961746325202c\n"
".quad 0x6c756d090a3b782e,0x33752e6f6c2e3432,0x202c337225092032,0x383231202c327225\n"
".quad 0x752e646461090a3b,0x2c34722509203233,0x7225202c33722520,0x702e646c090a3b31\n"
".quad 0x3233752e6d617261,0x5b202c3572250920,0x6170616475635f5f,0x7235315a5f5f6d72\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x4530624c4534366a,0x6a6650664b507645\n"
".quad 0x6573090a3b5d6e5f,0x33752e65672e7074,0x202c317025092032,0x357225202c347225\n"
".quad 0x2031702540090a3b,0x744c240920617262,0x303832315f33315f,0x2e646461090a3b32\n"
".quad 0x3672250920323375,0x36202c347225202c,0x702e646c090a3b34,0x3233752e6d617261\n"
".quad 0x5b202c3572250920,0x6170616475635f5f,0x7235315a5f5f6d72,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x4530624c4534366a,0x6a6650664b507645,0x6461090a3b5d6e5f\n"
".quad 0x2509203233752e64,0x2c357225202c3772,0x6f6d090a3b343620,0x2509203631752e76\n"
".quad 0x636e25202c316872,0x0a3b782e64696174,0x6469772e6c756d09,0x2509203631752e65\n"
".quad 0x31687225202c3872,0x090a3b383231202c,0x2e3436732e747663,0x6472250920323375\n"
".quad 0x0a3b387225202c35,0x617261702e646c09,0x2509203436752e6d,0x5f5f5b202c366472\n"
".quad 0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375,0x366a4c4973736150\n"
".quad 0x76454530624c4534,0x675f6a6650664b50,0x3b5d61746164695f,0x36752e747663090a\n"
".quad 0x2509203233752e34,0x347225202c376472,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x25202c3864722509,0x090a3b34202c3472,0x203436752e646461,0x25202c3964722509\n"
".quad 0x647225202c366472,0x2e6c756d090a3b38,0x3233752e65646977,0x2c30316472250920\n"
".quad 0x3b34202c38722520,0x5f33315f744c240a,0x200a3a3431333331,0x3e706f6f6c3c2f2f\n"
".quad 0x6f6220706f6f4c20,0x20656e696c207964,0x7473656e202c3638,0x7470656420676e69\n"
".quad 0x7365202c31203a68,0x20646574616d6974,0x6f69746172657469,0x6e6b6e75203a736e\n"
".quad 0x6f6c2e090a6e776f,0x0933390936310963,0x6c672e646c090a30,0x3233662e6c61626f\n"
".quad 0x5b202c3366250920,0x3b5d302b39647225,0x33662e646461090a,0x202c316625092032\n"
".quad 0x316625202c336625,0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920\n"
".quad 0x3b316625202c5d30,0x3109636f6c2e090a,0x090a300936380936,0x6d617261702e646c\n"
".quad 0x722509203233752e,0x75635f5f5b202c35,0x5f5f6d7261706164,0x637564657235315a\n"
".quad 0x615069746c754d65,0x4534366a4c497373,0x4b5076454530624c,0x3b5d6e5f6a665066\n"
".quad 0x3109636f6c2e090a,0x090a300933390936,0x2e65672e70746573,0x3270250920323375\n"
".quad 0x25202c367225202c,0x702540090a3b3572,0x2409206172622032,0x33315f33315f744c\n"
".quad 0x2f2f200a3b303735,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x363820656e696c20,0x6c2064616568202c,0x242064656c656261,0x33315f33315f744c\n"
".quad 0x6f6c2e090a343133,0x0936390936310963,0x6c672e646c090a30,0x3233662e6c61626f\n"
".quad 0x5b202c3466250920,0x3635322b39647225,0x2e646461090a3b5d,0x3166250920323366\n"
".quad 0x25202c346625202c,0x2e7473090a3b3166,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x315f744c240a3b31,0x3a30373533315f33,0x6f6f6c3c2f2f200a\n"
".quad 0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62,0x6568202c36382065\n"
".quad 0x6c6562616c206461,0x315f744c24206465,0x0a34313333315f33,0x3233752e64646109\n"
".quad 0x25202c3672250920,0x3b387225202c3672,0x36752e646461090a,0x2c39647225092034\n"
".quad 0x25202c3964722520,0x73090a3b30316472,0x752e746c2e707465,0x2c33702509203233\n"
".quad 0x7225202c36722520,0x33702540090a3b37,0x4c24092061726220,0x3333315f33315f74\n"
".quad 0x5f744c240a3b3431,0x32303832315f3331,0x09636f6c2e090a3a,0x3009303031093631\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x09363109636f6c2e,0x6d090a3009333031\n"
".quad 0x09203233752e766f,0x3b3133202c397225,0x672e70746573090a,0x2509203233752e74\n"
".quad 0x2c317225202c3470,0x40090a3b39722520,0x2061726220347025,0x5f33315f744c2409\n"
".quad 0x090a3b3833333431,0x09363109636f6c2e,0x646c090a30093736,0x2e6465726168732e\n"
".quad 0x3566250920323366,0x2b346472255b202c,0x2e646c090a3b5d30,0x662e646572616873\n"
".quad 0x2c36662509203233,0x312b346472255b20,0x6461090a3b5d3832,0x2509203233662e64\n"
".quad 0x2c356625202c3766,0x73090a3b36662520,0x6465726168732e74,0x255b09203233662e\n"
".quad 0x202c5d302b346472,0x744c240a3b376625,0x333334315f33315f,0x2e726162090a3a38\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c30317225092032,0x6573090a3b353120\n"
".quad 0x33752e74672e7074,0x202c357025092032,0x317225202c317225,0x35702540090a3b30\n"
".quad 0x4c24092061726220,0x3834315f33315f74,0x6f6c2e090a3b3035,0x0938360936310963\n"
".quad 0x68732e646c090a30,0x3233662e64657261,0x5b202c3866250920,0x3b5d302b34647225\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x255b202c39662509,0x3b5d34362b346472\n"
".quad 0x33662e646461090a,0x2c30316625092032,0x6625202c38662520,0x732e7473090a3b39\n"
".quad 0x33662e6465726168,0x346472255b092032,0x316625202c5d302b,0x315f744c240a3b30\n"
".quad 0x3a30353834315f33,0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d\n"
".quad 0x37202c3131722509,0x2e70746573090a3b,0x09203233752e7467,0x317225202c367025\n"
".quad 0x0a3b31317225202c,0x7262203670254009,0x315f744c24092061,0x3b32363335315f33\n"
".quad 0x3109636f6c2e090a,0x090a300939360936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c313166,0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c323166,0x0a3b5d32332b3464,0x3233662e64646109,0x202c333166250920\n"
".quad 0x6625202c31316625,0x2e7473090a3b3231,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x5f744c240a3b3331,0x32363335315f3331,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x3233752e766f6d09,0x202c323172250920,0x70746573090a3b33\n"
".quad 0x203233752e74672e,0x7225202c37702509,0x3b32317225202c31,0x622037702540090a\n"
".quad 0x5f744c2409206172,0x34373835315f3331,0x09636f6c2e090a3b,0x0a30093037093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c34316625,0x0a3b5d302b346472\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c35316625,0x3b5d36312b346472\n"
".quad 0x33662e646461090a,0x2c36316625092032,0x25202c3431662520,0x7473090a3b353166\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b363166\n"
".quad 0x373835315f33315f,0x2e726162090a3a34,0x3b300920636e7973,0x33752e766f6d090a\n"
".quad 0x2c33317225092032,0x746573090a3b3120,0x3233752e74672e70,0x25202c3870250920\n"
".quad 0x33317225202c3172,0x2038702540090a3b,0x744c240920617262,0x383336315f33315f\n"
".quad 0x636f6c2e090a3b36,0x3009313709363109,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3731662509,0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3831662509,0x3b5d382b34647225,0x33662e646461090a,0x2c39316625092032\n"
".quad 0x25202c3731662520,0x7473090a3b383166,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x744c240a3b393166,0x383336315f33315f,0x2e726162090a3a36\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c34317225092032,0x746573090a3b3020\n"
".quad 0x3233752e71652e70,0x25202c3970250920,0x34317225202c3172,0x3970252140090a3b\n"
".quad 0x4c24092061726220,0x3836315f33315f74,0x6f6c2e090a3b3839,0x0932370936310963\n"
".quad 0x68732e646c090a30,0x3233662e64657261,0x202c303266250920,0x5d302b346472255b\n"
".quad 0x68732e646c090a3b,0x3233662e64657261,0x202c313266250920,0x5d342b346472255b\n"
".quad 0x662e646461090a3b,0x3232662509203233,0x202c30326625202c,0x73090a3b31326625\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472,0x4c240a3b32326625\n"
".quad 0x3836315f33315f74,0x726162090a3a3839,0x300920636e79732e,0x09636f6c2e090a3b\n"
".quad 0x3009333031093631,0x203970252140090a,0x744c240920617262,0x313437315f33315f\n"
".quad 0x636f6c2e090a3b30,0x0936303109363109,0x68732e646c090a30,0x3233662e64657261\n"
".quad 0x202c333266250920,0x302b61746164735b,0x702e646c090a3b5d,0x3436752e6d617261\n"
".quad 0x2c31316472250920,0x616475635f5f5b20,0x315a5f5f6d726170,0x4d65637564657235\n"
".quad 0x7373615069746c75,0x624c4534366a4c49,0x50664b5076454530,0x61646f5f675f6a66\n"
".quad 0x7663090a3b5d6174,0x33752e3436752e74,0x3231647225092032,0x090a3b327225202c\n"
".quad 0x656469772e6c756d,0x722509203233752e,0x327225202c333164,0x6461090a3b34202c\n"
".quad 0x2509203436752e64,0x7225202c34316472,0x647225202c313164,0x2e7473090a3b3331\n"
".quad 0x662e6c61626f6c67,0x6472255b09203233,0x25202c5d302b3431,0x744c240a3b333266\n"
".quad 0x313437315f33315f,0x636f6c2e090a3a30,0x0935313109363109,0x3b74697865090a30\n"
".quad 0x646e6557444c240a,0x64657235315a5f5f,0x69746c754d656375,0x366a4c4973736150\n"
".quad 0x76454530624c4534,0x0a3a6a6650664b50,0x5a5f202f2f207d09,0x6563756465723531\n"
".quad 0x73615069746c754d,0x4c4534366a4c4973,0x664b507645453062,0x652e090a0a6a6650\n"
".quad 0x315a5f207972746e,0x4d65637564657235,0x7373615069746c75,0x624c4532336a4c49\n"
".quad 0x50664b5076454530,0x2e09090a28206a66,0x752e206d61726170,0x6475635f5f203436\n"
".quad 0x5a5f5f6d72617061,0x6563756465723531,0x73615069746c754d,0x4c4532336a4c4973\n"
".quad 0x664b507645453062,0x64695f675f6a6650,0x2e09090a2c617461,0x752e206d61726170\n"
".quad 0x6475635f5f203436,0x5a5f5f6d72617061,0x6563756465723531,0x73615069746c754d\n"
".quad 0x4c4532336a4c4973,0x664b507645453062,0x646f5f675f6a6650,0x2e09090a2c617461\n"
".quad 0x752e206d61726170,0x6475635f5f203233,0x5a5f5f6d72617061,0x6563756465723531\n"
".quad 0x73615069746c754d,0x4c4532336a4c4973,0x664b507645453062,0x090a296e5f6a6650\n"
".quad 0x206765722e090a7b,0x687225203631752e,0x722e090a3b3e333c,0x203233752e206765\n"
".quad 0x0a3b3e35313c7225,0x752e206765722e09,0x313c647225203436,0x65722e090a3b3e36\n"
".quad 0x25203233662e2067,0x090a3b3e32323c66,0x72702e206765722e,0x30313c7025206465\n"
".quad 0x636f6c2e090a3b3e,0x0932313109363109,0x5f3142424c240a30,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x32336a4c49737361,0x5076454530624c45,0x090a3a6a6650664b\n"
".quad 0x09363109636f6c2e,0x7663090a30093638,0x31752e3233752e74,0x202c317225092036\n"
".quad 0x0a3b782e64697425,0x3436752e766f6d09,0x202c316472250920,0x090a3b6174616473\n"
".quad 0x2e3436752e747663,0x6472250920323375,0x0a3b317225202c32,0x6469772e6c756d09\n"
".quad 0x2509203233752e65,0x317225202c336472,0x6461090a3b34202c,0x2509203436752e64\n"
".quad 0x647225202c346472,0x3b33647225202c31,0x33662e766f6d090a,0x202c316625092032\n"
".quad 0x3030303030306630,0x20202020203b3030,0x6d090a30202f2f09,0x09203233662e766f\n"
".quad 0x306630202c326625,0x3b30303030303030,0x2f2f092020202020,0x732e7473090a3020\n"
".quad 0x33662e6465726168,0x346472255b092032,0x326625202c5d302b,0x752e747663090a3b\n"
".quad 0x09203631752e3233,0x746325202c327225,0x090a3b782e646961,0x6f6c2e34326c756d\n"
".quad 0x722509203233752e,0x202c327225202c33,0x646461090a3b3436,0x722509203233752e\n"
".quad 0x202c337225202c34,0x646c090a3b317225,0x752e6d617261702e,0x2c35722509203233\n"
".quad 0x616475635f5f5b20,0x315a5f5f6d726170,0x4d65637564657235,0x7373615069746c75\n"
".quad 0x624c4532336a4c49,0x50664b5076454530,0x090a3b5d6e5f6a66,0x2e65672e70746573\n"
".quad 0x3170250920323375,0x25202c347225202c,0x702540090a3b3572,0x2409206172622031\n"
".quad 0x33315f34315f744c,0x6461090a3b383530,0x2509203233752e64,0x2c347225202c3672\n"
".quad 0x646c090a3b323320,0x752e6d617261702e,0x2c35722509203233,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x4d65637564657235,0x7373615069746c75,0x624c4532336a4c49\n"
".quad 0x50664b5076454530,0x090a3b5d6e5f6a66,0x203233752e646461,0x7225202c37722509\n"
".quad 0x090a3b3233202c35,0x203631752e766f6d,0x25202c3168722509,0x782e64696174636e\n"
".quad 0x772e6c756d090a3b,0x203631752e656469,0x7225202c38722509,0x0a3b3436202c3168\n"
".quad 0x3436732e74766309,0x722509203233752e,0x3b387225202c3564,0x7261702e646c090a\n"
".quad 0x09203436752e6d61,0x5f5b202c36647225,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x454530624c453233,0x5f6a6650664b5076\n"
".quad 0x5d61746164695f67,0x752e747663090a3b,0x09203233752e3436,0x7225202c37647225\n"
".quad 0x2e6c756d090a3b34,0x3233752e65646977,0x202c386472250920,0x0a3b34202c347225\n"
".quad 0x3436752e64646109,0x202c396472250920,0x7225202c36647225,0x6c756d090a3b3864\n"
".quad 0x33752e656469772e,0x3031647225092032,0x34202c387225202c,0x34315f744c240a3b\n"
".quad 0x0a3a30373533315f,0x706f6f6c3c2f2f20,0x6220706f6f4c203e,0x656e696c2079646f\n"
".quad 0x73656e202c363820,0x70656420676e6974,0x65202c31203a6874,0x646574616d697473\n"
".quad 0x6974617265746920,0x6b6e75203a736e6f,0x6c2e090a6e776f6e,0x333909363109636f\n"
".quad 0x672e646c090a3009,0x33662e6c61626f6c,0x202c336625092032,0x5d302b396472255b\n"
".quad 0x662e646461090a3b,0x2c31662509203233,0x6625202c33662520,0x732e7473090a3b31\n"
".quad 0x33662e6465726168,0x346472255b092032,0x316625202c5d302b,0x09636f6c2e090a3b\n"
".quad 0x0a30093638093631,0x617261702e646c09,0x2509203233752e6d,0x635f5f5b202c3572\n"
".quad 0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563,0x32336a4c49737361\n"
".quad 0x5076454530624c45,0x5d6e5f6a6650664b,0x09636f6c2e090a3b,0x0a30093339093631\n"
".quad 0x65672e7074657309,0x702509203233752e,0x202c367225202c32,0x2540090a3b357225\n"
".quad 0x0920617262203270,0x315f34315f744c24,0x2f200a3b36323833,0x203e706f6f6c3c2f\n"
".quad 0x20666f2074726150,0x646f6220706f6f6c,0x3820656e696c2079,0x2064616568202c36\n"
".quad 0x2064656c6562616c,0x315f34315f744c24,0x6c2e090a30373533,0x363909363109636f\n"
".quad 0x672e646c090a3009,0x33662e6c61626f6c,0x202c346625092032,0x32312b396472255b\n"
".quad 0x646461090a3b5d38,0x662509203233662e,0x202c346625202c31,0x7473090a3b316625\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464,0x5f744c240a3b3166\n"
".quad 0x36323833315f3431,0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20\n"
".quad 0x696c2079646f6220,0x68202c363820656e,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x30373533315f3431,0x33752e646461090a,0x202c367225092032,0x387225202c367225\n"
".quad 0x752e646461090a3b,0x3964722509203436,0x202c39647225202c,0x090a3b3031647225\n"
".quad 0x2e746c2e70746573,0x3370250920323375,0x25202c367225202c,0x702540090a3b3772\n"
".quad 0x2409206172622033,0x33315f34315f744c,0x744c240a3b303735,0x353033315f34315f\n"
".quad 0x636f6c2e090a3a38,0x3009373609363109,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x203233752e766f6d,0x3531202c39722509,0x2e70746573090a3b,0x09203233752e7467\n"
".quad 0x317225202c347025,0x090a3b397225202c,0x6172622034702540,0x34315f744c240920\n"
".quad 0x0a3b34393534315f,0x363109636f6c2e09,0x6c090a3009383609,0x6465726168732e64\n"
".quad 0x662509203233662e,0x346472255b202c35,0x646c090a3b5d302b,0x2e6465726168732e\n"
".quad 0x3666250920323366,0x2b346472255b202c,0x6461090a3b5d3436,0x2509203233662e64\n"
".quad 0x2c356625202c3766,0x73090a3b36662520,0x6465726168732e74,0x255b09203233662e\n"
".quad 0x202c5d302b346472,0x744c240a3b376625,0x393534315f34315f,0x2e726162090a3a34\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c30317225092032,0x746573090a3b3720\n"
".quad 0x3233752e74672e70,0x25202c3570250920,0x30317225202c3172,0x2035702540090a3b\n"
".quad 0x744c240920617262,0x303135315f34315f,0x636f6c2e090a3b36,0x3009393609363109\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x255b202c38662509,0x0a3b5d302b346472\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x72255b202c396625,0x0a3b5d32332b3464\n"
".quad 0x3233662e64646109,0x202c303166250920,0x396625202c386625,0x68732e7473090a3b\n"
".quad 0x3233662e64657261,0x2b346472255b0920,0x30316625202c5d30,0x34315f744c240a3b\n"
".quad 0x0a3a36303135315f,0x6e79732e72616209,0x6d090a3b30092063,0x09203233752e766f\n"
".quad 0x3b33202c31317225,0x672e70746573090a,0x2509203233752e74,0x2c317225202c3670\n"
".quad 0x090a3b3131722520,0x6172622036702540,0x34315f744c240920,0x0a3b38313635315f\n"
".quad 0x363109636f6c2e09,0x6c090a3009303709,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3131,0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3231,0x090a3b5d36312b34,0x203233662e646461,0x25202c3331662509\n"
".quad 0x316625202c313166,0x732e7473090a3b32,0x33662e6465726168,0x346472255b092032\n"
".quad 0x316625202c5d302b,0x315f744c240a3b33,0x3a38313635315f34,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x203233752e766f6d,0x31202c3231722509,0x2e70746573090a3b\n"
".quad 0x09203233752e7467,0x317225202c377025,0x0a3b32317225202c,0x7262203770254009\n"
".quad 0x315f744c24092061,0x3b30333136315f34,0x3109636f6c2e090a,0x090a300931370936\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c343166,0x090a3b5d302b3464\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c353166,0x090a3b5d382b3464\n"
".quad 0x203233662e646461,0x25202c3631662509,0x316625202c343166,0x732e7473090a3b35\n"
".quad 0x33662e6465726168,0x346472255b092032,0x316625202c5d302b,0x315f744c240a3b36\n"
".quad 0x3a30333136315f34,0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d\n"
".quad 0x30202c3331722509,0x2e70746573090a3b,0x09203233752e7165,0x317225202c387025\n"
".quad 0x0a3b33317225202c,0x6220387025214009,0x5f744c2409206172,0x32343636315f3431\n"
".quad 0x09636f6c2e090a3b,0x0a30093237093631,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c37316625,0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c38316625,0x0a3b5d342b346472,0x3233662e64646109,0x202c393166250920\n"
".quad 0x6625202c37316625,0x2e7473090a3b3831,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x5f744c240a3b3931,0x32343636315f3431,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x363109636f6c2e09,0x090a300933303109,0x7262203870252140\n"
".quad 0x315f744c24092061,0x3b34353137315f34,0x3109636f6c2e090a,0x0a30093630310936\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x735b202c30326625,0x3b5d302b61746164\n"
".quad 0x7261702e646c090a,0x09203436752e6d61,0x5b202c3131647225,0x6170616475635f5f\n"
".quad 0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974,0x4530624c4532336a\n"
".quad 0x6a6650664b507645,0x617461646f5f675f,0x2e747663090a3b5d,0x203233752e343675\n"
".quad 0x202c323164722509,0x756d090a3b327225,0x752e656469772e6c,0x3164722509203233\n"
".quad 0x202c327225202c33,0x2e646461090a3b34,0x6472250920343675,0x31647225202c3431\n"
".quad 0x3331647225202c31,0x6c672e7473090a3b,0x3233662e6c61626f,0x34316472255b0920\n"
".quad 0x326625202c5d302b,0x315f744c240a3b30,0x3a34353137315f34,0x3109636f6c2e090a\n"
".quad 0x0a30093531310936,0x240a3b7469786509,0x5f5f646e6557444c,0x637564657235315a\n"
".quad 0x615069746c754d65,0x4532336a4c497373,0x4b5076454530624c,0x7d090a3a6a665066\n"
".quad 0x35315a5f202f2f20,0x754d656375646572,0x497373615069746c,0x30624c4532336a4c\n"
".quad 0x6650664b50764545,0x746e652e090a0a6a,0x7235315a5f207972,0x6c754d6563756465\n"
".quad 0x4c49737361506974,0x4530624c4536316a,0x6a6650664b507645,0x61702e09090a2820\n"
".quad 0x3436752e206d6172,0x70616475635f5f20,0x35315a5f5f6d7261,0x754d656375646572\n"
".quad 0x497373615069746c,0x30624c4536316a4c,0x6650664b50764545,0x746164695f675f6a\n"
".quad 0x61702e09090a2c61,0x3436752e206d6172,0x70616475635f5f20,0x35315a5f5f6d7261\n"
".quad 0x754d656375646572,0x497373615069746c,0x30624c4536316a4c,0x6650664b50764545\n"
".quad 0x7461646f5f675f6a,0x61702e09090a2c61,0x3233752e206d6172,0x70616475635f5f20\n"
".quad 0x35315a5f5f6d7261,0x754d656375646572,0x497373615069746c,0x30624c4536316a4c\n"
".quad 0x6650664b50764545,0x0a7b090a296e5f6a,0x752e206765722e09,0x333c687225203631\n"
".quad 0x6765722e090a3b3e,0x7225203233752e20,0x2e090a3b3e34313c,0x3436752e20676572\n"
".quad 0x3e36313c64722520,0x206765722e090a3b,0x3c6625203233662e,0x722e090a3b3e3931\n"
".quad 0x646572702e206765,0x0a3b3e393c702520,0x363109636f6c2e09,0x240a300932313109\n"
".quad 0x315a5f5f3142424c,0x4d65637564657235,0x7373615069746c75,0x624c4536316a4c49\n"
".quad 0x50664b5076454530,0x6f6c2e090a3a6a66,0x0936380936310963,0x752e747663090a30\n"
".quad 0x09203631752e3233,0x697425202c317225,0x6f6d090a3b782e64,0x2509203436752e76\n"
".quad 0x616473202c316472,0x747663090a3b6174,0x3233752e3436752e,0x202c326472250920\n"
".quad 0x756d090a3b317225,0x752e656469772e6c,0x3364722509203233,0x34202c317225202c\n"
".quad 0x752e646461090a3b,0x3464722509203436,0x202c31647225202c,0x6d090a3b33647225\n"
".quad 0x09203233662e766f,0x306630202c316625,0x3b30303030303030,0x2f2f092020202020\n"
".quad 0x2e766f6d090a3020,0x3266250920323366,0x303030306630202c,0x2020203b30303030\n"
".quad 0x0a30202f2f092020,0x726168732e747309,0x09203233662e6465,0x5d302b346472255b\n"
".quad 0x090a3b326625202c,0x2e3233752e747663,0x3272250920363175,0x646961746325202c\n"
".quad 0x6c756d090a3b782e,0x33752e6f6c2e3432,0x202c337225092032,0x3b3233202c327225\n"
".quad 0x33752e646461090a,0x202c347225092032,0x317225202c337225,0x61702e646c090a3b\n"
".quad 0x203233752e6d6172,0x5f5b202c35722509,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x454530624c453631,0x5f6a6650664b5076\n"
".quad 0x746573090a3b5d6e,0x3233752e65672e70,0x25202c3170250920,0x3b357225202c3472\n"
".quad 0x622031702540090a,0x5f744c2409206172,0x34313333315f3531,0x752e646461090a3b\n"
".quad 0x2c36722509203233,0x3631202c34722520,0x61702e646c090a3b,0x203233752e6d6172\n"
".quad 0x5f5b202c35722509,0x726170616475635f,0x657235315a5f5f6d,0x746c754d65637564\n"
".quad 0x6a4c497373615069,0x454530624c453631,0x5f6a6650664b5076,0x646461090a3b5d6e\n"
".quad 0x722509203233752e,0x202c357225202c37,0x766f6d090a3b3631,0x722509203631752e\n"
".quad 0x74636e25202c3168,0x090a3b782e646961,0x656469772e6c756d,0x722509203631752e\n"
".quad 0x2c31687225202c38,0x7663090a3b323320,0x33752e3436732e74,0x2c35647225092032\n"
".quad 0x6c090a3b38722520,0x2e6d617261702e64,0x6472250920343675,0x75635f5f5b202c36\n"
".quad 0x5f5f6d7261706164,0x637564657235315a,0x615069746c754d65,0x4536316a4c497373\n"
".quad 0x4b5076454530624c,0x695f675f6a665066,0x090a3b5d61746164,0x2e3436752e747663\n"
".quad 0x6472250920323375,0x0a3b347225202c37,0x6469772e6c756d09,0x2509203233752e65\n"
".quad 0x347225202c386472,0x6461090a3b34202c,0x2509203436752e64,0x647225202c396472\n"
".quad 0x3b38647225202c36,0x69772e6c756d090a,0x09203233752e6564,0x25202c3031647225\n"
".quad 0x240a3b34202c3872,0x33315f35315f744c,0x2f2f200a3a363238,0x4c203e706f6f6c3c\n"
".quad 0x79646f6220706f6f,0x363820656e696c20,0x6e697473656e202c,0x3a68747065642067\n"
".quad 0x69747365202c3120,0x746920646574616d,0x736e6f6974617265,0x776f6e6b6e75203a\n"
".quad 0x09636f6c2e090a6e,0x0a30093339093631,0x626f6c672e646c09,0x09203233662e6c61\n"
".quad 0x72255b202c336625,0x090a3b5d302b3964,0x203233662e646461,0x6625202c31662509\n"
".quad 0x0a3b316625202c33,0x726168732e747309,0x09203233662e6465,0x5d302b346472255b\n"
".quad 0x090a3b316625202c,0x09363109636f6c2e,0x646c090a30093638,0x752e6d617261702e\n"
".quad 0x2c35722509203233,0x616475635f5f5b20,0x315a5f5f6d726170,0x4d65637564657235\n"
".quad 0x7373615069746c75,0x624c4536316a4c49,0x50664b5076454530,0x090a3b5d6e5f6a66\n"
".quad 0x09363109636f6c2e,0x6573090a30093339,0x33752e65672e7074,0x202c327025092032\n"
".quad 0x357225202c367225,0x2032702540090a3b,0x744c240920617262,0x383034315f35315f\n"
".quad 0x6c3c2f2f200a3b32,0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070\n"
".quad 0x202c363820656e69,0x62616c2064616568,0x744c242064656c65,0x323833315f35315f\n"
".quad 0x09636f6c2e090a36,0x0a30093639093631,0x626f6c672e646c09,0x09203233662e6c61\n"
".quad 0x72255b202c346625,0x0a3b5d34362b3964,0x3233662e64646109,0x25202c3166250920\n"
".quad 0x3b316625202c3466,0x6168732e7473090a,0x203233662e646572,0x302b346472255b09\n"
".quad 0x0a3b316625202c5d,0x315f35315f744c24,0x2f200a3a32383034,0x203e706f6f6c3c2f\n"
".quad 0x20666f2074726150,0x646f6220706f6f6c,0x3820656e696c2079,0x2064616568202c36\n"
".quad 0x2064656c6562616c,0x315f35315f744c24,0x6461090a36323833,0x2509203233752e64\n"
".quad 0x2c367225202c3672,0x61090a3b38722520,0x09203436752e6464,0x7225202c39647225\n"
".quad 0x31647225202c3964,0x70746573090a3b30,0x203233752e746c2e,0x7225202c33702509\n"
".quad 0x0a3b377225202c36,0x7262203370254009,0x315f744c24092061,0x3b36323833315f35\n"
".quad 0x5f35315f744c240a,0x090a3a3431333331,0x09363109636f6c2e,0x6162090a30093836\n"
".quad 0x0920636e79732e72,0x2e766f6d090a3b30,0x3972250920323375,0x6573090a3b37202c\n"
".quad 0x33752e74672e7074,0x202c347025092032,0x397225202c317225,0x2034702540090a3b\n"
".quad 0x744c240920617262,0x353834315f35315f,0x636f6c2e090a3b30,0x3009393609363109\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x255b202c35662509,0x0a3b5d302b346472\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x72255b202c366625,0x0a3b5d32332b3464\n"
".quad 0x3233662e64646109,0x25202c3766250920,0x3b366625202c3566,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x302b346472255b09,0x0a3b376625202c5d,0x315f35315f744c24\n"
".quad 0x62090a3a30353834,0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e\n"
".quad 0x090a3b33202c3031,0x2e74672e70746573,0x3570250920323375,0x25202c317225202c\n"
".quad 0x2540090a3b303172,0x0920617262203570,0x315f35315f744c24,0x2e090a3b32363335\n"
".quad 0x3709363109636f6c,0x2e646c090a300930,0x662e646572616873,0x2c38662509203233\n"
".quad 0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168,0x202c396625092032\n"
".quad 0x36312b346472255b,0x2e646461090a3b5d,0x3166250920323366,0x202c386625202c30\n"
".quad 0x7473090a3b396625,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x744c240a3b303166,0x363335315f35315f,0x2e726162090a3a32,0x3b300920636e7973\n"
".quad 0x33752e766f6d090a,0x2c31317225092032,0x746573090a3b3120,0x3233752e74672e70\n"
".quad 0x25202c3670250920,0x31317225202c3172,0x2036702540090a3b,0x744c240920617262\n"
".quad 0x373835315f35315f,0x636f6c2e090a3b34,0x3009313709363109,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3131662509,0x3b5d302b34647225,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3231662509,0x3b5d382b34647225,0x33662e646461090a\n"
".quad 0x2c33316625092032,0x25202c3131662520,0x7473090a3b323166,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b333166,0x373835315f35315f\n"
".quad 0x2e726162090a3a34,0x3b300920636e7973,0x33752e766f6d090a,0x2c32317225092032\n"
".quad 0x746573090a3b3020,0x3233752e71652e70,0x25202c3770250920,0x32317225202c3172\n"
".quad 0x3770252140090a3b,0x4c24092061726220,0x3336315f35315f74,0x6f6c2e090a3b3638\n"
".quad 0x0932370936310963,0x68732e646c090a30,0x3233662e64657261,0x202c343166250920\n"
".quad 0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261,0x202c353166250920\n"
".quad 0x5d342b346472255b,0x662e646461090a3b,0x3631662509203233,0x202c34316625202c\n"
".quad 0x73090a3b35316625,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x4c240a3b36316625,0x3336315f35315f74,0x726162090a3a3638,0x300920636e79732e\n"
".quad 0x09636f6c2e090a3b,0x3009333031093631,0x203770252140090a,0x744c240920617262\n"
".quad 0x393836315f35315f,0x636f6c2e090a3b38,0x0936303109363109,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x202c373166250920,0x302b61746164735b,0x702e646c090a3b5d\n"
".quad 0x3436752e6d617261,0x2c31316472250920,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x624c4536316a4c49,0x50664b5076454530\n"
".quad 0x61646f5f675f6a66,0x7663090a3b5d6174,0x33752e3436752e74,0x3231647225092032\n"
".quad 0x090a3b327225202c,0x656469772e6c756d,0x722509203233752e,0x327225202c333164\n"
".quad 0x6461090a3b34202c,0x2509203436752e64,0x7225202c34316472,0x647225202c313164\n"
".quad 0x2e7473090a3b3331,0x662e6c61626f6c67,0x6472255b09203233,0x25202c5d302b3431\n"
".quad 0x744c240a3b373166,0x393836315f35315f,0x636f6c2e090a3a38,0x0935313109363109\n"
".quad 0x3b74697865090a30,0x646e6557444c240a,0x64657235315a5f5f,0x69746c754d656375\n"
".quad 0x316a4c4973736150,0x76454530624c4536,0x0a3a6a6650664b50,0x5a5f202f2f207d09\n"
".quad 0x6563756465723531,0x73615069746c754d,0x4c4536316a4c4973,0x664b507645453062\n"
".quad 0x652e090a0a6a6650,0x315a5f207972746e,0x4d65637564657235,0x7373615069746c75\n"
".quad 0x30624c45386a4c49,0x6650664b50764545,0x702e09090a28206a,0x36752e206d617261\n"
".quad 0x616475635f5f2034,0x315a5f5f6d726170,0x4d65637564657235,0x7373615069746c75\n"
".quad 0x30624c45386a4c49,0x6650664b50764545,0x746164695f675f6a,0x61702e09090a2c61\n"
".quad 0x3436752e206d6172,0x70616475635f5f20,0x35315a5f5f6d7261,0x754d656375646572\n"
".quad 0x497373615069746c,0x4530624c45386a4c,0x6a6650664b507645,0x617461646f5f675f\n"
".quad 0x7261702e09090a2c,0x203233752e206d61,0x6170616475635f5f,0x7235315a5f5f6d72\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x454530624c45386a,0x5f6a6650664b5076\n"
".quad 0x2e090a7b090a296e,0x3631752e20676572,0x3b3e333c68722520,0x2e206765722e090a\n"
".quad 0x313c722520323375,0x65722e090a3b3e33,0x25203436752e2067,0x0a3b3e36313c6472\n"
".quad 0x662e206765722e09,0x36313c6625203233,0x6765722e090a3b3e,0x2520646572702e20\n"
".quad 0x2e090a3b3e383c70,0x3109363109636f6c,0x424c240a30093231,0x7235315a5f5f3142\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x454530624c45386a,0x3a6a6650664b5076\n"
".quad 0x3109636f6c2e090a,0x090a300936380936,0x2e3233752e747663,0x3172250920363175\n"
".quad 0x782e64697425202c,0x752e766f6d090a3b,0x3164722509203436,0x3b6174616473202c\n"
".quad 0x36752e747663090a,0x2509203233752e34,0x317225202c326472,0x772e6c756d090a3b\n"
".quad 0x203233752e656469,0x25202c3364722509,0x090a3b34202c3172,0x203436752e646461\n"
".quad 0x25202c3464722509,0x647225202c316472,0x2e766f6d090a3b33,0x3166250920323366\n"
".quad 0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020,0x3233662e766f6d09\n"
".quad 0x30202c3266250920,0x3030303030303066,0x0920202020203b30,0x7473090a30202f2f\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464,0x747663090a3b3266\n"
".quad 0x3631752e3233752e,0x25202c3272250920,0x3b782e6469617463,0x2e34326c756d090a\n"
".quad 0x09203233752e6f6c,0x327225202c337225,0x61090a3b3631202c,0x09203233752e6464\n"
".quad 0x337225202c347225,0x090a3b317225202c,0x6d617261702e646c,0x722509203233752e\n"
".quad 0x75635f5f5b202c35,0x5f5f6d7261706164,0x637564657235315a,0x615069746c754d65\n"
".quad 0x4c45386a4c497373,0x664b507645453062,0x0a3b5d6e5f6a6650,0x65672e7074657309\n"
".quad 0x702509203233752e,0x202c347225202c31,0x2540090a3b357225,0x0920617262203170\n"
".quad 0x315f36315f744c24,0x61090a3b30373533,0x09203233752e6464,0x347225202c367225\n"
".quad 0x646c090a3b38202c,0x752e6d617261702e,0x2c35722509203233,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x4d65637564657235,0x7373615069746c75,0x30624c45386a4c49\n"
".quad 0x6650664b50764545,0x61090a3b5d6e5f6a,0x09203233752e6464,0x357225202c377225\n"
".quad 0x6f6d090a3b38202c,0x2509203631752e76,0x636e25202c316872,0x0a3b782e64696174\n"
".quad 0x6469772e6c756d09,0x2509203631752e65,0x31687225202c3872,0x63090a3b3631202c\n"
".quad 0x752e3436732e7476,0x3564722509203233,0x090a3b387225202c,0x6d617261702e646c\n"
".quad 0x722509203436752e,0x635f5f5b202c3664,0x5f6d726170616475,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x45386a4c49737361,0x4b5076454530624c,0x695f675f6a665066\n"
".quad 0x090a3b5d61746164,0x2e3436752e747663,0x6472250920323375,0x0a3b347225202c37\n"
".quad 0x6469772e6c756d09,0x2509203233752e65,0x347225202c386472,0x6461090a3b34202c\n"
".quad 0x2509203436752e64,0x647225202c396472,0x3b38647225202c36,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x25202c3031647225,0x240a3b34202c3872,0x34315f36315f744c\n"
".quad 0x2f2f200a3a323830,0x4c203e706f6f6c3c,0x79646f6220706f6f,0x363820656e696c20\n"
".quad 0x6e697473656e202c,0x3a68747065642067,0x69747365202c3120,0x746920646574616d\n"
".quad 0x736e6f6974617265,0x776f6e6b6e75203a,0x09636f6c2e090a6e,0x0a30093339093631\n"
".quad 0x626f6c672e646c09,0x09203233662e6c61,0x72255b202c336625,0x090a3b5d302b3964\n"
".quad 0x203233662e646461,0x6625202c31662509,0x0a3b316625202c33,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x090a3b316625202c,0x09363109636f6c2e\n"
".quad 0x646c090a30093638,0x752e6d617261702e,0x2c35722509203233,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x4d65637564657235,0x7373615069746c75,0x30624c45386a4c49\n"
".quad 0x6650664b50764545,0x2e090a3b5d6e5f6a,0x3909363109636f6c,0x746573090a300933\n"
".quad 0x3233752e65672e70,0x25202c3270250920,0x3b357225202c3672,0x622032702540090a\n"
".quad 0x5f744c2409206172,0x38333334315f3631,0x6f6c3c2f2f200a3b,0x74726150203e706f\n"
".quad 0x706f6f6c20666f20,0x696c2079646f6220,0x68202c363820656e,0x6562616c20646165\n"
".quad 0x5f744c242064656c,0x32383034315f3631,0x3109636f6c2e090a,0x090a300936390936\n"
".quad 0x61626f6c672e646c,0x2509203233662e6c,0x6472255b202c3466,0x090a3b5d32332b39\n"
".quad 0x203233662e646461,0x6625202c31662509,0x0a3b316625202c34,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x240a3b316625202c,0x34315f36315f744c\n"
".quad 0x2f2f200a3a383333,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x363820656e696c20,0x6c2064616568202c,0x242064656c656261,0x34315f36315f744c\n"
".quad 0x646461090a323830,0x722509203233752e,0x202c367225202c36,0x6461090a3b387225\n"
".quad 0x2509203436752e64,0x647225202c396472,0x3031647225202c39,0x2e70746573090a3b\n"
".quad 0x09203233752e746c,0x367225202c337025,0x090a3b377225202c,0x6172622033702540\n"
".quad 0x36315f744c240920,0x0a3b32383034315f,0x315f36315f744c24,0x2e090a3a30373533\n"
".quad 0x3609363109636f6c,0x726162090a300939,0x300920636e79732e,0x752e766f6d090a3b\n"
".quad 0x2c39722509203233,0x746573090a3b3320,0x3233752e74672e70,0x25202c3470250920\n"
".quad 0x3b397225202c3172,0x622034702540090a,0x5f744c2409206172,0x36303135315f3631\n"
".quad 0x09636f6c2e090a3b,0x0a30093037093631,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x72255b202c356625,0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x6472255b202c3666,0x090a3b5d36312b34,0x203233662e646461,0x6625202c37662509\n"
".quad 0x0a3b366625202c35,0x726168732e747309,0x09203233662e6465,0x5d302b346472255b\n"
".quad 0x240a3b376625202c,0x35315f36315f744c,0x6162090a3a363031,0x0920636e79732e72\n"
".quad 0x2e766f6d090a3b30,0x3172250920323375,0x73090a3b31202c30,0x752e74672e707465\n"
".quad 0x2c35702509203233,0x7225202c31722520,0x702540090a3b3031,0x2409206172622035\n"
".quad 0x35315f36315f744c,0x6c2e090a3b383136,0x313709363109636f,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x202c386625092032,0x5d302b346472255b,0x68732e646c090a3b\n"
".quad 0x3233662e64657261,0x5b202c3966250920,0x3b5d382b34647225,0x33662e646461090a\n"
".quad 0x2c30316625092032,0x6625202c38662520,0x732e7473090a3b39,0x33662e6465726168\n"
".quad 0x346472255b092032,0x316625202c5d302b,0x315f744c240a3b30,0x3a38313635315f36\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d,0x30202c3131722509\n"
".quad 0x2e70746573090a3b,0x09203233752e7165,0x317225202c367025,0x0a3b31317225202c\n"
".quad 0x6220367025214009,0x5f744c2409206172,0x30333136315f3631,0x09636f6c2e090a3b\n"
".quad 0x0a30093237093631,0x726168732e646c09,0x09203233662e6465,0x255b202c31316625\n"
".quad 0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465,0x255b202c32316625\n"
".quad 0x0a3b5d342b346472,0x3233662e64646109,0x202c333166250920,0x6625202c31316625\n"
".quad 0x2e7473090a3b3231,0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34\n"
".quad 0x5f744c240a3b3331,0x30333136315f3631,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x363109636f6c2e09,0x090a300933303109,0x7262203670252140,0x315f744c24092061\n"
".quad 0x3b32343636315f36,0x3109636f6c2e090a,0x0a30093630310936,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x735b202c34316625,0x3b5d302b61746164,0x7261702e646c090a\n"
".quad 0x09203436752e6d61,0x5b202c3131647225,0x6170616475635f5f,0x7235315a5f5f6d72\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x454530624c45386a,0x5f6a6650664b5076\n"
".quad 0x5d617461646f5f67,0x752e747663090a3b,0x09203233752e3436,0x25202c3231647225\n"
".quad 0x6c756d090a3b3272,0x33752e656469772e,0x3331647225092032,0x34202c327225202c\n"
".quad 0x752e646461090a3b,0x3164722509203436,0x3131647225202c34,0x3b3331647225202c\n"
".quad 0x6f6c672e7473090a,0x203233662e6c6162,0x2b34316472255b09,0x34316625202c5d30\n"
".quad 0x36315f744c240a3b,0x0a3a32343636315f,0x363109636f6c2e09,0x090a300935313109\n"
".quad 0x4c240a3b74697865,0x5a5f5f646e655744,0x6563756465723531,0x73615069746c754d\n"
".quad 0x624c45386a4c4973,0x50664b5076454530,0x2f207d090a3a6a66,0x657235315a5f202f\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x76454530624c4538,0x0a0a6a6650664b50\n"
".quad 0x207972746e652e09,0x7564657235315a5f,0x5069746c754d6563,0x45346a4c49737361\n"
".quad 0x4b5076454530624c,0x090a28206a665066,0x206d617261702e09,0x635f5f203436752e\n"
".quad 0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563,0x45346a4c49737361\n"
".quad 0x4b5076454530624c,0x695f675f6a665066,0x09090a2c61746164,0x2e206d617261702e\n"
".quad 0x75635f5f20343675,0x5f5f6d7261706164,0x637564657235315a,0x615069746c754d65\n"
".quad 0x4c45346a4c497373,0x664b507645453062,0x646f5f675f6a6650,0x2e09090a2c617461\n"
".quad 0x752e206d61726170,0x6475635f5f203233,0x5a5f5f6d72617061,0x6563756465723531\n"
".quad 0x73615069746c754d,0x624c45346a4c4973,0x50664b5076454530,0x7b090a296e5f6a66\n"
".quad 0x2e206765722e090a,0x3c68722520363175,0x65722e090a3b3e33,0x25203233752e2067\n"
".quad 0x090a3b3e32313c72,0x36752e206765722e,0x36313c6472252034,0x6765722e090a3b3e\n"
".quad 0x6625203233662e20,0x2e090a3b3e33313c,0x6572702e20676572,0x3b3e373c70252064\n"
".quad 0x3109636f6c2e090a,0x0a30093231310936,0x5a5f5f3142424c24,0x6563756465723531\n"
".quad 0x73615069746c754d,0x624c45346a4c4973,0x50664b5076454530,0x6f6c2e090a3a6a66\n"
".quad 0x0936380936310963,0x752e747663090a30,0x09203631752e3233,0x697425202c317225\n"
".quad 0x6f6d090a3b782e64,0x2509203436752e76,0x616473202c316472,0x747663090a3b6174\n"
".quad 0x3233752e3436752e,0x202c326472250920,0x756d090a3b317225,0x752e656469772e6c\n"
".quad 0x3364722509203233,0x34202c317225202c,0x752e646461090a3b,0x3464722509203436\n"
".quad 0x202c31647225202c,0x6d090a3b33647225,0x09203233662e766f,0x306630202c316625\n"
".quad 0x3b30303030303030,0x2f2f092020202020,0x2e766f6d090a3020,0x3266250920323366\n"
".quad 0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x090a3b326625202c,0x2e3233752e747663\n"
".quad 0x3272250920363175,0x646961746325202c,0x6c756d090a3b782e,0x33752e6f6c2e3432\n"
".quad 0x202c337225092032,0x0a3b38202c327225,0x3233752e64646109,0x25202c3472250920\n"
".quad 0x3b317225202c3372,0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c357225\n"
".quad 0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375,0x346a4c4973736150\n"
".quad 0x5076454530624c45,0x5d6e5f6a6650664b,0x2e70746573090a3b,0x09203233752e6567\n"
".quad 0x347225202c317025,0x090a3b357225202c,0x6172622031702540,0x37315f744c240920\n"
".quad 0x0a3b36323833315f,0x3233752e64646109,0x25202c3672250920,0x090a3b34202c3472\n"
".quad 0x6d617261702e646c,0x722509203233752e,0x75635f5f5b202c35,0x5f5f6d7261706164\n"
".quad 0x637564657235315a,0x615069746c754d65,0x4c45346a4c497373,0x664b507645453062\n"
".quad 0x0a3b5d6e5f6a6650,0x3233752e64646109,0x25202c3772250920,0x090a3b34202c3572\n"
".quad 0x203631752e766f6d,0x25202c3168722509,0x782e64696174636e,0x772e6c756d090a3b\n"
".quad 0x203631752e656469,0x7225202c38722509,0x090a3b38202c3168,0x2e3436732e747663\n"
".quad 0x6472250920323375,0x0a3b387225202c35,0x617261702e646c09,0x2509203436752e6d\n"
".quad 0x5f5f5b202c366472,0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375\n"
".quad 0x346a4c4973736150,0x5076454530624c45,0x5f675f6a6650664b,0x0a3b5d6174616469\n"
".quad 0x3436752e74766309,0x722509203233752e,0x3b347225202c3764,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x7225202c38647225,0x61090a3b34202c34,0x09203436752e6464\n"
".quad 0x7225202c39647225,0x38647225202c3664,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x202c303164722509,0x0a3b34202c387225,0x315f37315f744c24,0x2f200a3a38333334\n"
".quad 0x203e706f6f6c3c2f,0x646f6220706f6f4c,0x3820656e696c2079,0x697473656e202c36\n"
".quad 0x687470656420676e,0x747365202c31203a,0x6920646574616d69,0x6e6f697461726574\n"
".quad 0x6f6e6b6e75203a73,0x636f6c2e090a6e77,0x3009333909363109,0x6f6c672e646c090a\n"
".quad 0x203233662e6c6162,0x255b202c33662509,0x0a3b5d302b396472,0x3233662e64646109\n"
".quad 0x25202c3166250920,0x3b316625202c3366,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x302b346472255b09,0x0a3b316625202c5d,0x363109636f6c2e09,0x6c090a3009363809\n"
".quad 0x2e6d617261702e64,0x3572250920323375,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723531,0x73615069746c754d,0x624c45346a4c4973,0x50664b5076454530\n"
".quad 0x090a3b5d6e5f6a66,0x09363109636f6c2e,0x6573090a30093339,0x33752e65672e7074\n"
".quad 0x202c327025092032,0x357225202c367225,0x2032702540090a3b,0x744c240920617262\n"
".quad 0x393534315f37315f,0x6c3c2f2f200a3b34,0x726150203e706f6f,0x6f6f6c20666f2074\n"
".quad 0x6c2079646f622070,0x202c363820656e69,0x62616c2064616568,0x744c242064656c65\n"
".quad 0x333334315f37315f,0x09636f6c2e090a38,0x0a30093639093631,0x626f6c672e646c09\n"
".quad 0x09203233662e6c61,0x72255b202c346625,0x0a3b5d36312b3964,0x3233662e64646109\n"
".quad 0x25202c3166250920,0x3b316625202c3466,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x302b346472255b09,0x0a3b316625202c5d,0x315f37315f744c24,0x2f200a3a34393534\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3820656e696c2079\n"
".quad 0x2064616568202c36,0x2064656c6562616c,0x315f37315f744c24,0x6461090a38333334\n"
".quad 0x2509203233752e64,0x2c367225202c3672,0x61090a3b38722520,0x09203436752e6464\n"
".quad 0x7225202c39647225,0x31647225202c3964,0x70746573090a3b30,0x203233752e746c2e\n"
".quad 0x7225202c33702509,0x0a3b377225202c36,0x7262203370254009,0x315f744c24092061\n"
".quad 0x3b38333334315f37,0x5f37315f744c240a,0x090a3a3632383331,0x09363109636f6c2e\n"
".quad 0x6162090a30093037,0x0920636e79732e72,0x2e766f6d090a3b30,0x3972250920323375\n"
".quad 0x6573090a3b31202c,0x33752e74672e7074,0x202c347025092032,0x397225202c317225\n"
".quad 0x2034702540090a3b,0x744c240920617262,0x363335315f37315f,0x636f6c2e090a3b32\n"
".quad 0x3009313709363109,0x6168732e646c090a,0x203233662e646572,0x255b202c35662509\n"
".quad 0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465,0x72255b202c366625\n"
".quad 0x090a3b5d382b3464,0x203233662e646461,0x6625202c37662509,0x0a3b366625202c35\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x240a3b376625202c\n"
".quad 0x35315f37315f744c,0x6162090a3a323633,0x0920636e79732e72,0x2e766f6d090a3b30\n"
".quad 0x3172250920323375,0x73090a3b30202c30,0x752e71652e707465,0x2c35702509203233\n"
".quad 0x7225202c31722520,0x252140090a3b3031,0x0920617262203570,0x315f37315f744c24\n"
".quad 0x2e090a3b34373835,0x3709363109636f6c,0x2e646c090a300932,0x662e646572616873\n"
".quad 0x2c38662509203233,0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x202c396625092032,0x5d342b346472255b,0x662e646461090a3b,0x3031662509203233\n"
".quad 0x25202c386625202c,0x2e7473090a3b3966,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x5f744c240a3b3031,0x34373835315f3731,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x363109636f6c2e09,0x090a300933303109,0x7262203570252140\n"
".quad 0x315f744c24092061,0x3b36383336315f37,0x3109636f6c2e090a,0x0a30093630310936\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x735b202c31316625,0x3b5d302b61746164\n"
".quad 0x7261702e646c090a,0x09203436752e6d61,0x5b202c3131647225,0x6170616475635f5f\n"
".quad 0x7235315a5f5f6d72,0x6c754d6563756465,0x4c49737361506974,0x454530624c45346a\n"
".quad 0x5f6a6650664b5076,0x5d617461646f5f67,0x752e747663090a3b,0x09203233752e3436\n"
".quad 0x25202c3231647225,0x6c756d090a3b3272,0x33752e656469772e,0x3331647225092032\n"
".quad 0x34202c327225202c,0x752e646461090a3b,0x3164722509203436,0x3131647225202c34\n"
".quad 0x3b3331647225202c,0x6f6c672e7473090a,0x203233662e6c6162,0x2b34316472255b09\n"
".quad 0x31316625202c5d30,0x37315f744c240a3b,0x0a3a36383336315f,0x363109636f6c2e09\n"
".quad 0x090a300935313109,0x4c240a3b74697865,0x5a5f5f646e655744,0x6563756465723531\n"
".quad 0x73615069746c754d,0x624c45346a4c4973,0x50664b5076454530,0x2f207d090a3a6a66\n"
".quad 0x657235315a5f202f,0x746c754d65637564,0x6a4c497373615069,0x76454530624c4534\n"
".quad 0x0a0a6a6650664b50,0x207972746e652e09,0x7564657235315a5f,0x5069746c754d6563\n"
".quad 0x45326a4c49737361,0x4b5076454530624c,0x090a28206a665066,0x206d617261702e09\n"
".quad 0x635f5f203436752e,0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563\n"
".quad 0x45326a4c49737361,0x4b5076454530624c,0x695f675f6a665066,0x09090a2c61746164\n"
".quad 0x2e206d617261702e,0x75635f5f20343675,0x5f5f6d7261706164,0x637564657235315a\n"
".quad 0x615069746c754d65,0x4c45326a4c497373,0x664b507645453062,0x646f5f675f6a6650\n"
".quad 0x2e09090a2c617461,0x752e206d61726170,0x6475635f5f203233,0x5a5f5f6d72617061\n"
".quad 0x6563756465723531,0x73615069746c754d,0x624c45326a4c4973,0x50664b5076454530\n"
".quad 0x7b090a296e5f6a66,0x2e206765722e090a,0x3c68722520363175,0x65722e090a3b3e33\n"
".quad 0x25203233752e2067,0x090a3b3e31313c72,0x36752e206765722e,0x36313c6472252034\n"
".quad 0x6765722e090a3b3e,0x6625203233662e20,0x2e090a3b3e30313c,0x6572702e20676572\n"
".quad 0x3b3e363c70252064,0x3109636f6c2e090a,0x0a30093231310936,0x5a5f5f3142424c24\n"
".quad 0x6563756465723531,0x73615069746c754d,0x624c45326a4c4973,0x50664b5076454530\n"
".quad 0x6f6c2e090a3a6a66,0x0936380936310963,0x752e747663090a30,0x09203631752e3233\n"
".quad 0x697425202c317225,0x6f6d090a3b782e64,0x2509203436752e76,0x616473202c316472\n"
".quad 0x747663090a3b6174,0x3233752e3436752e,0x202c326472250920,0x756d090a3b317225\n"
".quad 0x752e656469772e6c,0x3364722509203233,0x34202c317225202c,0x752e646461090a3b\n"
".quad 0x3464722509203436,0x202c31647225202c,0x6d090a3b33647225,0x09203233662e766f\n"
".quad 0x306630202c316625,0x3b30303030303030,0x2f2f092020202020,0x2e766f6d090a3020\n"
".quad 0x3266250920323366,0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x090a3b326625202c\n"
".quad 0x2e3233752e747663,0x3272250920363175,0x646961746325202c,0x6c756d090a3b782e\n"
".quad 0x33752e6f6c2e3432,0x202c337225092032,0x0a3b34202c327225,0x3233752e64646109\n"
".quad 0x25202c3472250920,0x3b317225202c3372,0x7261702e646c090a,0x09203233752e6d61\n"
".quad 0x5f5f5b202c357225,0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375\n"
".quad 0x326a4c4973736150,0x5076454530624c45,0x5d6e5f6a6650664b,0x2e70746573090a3b\n"
".quad 0x09203233752e6567,0x347225202c317025,0x090a3b357225202c,0x6172622031702540\n"
".quad 0x38315f744c240920,0x0a3b32383034315f,0x3233752e64646109,0x25202c3672250920\n"
".quad 0x090a3b32202c3472,0x6d617261702e646c,0x722509203233752e,0x75635f5f5b202c35\n"
".quad 0x5f5f6d7261706164,0x637564657235315a,0x615069746c754d65,0x4c45326a4c497373\n"
".quad 0x664b507645453062,0x0a3b5d6e5f6a6650,0x3233752e64646109,0x25202c3772250920\n"
".quad 0x090a3b32202c3572,0x203631752e766f6d,0x25202c3168722509,0x782e64696174636e\n"
".quad 0x772e6c756d090a3b,0x203631752e656469,0x7225202c38722509,0x090a3b34202c3168\n"
".quad 0x2e3436732e747663,0x6472250920323375,0x0a3b387225202c35,0x617261702e646c09\n"
".quad 0x2509203436752e6d,0x5f5f5b202c366472,0x6d72617061647563,0x64657235315a5f5f\n"
".quad 0x69746c754d656375,0x326a4c4973736150,0x5076454530624c45,0x5f675f6a6650664b\n"
".quad 0x0a3b5d6174616469,0x3436752e74766309,0x722509203233752e,0x3b347225202c3764\n"
".quad 0x69772e6c756d090a,0x09203233752e6564,0x7225202c38647225,0x61090a3b34202c34\n"
".quad 0x09203436752e6464,0x7225202c39647225,0x38647225202c3664,0x772e6c756d090a3b\n"
".quad 0x203233752e656469,0x202c303164722509,0x0a3b34202c387225,0x315f38315f744c24\n"
".quad 0x2f200a3a34393534,0x203e706f6f6c3c2f,0x646f6220706f6f4c,0x3820656e696c2079\n"
".quad 0x697473656e202c36,0x687470656420676e,0x747365202c31203a,0x6920646574616d69\n"
".quad 0x6e6f697461726574,0x6f6e6b6e75203a73,0x636f6c2e090a6e77,0x3009333909363109\n"
".quad 0x6f6c672e646c090a,0x203233662e6c6162,0x255b202c33662509,0x0a3b5d302b396472\n"
".quad 0x3233662e64646109,0x25202c3166250920,0x3b316625202c3366,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x302b346472255b09,0x0a3b316625202c5d,0x363109636f6c2e09\n"
".quad 0x6c090a3009363809,0x2e6d617261702e64,0x3572250920323375,0x6475635f5f5b202c\n"
".quad 0x5a5f5f6d72617061,0x6563756465723531,0x73615069746c754d,0x624c45326a4c4973\n"
".quad 0x50664b5076454530,0x090a3b5d6e5f6a66,0x09363109636f6c2e,0x6573090a30093339\n"
".quad 0x33752e65672e7074,0x202c327025092032,0x357225202c367225,0x2032702540090a3b\n"
".quad 0x744c240920617262,0x353834315f38315f,0x6c3c2f2f200a3b30,0x726150203e706f6f\n"
".quad 0x6f6f6c20666f2074,0x6c2079646f622070,0x202c363820656e69,0x62616c2064616568\n"
".quad 0x744c242064656c65,0x393534315f38315f,0x09636f6c2e090a34,0x0a30093639093631\n"
".quad 0x626f6c672e646c09,0x09203233662e6c61,0x72255b202c346625,0x090a3b5d382b3964\n"
".quad 0x203233662e646461,0x6625202c31662509,0x0a3b316625202c34,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x240a3b316625202c,0x34315f38315f744c\n"
".quad 0x2f2f200a3a303538,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x363820656e696c20,0x6c2064616568202c,0x242064656c656261,0x34315f38315f744c\n"
".quad 0x646461090a343935,0x722509203233752e,0x202c367225202c36,0x6461090a3b387225\n"
".quad 0x2509203436752e64,0x647225202c396472,0x3031647225202c39,0x2e70746573090a3b\n"
".quad 0x09203233752e746c,0x367225202c337025,0x090a3b377225202c,0x6172622033702540\n"
".quad 0x38315f744c240920,0x0a3b34393534315f,0x315f38315f744c24,0x2e090a3a32383034\n"
".quad 0x3709363109636f6c,0x726162090a300931,0x300920636e79732e,0x752e766f6d090a3b\n"
".quad 0x2c39722509203233,0x746573090a3b3020,0x3233752e71652e70,0x25202c3470250920\n"
".quad 0x3b397225202c3172,0x203470252140090a,0x744c240920617262,0x313635315f38315f\n"
".quad 0x636f6c2e090a3b38,0x3009323709363109,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x255b202c35662509,0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x72255b202c366625,0x090a3b5d342b3464,0x203233662e646461,0x6625202c37662509\n"
".quad 0x0a3b366625202c35,0x726168732e747309,0x09203233662e6465,0x5d302b346472255b\n"
".quad 0x240a3b376625202c,0x35315f38315f744c,0x6162090a3a383136,0x0920636e79732e72\n"
".quad 0x636f6c2e090a3b30,0x0933303109363109,0x3470252140090a30,0x4c24092061726220\n"
".quad 0x3136315f38315f74,0x6f6c2e090a3b3033,0x3630310936310963,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x202c386625092032,0x302b61746164735b,0x702e646c090a3b5d\n"
".quad 0x3436752e6d617261,0x2c31316472250920,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x4d65637564657235,0x7373615069746c75,0x30624c45326a4c49,0x6650664b50764545\n"
".quad 0x7461646f5f675f6a,0x747663090a3b5d61,0x3233752e3436752e,0x2c32316472250920\n"
".quad 0x6d090a3b32722520,0x2e656469772e6c75,0x6472250920323375,0x2c327225202c3331\n"
".quad 0x646461090a3b3420,0x722509203436752e,0x647225202c343164,0x31647225202c3131\n"
".quad 0x672e7473090a3b33,0x33662e6c61626f6c,0x316472255b092032,0x6625202c5d302b34\n"
".quad 0x315f744c240a3b38,0x3a30333136315f38,0x3109636f6c2e090a,0x0a30093531310936\n"
".quad 0x240a3b7469786509,0x5f5f646e6557444c,0x637564657235315a,0x615069746c754d65\n"
".quad 0x4c45326a4c497373,0x664b507645453062,0x207d090a3a6a6650,0x7235315a5f202f2f\n"
".quad 0x6c754d6563756465,0x4c49737361506974,0x454530624c45326a,0x0a6a6650664b5076\n"
".quad 0x7972746e652e090a,0x64657235315a5f20,0x69746c754d656375,0x316a4c4973736150\n"
".quad 0x5076454530624c45,0x0a28206a6650664b,0x6d617261702e0909,0x5f5f203436752e20\n"
".quad 0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375,0x316a4c4973736150\n"
".quad 0x5076454530624c45,0x5f675f6a6650664b,0x090a2c6174616469,0x206d617261702e09\n"
".quad 0x635f5f203436752e,0x5f6d726170616475,0x7564657235315a5f,0x5069746c754d6563\n"
".quad 0x45316a4c49737361,0x4b5076454530624c,0x6f5f675f6a665066,0x09090a2c61746164\n"
".quad 0x2e206d617261702e,0x75635f5f20323375,0x5f5f6d7261706164,0x637564657235315a\n"
".quad 0x615069746c754d65,0x4c45316a4c497373,0x664b507645453062,0x090a296e5f6a6650\n"
".quad 0x206765722e090a7b,0x687225203631752e,0x722e090a3b3e333c,0x203233752e206765\n"
".quad 0x0a3b3e31313c7225,0x752e206765722e09,0x313c647225203436,0x65722e090a3b3e36\n"
".quad 0x25203233662e2067,0x2e090a3b3e373c66,0x6572702e20676572,0x3b3e363c70252064\n"
".quad 0x3109636f6c2e090a,0x0a30093231310936,0x5a5f5f3142424c24,0x6563756465723531\n"
".quad 0x73615069746c754d,0x624c45316a4c4973,0x50664b5076454530,0x6f6c2e090a3a6a66\n"
".quad 0x0936380936310963,0x752e747663090a30,0x09203631752e3233,0x697425202c317225\n"
".quad 0x6f6d090a3b782e64,0x2509203436752e76,0x616473202c316472,0x747663090a3b6174\n"
".quad 0x3233752e3436752e,0x202c326472250920,0x756d090a3b317225,0x752e656469772e6c\n"
".quad 0x3364722509203233,0x34202c317225202c,0x752e646461090a3b,0x3464722509203436\n"
".quad 0x202c31647225202c,0x6d090a3b33647225,0x09203233662e766f,0x306630202c316625\n"
".quad 0x3b30303030303030,0x2f2f092020202020,0x2e766f6d090a3020,0x3266250920323366\n"
".quad 0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x090a3b326625202c,0x2e3233752e747663\n"
".quad 0x3272250920363175,0x646961746325202c,0x6c756d090a3b782e,0x33752e6f6c2e3432\n"
".quad 0x202c337225092032,0x0a3b32202c327225,0x3233752e64646109,0x25202c3472250920\n"
".quad 0x3b317225202c3372,0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c357225\n"
".quad 0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375,0x316a4c4973736150\n"
".quad 0x5076454530624c45,0x5d6e5f6a6650664b,0x2e70746573090a3b,0x09203233752e6567\n"
".quad 0x347225202c317025,0x090a3b357225202c,0x6172622031702540,0x39315f744c240920\n"
".quad 0x0a3b38333334315f,0x3233752e64646109,0x25202c3672250920,0x090a3b31202c3472\n"
".quad 0x6d617261702e646c,0x722509203233752e,0x75635f5f5b202c35,0x5f5f6d7261706164\n"
".quad 0x637564657235315a,0x615069746c754d65,0x4c45316a4c497373,0x664b507645453062\n"
".quad 0x0a3b5d6e5f6a6650,0x3233752e64646109,0x25202c3772250920,0x090a3b31202c3572\n"
".quad 0x203631752e766f6d,0x25202c3168722509,0x782e64696174636e,0x772e6c756d090a3b\n"
".quad 0x203631752e656469,0x7225202c38722509,0x090a3b32202c3168,0x2e3436732e747663\n"
".quad 0x6472250920323375,0x0a3b387225202c35,0x617261702e646c09,0x2509203436752e6d\n"
".quad 0x5f5f5b202c366472,0x6d72617061647563,0x64657235315a5f5f,0x69746c754d656375\n"
".quad 0x316a4c4973736150,0x5076454530624c45,0x5f675f6a6650664b,0x0a3b5d6174616469\n"
".quad 0x3436752e74766309,0x722509203233752e,0x3b347225202c3764,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x7225202c38647225,0x61090a3b34202c34,0x09203436752e6464\n"
".quad 0x7225202c39647225,0x38647225202c3664,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x202c303164722509,0x0a3b34202c387225,0x315f39315f744c24,0x2f200a3a30353834\n"
".quad 0x203e706f6f6c3c2f,0x646f6220706f6f4c,0x3820656e696c2079,0x697473656e202c36\n"
".quad 0x687470656420676e,0x747365202c31203a,0x6920646574616d69,0x6e6f697461726574\n"
".quad 0x6f6e6b6e75203a73,0x636f6c2e090a6e77,0x3009333909363109,0x6f6c672e646c090a\n"
".quad 0x203233662e6c6162,0x255b202c33662509,0x0a3b5d302b396472,0x3233662e64646109\n"
".quad 0x25202c3166250920,0x3b316625202c3366,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x302b346472255b09,0x0a3b316625202c5d,0x363109636f6c2e09,0x6c090a3009363809\n"
".quad 0x2e6d617261702e64,0x3572250920323375,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723531,0x73615069746c754d,0x624c45316a4c4973,0x50664b5076454530\n"
".quad 0x090a3b5d6e5f6a66,0x09363109636f6c2e,0x6573090a30093339,0x33752e65672e7074\n"
".quad 0x202c327025092032,0x357225202c367225,0x2032702540090a3b,0x744c240920617262\n"
".quad 0x303135315f39315f,0x6c3c2f2f200a3b36,0x726150203e706f6f,0x6f6f6c20666f2074\n"
".quad 0x6c2079646f622070,0x202c363820656e69,0x62616c2064616568,0x744c242064656c65\n"
".quad 0x353834315f39315f,0x09636f6c2e090a30,0x0a30093639093631,0x626f6c672e646c09\n"
".quad 0x09203233662e6c61,0x72255b202c346625,0x090a3b5d342b3964,0x203233662e646461\n"
".quad 0x6625202c31662509,0x0a3b316625202c34,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x240a3b316625202c,0x35315f39315f744c,0x2f2f200a3a363031\n"
".quad 0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f,0x363820656e696c20\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x34315f39315f744c,0x646461090a303538\n"
".quad 0x722509203233752e,0x202c367225202c36,0x6461090a3b387225,0x2509203436752e64\n"
".quad 0x647225202c396472,0x3031647225202c39,0x2e70746573090a3b,0x09203233752e746c\n"
".quad 0x367225202c337025,0x090a3b377225202c,0x6172622033702540,0x39315f744c240920\n"
".quad 0x0a3b30353834315f,0x315f39315f744c24,0x2e090a3a38333334,0x3709363109636f6c\n"
".quad 0x726162090a300932,0x300920636e79732e,0x09636f6c2e090a3b,0x3009333031093631\n"
".quad 0x33752e766f6d090a,0x202c397225092032,0x70746573090a3b30,0x203233752e656e2e\n"
".quad 0x7225202c34702509,0x0a3b397225202c31,0x7262203470254009,0x315f744c24092061\n"
".quad 0x3b34373835315f39,0x3109636f6c2e090a,0x0a30093630310936,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x64735b202c356625,0x0a3b5d302b617461,0x617261702e646c09\n"
".quad 0x2509203436752e6d,0x5f5b202c31316472,0x726170616475635f,0x657235315a5f5f6d\n"
".quad 0x746c754d65637564,0x6a4c497373615069,0x76454530624c4531,0x675f6a6650664b50\n"
".quad 0x3b5d617461646f5f,0x36752e747663090a,0x2509203233752e34,0x7225202c32316472\n"
".quad 0x2e6c756d090a3b32,0x3233752e65646977,0x2c33316472250920,0x3b34202c32722520\n"
".quad 0x36752e646461090a,0x3431647225092034,0x2c3131647225202c,0x0a3b333164722520\n"
".quad 0x626f6c672e747309,0x09203233662e6c61,0x302b34316472255b,0x0a3b356625202c5d\n"
".quad 0x315f39315f744c24,0x2e090a3a34373835,0x3109363109636f6c,0x7865090a30093531\n"
".quad 0x57444c240a3b7469,0x35315a5f5f646e65,0x754d656375646572,0x497373615069746c\n"
".quad 0x4530624c45316a4c,0x6a6650664b507645,0x202f2f207d090a3a,0x7564657235315a5f\n"
".quad 0x5069746c754d6563,0x45316a4c49737361,0x4b5076454530624c,0x2e090a0a6a665066\n"
".quad 0x5a5f207972746e65,0x6563756465723631,0x6150656c676e6953,0x3231356a4c497373\n"
".quad 0x5076454531624c45,0x0a28206a6650664b,0x6d617261702e0909,0x5f5f203436752e20\n"
".quad 0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x4531624c45323135,0x6a6650664b507645,0x61746164695f675f,0x7261702e09090a2c\n"
".quad 0x203436752e206d61,0x6170616475635f5f,0x7236315a5f5f6d72,0x6e69536563756465\n"
".quad 0x4973736150656c67,0x624c453231356a4c,0x50664b5076454531,0x61646f5f675f6a66\n"
".quad 0x702e09090a2c6174,0x33752e206d617261,0x616475635f5f2032,0x315a5f5f6d726170\n"
".quad 0x5365637564657236,0x736150656c676e69,0x453231356a4c4973,0x4b5076454531624c\n"
".quad 0x0a296e5f6a665066,0x6765722e090a7b09,0x7225203233752e20,0x65722e090a3b3176\n"
".quad 0x25203233752e2067,0x090a3b3e38323c72,0x36752e206765722e,0x32323c6472252034\n"
".quad 0x6765722e090a3b3e,0x6625203233662e20,0x2e090a3b3e34363c,0x6572702e20676572\n"
".quad 0x3e36313c70252064,0x726168732e090a3b,0x5f2038732e206465,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x38335f3932333632,0x3b7473614c6d615f,0x3109636f6c2e090a\n"
".quad 0x0a30093733310936,0x5a5f5f3142424c24,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x3231356a4c497373,0x5076454531624c45,0x090a3a6a6650664b,0x09363109636f6c2e\n"
".quad 0x7663090a30093638,0x31752e3233752e74,0x202c317225092036,0x0a3b782e64697425\n"
".quad 0x3436752e74766309,0x722509203233752e,0x3b317225202c3164,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x7225202c32647225,0x6d090a3b34202c31,0x09203436752e766f\n"
".quad 0x6473202c33647225,0x6461090a3b617461,0x2509203436752e64,0x647225202c346472\n"
".quad 0x3b33647225202c32,0x33662e766f6d090a,0x202c316625092032,0x3030303030306630\n"
".quad 0x20202020203b3030,0x6d090a30202f2f09,0x09203233662e766f,0x306630202c326625\n"
".quad 0x3b30303030303030,0x2f2f092020202020,0x732e7473090a3020,0x33662e6465726168\n"
".quad 0x346472255b092032,0x326625202c5d302b,0x752e747663090a3b,0x09203631752e3233\n"
".quad 0x746325202c327225,0x090a3b782e646961,0x752e6f6c2e6c756d,0x2c33722509203233\n"
".quad 0x3031202c32722520,0x646461090a3b3432,0x722509203233752e,0x202c337225202c34\n"
".quad 0x6f6d090a3b317225,0x2509203233732e76,0x3b347225202c3572,0x33752e747663090a\n"
".quad 0x2509203631752e32,0x74636e25202c3672,0x090a3b782e646961,0x6d617261702e646c\n"
".quad 0x722509203233752e,0x75635f5f5b202c37,0x5f5f6d7261706164,0x637564657236315a\n"
".quad 0x50656c676e695365,0x31356a4c49737361,0x76454531624c4532,0x6e5f6a6650664b50\n"
".quad 0x70746573090a3b5d,0x203233752e65672e,0x7225202c31702509,0x0a3b377225202c34\n"
".quad 0x7262203170254009,0x325f744c24092061,0x3b30393035325f30,0x6f6c2e6c756d090a\n"
".quad 0x722509203233752e,0x202c367225202c38,0x63090a3b34323031,0x752e3436732e7476\n"
".quad 0x3564722509203233,0x090a3b387225202c,0x6d617261702e646c,0x722509203436752e\n"
".quad 0x635f5f5b202c3664,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x356a4c4973736150,0x454531624c453231,0x5f6a6650664b5076,0x5d61746164695f67\n"
".quad 0x752e747663090a3b,0x09203233752e3436,0x7225202c37647225,0x2e6c756d090a3b34\n"
".quad 0x3233752e65646977,0x202c386472250920,0x0a3b34202c347225,0x3436752e64646109\n"
".quad 0x202c396472250920,0x7225202c36647225,0x6c756d090a3b3864,0x33752e656469772e\n"
".quad 0x3031647225092032,0x34202c387225202c,0x30325f744c240a3b,0x0a3a32303635325f\n"
".quad 0x706f6f6c3c2f2f20,0x6220706f6f4c203e,0x656e696c2079646f,0x73656e202c363820\n"
".quad 0x70656420676e6974,0x65202c31203a6874,0x646574616d697473,0x6974617265746920\n"
".quad 0x6b6e75203a736e6f,0x6c2e090a6e776f6e,0x333909363109636f,0x672e646c090a3009\n"
".quad 0x33662e6c61626f6c,0x202c336625092032,0x5d302b396472255b,0x662e646461090a3b\n"
".quad 0x2c34662509203233,0x6625202c33662520,0x732e7473090a3b31,0x33662e6465726168\n"
".quad 0x346472255b092032,0x346625202c5d302b,0x09636f6c2e090a3b,0x0a30093639093631\n"
".quad 0x626f6c672e646c09,0x09203233662e6c61,0x72255b202c356625,0x5d383430322b3964\n"
".quad 0x662e646461090a3b,0x2c31662509203233,0x6625202c35662520,0x732e7473090a3b34\n"
".quad 0x33662e6465726168,0x346472255b092032,0x316625202c5d302b,0x752e646461090a3b\n"
".quad 0x2c35722509203233,0x7225202c38722520,0x2e646461090a3b35,0x6472250920343675\n"
".quad 0x2c39647225202c39,0x0a3b303164722520,0x363109636f6c2e09,0x6c090a3009363809\n"
".quad 0x2e6d617261702e64,0x3772250920323375,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x3231356a4c497373,0x5076454531624c45\n"
".quad 0x5d6e5f6a6650664b,0x09636f6c2e090a3b,0x0a30093639093631,0x746c2e7074657309\n"
".quad 0x702509203233752e,0x202c357225202c32,0x2540090a3b377225,0x0920617262203270\n"
".quad 0x325f30325f744c24,0x4c240a3b32303635,0x3035325f30325f74,0x6f6c2e090a3a3039\n"
".quad 0x3030310936310963,0x2e726162090a3009,0x3b300920636e7973,0x3109636f6c2e090a\n"
".quad 0x0a30093330310936,0x3233752e766f6d09,0x32202c3972250920,0x746573090a3b3535\n"
".quad 0x3233752e656c2e70,0x25202c3370250920,0x3b397225202c3172,0x203370252140090a\n"
".quad 0x744c240920617262,0x313136325f30325f,0x636f6c2e090a3b34,0x3009333609363109\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x255b202c36662509,0x0a3b5d302b346472\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x72255b202c376625,0x5d343230312b3464\n"
".quad 0x662e646461090a3b,0x2c38662509203233,0x6625202c36662520,0x732e7473090a3b37\n"
".quad 0x33662e6465726168,0x346472255b092032,0x386625202c5d302b,0x30325f744c240a3b\n"
".quad 0x0a3a34313136325f,0x6e79732e72616209,0x6d090a3b30092063,0x09203233752e766f\n"
".quad 0x3231202c30317225,0x70746573090a3b37,0x203233752e656c2e,0x7225202c34702509\n"
".quad 0x3b30317225202c31,0x203470252140090a,0x744c240920617262,0x323636325f30325f\n"
".quad 0x636f6c2e090a3b36,0x3009343609363109,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x255b202c39662509,0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c30316625,0x5d3231352b346472,0x662e646461090a3b,0x3131662509203233\n"
".quad 0x25202c396625202c,0x7473090a3b303166,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x744c240a3b313166,0x323636325f30325f,0x2e726162090a3a36\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c31317225092032,0x6573090a3b333620\n"
".quad 0x33752e656c2e7074,0x202c357025092032,0x317225202c317225,0x70252140090a3b31\n"
".quad 0x2409206172622035,0x37325f30325f744c,0x6c2e090a3b383331,0x353609363109636f\n"
".quad 0x732e646c090a3009,0x33662e6465726168,0x2c32316625092032,0x302b346472255b20\n"
".quad 0x732e646c090a3b5d,0x33662e6465726168,0x2c33316625092032,0x322b346472255b20\n"
".quad 0x6461090a3b5d3635,0x2509203233662e64,0x316625202c343166,0x3b33316625202c32\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x3b34316625202c5d\n"
".quad 0x5f30325f744c240a,0x090a3a3833313732,0x636e79732e726162,0x6f6d090a3b300920\n"
".quad 0x2509203233752e76,0x3b3133202c323172,0x6c2e70746573090a,0x2509203233752e65\n"
".quad 0x2c317225202c3670,0x090a3b3231722520,0x7262203670252140,0x325f744c24092061\n"
".quad 0x3b30353637325f30,0x3109636f6c2e090a,0x090a300937360936,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c353166,0x090a3b5d302b3464,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c363166,0x3b5d3832312b3464,0x33662e646461090a\n"
".quad 0x2c37316625092032,0x25202c3531662520,0x7473090a3b363166,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b373166,0x353637325f30325f\n"
".quad 0x2e726162090a3a30,0x3b300920636e7973,0x33752e766f6d090a,0x2c33317225092032\n"
".quad 0x6573090a3b353120,0x33752e656c2e7074,0x202c377025092032,0x317225202c317225\n"
".quad 0x70252140090a3b33,0x2409206172622037,0x38325f30325f744c,0x6c2e090a3b323631\n"
".quad 0x383609363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c38316625092032\n"
".quad 0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168,0x2c39316625092032\n"
".quad 0x362b346472255b20,0x646461090a3b5d34,0x662509203233662e,0x38316625202c3032\n"
".quad 0x0a3b39316625202c,0x726168732e747309,0x09203233662e6465,0x5d302b346472255b\n"
".quad 0x0a3b30326625202c,0x325f30325f744c24,0x62090a3a32363138,0x20636e79732e7261\n"
".quad 0x766f6d090a3b3009,0x722509203233752e,0x090a3b37202c3431,0x2e656c2e70746573\n"
".quad 0x3870250920323375,0x25202c317225202c,0x2140090a3b343172,0x2061726220387025\n"
".quad 0x5f30325f744c2409,0x090a3b3437363832,0x09363109636f6c2e,0x646c090a30093936\n"
".quad 0x2e6465726168732e,0x3266250920323366,0x346472255b202c31,0x646c090a3b5d302b\n"
".quad 0x2e6465726168732e,0x3266250920323366,0x346472255b202c32,0x61090a3b5d32332b\n"
".quad 0x09203233662e6464,0x6625202c33326625,0x32326625202c3132,0x68732e7473090a3b\n"
".quad 0x3233662e64657261,0x2b346472255b0920,0x33326625202c5d30,0x30325f744c240a3b\n"
".quad 0x0a3a34373638325f,0x6e79732e72616209,0x6d090a3b30092063,0x09203233752e766f\n"
".quad 0x3b33202c35317225,0x6c2e70746573090a,0x2509203233752e65,0x2c317225202c3970\n"
".quad 0x090a3b3531722520,0x7262203970252140,0x325f744c24092061,0x3b36383139325f30\n"
".quad 0x3109636f6c2e090a,0x090a300930370936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c343266,0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c353266,0x0a3b5d36312b3464,0x3233662e64646109,0x202c363266250920\n"
".quad 0x6625202c34326625,0x2e7473090a3b3532,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x5f744c240a3b3632,0x36383139325f3032,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x3233752e766f6d09,0x202c363172250920,0x70746573090a3b31\n"
".quad 0x203233752e656c2e,0x25202c3031702509,0x36317225202c3172,0x3170252140090a3b\n"
".quad 0x2409206172622030,0x39325f30325f744c,0x6c2e090a3b383936,0x313709363109636f\n"
".quad 0x732e646c090a3009,0x33662e6465726168,0x2c37326625092032,0x302b346472255b20\n"
".quad 0x732e646c090a3b5d,0x33662e6465726168,0x2c38326625092032,0x382b346472255b20\n"
".quad 0x2e646461090a3b5d,0x3266250920323366,0x2c37326625202c39,0x090a3b3832662520\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x240a3b3932662520\n"
".quad 0x39325f30325f744c,0x6162090a3a383936,0x0920636e79732e72,0x2e766f6d090a3b30\n"
".quad 0x3172250920323375,0x73090a3b30202c37,0x752e71652e707465,0x3131702509203233\n"
".quad 0x25202c317225202c,0x2140090a3b373172,0x6172622031317025,0x30325f744c240920\n"
".quad 0x0a3b30313230335f,0x363109636f6c2e09,0x6c090a3009323709,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3033,0x6c090a3b5d302b34,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3133,0x61090a3b5d342b34,0x09203233662e6464\n"
".quad 0x6625202c32336625,0x31336625202c3033,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x2b346472255b0920,0x32336625202c5d30,0x30325f744c240a3b,0x0a3a30313230335f\n"
".quad 0x6e79732e72616209,0x2e090a3b30092063,0x3109363109636f6c,0x2140090a30093330\n"
".quad 0x6172622031317025,0x30325f744c240920,0x0a3b32323730335f,0x363109636f6c2e09\n"
".quad 0x090a300936303109,0x65726168732e646c,0x2509203233662e64,0x64735b202c333366\n"
".quad 0x0a3b5d302b617461,0x617261702e646c09,0x2509203436752e6d,0x5f5b202c31316472\n"
".quad 0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x31624c453231356a,0x6650664b50764545,0x7461646f5f675f6a,0x747663090a3b5d61\n"
".quad 0x3233752e3436752e,0x2c32316472250920,0x6d090a3b32722520,0x2e656469772e6c75\n"
".quad 0x6472250920323375,0x2c327225202c3331,0x646461090a3b3420,0x722509203436752e\n"
".quad 0x647225202c343164,0x31647225202c3131,0x672e7473090a3b33,0x33662e6c61626f6c\n"
".quad 0x316472255b092032,0x6625202c5d302b34,0x5f744c240a3b3333,0x32323730335f3032\n"
".quad 0x09636f6c2e090a3a,0x3009343431093631,0x33752e766f6d090a,0x2c38317225092032\n"
".quad 0x746573090a3b3120,0x3233752e656c2e70,0x202c323170250920,0x317225202c367225\n"
".quad 0x31702540090a3b38,0x2409206172622032,0x31335f30325f744c,0x6c2e090a3b343332\n"
".quad 0x353109363109636f,0x6d656d090a300937,0x0a3b6c672e726162,0x2031317025214009\n"
".quad 0x744c240920617262,0x343731335f30325f,0x636f6c2e090a3b36,0x0932363109363109\n"
".quad 0x752e766f6d090a30,0x3164722509203436,0x7269746572202c35,0x756f43746e656d65\n"
".quad 0x6f7461090a3b746e,0x6c61626f6c672e6d,0x3233752e636e692e,0x202c393172250920\n"
".quad 0x2c5d35316472255b,0x6d090a3b36722520,0x09203233732e766f,0x7225202c30327225\n"
".quad 0x6f6c2e090a3b3931,0x3436310936310963,0x2e627573090a3009,0x3272250920323375\n"
".quad 0x202c367225202c31,0x2e746573090a3b31,0x752e3233752e7165,0x3232722509203233\n"
".quad 0x202c30327225202c,0x6e090a3b31327225,0x09203233732e6765,0x7225202c33327225\n"
".quad 0x2e7473090a3b3232,0x732e646572616873,0x75635f5f5b092038,0x6c61636f6c5f6164\n"
".quad 0x3336325f7261765f,0x6d615f38335f3932,0x25202c5d7473614c,0x744c240a3b333272\n"
".quad 0x343731335f30325f,0x636f6c2e090a3a36,0x0936363109363109,0x732e726162090a30\n"
".quad 0x0a3b300920636e79,0x726168732e646c09,0x25092038732e6465,0x5f5f5b202c343272\n"
".quad 0x636f6c5f61647563,0x325f7261765f6c61,0x5f38335f39323336,0x3b5d7473614c6d61\n"
".quad 0x33752e766f6d090a,0x2c35327225092032,0x746573090a3b3020,0x3233732e71652e70\n"
".quad 0x202c333170250920,0x7225202c34327225,0x702540090a3b3532,0x0920617262203331\n"
".quad 0x335f30325f744c24,0x73090a3b38353232,0x752e656c2e707465,0x3431702509203233\n"
".quad 0x25202c367225202c,0x702540090a3b3172,0x0920617262203431,0x335f30325f744c24\n"
".quad 0x2e090a3b36323033,0x3109363109636f6c,0x646c090a30093237,0x752e6d617261702e\n"
".quad 0x3164722509203436,0x75635f5f5b202c36,0x5f5f6d7261706164,0x637564657236315a\n"
".quad 0x50656c676e695365,0x31356a4c49737361,0x76454531624c4532,0x675f6a6650664b50\n"
".quad 0x3b5d617461646f5f,0x36752e646461090a,0x3731647225092034,0x2c3631647225202c\n"
".quad 0x090a3b3264722520,0x61626f6c672e646c,0x2509203233662e6c,0x72255b202c343366\n"
".quad 0x0a3b5d302b373164,0x696e752e61726209,0x30325f744c240920,0x0a3b30373732335f\n"
".quad 0x335f30325f744c24,0x6d090a3a36323033,0x09203233662e766f,0x6630202c34336625\n"
".quad 0x3030303030303030,0x2f2f09202020203b,0x325f744c240a3020,0x3a30373732335f30\n"
".quad 0x36752e766f6d090a,0x3831647225092034,0x0a3b6d656d73202c,0x3436752e64646109\n"
".quad 0x2c39316472250920,0x25202c3264722520,0x73090a3b38316472,0x6465726168732e74\n"
".quad 0x255b09203233662e,0x2c5d302b39316472,0x090a3b3433662520,0x09363109636f6c2e\n"
".quad 0x62090a3009343731,0x20636e79732e7261,0x6f6c2e090a3b3009,0x3637310936310963\n"
".quad 0x70252140090a3009,0x2409206172622033,0x33335f30325f744c,0x6c2e090a3b323832\n"
".quad 0x333609363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c35336625092032\n"
".quad 0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873,0x3633662509203233\n"
".quad 0x39316472255b202c,0x0a3b5d343230312b,0x3233662e64646109,0x202c373366250920\n"
".quad 0x6625202c35336625,0x2e7473090a3b3633,0x662e646572616873,0x6472255b09203233\n"
".quad 0x25202c5d302b3931,0x744c240a3b373366,0x383233335f30325f,0x2e726162090a3a32\n"
".quad 0x3b300920636e7973,0x203470252140090a,0x744c240920617262,0x393733335f30325f\n"
".quad 0x636f6c2e090a3b34,0x3009343609363109,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3833662509,0x5d302b3931647225,0x68732e646c090a3b,0x3233662e64657261\n"
".quad 0x202c393366250920,0x352b39316472255b,0x6461090a3b5d3231,0x2509203233662e64\n"
".quad 0x336625202c303466,0x3b39336625202c38,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x2b39316472255b09,0x30346625202c5d30,0x30325f744c240a3b,0x0a3a34393733335f\n"
".quad 0x6e79732e72616209,0x40090a3b30092063,0x6172622035702521,0x30325f744c240920\n"
".quad 0x0a3b36303334335f,0x363109636f6c2e09,0x6c090a3009353609,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3134,0x090a3b5d302b3931,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c323466,0x5d3635322b393164,0x662e646461090a3b\n"
".quad 0x3334662509203233,0x202c31346625202c,0x73090a3b32346625,0x6465726168732e74\n"
".quad 0x255b09203233662e,0x2c5d302b39316472,0x240a3b3334662520,0x34335f30325f744c\n"
".quad 0x6162090a3a363033,0x0920636e79732e72,0x70252140090a3b30,0x2409206172622036\n"
".quad 0x34335f30325f744c,0x6c2e090a3b383138,0x373609363109636f,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x2c34346625092032,0x2b39316472255b20,0x2e646c090a3b5d30\n"
".quad 0x662e646572616873,0x3534662509203233,0x39316472255b202c,0x090a3b5d3832312b\n"
".quad 0x203233662e646461,0x25202c3634662509,0x346625202c343466,0x732e7473090a3b35\n"
".quad 0x33662e6465726168,0x316472255b092032,0x6625202c5d302b39,0x5f744c240a3b3634\n"
".quad 0x38313834335f3032,0x732e726162090a3a,0x0a3b300920636e79,0x6220377025214009\n"
".quad 0x5f744c2409206172,0x30333335335f3032,0x09636f6c2e090a3b,0x0a30093836093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c37346625,0x3b5d302b39316472\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3834662509,0x34362b3931647225\n"
".quad 0x2e646461090a3b5d,0x3466250920323366,0x2c37346625202c39,0x090a3b3834662520\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225,0x0a3b39346625202c\n"
".quad 0x335f30325f744c24,0x62090a3a30333335,0x20636e79732e7261,0x252140090a3b3009\n"
".quad 0x0920617262203870,0x335f30325f744c24,0x2e090a3b32343835,0x3609363109636f6c\n"
".quad 0x2e646c090a300939,0x662e646572616873,0x3035662509203233,0x39316472255b202c\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3566250920323366,0x316472255b202c31\n"
".quad 0x090a3b5d32332b39,0x203233662e646461,0x25202c3235662509,0x356625202c303566\n"
".quad 0x732e7473090a3b31,0x33662e6465726168,0x316472255b092032,0x6625202c5d302b39\n"
".quad 0x5f744c240a3b3235,0x32343835335f3032,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x6220397025214009,0x5f744c2409206172,0x34353336335f3032,0x09636f6c2e090a3b\n"
".quad 0x0a30093037093631,0x726168732e646c09,0x09203233662e6465,0x255b202c33356625\n"
".quad 0x3b5d302b39316472,0x6168732e646c090a,0x203233662e646572,0x5b202c3435662509\n"
".quad 0x36312b3931647225,0x2e646461090a3b5d,0x3566250920323366,0x2c33356625202c35\n"
".quad 0x090a3b3435662520,0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225\n"
".quad 0x0a3b35356625202c,0x335f30325f744c24,0x62090a3a34353336,0x20636e79732e7261\n"
".quad 0x252140090a3b3009,0x2061726220303170,0x5f30325f744c2409,0x090a3b3636383633\n"
".quad 0x09363109636f6c2e,0x646c090a30093137,0x2e6465726168732e,0x3566250920323366\n"
".quad 0x316472255b202c36,0x6c090a3b5d302b39,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3735,0x090a3b5d382b3931,0x203233662e646461,0x25202c3835662509\n"
".quad 0x356625202c363566,0x732e7473090a3b37,0x33662e6465726168,0x316472255b092032\n"
".quad 0x6625202c5d302b39,0x5f744c240a3b3835,0x36363836335f3032,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x2031317025214009,0x744c240920617262,0x373337335f30325f\n"
".quad 0x636f6c2e090a3b38,0x3009323709363109,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3935662509,0x5d302b3931647225,0x68732e646c090a3b,0x3233662e64657261\n"
".quad 0x202c303666250920,0x342b39316472255b,0x2e646461090a3b5d,0x3666250920323366\n"
".quad 0x2c39356625202c31,0x090a3b3036662520,0x65726168732e7473,0x5b09203233662e64\n"
".quad 0x5d302b3931647225,0x0a3b31366625202c,0x335f30325f744c24,0x62090a3a38373337\n"
".quad 0x20636e79732e7261,0x6f6c2e090a3b3009,0x3637310936310963,0x70252140090a3009\n"
".quad 0x0920617262203131,0x335f30325f744c24,0x2e090a3b30393837,0x3109363109636f6c\n"
".quad 0x646c090a30093038,0x2e6465726168732e,0x3666250920323366,0x6d656d735b202c32\n"
".quad 0x646c090a3b5d302b,0x752e6d617261702e,0x3264722509203436,0x75635f5f5b202c30\n"
".quad 0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365,0x31356a4c49737361\n"
".quad 0x76454531624c4532,0x675f6a6650664b50,0x3b5d617461646f5f,0x6f6c672e7473090a\n"
".quad 0x203233662e6c6162,0x2b30326472255b09,0x32366625202c5d30,0x09636f6c2e090a3b\n"
".quad 0x3009333831093631,0x33752e766f6d090a,0x2c36327225092032,0x2e7473090a3b3020\n"
".quad 0x752e6c61626f6c67,0x7465725b09203233,0x43746e656d657269,0x25202c5d746e756f\n"
".quad 0x744c240a3b363272,0x393837335f30325f,0x325f744c240a3a30,0x3a38353232335f30\n"
".quad 0x5f30325f744c240a,0x090a3a3433323133,0x09363109636f6c2e,0x65090a3009373831\n"
".quad 0x444c240a3b746978,0x315a5f5f646e6557,0x5365637564657236,0x736150656c676e69\n"
".quad 0x453231356a4c4973,0x4b5076454531624c,0x7d090a3a6a665066,0x36315a5f202f2f20\n"
".quad 0x6953656375646572,0x73736150656c676e,0x4c453231356a4c49,0x664b507645453162\n"
".quad 0x652e090a0a6a6650,0x315a5f207972746e,0x5365637564657236,0x736150656c676e69\n"
".quad 0x453635326a4c4973,0x4b5076454531624c,0x090a28206a665066,0x206d617261702e09\n"
".quad 0x635f5f203436752e,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x326a4c4973736150,0x454531624c453635,0x5f6a6650664b5076,0x2c61746164695f67\n"
".quad 0x617261702e09090a,0x5f203436752e206d,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x31624c453635326a,0x6650664b50764545\n"
".quad 0x7461646f5f675f6a,0x61702e09090a2c61,0x3233752e206d6172,0x70616475635f5f20\n"
".quad 0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e,0x4c453635326a4c49\n"
".quad 0x664b507645453162,0x090a296e5f6a6650,0x206765722e090a7b,0x767225203233752e\n"
".quad 0x6765722e090a3b31,0x7225203233752e20,0x2e090a3b3e37323c,0x3436752e20676572\n"
".quad 0x3e32323c64722520,0x206765722e090a3b,0x3c6625203233662e,0x722e090a3b3e3835\n"
".quad 0x646572702e206765,0x3b3e35313c702520,0x65726168732e090a,0x5f5f2038732e2064\n"
".quad 0x636f6c5f61647563,0x325f7261765f6c61,0x5f38335f39323336,0x0a3b7473614c6d61\n"
".quad 0x363109636f6c2e09,0x240a300937333109,0x315a5f5f3142424c,0x5365637564657236\n"
".quad 0x736150656c676e69,0x453635326a4c4973,0x4b5076454531624c,0x2e090a3a6a665066\n"
".quad 0x3809363109636f6c,0x747663090a300936,0x3631752e3233752e,0x25202c3172250920\n"
".quad 0x090a3b782e646974,0x2e3436752e747663,0x6472250920323375,0x0a3b317225202c31\n"
".quad 0x6469772e6c756d09,0x2509203233752e65,0x317225202c326472,0x6f6d090a3b34202c\n"
".quad 0x2509203436752e76,0x616473202c336472,0x646461090a3b6174,0x722509203436752e\n"
".quad 0x32647225202c3464,0x0a3b33647225202c,0x3233662e766f6d09,0x30202c3166250920\n"
".quad 0x3030303030303066,0x0920202020203b30,0x6f6d090a30202f2f,0x2509203233662e76\n"
".quad 0x30306630202c3266,0x203b303030303030,0x202f2f0920202020,0x68732e7473090a30\n"
".quad 0x3233662e64657261,0x2b346472255b0920,0x3b326625202c5d30,0x33752e747663090a\n"
".quad 0x2509203631752e32,0x61746325202c3272,0x6d090a3b782e6469,0x33752e6f6c2e6c75\n"
".quad 0x202c337225092032,0x323135202c327225,0x752e646461090a3b,0x2c34722509203233\n"
".quad 0x7225202c33722520,0x2e766f6d090a3b31,0x3572250920323373,0x090a3b347225202c\n"
".quad 0x2e3233752e747663,0x3672250920363175,0x696174636e25202c,0x646c090a3b782e64\n"
".quad 0x752e6d617261702e,0x2c37722509203233,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x5365637564657236,0x736150656c676e69,0x453635326a4c4973,0x4b5076454531624c\n"
".quad 0x3b5d6e5f6a665066,0x672e70746573090a,0x2509203233752e65,0x2c347225202c3170\n"
".quad 0x40090a3b37722520,0x2061726220317025,0x5f31325f744c2409,0x090a3b3230363532\n"
".quad 0x752e6f6c2e6c756d,0x2c38722509203233,0x3135202c36722520,0x2e747663090a3b32\n"
".quad 0x203233752e343673,0x25202c3564722509,0x2e646c090a3b3872,0x36752e6d61726170\n"
".quad 0x2c36647225092034,0x616475635f5f5b20,0x315a5f5f6d726170,0x5365637564657236\n"
".quad 0x736150656c676e69,0x453635326a4c4973,0x4b5076454531624c,0x695f675f6a665066\n"
".quad 0x090a3b5d61746164,0x2e3436752e747663,0x6472250920323375,0x0a3b347225202c37\n"
".quad 0x6469772e6c756d09,0x2509203233752e65,0x347225202c386472,0x6461090a3b34202c\n"
".quad 0x2509203436752e64,0x647225202c396472,0x3b38647225202c36,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x25202c3031647225,0x240a3b34202c3872,0x36325f31325f744c\n"
".quad 0x2f2f200a3a343131,0x4c203e706f6f6c3c,0x79646f6220706f6f,0x363820656e696c20\n"
".quad 0x6e697473656e202c,0x3a68747065642067,0x69747365202c3120,0x746920646574616d\n"
".quad 0x736e6f6974617265,0x776f6e6b6e75203a,0x09636f6c2e090a6e,0x0a30093339093631\n"
".quad 0x626f6c672e646c09,0x09203233662e6c61,0x72255b202c336625,0x090a3b5d302b3964\n"
".quad 0x203233662e646461,0x6625202c34662509,0x0a3b316625202c33,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x090a3b346625202c,0x09363109636f6c2e\n"
".quad 0x646c090a30093639,0x2e6c61626f6c672e,0x3566250920323366,0x2b396472255b202c\n"
".quad 0x090a3b5d34323031,0x203233662e646461,0x6625202c31662509,0x0a3b346625202c35\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x090a3b316625202c\n"
".quad 0x203233752e646461,0x7225202c35722509,0x0a3b357225202c38,0x3436752e64646109\n"
".quad 0x202c396472250920,0x7225202c39647225,0x6c2e090a3b303164,0x363809363109636f\n"
".quad 0x702e646c090a3009,0x3233752e6d617261,0x5b202c3772250920,0x6170616475635f5f\n"
".quad 0x7236315a5f5f6d72,0x6e69536563756465,0x4973736150656c67,0x624c453635326a4c\n"
".quad 0x50664b5076454531,0x090a3b5d6e5f6a66,0x09363109636f6c2e,0x6573090a30093639\n"
".quad 0x33752e746c2e7074,0x202c327025092032,0x377225202c357225,0x2032702540090a3b\n"
".quad 0x744c240920617262,0x313136325f31325f,0x325f744c240a3b34,0x3a32303635325f31\n"
".quad 0x3109636f6c2e090a,0x0a30093030310936,0x6e79732e72616209,0x2e090a3b30092063\n"
".quad 0x3109363109636f6c,0x6f6d090a30093330,0x2509203233752e76,0x3b373231202c3972\n"
".quad 0x6c2e70746573090a,0x2509203233752e65,0x2c317225202c3370,0x40090a3b39722520\n"
".quad 0x6172622033702521,0x31325f744c240920,0x0a3b36323636325f,0x363109636f6c2e09\n"
".quad 0x6c090a3009343609,0x6465726168732e64,0x662509203233662e,0x346472255b202c36\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3766250920323366,0x2b346472255b202c\n"
".quad 0x61090a3b5d323135,0x09203233662e6464,0x366625202c386625,0x090a3b376625202c\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x4c240a3b38662520\n"
".quad 0x3636325f31325f74,0x726162090a3a3632,0x300920636e79732e,0x752e766f6d090a3b\n"
".quad 0x3031722509203233,0x73090a3b3336202c,0x752e656c2e707465,0x2c34702509203233\n"
".quad 0x7225202c31722520,0x252140090a3b3031,0x0920617262203470,0x325f31325f744c24\n"
".quad 0x2e090a3b38333137,0x3609363109636f6c,0x2e646c090a300935,0x662e646572616873\n"
".quad 0x2c39662509203233,0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x2c30316625092032,0x322b346472255b20,0x6461090a3b5d3635,0x2509203233662e64\n"
".quad 0x396625202c313166,0x0a3b30316625202c,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x0a3b31316625202c,0x325f31325f744c24,0x62090a3a38333137\n"
".quad 0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e,0x0a3b3133202c3131\n"
".quad 0x656c2e7074657309,0x702509203233752e,0x202c317225202c35,0x40090a3b31317225\n"
".quad 0x6172622035702521,0x31325f744c240920,0x0a3b30353637325f,0x363109636f6c2e09\n"
".quad 0x6c090a3009373609,0x6465726168732e64,0x662509203233662e,0x6472255b202c3231\n"
".quad 0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e,0x6472255b202c3331\n"
".quad 0x0a3b5d3832312b34,0x3233662e64646109,0x202c343166250920,0x6625202c32316625\n"
".quad 0x2e7473090a3b3331,0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34\n"
".quad 0x5f744c240a3b3431,0x30353637325f3132,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x3233752e766f6d09,0x202c323172250920,0x746573090a3b3531,0x3233752e656c2e70\n"
".quad 0x25202c3670250920,0x32317225202c3172,0x3670252140090a3b,0x4c24092061726220\n"
".quad 0x3138325f31325f74,0x6f6c2e090a3b3236,0x0938360936310963,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x202c353166250920,0x5d302b346472255b,0x68732e646c090a3b\n"
".quad 0x3233662e64657261,0x202c363166250920,0x34362b346472255b,0x2e646461090a3b5d\n"
".quad 0x3166250920323366,0x2c35316625202c37,0x090a3b3631662520,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x2c5d302b34647225,0x240a3b3731662520,0x38325f31325f744c\n"
".quad 0x6162090a3a323631,0x0920636e79732e72,0x2e766f6d090a3b30,0x3172250920323375\n"
".quad 0x73090a3b37202c33,0x752e656c2e707465,0x2c37702509203233,0x7225202c31722520\n"
".quad 0x252140090a3b3331,0x0920617262203770,0x325f31325f744c24,0x2e090a3b34373638\n"
".quad 0x3609363109636f6c,0x2e646c090a300939,0x662e646572616873,0x3831662509203233\n"
".quad 0x2b346472255b202c,0x2e646c090a3b5d30,0x662e646572616873,0x3931662509203233\n"
".quad 0x2b346472255b202c,0x6461090a3b5d3233,0x2509203233662e64,0x316625202c303266\n"
".quad 0x3b39316625202c38,0x6168732e7473090a,0x203233662e646572,0x302b346472255b09\n"
".quad 0x3b30326625202c5d,0x5f31325f744c240a,0x090a3a3437363832,0x636e79732e726162\n"
".quad 0x6f6d090a3b300920,0x2509203233752e76,0x0a3b33202c343172,0x656c2e7074657309\n"
".quad 0x702509203233752e,0x202c317225202c38,0x40090a3b34317225,0x6172622038702521\n"
".quad 0x31325f744c240920,0x0a3b36383139325f,0x363109636f6c2e09,0x6c090a3009303709\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3132,0x6c090a3b5d302b34\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3232,0x090a3b5d36312b34\n"
".quad 0x203233662e646461,0x25202c3332662509,0x326625202c313266,0x732e7473090a3b32\n"
".quad 0x33662e6465726168,0x346472255b092032,0x326625202c5d302b,0x325f744c240a3b33\n"
".quad 0x3a36383139325f31,0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d\n"
".quad 0x31202c3531722509,0x2e70746573090a3b,0x09203233752e656c,0x317225202c397025\n"
".quad 0x0a3b35317225202c,0x6220397025214009,0x5f744c2409206172,0x38393639325f3132\n"
".quad 0x09636f6c2e090a3b,0x0a30093137093631,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c34326625,0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c35326625,0x0a3b5d382b346472,0x3233662e64646109,0x202c363266250920\n"
".quad 0x6625202c34326625,0x2e7473090a3b3532,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x5f744c240a3b3632,0x38393639325f3132,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x3233752e766f6d09,0x202c363172250920,0x70746573090a3b30\n"
".quad 0x203233752e71652e,0x25202c3031702509,0x36317225202c3172,0x3170252140090a3b\n"
".quad 0x2409206172622030,0x30335f31325f744c,0x6c2e090a3b303132,0x323709363109636f\n"
".quad 0x732e646c090a3009,0x33662e6465726168,0x2c37326625092032,0x302b346472255b20\n"
".quad 0x732e646c090a3b5d,0x33662e6465726168,0x2c38326625092032,0x342b346472255b20\n"
".quad 0x2e646461090a3b5d,0x3266250920323366,0x2c37326625202c39,0x090a3b3832662520\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x240a3b3932662520\n"
".quad 0x30335f31325f744c,0x6162090a3a303132,0x0920636e79732e72,0x636f6c2e090a3b30\n"
".quad 0x0933303109363109,0x3170252140090a30,0x2409206172622030,0x30335f31325f744c\n"
".quad 0x6c2e090a3b323237,0x303109363109636f,0x2e646c090a300936,0x662e646572616873\n"
".quad 0x3033662509203233,0x61746164735b202c,0x646c090a3b5d302b,0x752e6d617261702e\n"
".quad 0x3164722509203436,0x75635f5f5b202c31,0x5f5f6d7261706164,0x637564657236315a\n"
".quad 0x50656c676e695365,0x35326a4c49737361,0x76454531624c4536,0x675f6a6650664b50\n"
".quad 0x3b5d617461646f5f,0x36752e747663090a,0x2509203233752e34,0x7225202c32316472\n"
".quad 0x2e6c756d090a3b32,0x3233752e65646977,0x2c33316472250920,0x3b34202c32722520\n"
".quad 0x36752e646461090a,0x3431647225092034,0x2c3131647225202c,0x0a3b333164722520\n"
".quad 0x626f6c672e747309,0x09203233662e6c61,0x302b34316472255b,0x3b30336625202c5d\n"
".quad 0x5f31325f744c240a,0x090a3a3232373033,0x09363109636f6c2e,0x6d090a3009343431\n"
".quad 0x09203233752e766f,0x3b31202c37317225,0x6c2e70746573090a,0x2509203233752e65\n"
".quad 0x367225202c313170,0x0a3b37317225202c,0x6220313170254009,0x5f744c2409206172\n"
".quad 0x34333231335f3132,0x09636f6c2e090a3b,0x3009373531093631,0x7261626d656d090a\n"
".quad 0x2140090a3b6c672e,0x6172622030317025,0x31325f744c240920,0x0a3b36343731335f\n"
".quad 0x363109636f6c2e09,0x090a300932363109,0x203436752e766f6d,0x202c353164722509\n"
".quad 0x656d657269746572,0x3b746e756f43746e,0x672e6d6f7461090a,0x6e692e6c61626f6c\n"
".quad 0x2509203233752e63,0x72255b202c383172,0x7225202c5d353164,0x2e766f6d090a3b36\n"
".quad 0x3172250920323373,0x3b38317225202c39,0x3109636f6c2e090a,0x0a30093436310936\n"
".quad 0x3233752e62757309,0x202c303272250920,0x0a3b31202c367225,0x2e71652e74657309\n"
".quad 0x203233752e323375,0x25202c3132722509,0x327225202c393172,0x2e67656e090a3b30\n"
".quad 0x3272250920323373,0x3b31327225202c32,0x6168732e7473090a,0x092038732e646572\n"
".quad 0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f39323336325f72,0x73614c6d615f3833\n"
".quad 0x32327225202c5d74,0x31325f744c240a3b,0x0a3a36343731335f,0x363109636f6c2e09\n"
".quad 0x090a300936363109,0x636e79732e726162,0x646c090a3b300920,0x2e6465726168732e\n"
".quad 0x3332722509203873,0x6475635f5f5b202c,0x5f6c61636f6c5f61,0x323336325f726176\n"
".quad 0x4c6d615f38335f39,0x6d090a3b5d747361,0x09203233752e766f,0x3b30202c34327225\n"
".quad 0x652e70746573090a,0x2509203233732e71,0x327225202c323170,0x3b34327225202c33\n"
".quad 0x203231702540090a,0x744c240920617262,0x353232335f31325f,0x70746573090a3b38\n"
".quad 0x203233752e656c2e,0x25202c3331702509,0x3b317225202c3672,0x203331702540090a\n"
".quad 0x744c240920617262,0x323033335f31325f,0x636f6c2e090a3b36,0x0932373109363109\n"
".quad 0x61702e646c090a30,0x203436752e6d6172,0x202c363164722509,0x70616475635f5f5b\n"
".quad 0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e,0x4c453635326a4c49\n"
".quad 0x664b507645453162,0x646f5f675f6a6650,0x61090a3b5d617461,0x09203436752e6464\n"
".quad 0x25202c3731647225,0x7225202c36316472,0x2e646c090a3b3264,0x662e6c61626f6c67\n"
".quad 0x3133662509203233,0x37316472255b202c,0x7262090a3b5d302b,0x240920696e752e61\n"
".quad 0x32335f31325f744c,0x744c240a3b303737,0x323033335f31325f,0x2e766f6d090a3a36\n"
".quad 0x3366250920323366,0x3030306630202c31,0x20203b3030303030,0x0a30202f2f092020\n"
".quad 0x335f31325f744c24,0x6d090a3a30373732,0x09203436752e766f,0x73202c3831647225\n"
".quad 0x6461090a3b6d656d,0x2509203436752e64,0x7225202c39316472,0x31647225202c3264\n"
".quad 0x732e7473090a3b38,0x33662e6465726168,0x316472255b092032,0x6625202c5d302b39\n"
".quad 0x6f6c2e090a3b3133,0x3437310936310963,0x2e726162090a3009,0x3b300920636e7973\n"
".quad 0x3109636f6c2e090a,0x0a30093637310936,0x6220337025214009,0x5f744c2409206172\n"
".quad 0x32383233335f3132,0x09636f6c2e090a3b,0x0a30093436093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c32336625,0x3b5d302b39316472,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3333662509,0x31352b3931647225,0x646461090a3b5d32\n"
".quad 0x662509203233662e,0x32336625202c3433,0x0a3b33336625202c,0x726168732e747309\n"
".quad 0x09203233662e6465,0x302b39316472255b,0x3b34336625202c5d,0x5f31325f744c240a\n"
".quad 0x090a3a3238323333,0x636e79732e726162,0x2140090a3b300920,0x2061726220347025\n"
".quad 0x5f31325f744c2409,0x090a3b3439373333,0x09363109636f6c2e,0x646c090a30093536\n"
".quad 0x2e6465726168732e,0x3366250920323366,0x316472255b202c35,0x6c090a3b5d302b39\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3633,0x3b5d3635322b3931\n"
".quad 0x33662e646461090a,0x2c37336625092032,0x25202c3533662520,0x7473090a3b363366\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x202c5d302b393164,0x4c240a3b37336625\n"
".quad 0x3733335f31325f74,0x726162090a3a3439,0x300920636e79732e,0x3570252140090a3b\n"
".quad 0x4c24092061726220,0x3334335f31325f74,0x6f6c2e090a3b3630,0x0937360936310963\n"
".quad 0x68732e646c090a30,0x3233662e64657261,0x202c383366250920,0x302b39316472255b\n"
".quad 0x732e646c090a3b5d,0x33662e6465726168,0x2c39336625092032,0x2b39316472255b20\n"
".quad 0x61090a3b5d383231,0x09203233662e6464,0x6625202c30346625,0x39336625202c3833\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920,0x346625202c5d302b\n"
".quad 0x325f744c240a3b30,0x3a36303334335f31,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x7262203670252140,0x325f744c24092061,0x3b38313834335f31,0x3109636f6c2e090a\n"
".quad 0x090a300938360936,0x65726168732e646c,0x2509203233662e64,0x72255b202c313466\n"
".quad 0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465,0x255b202c32346625\n"
".quad 0x5d34362b39316472,0x662e646461090a3b,0x3334662509203233,0x202c31346625202c\n"
".quad 0x73090a3b32346625,0x6465726168732e74,0x255b09203233662e,0x2c5d302b39316472\n"
".quad 0x240a3b3334662520,0x34335f31325f744c,0x6162090a3a383138,0x0920636e79732e72\n"
".quad 0x70252140090a3b30,0x2409206172622037,0x35335f31325f744c,0x6c2e090a3b303333\n"
".quad 0x393609363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c34346625092032\n"
".quad 0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873,0x3534662509203233\n"
".quad 0x39316472255b202c,0x61090a3b5d32332b,0x09203233662e6464,0x6625202c36346625\n"
".quad 0x35346625202c3434,0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920\n"
".quad 0x346625202c5d302b,0x325f744c240a3b36,0x3a30333335335f31,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x7262203870252140,0x325f744c24092061,0x3b32343835335f31\n"
".quad 0x3109636f6c2e090a,0x090a300930370936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c373466,0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c38346625,0x5d36312b39316472,0x662e646461090a3b,0x3934662509203233\n"
".quad 0x202c37346625202c,0x73090a3b38346625,0x6465726168732e74,0x255b09203233662e\n"
".quad 0x2c5d302b39316472,0x240a3b3934662520,0x35335f31325f744c,0x6162090a3a323438\n"
".quad 0x0920636e79732e72,0x70252140090a3b30,0x2409206172622039,0x36335f31325f744c\n"
".quad 0x6c2e090a3b343533,0x313709363109636f,0x732e646c090a3009,0x33662e6465726168\n"
".quad 0x2c30356625092032,0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873\n"
".quad 0x3135662509203233,0x39316472255b202c,0x6461090a3b5d382b,0x2509203233662e64\n"
".quad 0x356625202c323566,0x3b31356625202c30,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x2b39316472255b09,0x32356625202c5d30,0x31325f744c240a3b,0x0a3a34353336335f\n"
".quad 0x6e79732e72616209,0x40090a3b30092063,0x7262203031702521,0x325f744c24092061\n"
".quad 0x3b36363836335f31,0x3109636f6c2e090a,0x090a300932370936,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c333566,0x0a3b5d302b393164,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c34356625,0x3b5d342b39316472,0x33662e646461090a\n"
".quad 0x2c35356625092032,0x25202c3335662520,0x7473090a3b343566,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x202c5d302b393164,0x4c240a3b35356625,0x3836335f31325f74\n"
".quad 0x726162090a3a3636,0x300920636e79732e,0x09636f6c2e090a3b,0x3009363731093631\n"
".quad 0x303170252140090a,0x4c24092061726220,0x3337335f31325f74,0x6f6c2e090a3b3837\n"
".quad 0x3038310936310963,0x732e646c090a3009,0x33662e6465726168,0x2c36356625092032\n"
".quad 0x302b6d656d735b20,0x702e646c090a3b5d,0x3436752e6d617261,0x2c30326472250920\n"
".quad 0x616475635f5f5b20,0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69\n"
".quad 0x453635326a4c4973,0x4b5076454531624c,0x6f5f675f6a665066,0x090a3b5d61746164\n"
".quad 0x61626f6c672e7473,0x5b09203233662e6c,0x5d302b3032647225,0x0a3b36356625202c\n"
".quad 0x363109636f6c2e09,0x090a300933383109,0x203233752e766f6d,0x30202c3532722509\n"
".quad 0x6c672e7473090a3b,0x3233752e6c61626f,0x72697465725b0920,0x756f43746e656d65\n"
".quad 0x327225202c5d746e,0x325f744c240a3b35,0x3a38373337335f31,0x5f31325f744c240a\n"
".quad 0x240a3a3835323233,0x31335f31325f744c,0x6c2e090a3a343332,0x383109363109636f\n"
".quad 0x697865090a300937,0x6557444c240a3b74,0x7236315a5f5f646e,0x6e69536563756465\n"
".quad 0x4973736150656c67,0x624c453635326a4c,0x50664b5076454531,0x2f207d090a3a6a66\n"
".quad 0x657236315a5f202f,0x676e695365637564,0x4c4973736150656c,0x31624c453635326a\n"
".quad 0x6650664b50764545,0x746e652e090a0a6a,0x7236315a5f207972,0x6e69536563756465\n"
".quad 0x4973736150656c67,0x624c453832316a4c,0x50664b5076454531,0x2e09090a28206a66\n"
".quad 0x752e206d61726170,0x6475635f5f203436,0x5a5f5f6d72617061,0x6563756465723631\n"
".quad 0x6150656c676e6953,0x3832316a4c497373,0x5076454531624c45,0x5f675f6a6650664b\n"
".quad 0x090a2c6174616469,0x206d617261702e09,0x635f5f203436752e,0x5f6d726170616475\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150,0x454531624c453832\n"
".quad 0x5f6a6650664b5076,0x2c617461646f5f67,0x617261702e09090a,0x5f203233752e206d\n"
".quad 0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x31624c453832316a,0x6650664b50764545,0x0a7b090a296e5f6a,0x752e206765722e09\n"
".quad 0x3b31767225203233,0x2e206765722e090a,0x323c722520323375,0x65722e090a3b3e36\n"
".quad 0x25203436752e2067,0x0a3b3e32323c6472,0x662e206765722e09,0x32353c6625203233\n"
".quad 0x6765722e090a3b3e,0x2520646572702e20,0x090a3b3e34313c70,0x206465726168732e\n"
".quad 0x75635f5f2038732e,0x6c61636f6c5f6164,0x3336325f7261765f,0x6d615f38335f3932\n"
".quad 0x2e090a3b7473614c,0x3109363109636f6c,0x424c240a30093733,0x7236315a5f5f3142\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x624c453832316a4c,0x50664b5076454531\n"
".quad 0x6f6c2e090a3a6a66,0x0936380936310963,0x752e747663090a30,0x09203631752e3233\n"
".quad 0x697425202c317225,0x7663090a3b782e64,0x33752e3436752e74,0x2c31647225092032\n"
".quad 0x6d090a3b31722520,0x2e656469772e6c75,0x6472250920323375,0x202c317225202c32\n"
".quad 0x2e766f6d090a3b34,0x6472250920343675,0x6174616473202c33,0x752e646461090a3b\n"
".quad 0x3464722509203436,0x202c32647225202c,0x6d090a3b33647225,0x09203233662e766f\n"
".quad 0x306630202c316625,0x3b30303030303030,0x2f2f092020202020,0x2e766f6d090a3020\n"
".quad 0x3266250920323366,0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x090a3b326625202c\n"
".quad 0x2e3233752e747663,0x3272250920363175,0x646961746325202c,0x6c756d090a3b782e\n"
".quad 0x203233752e6f6c2e,0x7225202c33722509,0x0a3b363532202c32,0x3233752e64646109\n"
".quad 0x25202c3472250920,0x3b317225202c3372,0x33732e766f6d090a,0x202c357225092032\n"
".quad 0x7663090a3b347225,0x31752e3233752e74,0x202c367225092036,0x2e64696174636e25\n"
".quad 0x702e646c090a3b78,0x3233752e6d617261,0x5b202c3772250920,0x6170616475635f5f\n"
".quad 0x7236315a5f5f6d72,0x6e69536563756465,0x4973736150656c67,0x624c453832316a4c\n"
".quad 0x50664b5076454531,0x090a3b5d6e5f6a66,0x2e65672e70746573,0x3170250920323375\n"
".quad 0x25202c347225202c,0x702540090a3b3772,0x2409206172622031,0x36325f32325f744c\n"
".quad 0x756d090a3b343131,0x3233752e6f6c2e6c,0x25202c3872250920,0x3b363532202c3672\n"
".quad 0x36732e747663090a,0x2509203233752e34,0x387225202c356472,0x61702e646c090a3b\n"
".quad 0x203436752e6d6172,0x5b202c3664722509,0x6170616475635f5f,0x7236315a5f5f6d72\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x624c453832316a4c,0x50664b5076454531\n"
".quad 0x6164695f675f6a66,0x7663090a3b5d6174,0x33752e3436752e74,0x2c37647225092032\n"
".quad 0x6d090a3b34722520,0x2e656469772e6c75,0x6472250920323375,0x202c347225202c38\n"
".quad 0x2e646461090a3b34,0x6472250920343675,0x2c36647225202c39,0x090a3b3864722520\n"
".quad 0x656469772e6c756d,0x722509203233752e,0x387225202c303164,0x744c240a3b34202c\n"
".quad 0x323636325f32325f,0x6c3c2f2f200a3a36,0x6f6f4c203e706f6f,0x6c2079646f622070\n"
".quad 0x202c363820656e69,0x20676e697473656e,0x31203a6874706564,0x616d69747365202c\n"
".quad 0x7265746920646574,0x203a736e6f697461,0x0a6e776f6e6b6e75,0x363109636f6c2e09\n"
".quad 0x6c090a3009333909,0x6c61626f6c672e64,0x662509203233662e,0x396472255b202c33\n"
".quad 0x6461090a3b5d302b,0x2509203233662e64,0x2c336625202c3466,0x73090a3b31662520\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472,0x6c2e090a3b346625\n"
".quad 0x363909363109636f,0x672e646c090a3009,0x33662e6c61626f6c,0x202c356625092032\n"
".quad 0x31352b396472255b,0x646461090a3b5d32,0x662509203233662e,0x202c356625202c31\n"
".quad 0x7473090a3b346625,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x646461090a3b3166,0x722509203233752e,0x202c387225202c35,0x6461090a3b357225\n"
".quad 0x2509203436752e64,0x647225202c396472,0x3031647225202c39,0x09636f6c2e090a3b\n"
".quad 0x0a30093638093631,0x617261702e646c09,0x2509203233752e6d,0x635f5f5b202c3772\n"
".quad 0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150\n"
".quad 0x454531624c453832,0x5f6a6650664b5076,0x6f6c2e090a3b5d6e,0x0936390936310963\n"
".quad 0x2e70746573090a30,0x09203233752e746c,0x357225202c327025,0x090a3b377225202c\n"
".quad 0x6172622032702540,0x32325f744c240920,0x0a3b36323636325f,0x325f32325f744c24\n"
".quad 0x2e090a3a34313136,0x3109363109636f6c,0x6162090a30093030,0x0920636e79732e72\n"
".quad 0x636f6c2e090a3b30,0x0933303109363109,0x752e766f6d090a30,0x2c39722509203233\n"
".quad 0x6573090a3b333620,0x33752e656c2e7074,0x202c337025092032,0x397225202c317225\n"
".quad 0x3370252140090a3b,0x4c24092061726220,0x3137325f32325f74,0x6f6c2e090a3b3833\n"
".quad 0x0935360936310963,0x68732e646c090a30,0x3233662e64657261,0x5b202c3666250920\n"
".quad 0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572,0x255b202c37662509\n"
".quad 0x5d3635322b346472,0x662e646461090a3b,0x2c38662509203233,0x6625202c36662520\n"
".quad 0x732e7473090a3b37,0x33662e6465726168,0x346472255b092032,0x386625202c5d302b\n"
".quad 0x32325f744c240a3b,0x0a3a38333137325f,0x6e79732e72616209,0x6d090a3b30092063\n"
".quad 0x09203233752e766f,0x3133202c30317225,0x2e70746573090a3b,0x09203233752e656c\n"
".quad 0x317225202c347025,0x0a3b30317225202c,0x6220347025214009,0x5f744c2409206172\n"
".quad 0x30353637325f3232,0x09636f6c2e090a3b,0x0a30093736093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x72255b202c396625,0x090a3b5d302b3464,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c303166,0x3b5d3832312b3464,0x33662e646461090a\n"
".quad 0x2c31316625092032,0x6625202c39662520,0x2e7473090a3b3031,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3131,0x30353637325f3232\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09,0x202c313172250920\n"
".quad 0x746573090a3b3531,0x3233752e656c2e70,0x25202c3570250920,0x31317225202c3172\n"
".quad 0x3570252140090a3b,0x4c24092061726220,0x3138325f32325f74,0x6f6c2e090a3b3236\n"
".quad 0x0938360936310963,0x68732e646c090a30,0x3233662e64657261,0x202c323166250920\n"
".quad 0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261,0x202c333166250920\n"
".quad 0x34362b346472255b,0x2e646461090a3b5d,0x3166250920323366,0x2c32316625202c34\n"
".quad 0x090a3b3331662520,0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225\n"
".quad 0x240a3b3431662520,0x38325f32325f744c,0x6162090a3a323631,0x0920636e79732e72\n"
".quad 0x2e766f6d090a3b30,0x3172250920323375,0x73090a3b37202c32,0x752e656c2e707465\n"
".quad 0x2c36702509203233,0x7225202c31722520,0x252140090a3b3231,0x0920617262203670\n"
".quad 0x325f32325f744c24,0x2e090a3b34373638,0x3609363109636f6c,0x2e646c090a300939\n"
".quad 0x662e646572616873,0x3531662509203233,0x2b346472255b202c,0x2e646c090a3b5d30\n"
".quad 0x662e646572616873,0x3631662509203233,0x2b346472255b202c,0x6461090a3b5d3233\n"
".quad 0x2509203233662e64,0x316625202c373166,0x3b36316625202c35,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x302b346472255b09,0x3b37316625202c5d,0x5f32325f744c240a\n"
".quad 0x090a3a3437363832,0x636e79732e726162,0x6f6d090a3b300920,0x2509203233752e76\n"
".quad 0x0a3b33202c333172,0x656c2e7074657309,0x702509203233752e,0x202c317225202c37\n"
".quad 0x40090a3b33317225,0x6172622037702521,0x32325f744c240920,0x0a3b36383139325f\n"
".quad 0x363109636f6c2e09,0x6c090a3009303709,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3831,0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3931,0x090a3b5d36312b34,0x203233662e646461,0x25202c3032662509\n"
".quad 0x316625202c383166,0x732e7473090a3b39,0x33662e6465726168,0x346472255b092032\n"
".quad 0x326625202c5d302b,0x325f744c240a3b30,0x3a36383139325f32,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x203233752e766f6d,0x31202c3431722509,0x2e70746573090a3b\n"
".quad 0x09203233752e656c,0x317225202c387025,0x0a3b34317225202c,0x6220387025214009\n"
".quad 0x5f744c2409206172,0x38393639325f3232,0x09636f6c2e090a3b,0x0a30093137093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c31326625,0x0a3b5d302b346472\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c32326625,0x0a3b5d382b346472\n"
".quad 0x3233662e64646109,0x202c333266250920,0x6625202c31326625,0x2e7473090a3b3232\n"
".quad 0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3332\n"
".quad 0x38393639325f3232,0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09\n"
".quad 0x202c353172250920,0x70746573090a3b30,0x203233752e71652e,0x7225202c39702509\n"
".quad 0x3b35317225202c31,0x203970252140090a,0x744c240920617262,0x313230335f32325f\n"
".quad 0x636f6c2e090a3b30,0x3009323709363109,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3432662509,0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3532662509,0x3b5d342b34647225,0x33662e646461090a,0x2c36326625092032\n"
".quad 0x25202c3432662520,0x7473090a3b353266,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x744c240a3b363266,0x313230335f32325f,0x2e726162090a3a30\n"
".quad 0x3b300920636e7973,0x3109636f6c2e090a,0x0a30093330310936,0x6220397025214009\n"
".quad 0x5f744c2409206172,0x32323730335f3232,0x09636f6c2e090a3b,0x3009363031093631\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3732662509,0x5d302b6174616473\n"
".quad 0x61702e646c090a3b,0x203436752e6d6172,0x202c313164722509,0x70616475635f5f5b\n"
".quad 0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e,0x4c453832316a4c49\n"
".quad 0x664b507645453162,0x646f5f675f6a6650,0x63090a3b5d617461,0x752e3436752e7476\n"
".quad 0x3164722509203233,0x0a3b327225202c32,0x6469772e6c756d09,0x2509203233752e65\n"
".quad 0x7225202c33316472,0x61090a3b34202c32,0x09203436752e6464,0x25202c3431647225\n"
".quad 0x7225202c31316472,0x7473090a3b333164,0x2e6c61626f6c672e,0x72255b0920323366\n"
".quad 0x202c5d302b343164,0x4c240a3b37326625,0x3730335f32325f74,0x6f6c2e090a3a3232\n"
".quad 0x3434310936310963,0x2e766f6d090a3009,0x3172250920323375,0x73090a3b31202c36\n"
".quad 0x752e656c2e707465,0x3031702509203233,0x25202c367225202c,0x2540090a3b363172\n"
".quad 0x2061726220303170,0x5f32325f744c2409,0x090a3b3433323133,0x09363109636f6c2e\n"
".quad 0x6d090a3009373531,0x6c672e7261626d65,0x3970252140090a3b,0x4c24092061726220\n"
".quad 0x3731335f32325f74,0x6f6c2e090a3b3634,0x3236310936310963,0x2e766f6d090a3009\n"
".quad 0x6472250920343675,0x69746572202c3531,0x6f43746e656d6572,0x7461090a3b746e75\n"
".quad 0x61626f6c672e6d6f,0x33752e636e692e6c,0x2c37317225092032,0x5d35316472255b20\n"
".quad 0x090a3b367225202c,0x203233732e766f6d,0x25202c3831722509,0x6c2e090a3b373172\n"
".quad 0x363109363109636f,0x627573090a300934,0x722509203233752e,0x2c367225202c3931\n"
".quad 0x746573090a3b3120,0x2e3233752e71652e,0x3272250920323375,0x2c38317225202c30\n"
".quad 0x090a3b3931722520,0x203233732e67656e,0x25202c3132722509,0x7473090a3b303272\n"
".quad 0x2e6465726168732e,0x635f5f5b09203873,0x61636f6c5f616475,0x36325f7261765f6c\n"
".quad 0x615f38335f393233,0x202c5d7473614c6d,0x4c240a3b31327225,0x3731335f32325f74\n"
".quad 0x6f6c2e090a3a3634,0x3636310936310963,0x2e726162090a3009,0x3b300920636e7973\n"
".quad 0x6168732e646c090a,0x092038732e646572,0x5f5b202c32327225,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x38335f3932333632,0x5d7473614c6d615f,0x752e766f6d090a3b\n"
".quad 0x3332722509203233,0x6573090a3b30202c,0x33732e71652e7074,0x2c31317025092032\n"
".quad 0x25202c3232722520,0x2540090a3b333272,0x2061726220313170,0x5f32325f744c2409\n"
".quad 0x090a3b3835323233,0x2e656c2e70746573,0x3170250920323375,0x202c367225202c32\n"
".quad 0x2540090a3b317225,0x2061726220323170,0x5f32325f744c2409,0x090a3b3632303333\n"
".quad 0x09363109636f6c2e,0x6c090a3009323731,0x2e6d617261702e64,0x6472250920343675\n"
".quad 0x635f5f5b202c3631,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x316a4c4973736150,0x454531624c453832,0x5f6a6650664b5076,0x5d617461646f5f67\n"
".quad 0x752e646461090a3b,0x3164722509203436,0x3631647225202c37,0x0a3b32647225202c\n"
".quad 0x626f6c672e646c09,0x09203233662e6c61,0x255b202c38326625,0x3b5d302b37316472\n"
".quad 0x6e752e617262090a,0x325f744c24092069,0x3b30373732335f32,0x5f32325f744c240a\n"
".quad 0x090a3a3632303333,0x203233662e766f6d,0x30202c3832662509,0x3030303030303066\n"
".quad 0x2f09202020203b30,0x5f744c240a30202f,0x30373732335f3232,0x752e766f6d090a3a\n"
".quad 0x3164722509203436,0x3b6d656d73202c38,0x36752e646461090a,0x3931647225092034\n"
".quad 0x202c32647225202c,0x090a3b3831647225,0x65726168732e7473,0x5b09203233662e64\n"
".quad 0x5d302b3931647225,0x0a3b38326625202c,0x363109636f6c2e09,0x090a300934373109\n"
".quad 0x636e79732e726162,0x6c2e090a3b300920,0x373109363109636f,0x252140090a300936\n"
".quad 0x0920617262203370,0x335f32325f744c24,0x2e090a3b32383233,0x3609363109636f6c\n"
".quad 0x2e646c090a300935,0x662e646572616873,0x3932662509203233,0x39316472255b202c\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3366250920323366,0x316472255b202c30\n"
".quad 0x0a3b5d3635322b39,0x3233662e64646109,0x202c313366250920,0x6625202c39326625\n"
".quad 0x2e7473090a3b3033,0x662e646572616873,0x6472255b09203233,0x25202c5d302b3931\n"
".quad 0x744c240a3b313366,0x383233335f32325f,0x2e726162090a3a32,0x3b300920636e7973\n"
".quad 0x203470252140090a,0x744c240920617262,0x393733335f32325f,0x636f6c2e090a3b34\n"
".quad 0x3009373609363109,0x6168732e646c090a,0x203233662e646572,0x5b202c3233662509\n"
".quad 0x5d302b3931647225,0x68732e646c090a3b,0x3233662e64657261,0x202c333366250920\n"
".quad 0x312b39316472255b,0x6461090a3b5d3832,0x2509203233662e64,0x336625202c343366\n"
".quad 0x3b33336625202c32,0x6168732e7473090a,0x203233662e646572,0x2b39316472255b09\n"
".quad 0x34336625202c5d30,0x32325f744c240a3b,0x0a3a34393733335f,0x6e79732e72616209\n"
".quad 0x40090a3b30092063,0x6172622035702521,0x32325f744c240920,0x0a3b36303334335f\n"
".quad 0x363109636f6c2e09,0x6c090a3009383609,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3533,0x090a3b5d302b3931,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c363366,0x3b5d34362b393164,0x33662e646461090a,0x2c37336625092032\n"
".quad 0x25202c3533662520,0x7473090a3b363366,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x202c5d302b393164,0x4c240a3b37336625,0x3334335f32325f74,0x726162090a3a3630\n"
".quad 0x300920636e79732e,0x3670252140090a3b,0x4c24092061726220,0x3834335f32325f74\n"
".quad 0x6f6c2e090a3b3831,0x0939360936310963,0x68732e646c090a30,0x3233662e64657261\n"
".quad 0x202c383366250920,0x302b39316472255b,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x2c39336625092032,0x2b39316472255b20,0x6461090a3b5d3233,0x2509203233662e64\n"
".quad 0x336625202c303466,0x3b39336625202c38,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x2b39316472255b09,0x30346625202c5d30,0x32325f744c240a3b,0x0a3a38313834335f\n"
".quad 0x6e79732e72616209,0x40090a3b30092063,0x6172622037702521,0x32325f744c240920\n"
".quad 0x0a3b30333335335f,0x363109636f6c2e09,0x6c090a3009303709,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3134,0x090a3b5d302b3931,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c323466,0x3b5d36312b393164,0x33662e646461090a\n"
".quad 0x2c33346625092032,0x25202c3134662520,0x7473090a3b323466,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x202c5d302b393164,0x4c240a3b33346625,0x3335335f32325f74\n"
".quad 0x726162090a3a3033,0x300920636e79732e,0x3870252140090a3b,0x4c24092061726220\n"
".quad 0x3835335f32325f74,0x6f6c2e090a3b3234,0x0931370936310963,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x202c343466250920,0x302b39316472255b,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x2c35346625092032,0x2b39316472255b20,0x646461090a3b5d38\n"
".quad 0x662509203233662e,0x34346625202c3634,0x0a3b35346625202c,0x726168732e747309\n"
".quad 0x09203233662e6465,0x302b39316472255b,0x3b36346625202c5d,0x5f32325f744c240a\n"
".quad 0x090a3a3234383533,0x636e79732e726162,0x2140090a3b300920,0x2061726220397025\n"
".quad 0x5f32325f744c2409,0x090a3b3435333633,0x09363109636f6c2e,0x646c090a30093237\n"
".quad 0x2e6465726168732e,0x3466250920323366,0x316472255b202c37,0x6c090a3b5d302b39\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3834,0x090a3b5d342b3931\n"
".quad 0x203233662e646461,0x25202c3934662509,0x346625202c373466,0x732e7473090a3b38\n"
".quad 0x33662e6465726168,0x316472255b092032,0x6625202c5d302b39,0x5f744c240a3b3934\n"
".quad 0x34353336335f3232,0x732e726162090a3a,0x0a3b300920636e79,0x363109636f6c2e09\n"
".quad 0x090a300936373109,0x7262203970252140,0x325f744c24092061,0x3b36363836335f32\n"
".quad 0x3109636f6c2e090a,0x0a30093038310936,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x735b202c30356625,0x0a3b5d302b6d656d,0x617261702e646c09,0x2509203436752e6d\n"
".quad 0x5f5b202c30326472,0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x31624c453832316a,0x6650664b50764545,0x7461646f5f675f6a\n"
".quad 0x2e7473090a3b5d61,0x662e6c61626f6c67,0x6472255b09203233,0x25202c5d302b3032\n"
".quad 0x6c2e090a3b303566,0x383109363109636f,0x766f6d090a300933,0x722509203233752e\n"
".quad 0x090a3b30202c3432,0x61626f6c672e7473,0x5b09203233752e6c,0x656d657269746572\n"
".quad 0x5d746e756f43746e,0x0a3b34327225202c,0x335f32325f744c24,0x4c240a3a36363836\n"
".quad 0x3232335f32325f74,0x5f744c240a3a3835,0x34333231335f3232,0x09636f6c2e090a3a\n"
".quad 0x3009373831093631,0x0a3b74697865090a,0x5f646e6557444c24,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x316a4c4973736150,0x454531624c453832,0x3a6a6650664b5076\n"
".quad 0x5f202f2f207d090a,0x637564657236315a,0x50656c676e695365,0x32316a4c49737361\n"
".quad 0x76454531624c4538,0x0a0a6a6650664b50,0x207972746e652e09,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x366a4c4973736150,0x76454531624c4534,0x28206a6650664b50\n"
".quad 0x617261702e09090a,0x5f203436752e206d,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x4531624c4534366a,0x6a6650664b507645\n"
".quad 0x61746164695f675f,0x7261702e09090a2c,0x203436752e206d61,0x6170616475635f5f\n"
".quad 0x7236315a5f5f6d72,0x6e69536563756465,0x4973736150656c67,0x31624c4534366a4c\n"
".quad 0x6650664b50764545,0x7461646f5f675f6a,0x61702e09090a2c61,0x3233752e206d6172\n"
".quad 0x70616475635f5f20,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x624c4534366a4c49,0x50664b5076454531,0x7b090a296e5f6a66,0x2e206765722e090a\n"
".quad 0x3176722520323375,0x206765722e090a3b,0x3c7225203233752e,0x722e090a3b3e3532\n"
".quad 0x203436752e206765,0x3b3e32323c647225,0x2e206765722e090a,0x343c662520323366\n"
".quad 0x65722e090a3b3e36,0x20646572702e2067,0x0a3b3e33313c7025,0x6465726168732e09\n"
".quad 0x635f5f2038732e20,0x61636f6c5f616475,0x36325f7261765f6c,0x615f38335f393233\n"
".quad 0x090a3b7473614c6d,0x09363109636f6c2e,0x4c240a3009373331,0x36315a5f5f314242\n"
".quad 0x6953656375646572,0x73736150656c676e,0x624c4534366a4c49,0x50664b5076454531\n"
".quad 0x6f6c2e090a3a6a66,0x0936380936310963,0x752e747663090a30,0x09203631752e3233\n"
".quad 0x697425202c317225,0x7663090a3b782e64,0x33752e3436752e74,0x2c31647225092032\n"
".quad 0x6d090a3b31722520,0x2e656469772e6c75,0x6472250920323375,0x202c317225202c32\n"
".quad 0x2e766f6d090a3b34,0x6472250920343675,0x6174616473202c33,0x752e646461090a3b\n"
".quad 0x3464722509203436,0x202c32647225202c,0x6d090a3b33647225,0x09203233662e766f\n"
".quad 0x306630202c316625,0x3b30303030303030,0x2f2f092020202020,0x2e766f6d090a3020\n"
".quad 0x3266250920323366,0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x090a3b326625202c\n"
".quad 0x2e3233752e747663,0x3272250920363175,0x646961746325202c,0x6c756d090a3b782e\n"
".quad 0x33752e6f6c2e3432,0x202c337225092032,0x383231202c327225,0x752e646461090a3b\n"
".quad 0x2c34722509203233,0x7225202c33722520,0x2e766f6d090a3b31,0x3572250920323373\n"
".quad 0x090a3b347225202c,0x2e3233752e747663,0x3672250920363175,0x696174636e25202c\n"
".quad 0x646c090a3b782e64,0x752e6d617261702e,0x2c37722509203233,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69,0x4c4534366a4c4973\n"
".quad 0x664b507645453162,0x0a3b5d6e5f6a6650,0x65672e7074657309,0x702509203233752e\n"
".quad 0x202c347225202c31,0x2540090a3b377225,0x0920617262203170,0x325f33325f744c24\n"
".quad 0x6d090a3b36323636,0x2e6f6c2e34326c75,0x3872250920323375,0x31202c367225202c\n"
".quad 0x747663090a3b3832,0x3233752e3436732e,0x202c356472250920,0x646c090a3b387225\n"
".quad 0x752e6d617261702e,0x3664722509203436,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4534366a4c497373,0x4b5076454531624c\n"
".quad 0x695f675f6a665066,0x090a3b5d61746164,0x2e3436752e747663,0x6472250920323375\n"
".quad 0x0a3b347225202c37,0x6469772e6c756d09,0x2509203233752e65,0x347225202c386472\n"
".quad 0x6461090a3b34202c,0x2509203436752e64,0x647225202c396472,0x3b38647225202c36\n"
".quad 0x69772e6c756d090a,0x09203233752e6564,0x25202c3031647225,0x240a3b34202c3872\n"
".quad 0x37325f33325f744c,0x2f2f200a3a383331,0x4c203e706f6f6c3c,0x79646f6220706f6f\n"
".quad 0x363820656e696c20,0x6e697473656e202c,0x3a68747065642067,0x69747365202c3120\n"
".quad 0x746920646574616d,0x736e6f6974617265,0x776f6e6b6e75203a,0x09636f6c2e090a6e\n"
".quad 0x0a30093339093631,0x626f6c672e646c09,0x09203233662e6c61,0x72255b202c336625\n"
".quad 0x090a3b5d302b3964,0x203233662e646461,0x6625202c34662509,0x0a3b316625202c33\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x090a3b346625202c\n"
".quad 0x09363109636f6c2e,0x646c090a30093639,0x2e6c61626f6c672e,0x3566250920323366\n"
".quad 0x2b396472255b202c,0x61090a3b5d363532,0x09203233662e6464,0x356625202c316625\n"
".quad 0x090a3b346625202c,0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225\n"
".quad 0x61090a3b31662520,0x09203233752e6464,0x387225202c357225,0x090a3b357225202c\n"
".quad 0x203436752e646461,0x25202c3964722509,0x647225202c396472,0x6f6c2e090a3b3031\n"
".quad 0x0936380936310963,0x61702e646c090a30,0x203233752e6d6172,0x5f5b202c37722509\n"
".quad 0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x4531624c4534366a,0x6a6650664b507645,0x6c2e090a3b5d6e5f,0x363909363109636f\n"
".quad 0x70746573090a3009,0x203233752e746c2e,0x7225202c32702509,0x0a3b377225202c35\n"
".quad 0x7262203270254009,0x325f744c24092061,0x3b38333137325f33,0x5f33325f744c240a\n"
".quad 0x090a3a3632363632,0x09363109636f6c2e,0x62090a3009303031,0x20636e79732e7261\n"
".quad 0x6f6c2e090a3b3009,0x3330310936310963,0x2e766f6d090a3009,0x3972250920323375\n"
".quad 0x73090a3b3133202c,0x752e656c2e707465,0x2c33702509203233,0x7225202c31722520\n"
".quad 0x70252140090a3b39,0x2409206172622033,0x37325f33325f744c,0x6c2e090a3b303536\n"
".quad 0x373609363109636f,0x732e646c090a3009,0x33662e6465726168,0x202c366625092032\n"
".quad 0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261,0x5b202c3766250920\n"
".quad 0x3832312b34647225,0x2e646461090a3b5d,0x3866250920323366,0x25202c366625202c\n"
".quad 0x2e7473090a3b3766,0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34\n"
".quad 0x325f744c240a3b38,0x3a30353637325f33,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x203233752e766f6d,0x31202c3031722509,0x70746573090a3b35,0x203233752e656c2e\n"
".quad 0x7225202c34702509,0x3b30317225202c31,0x203470252140090a,0x744c240920617262\n"
".quad 0x363138325f33325f,0x636f6c2e090a3b32,0x3009383609363109,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x255b202c39662509,0x0a3b5d302b346472,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c30316625,0x3b5d34362b346472,0x33662e646461090a\n"
".quad 0x2c31316625092032,0x6625202c39662520,0x2e7473090a3b3031,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3131,0x32363138325f3332\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09,0x202c313172250920\n"
".quad 0x70746573090a3b37,0x203233752e656c2e,0x7225202c35702509,0x3b31317225202c31\n"
".quad 0x203570252140090a,0x744c240920617262,0x373638325f33325f,0x636f6c2e090a3b34\n"
".quad 0x3009393609363109,0x6168732e646c090a,0x203233662e646572,0x5b202c3231662509\n"
".quad 0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572,0x5b202c3331662509\n"
".quad 0x5d32332b34647225,0x662e646461090a3b,0x3431662509203233,0x202c32316625202c\n"
".quad 0x73090a3b33316625,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x4c240a3b34316625,0x3638325f33325f74,0x726162090a3a3437,0x300920636e79732e\n"
".quad 0x752e766f6d090a3b,0x3231722509203233,0x6573090a3b33202c,0x33752e656c2e7074\n"
".quad 0x202c367025092032,0x317225202c317225,0x70252140090a3b32,0x2409206172622036\n"
".quad 0x39325f33325f744c,0x6c2e090a3b363831,0x303709363109636f,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x2c35316625092032,0x302b346472255b20,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x2c36316625092032,0x312b346472255b20,0x646461090a3b5d36\n"
".quad 0x662509203233662e,0x35316625202c3731,0x0a3b36316625202c,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x0a3b37316625202c,0x325f33325f744c24\n"
".quad 0x62090a3a36383139,0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e\n"
".quad 0x090a3b31202c3331,0x2e656c2e70746573,0x3770250920323375,0x25202c317225202c\n"
".quad 0x2140090a3b333172,0x2061726220377025,0x5f33325f744c2409,0x090a3b3839363932\n"
".quad 0x09363109636f6c2e,0x646c090a30093137,0x2e6465726168732e,0x3166250920323366\n"
".quad 0x346472255b202c38,0x646c090a3b5d302b,0x2e6465726168732e,0x3166250920323366\n"
".quad 0x346472255b202c39,0x6461090a3b5d382b,0x2509203233662e64,0x316625202c303266\n"
".quad 0x3b39316625202c38,0x6168732e7473090a,0x203233662e646572,0x302b346472255b09\n"
".quad 0x3b30326625202c5d,0x5f33325f744c240a,0x090a3a3839363932,0x636e79732e726162\n"
".quad 0x6f6d090a3b300920,0x2509203233752e76,0x0a3b30202c343172,0x71652e7074657309\n"
".quad 0x702509203233752e,0x202c317225202c38,0x40090a3b34317225,0x6172622038702521\n"
".quad 0x33325f744c240920,0x0a3b30313230335f,0x363109636f6c2e09,0x6c090a3009323709\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3132,0x6c090a3b5d302b34\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3232,0x61090a3b5d342b34\n"
".quad 0x09203233662e6464,0x6625202c33326625,0x32326625202c3132,0x68732e7473090a3b\n"
".quad 0x3233662e64657261,0x2b346472255b0920,0x33326625202c5d30,0x33325f744c240a3b\n"
".quad 0x0a3a30313230335f,0x6e79732e72616209,0x2e090a3b30092063,0x3109363109636f6c\n"
".quad 0x2140090a30093330,0x2061726220387025,0x5f33325f744c2409,0x090a3b3232373033\n"
".quad 0x09363109636f6c2e,0x6c090a3009363031,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6164735b202c3432,0x090a3b5d302b6174,0x6d617261702e646c,0x722509203436752e\n"
".quad 0x5f5f5b202c313164,0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x454531624c453436,0x5f6a6650664b5076,0x5d617461646f5f67\n"
".quad 0x752e747663090a3b,0x09203233752e3436,0x25202c3231647225,0x6c756d090a3b3272\n"
".quad 0x33752e656469772e,0x3331647225092032,0x34202c327225202c,0x752e646461090a3b\n"
".quad 0x3164722509203436,0x3131647225202c34,0x3b3331647225202c,0x6f6c672e7473090a\n"
".quad 0x203233662e6c6162,0x2b34316472255b09,0x34326625202c5d30,0x33325f744c240a3b\n"
".quad 0x0a3a32323730335f,0x363109636f6c2e09,0x090a300934343109,0x203233752e766f6d\n"
".quad 0x31202c3531722509,0x2e70746573090a3b,0x09203233752e656c,0x367225202c397025\n"
".quad 0x0a3b35317225202c,0x7262203970254009,0x325f744c24092061,0x3b34333231335f33\n"
".quad 0x3109636f6c2e090a,0x0a30093735310936,0x2e7261626d656d09,0x252140090a3b6c67\n"
".quad 0x0920617262203870,0x335f33325f744c24,0x2e090a3b36343731,0x3109363109636f6c\n"
".quad 0x6f6d090a30093236,0x2509203436752e76,0x6572202c35316472,0x746e656d65726974\n"
".quad 0x090a3b746e756f43,0x6f6c672e6d6f7461,0x2e636e692e6c6162,0x3172250920323375\n"
".quad 0x316472255b202c36,0x3b367225202c5d35,0x33732e766f6d090a,0x2c37317225092032\n"
".quad 0x090a3b3631722520,0x09363109636f6c2e,0x73090a3009343631,0x09203233752e6275\n"
".quad 0x7225202c38317225,0x73090a3b31202c36,0x33752e71652e7465,0x2509203233752e32\n"
".quad 0x317225202c393172,0x3b38317225202c37,0x33732e67656e090a,0x2c30327225092032\n"
".quad 0x090a3b3931722520,0x65726168732e7473,0x5f5b092038732e64,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x38335f3932333632,0x5d7473614c6d615f,0x0a3b30327225202c\n"
".quad 0x335f33325f744c24,0x2e090a3a36343731,0x3109363109636f6c,0x6162090a30093636\n"
".quad 0x0920636e79732e72,0x732e646c090a3b30,0x38732e6465726168,0x202c313272250920\n"
".quad 0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f39323336325f72,0x73614c6d615f3833\n"
".quad 0x766f6d090a3b5d74,0x722509203233752e,0x090a3b30202c3232,0x2e71652e70746573\n"
".quad 0x3170250920323373,0x2c31327225202c30,0x090a3b3232722520,0x7262203031702540\n"
".quad 0x325f744c24092061,0x3b38353232335f33,0x6c2e70746573090a,0x2509203233752e65\n"
".quad 0x367225202c313170,0x090a3b317225202c,0x7262203131702540,0x325f744c24092061\n"
".quad 0x3b36323033335f33,0x3109636f6c2e090a,0x0a30093237310936,0x617261702e646c09\n"
".quad 0x2509203436752e6d,0x5f5b202c36316472,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x4531624c4534366a,0x6a6650664b507645\n"
".quad 0x617461646f5f675f,0x2e646461090a3b5d,0x6472250920343675,0x31647225202c3731\n"
".quad 0x3b32647225202c36,0x6f6c672e646c090a,0x203233662e6c6162,0x5b202c3532662509\n"
".quad 0x5d302b3731647225,0x752e617262090a3b,0x5f744c240920696e,0x30373732335f3332\n"
".quad 0x33325f744c240a3b,0x0a3a36323033335f,0x3233662e766f6d09,0x202c353266250920\n"
".quad 0x3030303030306630,0x09202020203b3030,0x744c240a30202f2f,0x373732335f33325f\n"
".quad 0x2e766f6d090a3a30,0x6472250920343675,0x6d656d73202c3831,0x752e646461090a3b\n"
".quad 0x3164722509203436,0x2c32647225202c39,0x0a3b383164722520,0x726168732e747309\n"
".quad 0x09203233662e6465,0x302b39316472255b,0x3b35326625202c5d,0x3109636f6c2e090a\n"
".quad 0x0a30093437310936,0x6e79732e72616209,0x2e090a3b30092063,0x3109363109636f6c\n"
".quad 0x2140090a30093637,0x2061726220337025,0x5f33325f744c2409,0x090a3b3238323333\n"
".quad 0x09363109636f6c2e,0x646c090a30093736,0x2e6465726168732e,0x3266250920323366\n"
".quad 0x316472255b202c36,0x6c090a3b5d302b39,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3732,0x3b5d3832312b3931,0x33662e646461090a,0x2c38326625092032\n"
".quad 0x25202c3632662520,0x7473090a3b373266,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x202c5d302b393164,0x4c240a3b38326625,0x3233335f33325f74,0x726162090a3a3238\n"
".quad 0x300920636e79732e,0x3470252140090a3b,0x4c24092061726220,0x3733335f33325f74\n"
".quad 0x6f6c2e090a3b3439,0x0938360936310963,0x68732e646c090a30,0x3233662e64657261\n"
".quad 0x202c393266250920,0x302b39316472255b,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x2c30336625092032,0x2b39316472255b20,0x6461090a3b5d3436,0x2509203233662e64\n"
".quad 0x326625202c313366,0x3b30336625202c39,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x2b39316472255b09,0x31336625202c5d30,0x33325f744c240a3b,0x0a3a34393733335f\n"
".quad 0x6e79732e72616209,0x40090a3b30092063,0x6172622035702521,0x33325f744c240920\n"
".quad 0x0a3b36303334335f,0x363109636f6c2e09,0x6c090a3009393609,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3233,0x090a3b5d302b3931,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c333366,0x3b5d32332b393164,0x33662e646461090a\n"
".quad 0x2c34336625092032,0x25202c3233662520,0x7473090a3b333366,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x202c5d302b393164,0x4c240a3b34336625,0x3334335f33325f74\n"
".quad 0x726162090a3a3630,0x300920636e79732e,0x3670252140090a3b,0x4c24092061726220\n"
".quad 0x3834335f33325f74,0x6f6c2e090a3b3831,0x0930370936310963,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x202c353366250920,0x302b39316472255b,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x2c36336625092032,0x2b39316472255b20,0x6461090a3b5d3631\n"
".quad 0x2509203233662e64,0x336625202c373366,0x3b36336625202c35,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x2b39316472255b09,0x37336625202c5d30,0x33325f744c240a3b\n"
".quad 0x0a3a38313834335f,0x6e79732e72616209,0x40090a3b30092063,0x6172622037702521\n"
".quad 0x33325f744c240920,0x0a3b30333335335f,0x363109636f6c2e09,0x6c090a3009313709\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3833,0x090a3b5d302b3931\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c393366,0x0a3b5d382b393164\n"
".quad 0x3233662e64646109,0x202c303466250920,0x6625202c38336625,0x2e7473090a3b3933\n"
".quad 0x662e646572616873,0x6472255b09203233,0x25202c5d302b3931,0x744c240a3b303466\n"
".quad 0x333335335f33325f,0x2e726162090a3a30,0x3b300920636e7973,0x203870252140090a\n"
".quad 0x744c240920617262,0x343835335f33325f,0x636f6c2e090a3b32,0x3009323709363109\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3134662509,0x5d302b3931647225\n"
".quad 0x68732e646c090a3b,0x3233662e64657261,0x202c323466250920,0x342b39316472255b\n"
".quad 0x2e646461090a3b5d,0x3466250920323366,0x2c31346625202c33,0x090a3b3234662520\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225,0x0a3b33346625202c\n"
".quad 0x335f33325f744c24,0x62090a3a32343835,0x20636e79732e7261,0x6f6c2e090a3b3009\n"
".quad 0x3637310936310963,0x70252140090a3009,0x2409206172622038,0x36335f33325f744c\n"
".quad 0x6c2e090a3b343533,0x383109363109636f,0x2e646c090a300930,0x662e646572616873\n"
".quad 0x3434662509203233,0x2b6d656d735b202c,0x2e646c090a3b5d30,0x36752e6d61726170\n"
".quad 0x3032647225092034,0x6475635f5f5b202c,0x5a5f5f6d72617061,0x6563756465723631\n"
".quad 0x6150656c676e6953,0x4534366a4c497373,0x4b5076454531624c,0x6f5f675f6a665066\n"
".quad 0x090a3b5d61746164,0x61626f6c672e7473,0x5b09203233662e6c,0x5d302b3032647225\n"
".quad 0x0a3b34346625202c,0x363109636f6c2e09,0x090a300933383109,0x203233752e766f6d\n"
".quad 0x30202c3332722509,0x6c672e7473090a3b,0x3233752e6c61626f,0x72697465725b0920\n"
".quad 0x756f43746e656d65,0x327225202c5d746e,0x325f744c240a3b33,0x3a34353336335f33\n"
".quad 0x5f33325f744c240a,0x240a3a3835323233,0x31335f33325f744c,0x6c2e090a3a343332\n"
".quad 0x383109363109636f,0x697865090a300937,0x6557444c240a3b74,0x7236315a5f5f646e\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x31624c4534366a4c,0x6650664b50764545\n"
".quad 0x2f2f207d090a3a6a,0x64657236315a5f20,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x454531624c453436,0x0a6a6650664b5076,0x7972746e652e090a,0x64657236315a5f20\n"
".quad 0x6c676e6953656375,0x6a4c497373615065,0x454531624c453233,0x206a6650664b5076\n"
".quad 0x7261702e09090a28,0x203436752e206d61,0x6170616475635f5f,0x7236315a5f5f6d72\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x31624c4532336a4c,0x6650664b50764545\n"
".quad 0x746164695f675f6a,0x61702e09090a2c61,0x3436752e206d6172,0x70616475635f5f20\n"
".quad 0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e,0x624c4532336a4c49\n"
".quad 0x50664b5076454531,0x61646f5f675f6a66,0x702e09090a2c6174,0x33752e206d617261\n"
".quad 0x616475635f5f2032,0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69\n"
".quad 0x4c4532336a4c4973,0x664b507645453162,0x090a296e5f6a6650,0x206765722e090a7b\n"
".quad 0x767225203233752e,0x6765722e090a3b31,0x7225203233752e20,0x2e090a3b3e34323c\n"
".quad 0x3436752e20676572,0x3e32323c64722520,0x206765722e090a3b,0x3c6625203233662e\n"
".quad 0x722e090a3b3e3034,0x646572702e206765,0x3b3e32313c702520,0x65726168732e090a\n"
".quad 0x5f5f2038732e2064,0x636f6c5f61647563,0x325f7261765f6c61,0x5f38335f39323336\n"
".quad 0x0a3b7473614c6d61,0x363109636f6c2e09,0x240a300937333109,0x315a5f5f3142424c\n"
".quad 0x5365637564657236,0x736150656c676e69,0x4c4532336a4c4973,0x664b507645453162\n"
".quad 0x6c2e090a3a6a6650,0x363809363109636f,0x2e747663090a3009,0x203631752e323375\n"
".quad 0x7425202c31722509,0x63090a3b782e6469,0x752e3436752e7476,0x3164722509203233\n"
".quad 0x090a3b317225202c,0x656469772e6c756d,0x722509203233752e,0x2c317225202c3264\n"
".quad 0x766f6d090a3b3420,0x722509203436752e,0x74616473202c3364,0x2e646461090a3b61\n"
".quad 0x6472250920343675,0x2c32647225202c34,0x090a3b3364722520,0x203233662e766f6d\n"
".quad 0x6630202c31662509,0x3030303030303030,0x2f0920202020203b,0x766f6d090a30202f\n"
".quad 0x662509203233662e,0x3030306630202c32,0x20203b3030303030,0x30202f2f09202020\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x0a3b326625202c5d\n"
".quad 0x3233752e74766309,0x722509203631752e,0x6961746325202c32,0x756d090a3b782e64\n"
".quad 0x752e6f6c2e34326c,0x2c33722509203233,0x3436202c32722520,0x752e646461090a3b\n"
".quad 0x2c34722509203233,0x7225202c33722520,0x2e766f6d090a3b31,0x3572250920323373\n"
".quad 0x090a3b347225202c,0x2e3233752e747663,0x3672250920363175,0x696174636e25202c\n"
".quad 0x646c090a3b782e64,0x752e6d617261702e,0x2c37722509203233,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69,0x4c4532336a4c4973\n"
".quad 0x664b507645453162,0x0a3b5d6e5f6a6650,0x65672e7074657309,0x702509203233752e\n"
".quad 0x202c347225202c31,0x2540090a3b377225,0x0920617262203170,0x325f34325f744c24\n"
".quad 0x6d090a3b38333137,0x2e6f6c2e34326c75,0x3872250920323375,0x36202c367225202c\n"
".quad 0x2e747663090a3b34,0x203233752e343673,0x25202c3564722509,0x2e646c090a3b3872\n"
".quad 0x36752e6d61726170,0x2c36647225092034,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x5365637564657236,0x736150656c676e69,0x4c4532336a4c4973,0x664b507645453162\n"
".quad 0x64695f675f6a6650,0x63090a3b5d617461,0x752e3436752e7476,0x3764722509203233\n"
".quad 0x090a3b347225202c,0x656469772e6c756d,0x722509203233752e,0x2c347225202c3864\n"
".quad 0x646461090a3b3420,0x722509203436752e,0x36647225202c3964,0x0a3b38647225202c\n"
".quad 0x6469772e6c756d09,0x2509203233752e65,0x7225202c30316472,0x4c240a3b34202c38\n"
".quad 0x3637325f34325f74,0x3c2f2f200a3a3035,0x6f4c203e706f6f6c,0x2079646f6220706f\n"
".quad 0x2c363820656e696c,0x676e697473656e20,0x203a687470656420,0x6d69747365202c31\n"
".quad 0x6574692064657461,0x3a736e6f69746172,0x6e776f6e6b6e7520,0x3109636f6c2e090a\n"
".quad 0x090a300933390936,0x61626f6c672e646c,0x2509203233662e6c,0x6472255b202c3366\n"
".quad 0x61090a3b5d302b39,0x09203233662e6464,0x336625202c346625,0x090a3b316625202c\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x2e090a3b34662520\n"
".quad 0x3909363109636f6c,0x2e646c090a300936,0x662e6c61626f6c67,0x2c35662509203233\n"
".quad 0x312b396472255b20,0x6461090a3b5d3832,0x2509203233662e64,0x2c356625202c3166\n"
".quad 0x73090a3b34662520,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x6461090a3b316625,0x2509203233752e64,0x2c387225202c3572,0x61090a3b35722520\n"
".quad 0x09203436752e6464,0x7225202c39647225,0x31647225202c3964,0x636f6c2e090a3b30\n"
".quad 0x3009363809363109,0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c377225\n"
".quad 0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x454531624c453233,0x5f6a6650664b5076,0x6f6c2e090a3b5d6e,0x0936390936310963\n"
".quad 0x2e70746573090a30,0x09203233752e746c,0x357225202c327025,0x090a3b377225202c\n"
".quad 0x6172622032702540,0x34325f744c240920,0x0a3b30353637325f,0x325f34325f744c24\n"
".quad 0x2e090a3a38333137,0x3609363109636f6c,0x726162090a300937,0x300920636e79732e\n"
".quad 0x752e766f6d090a3b,0x2c39722509203233,0x6573090a3b353120,0x33752e656c2e7074\n"
".quad 0x202c337025092032,0x397225202c317225,0x3370252140090a3b,0x4c24092061726220\n"
".quad 0x3138325f34325f74,0x6f6c2e090a3b3236,0x0938360936310963,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x5b202c3666250920,0x3b5d302b34647225,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x255b202c37662509,0x3b5d34362b346472,0x33662e646461090a\n"
".quad 0x202c386625092032,0x376625202c366625,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x2b346472255b0920,0x3b386625202c5d30,0x5f34325f744c240a,0x090a3a3236313832\n"
".quad 0x636e79732e726162,0x6f6d090a3b300920,0x2509203233752e76,0x0a3b37202c303172\n"
".quad 0x656c2e7074657309,0x702509203233752e,0x202c317225202c34,0x40090a3b30317225\n"
".quad 0x6172622034702521,0x34325f744c240920,0x0a3b34373638325f,0x363109636f6c2e09\n"
".quad 0x6c090a3009393609,0x6465726168732e64,0x662509203233662e,0x346472255b202c39\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3166250920323366,0x346472255b202c30\n"
".quad 0x61090a3b5d32332b,0x09203233662e6464,0x6625202c31316625,0x3b30316625202c39\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x3b31316625202c5d\n"
".quad 0x5f34325f744c240a,0x090a3a3437363832,0x636e79732e726162,0x6f6d090a3b300920\n"
".quad 0x2509203233752e76,0x0a3b33202c313172,0x656c2e7074657309,0x702509203233752e\n"
".quad 0x202c317225202c35,0x40090a3b31317225,0x6172622035702521,0x34325f744c240920\n"
".quad 0x0a3b36383139325f,0x363109636f6c2e09,0x6c090a3009303709,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3231,0x6c090a3b5d302b34,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3331,0x090a3b5d36312b34,0x203233662e646461\n"
".quad 0x25202c3431662509,0x316625202c323166,0x732e7473090a3b33,0x33662e6465726168\n"
".quad 0x346472255b092032,0x316625202c5d302b,0x325f744c240a3b34,0x3a36383139325f34\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d,0x31202c3231722509\n"
".quad 0x2e70746573090a3b,0x09203233752e656c,0x317225202c367025,0x0a3b32317225202c\n"
".quad 0x6220367025214009,0x5f744c2409206172,0x38393639325f3432,0x09636f6c2e090a3b\n"
".quad 0x0a30093137093631,0x726168732e646c09,0x09203233662e6465,0x255b202c35316625\n"
".quad 0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465,0x255b202c36316625\n"
".quad 0x0a3b5d382b346472,0x3233662e64646109,0x202c373166250920,0x6625202c35316625\n"
".quad 0x2e7473090a3b3631,0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34\n"
".quad 0x5f744c240a3b3731,0x38393639325f3432,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x3233752e766f6d09,0x202c333172250920,0x70746573090a3b30,0x203233752e71652e\n"
".quad 0x7225202c37702509,0x3b33317225202c31,0x203770252140090a,0x744c240920617262\n"
".quad 0x313230335f34325f,0x636f6c2e090a3b30,0x3009323709363109,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3831662509,0x3b5d302b34647225,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3931662509,0x3b5d342b34647225,0x33662e646461090a\n"
".quad 0x2c30326625092032,0x25202c3831662520,0x7473090a3b393166,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b303266,0x313230335f34325f\n"
".quad 0x2e726162090a3a30,0x3b300920636e7973,0x3109636f6c2e090a,0x0a30093330310936\n"
".quad 0x6220377025214009,0x5f744c2409206172,0x32323730335f3432,0x09636f6c2e090a3b\n"
".quad 0x3009363031093631,0x6168732e646c090a,0x203233662e646572,0x5b202c3132662509\n"
".quad 0x5d302b6174616473,0x61702e646c090a3b,0x203436752e6d6172,0x202c313164722509\n"
".quad 0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x624c4532336a4c49,0x50664b5076454531,0x61646f5f675f6a66,0x7663090a3b5d6174\n"
".quad 0x33752e3436752e74,0x3231647225092032,0x090a3b327225202c,0x656469772e6c756d\n"
".quad 0x722509203233752e,0x327225202c333164,0x6461090a3b34202c,0x2509203436752e64\n"
".quad 0x7225202c34316472,0x647225202c313164,0x2e7473090a3b3331,0x662e6c61626f6c67\n"
".quad 0x6472255b09203233,0x25202c5d302b3431,0x744c240a3b313266,0x323730335f34325f\n"
".quad 0x636f6c2e090a3a32,0x0934343109363109,0x752e766f6d090a30,0x3431722509203233\n"
".quad 0x6573090a3b31202c,0x33752e656c2e7074,0x202c387025092032,0x317225202c367225\n"
".quad 0x38702540090a3b34,0x4c24092061726220,0x3231335f34325f74,0x6f6c2e090a3b3433\n"
".quad 0x3735310936310963,0x626d656d090a3009,0x090a3b6c672e7261,0x7262203770252140\n"
".quad 0x325f744c24092061,0x3b36343731335f34,0x3109636f6c2e090a,0x0a30093236310936\n"
".quad 0x3436752e766f6d09,0x2c35316472250920,0x6d65726974657220,0x746e756f43746e65\n"
".quad 0x2e6d6f7461090a3b,0x692e6c61626f6c67,0x09203233752e636e,0x255b202c35317225\n"
".quad 0x25202c5d35316472,0x766f6d090a3b3672,0x722509203233732e,0x35317225202c3631\n"
".quad 0x09636f6c2e090a3b,0x3009343631093631,0x33752e627573090a,0x2c37317225092032\n"
".quad 0x3b31202c36722520,0x71652e746573090a,0x3233752e3233752e,0x202c383172250920\n"
".quad 0x7225202c36317225,0x67656e090a3b3731,0x722509203233732e,0x38317225202c3931\n"
".quad 0x68732e7473090a3b,0x2038732e64657261,0x616475635f5f5b09,0x765f6c61636f6c5f\n"
".quad 0x39323336325f7261,0x614c6d615f38335f,0x317225202c5d7473,0x325f744c240a3b39\n"
".quad 0x3a36343731335f34,0x3109636f6c2e090a,0x0a30093636310936,0x6e79732e72616209\n"
".quad 0x6c090a3b30092063,0x6465726168732e64,0x327225092038732e,0x75635f5f5b202c30\n"
".quad 0x6c61636f6c5f6164,0x3336325f7261765f,0x6d615f38335f3932,0x090a3b5d7473614c\n"
".quad 0x203233752e766f6d,0x30202c3132722509,0x2e70746573090a3b,0x09203233732e7165\n"
".quad 0x327225202c397025,0x3b31327225202c30,0x622039702540090a,0x5f744c2409206172\n"
".quad 0x38353232335f3432,0x2e70746573090a3b,0x09203233752e656c,0x7225202c30317025\n"
".quad 0x0a3b317225202c36,0x6220303170254009,0x5f744c2409206172,0x36323033335f3432\n"
".quad 0x09636f6c2e090a3b,0x3009323731093631,0x7261702e646c090a,0x09203436752e6d61\n"
".quad 0x5b202c3631647225,0x6170616475635f5f,0x7236315a5f5f6d72,0x6e69536563756465\n"
".quad 0x4973736150656c67,0x31624c4532336a4c,0x6650664b50764545,0x7461646f5f675f6a\n"
".quad 0x646461090a3b5d61,0x722509203436752e,0x647225202c373164,0x32647225202c3631\n"
".quad 0x6c672e646c090a3b,0x3233662e6c61626f,0x202c323266250920,0x302b37316472255b\n"
".quad 0x2e617262090a3b5d,0x744c240920696e75,0x373732335f34325f,0x325f744c240a3b30\n"
".quad 0x3a36323033335f34,0x33662e766f6d090a,0x2c32326625092032,0x3030303030663020\n"
".quad 0x202020203b303030,0x4c240a30202f2f09,0x3732335f34325f74,0x766f6d090a3a3037\n"
".quad 0x722509203436752e,0x656d73202c383164,0x2e646461090a3b6d,0x6472250920343675\n"
".quad 0x32647225202c3931,0x3b3831647225202c,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x2b39316472255b09,0x32326625202c5d30,0x09636f6c2e090a3b,0x0a30093736093631\n"
".quad 0x6e79732e72616209,0x40090a3b30092063,0x6172622033702521,0x34325f744c240920\n"
".quad 0x0a3b32383233335f,0x363109636f6c2e09,0x6c090a3009383609,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3332,0x090a3b5d302b3931,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c343266,0x3b5d34362b393164,0x33662e646461090a\n"
".quad 0x2c35326625092032,0x25202c3332662520,0x7473090a3b343266,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x202c5d302b393164,0x4c240a3b35326625,0x3233335f34325f74\n"
".quad 0x726162090a3a3238,0x300920636e79732e,0x3470252140090a3b,0x4c24092061726220\n"
".quad 0x3733335f34325f74,0x6f6c2e090a3b3439,0x0939360936310963,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x202c363266250920,0x302b39316472255b,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x2c37326625092032,0x2b39316472255b20,0x6461090a3b5d3233\n"
".quad 0x2509203233662e64,0x326625202c383266,0x3b37326625202c36,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x2b39316472255b09,0x38326625202c5d30,0x34325f744c240a3b\n"
".quad 0x0a3a34393733335f,0x6e79732e72616209,0x40090a3b30092063,0x6172622035702521\n"
".quad 0x34325f744c240920,0x0a3b36303334335f,0x363109636f6c2e09,0x6c090a3009303709\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3932,0x090a3b5d302b3931\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c303366,0x3b5d36312b393164\n"
".quad 0x33662e646461090a,0x2c31336625092032,0x25202c3932662520,0x7473090a3b303366\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x202c5d302b393164,0x4c240a3b31336625\n"
".quad 0x3334335f34325f74,0x726162090a3a3630,0x300920636e79732e,0x3670252140090a3b\n"
".quad 0x4c24092061726220,0x3834335f34325f74,0x6f6c2e090a3b3831,0x0931370936310963\n"
".quad 0x68732e646c090a30,0x3233662e64657261,0x202c323366250920,0x302b39316472255b\n"
".quad 0x732e646c090a3b5d,0x33662e6465726168,0x2c33336625092032,0x2b39316472255b20\n"
".quad 0x646461090a3b5d38,0x662509203233662e,0x32336625202c3433,0x0a3b33336625202c\n"
".quad 0x726168732e747309,0x09203233662e6465,0x302b39316472255b,0x3b34336625202c5d\n"
".quad 0x5f34325f744c240a,0x090a3a3831383433,0x636e79732e726162,0x2140090a3b300920\n"
".quad 0x2061726220377025,0x5f34325f744c2409,0x090a3b3033333533,0x09363109636f6c2e\n"
".quad 0x646c090a30093237,0x2e6465726168732e,0x3366250920323366,0x316472255b202c35\n"
".quad 0x6c090a3b5d302b39,0x6465726168732e64,0x662509203233662e,0x6472255b202c3633\n"
".quad 0x090a3b5d342b3931,0x203233662e646461,0x25202c3733662509,0x336625202c353366\n"
".quad 0x732e7473090a3b36,0x33662e6465726168,0x316472255b092032,0x6625202c5d302b39\n"
".quad 0x5f744c240a3b3733,0x30333335335f3432,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x363109636f6c2e09,0x090a300936373109,0x7262203770252140,0x325f744c24092061\n"
".quad 0x3b32343835335f34,0x3109636f6c2e090a,0x0a30093038310936,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x735b202c38336625,0x0a3b5d302b6d656d,0x617261702e646c09\n"
".quad 0x2509203436752e6d,0x5f5b202c30326472,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x4531624c4532336a,0x6a6650664b507645\n"
".quad 0x617461646f5f675f,0x672e7473090a3b5d,0x33662e6c61626f6c,0x326472255b092032\n"
".quad 0x6625202c5d302b30,0x6f6c2e090a3b3833,0x3338310936310963,0x2e766f6d090a3009\n"
".quad 0x3272250920323375,0x73090a3b30202c32,0x6c61626f6c672e74,0x725b09203233752e\n"
".quad 0x6e656d6572697465,0x2c5d746e756f4374,0x240a3b3232722520,0x35335f34325f744c\n"
".quad 0x744c240a3a323438,0x353232335f34325f,0x325f744c240a3a38,0x3a34333231335f34\n"
".quad 0x3109636f6c2e090a,0x0a30093738310936,0x240a3b7469786509,0x5f5f646e6557444c\n"
".quad 0x637564657236315a,0x50656c676e695365,0x32336a4c49737361,0x5076454531624c45\n"
".quad 0x090a3a6a6650664b,0x315a5f202f2f207d,0x5365637564657236,0x736150656c676e69\n"
".quad 0x4c4532336a4c4973,0x664b507645453162,0x652e090a0a6a6650,0x315a5f207972746e\n"
".quad 0x5365637564657236,0x736150656c676e69,0x4c4536316a4c4973,0x664b507645453162\n"
".quad 0x09090a28206a6650,0x2e206d617261702e,0x75635f5f20343675,0x5f5f6d7261706164\n"
".quad 0x637564657236315a,0x50656c676e695365,0x36316a4c49737361,0x5076454531624c45\n"
".quad 0x5f675f6a6650664b,0x090a2c6174616469,0x206d617261702e09,0x635f5f203436752e\n"
".quad 0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150\n"
".quad 0x76454531624c4536,0x675f6a6650664b50,0x0a2c617461646f5f,0x6d617261702e0909\n"
".quad 0x5f5f203233752e20,0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x454531624c453631,0x5f6a6650664b5076,0x2e090a7b090a296e\n"
".quad 0x3233752e20676572,0x090a3b3176722520,0x33752e206765722e,0x3e33323c72252032\n"
".quad 0x206765722e090a3b,0x647225203436752e,0x2e090a3b3e32323c,0x3233662e20676572\n"
".quad 0x3b3e34333c662520,0x2e206765722e090a,0x3c70252064657270,0x732e090a3b3e3131\n"
".quad 0x732e206465726168,0x616475635f5f2038,0x765f6c61636f6c5f,0x39323336325f7261\n"
".quad 0x614c6d615f38335f,0x6f6c2e090a3b7473,0x3733310936310963,0x3142424c240a3009\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x454531624c453631\n"
".quad 0x3a6a6650664b5076,0x3109636f6c2e090a,0x090a300936380936,0x2e3233752e747663\n"
".quad 0x3172250920363175,0x782e64697425202c,0x752e747663090a3b,0x09203233752e3436\n"
".quad 0x7225202c31647225,0x2e6c756d090a3b31,0x3233752e65646977,0x202c326472250920\n"
".quad 0x0a3b34202c317225,0x3436752e766f6d09,0x202c336472250920,0x090a3b6174616473\n"
".quad 0x203436752e646461,0x25202c3464722509,0x647225202c326472,0x2e766f6d090a3b33\n"
".quad 0x3166250920323366,0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020\n"
".quad 0x3233662e766f6d09,0x30202c3266250920,0x3030303030303066,0x0920202020203b30\n"
".quad 0x7473090a30202f2f,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x747663090a3b3266,0x3631752e3233752e,0x25202c3272250920,0x3b782e6469617463\n"
".quad 0x2e34326c756d090a,0x09203233752e6f6c,0x327225202c337225,0x61090a3b3233202c\n"
".quad 0x09203233752e6464,0x337225202c347225,0x090a3b317225202c,0x203233732e766f6d\n"
".quad 0x7225202c35722509,0x2e747663090a3b34,0x203631752e323375,0x6e25202c36722509\n"
".quad 0x3b782e6469617463,0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c377225\n"
".quad 0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x454531624c453631,0x5f6a6650664b5076,0x746573090a3b5d6e,0x3233752e65672e70\n"
".quad 0x25202c3170250920,0x3b377225202c3472,0x622031702540090a,0x5f744c2409206172\n"
".quad 0x30353637325f3532,0x34326c756d090a3b,0x203233752e6f6c2e,0x7225202c38722509\n"
".quad 0x090a3b3233202c36,0x2e3436732e747663,0x6472250920323375,0x0a3b387225202c35\n"
".quad 0x617261702e646c09,0x2509203436752e6d,0x5f5f5b202c366472,0x6d72617061647563\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x454531624c453631\n"
".quad 0x5f6a6650664b5076,0x5d61746164695f67,0x752e747663090a3b,0x09203233752e3436\n"
".quad 0x7225202c37647225,0x2e6c756d090a3b34,0x3233752e65646977,0x202c386472250920\n"
".quad 0x0a3b34202c347225,0x3436752e64646109,0x202c396472250920,0x7225202c36647225\n"
".quad 0x6c756d090a3b3864,0x33752e656469772e,0x3031647225092032,0x34202c387225202c\n"
".quad 0x35325f744c240a3b,0x0a3a32363138325f,0x706f6f6c3c2f2f20,0x6220706f6f4c203e\n"
".quad 0x656e696c2079646f,0x73656e202c363820,0x70656420676e6974,0x65202c31203a6874\n"
".quad 0x646574616d697473,0x6974617265746920,0x6b6e75203a736e6f,0x6c2e090a6e776f6e\n"
".quad 0x333909363109636f,0x672e646c090a3009,0x33662e6c61626f6c,0x202c336625092032\n"
".quad 0x5d302b396472255b,0x662e646461090a3b,0x2c34662509203233,0x6625202c33662520\n"
".quad 0x732e7473090a3b31,0x33662e6465726168,0x346472255b092032,0x346625202c5d302b\n"
".quad 0x09636f6c2e090a3b,0x0a30093639093631,0x626f6c672e646c09,0x09203233662e6c61\n"
".quad 0x72255b202c356625,0x0a3b5d34362b3964,0x3233662e64646109,0x25202c3166250920\n"
".quad 0x3b346625202c3566,0x6168732e7473090a,0x203233662e646572,0x302b346472255b09\n"
".quad 0x0a3b316625202c5d,0x3233752e64646109,0x25202c3572250920,0x3b357225202c3872\n"
".quad 0x36752e646461090a,0x2c39647225092034,0x25202c3964722520,0x2e090a3b30316472\n"
".quad 0x3809363109636f6c,0x2e646c090a300936,0x33752e6d61726170,0x202c377225092032\n"
".quad 0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x624c4536316a4c49,0x50664b5076454531,0x090a3b5d6e5f6a66,0x09363109636f6c2e\n"
".quad 0x6573090a30093639,0x33752e746c2e7074,0x202c327025092032,0x377225202c357225\n"
".quad 0x2032702540090a3b,0x744c240920617262,0x363138325f35325f,0x325f744c240a3b32\n"
".quad 0x3a30353637325f35,0x3109636f6c2e090a,0x090a300938360936,0x636e79732e726162\n"
".quad 0x6f6d090a3b300920,0x2509203233752e76,0x090a3b37202c3972,0x2e656c2e70746573\n"
".quad 0x3370250920323375,0x25202c317225202c,0x252140090a3b3972,0x0920617262203370\n"
".quad 0x325f35325f744c24,0x2e090a3b34373638,0x3609363109636f6c,0x2e646c090a300939\n"
".quad 0x662e646572616873,0x2c36662509203233,0x302b346472255b20,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x202c376625092032,0x32332b346472255b,0x2e646461090a3b5d\n"
".quad 0x3866250920323366,0x25202c366625202c,0x2e7473090a3b3766,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x325f744c240a3b38,0x3a34373638325f35\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d,0x33202c3031722509\n"
".quad 0x2e70746573090a3b,0x09203233752e656c,0x317225202c347025,0x0a3b30317225202c\n"
".quad 0x6220347025214009,0x5f744c2409206172,0x36383139325f3532,0x09636f6c2e090a3b\n"
".quad 0x0a30093037093631,0x726168732e646c09,0x09203233662e6465,0x72255b202c396625\n"
".quad 0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64,0x72255b202c303166\n"
".quad 0x0a3b5d36312b3464,0x3233662e64646109,0x202c313166250920,0x316625202c396625\n"
".quad 0x732e7473090a3b30,0x33662e6465726168,0x346472255b092032,0x316625202c5d302b\n"
".quad 0x325f744c240a3b31,0x3a36383139325f35,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x203233752e766f6d,0x31202c3131722509,0x2e70746573090a3b,0x09203233752e656c\n"
".quad 0x317225202c357025,0x0a3b31317225202c,0x6220357025214009,0x5f744c2409206172\n"
".quad 0x38393639325f3532,0x09636f6c2e090a3b,0x0a30093137093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c32316625,0x0a3b5d302b346472,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c33316625,0x0a3b5d382b346472,0x3233662e64646109\n"
".quad 0x202c343166250920,0x6625202c32316625,0x2e7473090a3b3331,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3431,0x38393639325f3532\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09,0x202c323172250920\n"
".quad 0x70746573090a3b30,0x203233752e71652e,0x7225202c36702509,0x3b32317225202c31\n"
".quad 0x203670252140090a,0x744c240920617262,0x313230335f35325f,0x636f6c2e090a3b30\n"
".quad 0x3009323709363109,0x6168732e646c090a,0x203233662e646572,0x5b202c3531662509\n"
".quad 0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572,0x5b202c3631662509\n"
".quad 0x3b5d342b34647225,0x33662e646461090a,0x2c37316625092032,0x25202c3531662520\n"
".quad 0x7473090a3b363166,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x744c240a3b373166,0x313230335f35325f,0x2e726162090a3a30,0x3b300920636e7973\n"
".quad 0x3109636f6c2e090a,0x0a30093330310936,0x6220367025214009,0x5f744c2409206172\n"
".quad 0x32323730335f3532,0x09636f6c2e090a3b,0x3009363031093631,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3831662509,0x5d302b6174616473,0x61702e646c090a3b\n"
".quad 0x203436752e6d6172,0x202c313164722509,0x70616475635f5f5b,0x36315a5f5f6d7261\n"
".quad 0x6953656375646572,0x73736150656c676e,0x624c4536316a4c49,0x50664b5076454531\n"
".quad 0x61646f5f675f6a66,0x7663090a3b5d6174,0x33752e3436752e74,0x3231647225092032\n"
".quad 0x090a3b327225202c,0x656469772e6c756d,0x722509203233752e,0x327225202c333164\n"
".quad 0x6461090a3b34202c,0x2509203436752e64,0x7225202c34316472,0x647225202c313164\n"
".quad 0x2e7473090a3b3331,0x662e6c61626f6c67,0x6472255b09203233,0x25202c5d302b3431\n"
".quad 0x744c240a3b383166,0x323730335f35325f,0x636f6c2e090a3a32,0x0934343109363109\n"
".quad 0x752e766f6d090a30,0x3331722509203233,0x6573090a3b31202c,0x33752e656c2e7074\n"
".quad 0x202c377025092032,0x317225202c367225,0x37702540090a3b33,0x4c24092061726220\n"
".quad 0x3231335f35325f74,0x6f6c2e090a3b3433,0x3735310936310963,0x626d656d090a3009\n"
".quad 0x090a3b6c672e7261,0x7262203670252140,0x325f744c24092061,0x3b36343731335f35\n"
".quad 0x3109636f6c2e090a,0x0a30093236310936,0x3436752e766f6d09,0x2c35316472250920\n"
".quad 0x6d65726974657220,0x746e756f43746e65,0x2e6d6f7461090a3b,0x692e6c61626f6c67\n"
".quad 0x09203233752e636e,0x255b202c34317225,0x25202c5d35316472,0x766f6d090a3b3672\n"
".quad 0x722509203233732e,0x34317225202c3531,0x09636f6c2e090a3b,0x3009343631093631\n"
".quad 0x33752e627573090a,0x2c36317225092032,0x3b31202c36722520,0x71652e746573090a\n"
".quad 0x3233752e3233752e,0x202c373172250920,0x7225202c35317225,0x67656e090a3b3631\n"
".quad 0x722509203233732e,0x37317225202c3831,0x68732e7473090a3b,0x2038732e64657261\n"
".quad 0x616475635f5f5b09,0x765f6c61636f6c5f,0x39323336325f7261,0x614c6d615f38335f\n"
".quad 0x317225202c5d7473,0x325f744c240a3b38,0x3a36343731335f35,0x3109636f6c2e090a\n"
".quad 0x0a30093636310936,0x6e79732e72616209,0x6c090a3b30092063,0x6465726168732e64\n"
".quad 0x317225092038732e,0x75635f5f5b202c39,0x6c61636f6c5f6164,0x3336325f7261765f\n"
".quad 0x6d615f38335f3932,0x090a3b5d7473614c,0x203233752e766f6d,0x30202c3032722509\n"
".quad 0x2e70746573090a3b,0x09203233732e7165,0x317225202c387025,0x3b30327225202c39\n"
".quad 0x622038702540090a,0x5f744c2409206172,0x38353232335f3532,0x2e70746573090a3b\n"
".quad 0x09203233752e656c,0x367225202c397025,0x090a3b317225202c,0x6172622039702540\n"
".quad 0x35325f744c240920,0x0a3b36323033335f,0x363109636f6c2e09,0x090a300932373109\n"
".quad 0x6d617261702e646c,0x722509203436752e,0x5f5f5b202c363164,0x6d72617061647563\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x454531624c453631\n"
".quad 0x5f6a6650664b5076,0x5d617461646f5f67,0x752e646461090a3b,0x3164722509203436\n"
".quad 0x3631647225202c37,0x0a3b32647225202c,0x626f6c672e646c09,0x09203233662e6c61\n"
".quad 0x255b202c39316625,0x3b5d302b37316472,0x6e752e617262090a,0x325f744c24092069\n"
".quad 0x3b30373732335f35,0x5f35325f744c240a,0x090a3a3632303333,0x203233662e766f6d\n"
".quad 0x30202c3931662509,0x3030303030303066,0x2f09202020203b30,0x5f744c240a30202f\n"
".quad 0x30373732335f3532,0x752e766f6d090a3a,0x3164722509203436,0x3b6d656d73202c38\n"
".quad 0x36752e646461090a,0x3931647225092034,0x202c32647225202c,0x090a3b3831647225\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225,0x0a3b39316625202c\n"
".quad 0x363109636f6c2e09,0x62090a3009383609,0x20636e79732e7261,0x252140090a3b3009\n"
".quad 0x0920617262203370,0x335f35325f744c24,0x2e090a3b32383233,0x3609363109636f6c\n"
".quad 0x2e646c090a300939,0x662e646572616873,0x3032662509203233,0x39316472255b202c\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3266250920323366,0x316472255b202c31\n"
".quad 0x090a3b5d32332b39,0x203233662e646461,0x25202c3232662509,0x326625202c303266\n"
".quad 0x732e7473090a3b31,0x33662e6465726168,0x316472255b092032,0x6625202c5d302b39\n"
".quad 0x5f744c240a3b3232,0x32383233335f3532,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x6220347025214009,0x5f744c2409206172,0x34393733335f3532,0x09636f6c2e090a3b\n"
".quad 0x0a30093037093631,0x726168732e646c09,0x09203233662e6465,0x255b202c33326625\n"
".quad 0x3b5d302b39316472,0x6168732e646c090a,0x203233662e646572,0x5b202c3432662509\n"
".quad 0x36312b3931647225,0x2e646461090a3b5d,0x3266250920323366,0x2c33326625202c35\n"
".quad 0x090a3b3432662520,0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225\n"
".quad 0x0a3b35326625202c,0x335f35325f744c24,0x62090a3a34393733,0x20636e79732e7261\n"
".quad 0x252140090a3b3009,0x0920617262203570,0x335f35325f744c24,0x2e090a3b36303334\n"
".quad 0x3709363109636f6c,0x2e646c090a300931,0x662e646572616873,0x3632662509203233\n"
".quad 0x39316472255b202c,0x646c090a3b5d302b,0x2e6465726168732e,0x3266250920323366\n"
".quad 0x316472255b202c37,0x61090a3b5d382b39,0x09203233662e6464,0x6625202c38326625\n"
".quad 0x37326625202c3632,0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920\n"
".quad 0x326625202c5d302b,0x325f744c240a3b38,0x3a36303334335f35,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x7262203670252140,0x325f744c24092061,0x3b38313834335f35\n"
".quad 0x3109636f6c2e090a,0x090a300932370936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c393266,0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c30336625,0x3b5d342b39316472,0x33662e646461090a,0x2c31336625092032\n"
".quad 0x25202c3932662520,0x7473090a3b303366,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x202c5d302b393164,0x4c240a3b31336625,0x3834335f35325f74,0x726162090a3a3831\n"
".quad 0x300920636e79732e,0x09636f6c2e090a3b,0x3009363731093631,0x203670252140090a\n"
".quad 0x744c240920617262,0x333335335f35325f,0x636f6c2e090a3b30,0x0930383109363109\n"
".quad 0x68732e646c090a30,0x3233662e64657261,0x202c323366250920,0x5d302b6d656d735b\n"
".quad 0x61702e646c090a3b,0x203436752e6d6172,0x202c303264722509,0x70616475635f5f5b\n"
".quad 0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e,0x624c4536316a4c49\n"
".quad 0x50664b5076454531,0x61646f5f675f6a66,0x7473090a3b5d6174,0x2e6c61626f6c672e\n"
".quad 0x72255b0920323366,0x202c5d302b303264,0x2e090a3b32336625,0x3109363109636f6c\n"
".quad 0x6f6d090a30093338,0x2509203233752e76,0x0a3b30202c313272,0x626f6c672e747309\n"
".quad 0x09203233752e6c61,0x6d6572697465725b,0x746e756f43746e65,0x3b31327225202c5d\n"
".quad 0x5f35325f744c240a,0x240a3a3033333533,0x32335f35325f744c,0x744c240a3a383532\n"
".quad 0x333231335f35325f,0x636f6c2e090a3a34,0x0937383109363109,0x3b74697865090a30\n"
".quad 0x646e6557444c240a,0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x454531624c453631,0x3a6a6650664b5076,0x5f202f2f207d090a,0x637564657236315a\n"
".quad 0x50656c676e695365,0x36316a4c49737361,0x5076454531624c45,0x090a0a6a6650664b\n"
".quad 0x5f207972746e652e,0x637564657236315a,0x50656c676e695365,0x45386a4c49737361\n"
".quad 0x4b5076454531624c,0x090a28206a665066,0x206d617261702e09,0x635f5f203436752e\n"
".quad 0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563,0x386a4c4973736150\n"
".quad 0x5076454531624c45,0x5f675f6a6650664b,0x090a2c6174616469,0x206d617261702e09\n"
".quad 0x635f5f203436752e,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x386a4c4973736150,0x5076454531624c45,0x5f675f6a6650664b,0x090a2c617461646f\n"
".quad 0x206d617261702e09,0x635f5f203233752e,0x5f6d726170616475,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x386a4c4973736150,0x5076454531624c45,0x296e5f6a6650664b\n"
".quad 0x65722e090a7b090a,0x25203233752e2067,0x722e090a3b317672,0x203233752e206765\n"
".quad 0x0a3b3e32323c7225,0x752e206765722e09,0x323c647225203436,0x65722e090a3b3e32\n"
".quad 0x25203233662e2067,0x090a3b3e38323c66,0x72702e206765722e,0x30313c7025206465\n"
".quad 0x6168732e090a3b3e,0x2038732e20646572,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x335f39323336325f,0x7473614c6d615f38,0x09636f6c2e090a3b,0x3009373331093631\n"
".quad 0x5f5f3142424c240a,0x637564657236315a,0x50656c676e695365,0x45386a4c49737361\n"
".quad 0x4b5076454531624c,0x2e090a3a6a665066,0x3809363109636f6c,0x747663090a300936\n"
".quad 0x3631752e3233752e,0x25202c3172250920,0x090a3b782e646974,0x2e3436752e747663\n"
".quad 0x6472250920323375,0x0a3b317225202c31,0x6469772e6c756d09,0x2509203233752e65\n"
".quad 0x317225202c326472,0x6f6d090a3b34202c,0x2509203436752e76,0x616473202c336472\n"
".quad 0x646461090a3b6174,0x722509203436752e,0x32647225202c3464,0x0a3b33647225202c\n"
".quad 0x3233662e766f6d09,0x30202c3166250920,0x3030303030303066,0x0920202020203b30\n"
".quad 0x6f6d090a30202f2f,0x2509203233662e76,0x30306630202c3266,0x203b303030303030\n"
".quad 0x202f2f0920202020,0x68732e7473090a30,0x3233662e64657261,0x2b346472255b0920\n"
".quad 0x3b326625202c5d30,0x33752e747663090a,0x2509203631752e32,0x61746325202c3272\n"
".quad 0x6d090a3b782e6469,0x2e6f6c2e34326c75,0x3372250920323375,0x31202c327225202c\n"
".quad 0x2e646461090a3b36,0x3472250920323375,0x25202c337225202c,0x766f6d090a3b3172\n"
".quad 0x722509203233732e,0x0a3b347225202c35,0x3233752e74766309,0x722509203631752e\n"
".quad 0x6174636e25202c36,0x6c090a3b782e6469,0x2e6d617261702e64,0x3772250920323375\n"
".quad 0x6475635f5f5b202c,0x5a5f5f6d72617061,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x4c45386a4c497373,0x664b507645453162,0x0a3b5d6e5f6a6650,0x65672e7074657309\n"
".quad 0x702509203233752e,0x202c347225202c31,0x2540090a3b377225,0x0920617262203170\n"
".quad 0x325f36325f744c24,0x6d090a3b32363138,0x2e6f6c2e34326c75,0x3872250920323375\n"
".quad 0x31202c367225202c,0x2e747663090a3b36,0x203233752e343673,0x25202c3564722509\n"
".quad 0x2e646c090a3b3872,0x36752e6d61726170,0x2c36647225092034,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69,0x624c45386a4c4973\n"
".quad 0x50664b5076454531,0x6164695f675f6a66,0x7663090a3b5d6174,0x33752e3436752e74\n"
".quad 0x2c37647225092032,0x6d090a3b34722520,0x2e656469772e6c75,0x6472250920323375\n"
".quad 0x202c347225202c38,0x2e646461090a3b34,0x6472250920343675,0x2c36647225202c39\n"
".quad 0x090a3b3864722520,0x656469772e6c756d,0x722509203233752e,0x387225202c303164\n"
".quad 0x744c240a3b34202c,0x373638325f36325f,0x6c3c2f2f200a3a34,0x6f6f4c203e706f6f\n"
".quad 0x6c2079646f622070,0x202c363820656e69,0x20676e697473656e,0x31203a6874706564\n"
".quad 0x616d69747365202c,0x7265746920646574,0x203a736e6f697461,0x0a6e776f6e6b6e75\n"
".quad 0x363109636f6c2e09,0x6c090a3009333909,0x6c61626f6c672e64,0x662509203233662e\n"
".quad 0x396472255b202c33,0x6461090a3b5d302b,0x2509203233662e64,0x2c336625202c3466\n"
".quad 0x73090a3b31662520,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x6c2e090a3b346625,0x363909363109636f,0x672e646c090a3009,0x33662e6c61626f6c\n"
".quad 0x202c356625092032,0x32332b396472255b,0x2e646461090a3b5d,0x3166250920323366\n"
".quad 0x25202c356625202c,0x2e7473090a3b3466,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x2e646461090a3b31,0x3572250920323375,0x25202c387225202c\n"
".quad 0x646461090a3b3572,0x722509203436752e,0x39647225202c3964,0x3b3031647225202c\n"
".quad 0x3109636f6c2e090a,0x090a300936380936,0x6d617261702e646c,0x722509203233752e\n"
".quad 0x75635f5f5b202c37,0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365\n"
".quad 0x45386a4c49737361,0x4b5076454531624c,0x3b5d6e5f6a665066,0x3109636f6c2e090a\n"
".quad 0x090a300936390936,0x2e746c2e70746573,0x3270250920323375,0x25202c357225202c\n"
".quad 0x702540090a3b3772,0x2409206172622032,0x38325f36325f744c,0x744c240a3b343736\n"
".quad 0x363138325f36325f,0x636f6c2e090a3a32,0x3009393609363109,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x203233752e766f6d,0x3b33202c39722509,0x6c2e70746573090a\n"
".quad 0x2509203233752e65,0x2c317225202c3370,0x40090a3b39722520,0x6172622033702521\n"
".quad 0x36325f744c240920,0x0a3b36383139325f,0x363109636f6c2e09,0x6c090a3009303709\n"
".quad 0x6465726168732e64,0x662509203233662e,0x346472255b202c36,0x646c090a3b5d302b\n"
".quad 0x2e6465726168732e,0x3766250920323366,0x2b346472255b202c,0x6461090a3b5d3631\n"
".quad 0x2509203233662e64,0x2c366625202c3866,0x73090a3b37662520,0x6465726168732e74\n"
".quad 0x255b09203233662e,0x202c5d302b346472,0x744c240a3b386625,0x383139325f36325f\n"
".quad 0x2e726162090a3a36,0x3b300920636e7973,0x33752e766f6d090a,0x2c30317225092032\n"
".quad 0x746573090a3b3120,0x3233752e656c2e70,0x25202c3470250920,0x30317225202c3172\n"
".quad 0x3470252140090a3b,0x4c24092061726220,0x3639325f36325f74,0x6f6c2e090a3b3839\n"
".quad 0x0931370936310963,0x68732e646c090a30,0x3233662e64657261,0x5b202c3966250920\n"
".quad 0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572,0x5b202c3031662509\n"
".quad 0x3b5d382b34647225,0x33662e646461090a,0x2c31316625092032,0x6625202c39662520\n"
".quad 0x2e7473090a3b3031,0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34\n"
".quad 0x5f744c240a3b3131,0x38393639325f3632,0x732e726162090a3a,0x0a3b300920636e79\n"
".quad 0x3233752e766f6d09,0x202c313172250920,0x70746573090a3b30,0x203233752e71652e\n"
".quad 0x7225202c35702509,0x3b31317225202c31,0x203570252140090a,0x744c240920617262\n"
".quad 0x313230335f36325f,0x636f6c2e090a3b30,0x3009323709363109,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3231662509,0x3b5d302b34647225,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3331662509,0x3b5d342b34647225,0x33662e646461090a\n"
".quad 0x2c34316625092032,0x25202c3231662520,0x7473090a3b333166,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b343166,0x313230335f36325f\n"
".quad 0x2e726162090a3a30,0x3b300920636e7973,0x3109636f6c2e090a,0x0a30093330310936\n"
".quad 0x6220357025214009,0x5f744c2409206172,0x32323730335f3632,0x09636f6c2e090a3b\n"
".quad 0x3009363031093631,0x6168732e646c090a,0x203233662e646572,0x5b202c3531662509\n"
".quad 0x5d302b6174616473,0x61702e646c090a3b,0x203436752e6d6172,0x202c313164722509\n"
".quad 0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x31624c45386a4c49,0x6650664b50764545,0x7461646f5f675f6a,0x747663090a3b5d61\n"
".quad 0x3233752e3436752e,0x2c32316472250920,0x6d090a3b32722520,0x2e656469772e6c75\n"
".quad 0x6472250920323375,0x2c327225202c3331,0x646461090a3b3420,0x722509203436752e\n"
".quad 0x647225202c343164,0x31647225202c3131,0x672e7473090a3b33,0x33662e6c61626f6c\n"
".quad 0x316472255b092032,0x6625202c5d302b34,0x5f744c240a3b3531,0x32323730335f3632\n"
".quad 0x09636f6c2e090a3a,0x3009343431093631,0x33752e766f6d090a,0x2c32317225092032\n"
".quad 0x746573090a3b3120,0x3233752e656c2e70,0x25202c3670250920,0x32317225202c3672\n"
".quad 0x2036702540090a3b,0x744c240920617262,0x333231335f36325f,0x636f6c2e090a3b34\n"
".quad 0x0937353109363109,0x61626d656d090a30,0x40090a3b6c672e72,0x6172622035702521\n"
".quad 0x36325f744c240920,0x0a3b36343731335f,0x363109636f6c2e09,0x090a300932363109\n"
".quad 0x203436752e766f6d,0x202c353164722509,0x656d657269746572,0x3b746e756f43746e\n"
".quad 0x672e6d6f7461090a,0x6e692e6c61626f6c,0x2509203233752e63,0x72255b202c333172\n"
".quad 0x7225202c5d353164,0x2e766f6d090a3b36,0x3172250920323373,0x3b33317225202c34\n"
".quad 0x3109636f6c2e090a,0x0a30093436310936,0x3233752e62757309,0x202c353172250920\n"
".quad 0x0a3b31202c367225,0x2e71652e74657309,0x203233752e323375,0x25202c3631722509\n"
".quad 0x317225202c343172,0x2e67656e090a3b35,0x3172250920323373,0x3b36317225202c37\n"
".quad 0x6168732e7473090a,0x092038732e646572,0x5f616475635f5f5b,0x61765f6c61636f6c\n"
".quad 0x5f39323336325f72,0x73614c6d615f3833,0x37317225202c5d74,0x36325f744c240a3b\n"
".quad 0x0a3a36343731335f,0x363109636f6c2e09,0x090a300936363109,0x636e79732e726162\n"
".quad 0x646c090a3b300920,0x2e6465726168732e,0x3831722509203873,0x6475635f5f5b202c\n"
".quad 0x5f6c61636f6c5f61,0x323336325f726176,0x4c6d615f38335f39,0x6d090a3b5d747361\n"
".quad 0x09203233752e766f,0x3b30202c39317225,0x652e70746573090a,0x2509203233732e71\n"
".quad 0x38317225202c3770,0x0a3b39317225202c,0x7262203770254009,0x325f744c24092061\n"
".quad 0x3b38353232335f36,0x6c2e70746573090a,0x2509203233752e65,0x2c367225202c3870\n"
".quad 0x40090a3b31722520,0x2061726220387025,0x5f36325f744c2409,0x090a3b3632303333\n"
".quad 0x09363109636f6c2e,0x6c090a3009323731,0x2e6d617261702e64,0x6472250920343675\n"
".quad 0x635f5f5b202c3631,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x386a4c4973736150,0x5076454531624c45,0x5f675f6a6650664b,0x0a3b5d617461646f\n"
".quad 0x3436752e64646109,0x2c37316472250920,0x202c363164722520,0x6c090a3b32647225\n"
".quad 0x6c61626f6c672e64,0x662509203233662e,0x6472255b202c3631,0x090a3b5d302b3731\n"
".quad 0x20696e752e617262,0x5f36325f744c2409,0x240a3b3037373233,0x33335f36325f744c\n"
".quad 0x6f6d090a3a363230,0x2509203233662e76,0x306630202c363166,0x3b30303030303030\n"
".quad 0x202f2f0920202020,0x36325f744c240a30,0x0a3a30373732335f,0x3436752e766f6d09\n"
".quad 0x2c38316472250920,0x090a3b6d656d7320,0x203436752e646461,0x202c393164722509\n"
".quad 0x7225202c32647225,0x7473090a3b383164,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x202c5d302b393164,0x2e090a3b36316625,0x3609363109636f6c,0x726162090a300939\n"
".quad 0x300920636e79732e,0x3370252140090a3b,0x4c24092061726220,0x3233335f36325f74\n"
".quad 0x6f6c2e090a3b3238,0x0930370936310963,0x68732e646c090a30,0x3233662e64657261\n"
".quad 0x202c373166250920,0x302b39316472255b,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x2c38316625092032,0x2b39316472255b20,0x6461090a3b5d3631,0x2509203233662e64\n"
".quad 0x316625202c393166,0x3b38316625202c37,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x2b39316472255b09,0x39316625202c5d30,0x36325f744c240a3b,0x0a3a32383233335f\n"
".quad 0x6e79732e72616209,0x40090a3b30092063,0x6172622034702521,0x36325f744c240920\n"
".quad 0x0a3b34393733335f,0x363109636f6c2e09,0x6c090a3009313709,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3032,0x090a3b5d302b3931,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c313266,0x0a3b5d382b393164,0x3233662e64646109\n"
".quad 0x202c323266250920,0x6625202c30326625,0x2e7473090a3b3132,0x662e646572616873\n"
".quad 0x6472255b09203233,0x25202c5d302b3931,0x744c240a3b323266,0x393733335f36325f\n"
".quad 0x2e726162090a3a34,0x3b300920636e7973,0x203570252140090a,0x744c240920617262\n"
".quad 0x303334335f36325f,0x636f6c2e090a3b36,0x3009323709363109,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3332662509,0x5d302b3931647225,0x68732e646c090a3b\n"
".quad 0x3233662e64657261,0x202c343266250920,0x342b39316472255b,0x2e646461090a3b5d\n"
".quad 0x3266250920323366,0x2c33326625202c35,0x090a3b3432662520,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x5d302b3931647225,0x0a3b35326625202c,0x335f36325f744c24\n"
".quad 0x62090a3a36303334,0x20636e79732e7261,0x6f6c2e090a3b3009,0x3637310936310963\n"
".quad 0x70252140090a3009,0x2409206172622035,0x34335f36325f744c,0x6c2e090a3b383138\n"
".quad 0x383109363109636f,0x2e646c090a300930,0x662e646572616873,0x3632662509203233\n"
".quad 0x2b6d656d735b202c,0x2e646c090a3b5d30,0x36752e6d61726170,0x3032647225092034\n"
".quad 0x6475635f5f5b202c,0x5a5f5f6d72617061,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x4c45386a4c497373,0x664b507645453162,0x646f5f675f6a6650,0x73090a3b5d617461\n"
".quad 0x6c61626f6c672e74,0x255b09203233662e,0x2c5d302b30326472,0x090a3b3632662520\n"
".quad 0x09363109636f6c2e,0x6d090a3009333831,0x09203233752e766f,0x3b30202c30327225\n"
".quad 0x6f6c672e7473090a,0x203233752e6c6162,0x6572697465725b09,0x6e756f43746e656d\n"
".quad 0x30327225202c5d74,0x36325f744c240a3b,0x0a3a38313834335f,0x335f36325f744c24\n"
".quad 0x4c240a3a38353232,0x3231335f36325f74,0x6f6c2e090a3a3433,0x3738310936310963\n"
".quad 0x74697865090a3009,0x6e6557444c240a3b,0x657236315a5f5f64,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x454531624c45386a,0x3a6a6650664b5076,0x5f202f2f207d090a\n"
".quad 0x637564657236315a,0x50656c676e695365,0x45386a4c49737361,0x4b5076454531624c\n"
".quad 0x2e090a0a6a665066,0x5a5f207972746e65,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x4c45346a4c497373,0x664b507645453162,0x09090a28206a6650,0x2e206d617261702e\n"
".quad 0x75635f5f20343675,0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365\n"
".quad 0x45346a4c49737361,0x4b5076454531624c,0x695f675f6a665066,0x09090a2c61746164\n"
".quad 0x2e206d617261702e,0x75635f5f20343675,0x5f5f6d7261706164,0x637564657236315a\n"
".quad 0x50656c676e695365,0x45346a4c49737361,0x4b5076454531624c,0x6f5f675f6a665066\n"
".quad 0x09090a2c61746164,0x2e206d617261702e,0x75635f5f20323375,0x5f5f6d7261706164\n"
".quad 0x637564657236315a,0x50656c676e695365,0x45346a4c49737361,0x4b5076454531624c\n"
".quad 0x0a296e5f6a665066,0x6765722e090a7b09,0x7225203233752e20,0x65722e090a3b3176\n"
".quad 0x25203233752e2067,0x090a3b3e31323c72,0x36752e206765722e,0x32323c6472252034\n"
".quad 0x6765722e090a3b3e,0x6625203233662e20,0x2e090a3b3e32323c,0x6572702e20676572\n"
".quad 0x3b3e393c70252064,0x65726168732e090a,0x5f5f2038732e2064,0x636f6c5f61647563\n"
".quad 0x325f7261765f6c61,0x5f38335f39323336,0x0a3b7473614c6d61,0x363109636f6c2e09\n"
".quad 0x240a300937333109,0x315a5f5f3142424c,0x5365637564657236,0x736150656c676e69\n"
".quad 0x624c45346a4c4973,0x50664b5076454531,0x6f6c2e090a3a6a66,0x0936380936310963\n"
".quad 0x752e747663090a30,0x09203631752e3233,0x697425202c317225,0x7663090a3b782e64\n"
".quad 0x33752e3436752e74,0x2c31647225092032,0x6d090a3b31722520,0x2e656469772e6c75\n"
".quad 0x6472250920323375,0x202c317225202c32,0x2e766f6d090a3b34,0x6472250920343675\n"
".quad 0x6174616473202c33,0x752e646461090a3b,0x3464722509203436,0x202c32647225202c\n"
".quad 0x6d090a3b33647225,0x09203233662e766f,0x306630202c316625,0x3b30303030303030\n"
".quad 0x2f2f092020202020,0x2e766f6d090a3020,0x3266250920323366,0x303030306630202c\n"
".quad 0x2020203b30303030,0x0a30202f2f092020,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x090a3b326625202c,0x2e3233752e747663,0x3272250920363175\n"
".quad 0x646961746325202c,0x6c756d090a3b782e,0x33752e6f6c2e3432,0x202c337225092032\n"
".quad 0x0a3b38202c327225,0x3233752e64646109,0x25202c3472250920,0x3b317225202c3372\n"
".quad 0x33732e766f6d090a,0x202c357225092032,0x7663090a3b347225,0x31752e3233752e74\n"
".quad 0x202c367225092036,0x2e64696174636e25,0x702e646c090a3b78,0x3233752e6d617261\n"
".quad 0x5b202c3772250920,0x6170616475635f5f,0x7236315a5f5f6d72,0x6e69536563756465\n"
".quad 0x4973736150656c67,0x4531624c45346a4c,0x6a6650664b507645,0x6573090a3b5d6e5f\n"
".quad 0x33752e65672e7074,0x202c317025092032,0x377225202c347225,0x2031702540090a3b\n"
".quad 0x744c240920617262,0x373638325f37325f,0x326c756d090a3b34,0x3233752e6f6c2e34\n"
".quad 0x25202c3872250920,0x090a3b38202c3672,0x2e3436732e747663,0x6472250920323375\n"
".quad 0x0a3b387225202c35,0x617261702e646c09,0x2509203436752e6d,0x5f5f5b202c366472\n"
".quad 0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x76454531624c4534,0x675f6a6650664b50,0x3b5d61746164695f,0x36752e747663090a\n"
".quad 0x2509203233752e34,0x347225202c376472,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x25202c3864722509,0x090a3b34202c3472,0x203436752e646461,0x25202c3964722509\n"
".quad 0x647225202c366472,0x2e6c756d090a3b38,0x3233752e65646977,0x2c30316472250920\n"
".quad 0x3b34202c38722520,0x5f37325f744c240a,0x200a3a3638313932,0x3e706f6f6c3c2f2f\n"
".quad 0x6f6220706f6f4c20,0x20656e696c207964,0x7473656e202c3638,0x7470656420676e69\n"
".quad 0x7365202c31203a68,0x20646574616d6974,0x6f69746172657469,0x6e6b6e75203a736e\n"
".quad 0x6f6c2e090a6e776f,0x0933390936310963,0x6c672e646c090a30,0x3233662e6c61626f\n"
".quad 0x5b202c3366250920,0x3b5d302b39647225,0x33662e646461090a,0x202c346625092032\n"
".quad 0x316625202c336625,0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920\n"
".quad 0x3b346625202c5d30,0x3109636f6c2e090a,0x090a300936390936,0x61626f6c672e646c\n"
".quad 0x2509203233662e6c,0x6472255b202c3566,0x090a3b5d36312b39,0x203233662e646461\n"
".quad 0x6625202c31662509,0x0a3b346625202c35,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x090a3b316625202c,0x203233752e646461,0x7225202c35722509\n"
".quad 0x0a3b357225202c38,0x3436752e64646109,0x202c396472250920,0x7225202c39647225\n"
".quad 0x6c2e090a3b303164,0x363809363109636f,0x702e646c090a3009,0x3233752e6d617261\n"
".quad 0x5b202c3772250920,0x6170616475635f5f,0x7236315a5f5f6d72,0x6e69536563756465\n"
".quad 0x4973736150656c67,0x4531624c45346a4c,0x6a6650664b507645,0x6c2e090a3b5d6e5f\n"
".quad 0x363909363109636f,0x70746573090a3009,0x203233752e746c2e,0x7225202c32702509\n"
".quad 0x0a3b377225202c35,0x7262203270254009,0x325f744c24092061,0x3b36383139325f37\n"
".quad 0x5f37325f744c240a,0x090a3a3437363832,0x09363109636f6c2e,0x6162090a30093037\n"
".quad 0x0920636e79732e72,0x2e766f6d090a3b30,0x3972250920323375,0x6573090a3b31202c\n"
".quad 0x33752e656c2e7074,0x202c337025092032,0x397225202c317225,0x3370252140090a3b\n"
".quad 0x4c24092061726220,0x3639325f37325f74,0x6f6c2e090a3b3839,0x0931370936310963\n"
".quad 0x68732e646c090a30,0x3233662e64657261,0x5b202c3666250920,0x3b5d302b34647225\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x255b202c37662509,0x0a3b5d382b346472\n"
".quad 0x3233662e64646109,0x25202c3866250920,0x3b376625202c3666,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x302b346472255b09,0x0a3b386625202c5d,0x325f37325f744c24\n"
".quad 0x62090a3a38393639,0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e\n"
".quad 0x090a3b30202c3031,0x2e71652e70746573,0x3470250920323375,0x25202c317225202c\n"
".quad 0x2140090a3b303172,0x2061726220347025,0x5f37325f744c2409,0x090a3b3031323033\n"
".quad 0x09363109636f6c2e,0x646c090a30093237,0x2e6465726168732e,0x3966250920323366\n"
".quad 0x2b346472255b202c,0x2e646c090a3b5d30,0x662e646572616873,0x3031662509203233\n"
".quad 0x2b346472255b202c,0x646461090a3b5d34,0x662509203233662e,0x2c396625202c3131\n"
".quad 0x090a3b3031662520,0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225\n"
".quad 0x240a3b3131662520,0x30335f37325f744c,0x6162090a3a303132,0x0920636e79732e72\n"
".quad 0x636f6c2e090a3b30,0x0933303109363109,0x3470252140090a30,0x4c24092061726220\n"
".quad 0x3730335f37325f74,0x6f6c2e090a3b3232,0x3630310936310963,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x2c32316625092032,0x2b61746164735b20,0x2e646c090a3b5d30\n"
".quad 0x36752e6d61726170,0x3131647225092034,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4c45346a4c497373,0x664b507645453162\n"
".quad 0x646f5f675f6a6650,0x63090a3b5d617461,0x752e3436752e7476,0x3164722509203233\n"
".quad 0x0a3b327225202c32,0x6469772e6c756d09,0x2509203233752e65,0x7225202c33316472\n"
".quad 0x61090a3b34202c32,0x09203436752e6464,0x25202c3431647225,0x7225202c31316472\n"
".quad 0x7473090a3b333164,0x2e6c61626f6c672e,0x72255b0920323366,0x202c5d302b343164\n"
".quad 0x4c240a3b32316625,0x3730335f37325f74,0x6f6c2e090a3a3232,0x3434310936310963\n"
".quad 0x2e766f6d090a3009,0x3172250920323375,0x73090a3b31202c31,0x752e656c2e707465\n"
".quad 0x2c35702509203233,0x7225202c36722520,0x702540090a3b3131,0x2409206172622035\n"
".quad 0x31335f37325f744c,0x6c2e090a3b343332,0x353109363109636f,0x6d656d090a300937\n"
".quad 0x0a3b6c672e726162,0x6220347025214009,0x5f744c2409206172,0x36343731335f3732\n"
".quad 0x09636f6c2e090a3b,0x3009323631093631,0x36752e766f6d090a,0x3531647225092034\n"
".quad 0x657269746572202c,0x6e756f43746e656d,0x6d6f7461090a3b74,0x2e6c61626f6c672e\n"
".quad 0x203233752e636e69,0x5b202c3231722509,0x202c5d3531647225,0x6f6d090a3b367225\n"
".quad 0x2509203233732e76,0x317225202c333172,0x636f6c2e090a3b32,0x0934363109363109\n"
".quad 0x752e627573090a30,0x3431722509203233,0x31202c367225202c,0x652e746573090a3b\n"
".quad 0x33752e3233752e71,0x2c35317225092032,0x25202c3331722520,0x656e090a3b343172\n"
".quad 0x2509203233732e67,0x317225202c363172,0x732e7473090a3b35,0x38732e6465726168\n"
".quad 0x6475635f5f5b0920,0x5f6c61636f6c5f61,0x323336325f726176,0x4c6d615f38335f39\n"
".quad 0x7225202c5d747361,0x5f744c240a3b3631,0x36343731335f3732,0x09636f6c2e090a3a\n"
".quad 0x3009363631093631,0x79732e726162090a,0x090a3b300920636e,0x65726168732e646c\n"
".quad 0x7225092038732e64,0x635f5f5b202c3731,0x61636f6c5f616475,0x36325f7261765f6c\n"
".quad 0x615f38335f393233,0x0a3b5d7473614c6d,0x3233752e766f6d09,0x202c383172250920\n"
".quad 0x70746573090a3b30,0x203233732e71652e,0x7225202c36702509,0x38317225202c3731\n"
".quad 0x2036702540090a3b,0x744c240920617262,0x353232335f37325f,0x70746573090a3b38\n"
".quad 0x203233752e656c2e,0x7225202c37702509,0x0a3b317225202c36,0x7262203770254009\n"
".quad 0x325f744c24092061,0x3b36323033335f37,0x3109636f6c2e090a,0x0a30093237310936\n"
".quad 0x617261702e646c09,0x2509203436752e6d,0x5f5b202c36316472,0x726170616475635f\n"
".quad 0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c,0x454531624c45346a\n"
".quad 0x5f6a6650664b5076,0x5d617461646f5f67,0x752e646461090a3b,0x3164722509203436\n"
".quad 0x3631647225202c37,0x0a3b32647225202c,0x626f6c672e646c09,0x09203233662e6c61\n"
".quad 0x255b202c33316625,0x3b5d302b37316472,0x6e752e617262090a,0x325f744c24092069\n"
".quad 0x3b30373732335f37,0x5f37325f744c240a,0x090a3a3632303333,0x203233662e766f6d\n"
".quad 0x30202c3331662509,0x3030303030303066,0x2f09202020203b30,0x5f744c240a30202f\n"
".quad 0x30373732335f3732,0x752e766f6d090a3a,0x3164722509203436,0x3b6d656d73202c38\n"
".quad 0x36752e646461090a,0x3931647225092034,0x202c32647225202c,0x090a3b3831647225\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225,0x0a3b33316625202c\n"
".quad 0x363109636f6c2e09,0x62090a3009303709,0x20636e79732e7261,0x252140090a3b3009\n"
".quad 0x0920617262203370,0x335f37325f744c24,0x2e090a3b32383233,0x3709363109636f6c\n"
".quad 0x2e646c090a300931,0x662e646572616873,0x3431662509203233,0x39316472255b202c\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3166250920323366,0x316472255b202c35\n"
".quad 0x61090a3b5d382b39,0x09203233662e6464,0x6625202c36316625,0x35316625202c3431\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920,0x316625202c5d302b\n"
".quad 0x325f744c240a3b36,0x3a32383233335f37,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x7262203470252140,0x325f744c24092061,0x3b34393733335f37,0x3109636f6c2e090a\n"
".quad 0x090a300932370936,0x65726168732e646c,0x2509203233662e64,0x72255b202c373166\n"
".quad 0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465,0x255b202c38316625\n"
".quad 0x3b5d342b39316472,0x33662e646461090a,0x2c39316625092032,0x25202c3731662520\n"
".quad 0x7473090a3b383166,0x2e6465726168732e,0x72255b0920323366,0x202c5d302b393164\n"
".quad 0x4c240a3b39316625,0x3733335f37325f74,0x726162090a3a3439,0x300920636e79732e\n"
".quad 0x09636f6c2e090a3b,0x3009363731093631,0x203470252140090a,0x744c240920617262\n"
".quad 0x303334335f37325f,0x636f6c2e090a3b36,0x0930383109363109,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x202c303266250920,0x5d302b6d656d735b,0x61702e646c090a3b\n"
".quad 0x203436752e6d6172,0x202c303264722509,0x70616475635f5f5b,0x36315a5f5f6d7261\n"
".quad 0x6953656375646572,0x73736150656c676e,0x31624c45346a4c49,0x6650664b50764545\n"
".quad 0x7461646f5f675f6a,0x2e7473090a3b5d61,0x662e6c61626f6c67,0x6472255b09203233\n"
".quad 0x25202c5d302b3032,0x6c2e090a3b303266,0x383109363109636f,0x766f6d090a300933\n"
".quad 0x722509203233752e,0x090a3b30202c3931,0x61626f6c672e7473,0x5b09203233752e6c\n"
".quad 0x656d657269746572,0x5d746e756f43746e,0x0a3b39317225202c,0x335f37325f744c24\n"
".quad 0x4c240a3a36303334,0x3232335f37325f74,0x5f744c240a3a3835,0x34333231335f3732\n"
".quad 0x09636f6c2e090a3a,0x3009373831093631,0x0a3b74697865090a,0x5f646e6557444c24\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x346a4c4973736150,0x5076454531624c45\n"
".quad 0x090a3a6a6650664b,0x315a5f202f2f207d,0x5365637564657236,0x736150656c676e69\n"
".quad 0x624c45346a4c4973,0x50664b5076454531,0x6e652e090a0a6a66,0x36315a5f20797274\n"
".quad 0x6953656375646572,0x73736150656c676e,0x31624c45326a4c49,0x6650664b50764545\n"
".quad 0x702e09090a28206a,0x36752e206d617261,0x616475635f5f2034,0x315a5f5f6d726170\n"
".quad 0x5365637564657236,0x736150656c676e69,0x624c45326a4c4973,0x50664b5076454531\n"
".quad 0x6164695f675f6a66,0x702e09090a2c6174,0x36752e206d617261,0x616475635f5f2034\n"
".quad 0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69,0x624c45326a4c4973\n"
".quad 0x50664b5076454531,0x61646f5f675f6a66,0x702e09090a2c6174,0x33752e206d617261\n"
".quad 0x616475635f5f2032,0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69\n"
".quad 0x624c45326a4c4973,0x50664b5076454531,0x7b090a296e5f6a66,0x2e206765722e090a\n"
".quad 0x3176722520323375,0x206765722e090a3b,0x3c7225203233752e,0x722e090a3b3e3032\n"
".quad 0x203436752e206765,0x3b3e32323c647225,0x2e206765722e090a,0x313c662520323366\n"
".quad 0x65722e090a3b3e36,0x20646572702e2067,0x090a3b3e383c7025,0x206465726168732e\n"
".quad 0x75635f5f2038732e,0x6c61636f6c5f6164,0x3336325f7261765f,0x6d615f38335f3932\n"
".quad 0x2e090a3b7473614c,0x3109363109636f6c,0x424c240a30093733,0x7236315a5f5f3142\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x4531624c45326a4c,0x6a6650664b507645\n"
".quad 0x09636f6c2e090a3a,0x0a30093638093631,0x3233752e74766309,0x722509203631752e\n"
".quad 0x2e64697425202c31,0x2e747663090a3b78,0x203233752e343675,0x25202c3164722509\n"
".quad 0x6c756d090a3b3172,0x33752e656469772e,0x2c32647225092032,0x3b34202c31722520\n"
".quad 0x36752e766f6d090a,0x2c33647225092034,0x0a3b617461647320,0x3436752e64646109\n"
".quad 0x202c346472250920,0x7225202c32647225,0x766f6d090a3b3364,0x662509203233662e\n"
".quad 0x3030306630202c31,0x20203b3030303030,0x30202f2f09202020,0x33662e766f6d090a\n"
".quad 0x202c326625092032,0x3030303030306630,0x20202020203b3030,0x73090a30202f2f09\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472,0x7663090a3b326625\n"
".quad 0x31752e3233752e74,0x202c327225092036,0x782e646961746325,0x34326c756d090a3b\n"
".quad 0x203233752e6f6c2e,0x7225202c33722509,0x61090a3b34202c32,0x09203233752e6464\n"
".quad 0x337225202c347225,0x090a3b317225202c,0x203233732e766f6d,0x7225202c35722509\n"
".quad 0x2e747663090a3b34,0x203631752e323375,0x6e25202c36722509,0x3b782e6469617463\n"
".quad 0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c377225,0x6d72617061647563\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x76454531624c4532\n"
".quad 0x6e5f6a6650664b50,0x70746573090a3b5d,0x203233752e65672e,0x7225202c31702509\n"
".quad 0x0a3b377225202c34,0x7262203170254009,0x325f744c24092061,0x3b36383139325f38\n"
".quad 0x2e34326c756d090a,0x09203233752e6f6c,0x367225202c387225,0x7663090a3b34202c\n"
".quad 0x33752e3436732e74,0x2c35647225092032,0x6c090a3b38722520,0x2e6d617261702e64\n"
".quad 0x6472250920343675,0x75635f5f5b202c36,0x5f5f6d7261706164,0x637564657236315a\n"
".quad 0x50656c676e695365,0x45326a4c49737361,0x4b5076454531624c,0x695f675f6a665066\n"
".quad 0x090a3b5d61746164,0x2e3436752e747663,0x6472250920323375,0x0a3b347225202c37\n"
".quad 0x6469772e6c756d09,0x2509203233752e65,0x347225202c386472,0x6461090a3b34202c\n"
".quad 0x2509203436752e64,0x647225202c396472,0x3b38647225202c36,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x25202c3031647225,0x240a3b34202c3872,0x39325f38325f744c\n"
".quad 0x2f2f200a3a383936,0x4c203e706f6f6c3c,0x79646f6220706f6f,0x363820656e696c20\n"
".quad 0x6e697473656e202c,0x3a68747065642067,0x69747365202c3120,0x746920646574616d\n"
".quad 0x736e6f6974617265,0x776f6e6b6e75203a,0x09636f6c2e090a6e,0x0a30093339093631\n"
".quad 0x626f6c672e646c09,0x09203233662e6c61,0x72255b202c336625,0x090a3b5d302b3964\n"
".quad 0x203233662e646461,0x6625202c34662509,0x0a3b316625202c33,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x090a3b346625202c,0x09363109636f6c2e\n"
".quad 0x646c090a30093639,0x2e6c61626f6c672e,0x3566250920323366,0x2b396472255b202c\n"
".quad 0x646461090a3b5d38,0x662509203233662e,0x202c356625202c31,0x7473090a3b346625\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464,0x646461090a3b3166\n"
".quad 0x722509203233752e,0x202c387225202c35,0x6461090a3b357225,0x2509203436752e64\n"
".quad 0x647225202c396472,0x3031647225202c39,0x09636f6c2e090a3b,0x0a30093638093631\n"
".quad 0x617261702e646c09,0x2509203233752e6d,0x635f5f5b202c3772,0x5f6d726170616475\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x326a4c4973736150,0x5076454531624c45\n"
".quad 0x5d6e5f6a6650664b,0x09636f6c2e090a3b,0x0a30093639093631,0x746c2e7074657309\n"
".quad 0x702509203233752e,0x202c357225202c32,0x2540090a3b377225,0x0920617262203270\n"
".quad 0x325f38325f744c24,0x4c240a3b38393639,0x3139325f38325f74,0x6f6c2e090a3a3638\n"
".quad 0x0931370936310963,0x732e726162090a30,0x0a3b300920636e79,0x3233752e766f6d09\n"
".quad 0x30202c3972250920,0x2e70746573090a3b,0x09203233752e7165,0x317225202c337025\n"
".quad 0x090a3b397225202c,0x7262203370252140,0x325f744c24092061,0x3b30313230335f38\n"
".quad 0x3109636f6c2e090a,0x090a300932370936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x6472255b202c3666,0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e\n"
".quad 0x346472255b202c37,0x6461090a3b5d342b,0x2509203233662e64,0x2c366625202c3866\n"
".quad 0x73090a3b37662520,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x744c240a3b386625,0x313230335f38325f,0x2e726162090a3a30,0x3b300920636e7973\n"
".quad 0x3109636f6c2e090a,0x0a30093330310936,0x6220337025214009,0x5f744c2409206172\n"
".quad 0x32323730335f3832,0x09636f6c2e090a3b,0x3009363031093631,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x735b202c39662509,0x3b5d302b61746164,0x7261702e646c090a\n"
".quad 0x09203436752e6d61,0x5b202c3131647225,0x6170616475635f5f,0x7236315a5f5f6d72\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x4531624c45326a4c,0x6a6650664b507645\n"
".quad 0x617461646f5f675f,0x2e747663090a3b5d,0x203233752e343675,0x202c323164722509\n"
".quad 0x756d090a3b327225,0x752e656469772e6c,0x3164722509203233,0x202c327225202c33\n"
".quad 0x2e646461090a3b34,0x6472250920343675,0x31647225202c3431,0x3331647225202c31\n"
".quad 0x6c672e7473090a3b,0x3233662e6c61626f,0x34316472255b0920,0x396625202c5d302b\n"
".quad 0x38325f744c240a3b,0x0a3a32323730335f,0x363109636f6c2e09,0x090a300934343109\n"
".quad 0x203233752e766f6d,0x31202c3031722509,0x2e70746573090a3b,0x09203233752e656c\n"
".quad 0x367225202c347025,0x0a3b30317225202c,0x7262203470254009,0x325f744c24092061\n"
".quad 0x3b34333231335f38,0x3109636f6c2e090a,0x0a30093735310936,0x2e7261626d656d09\n"
".quad 0x252140090a3b6c67,0x0920617262203370,0x335f38325f744c24,0x2e090a3b36343731\n"
".quad 0x3109363109636f6c,0x6f6d090a30093236,0x2509203436752e76,0x6572202c35316472\n"
".quad 0x746e656d65726974,0x090a3b746e756f43,0x6f6c672e6d6f7461,0x2e636e692e6c6162\n"
".quad 0x3172250920323375,0x316472255b202c31,0x3b367225202c5d35,0x33732e766f6d090a\n"
".quad 0x2c32317225092032,0x090a3b3131722520,0x09363109636f6c2e,0x73090a3009343631\n"
".quad 0x09203233752e6275,0x7225202c33317225,0x73090a3b31202c36,0x33752e71652e7465\n"
".quad 0x2509203233752e32,0x317225202c343172,0x3b33317225202c32,0x33732e67656e090a\n"
".quad 0x2c35317225092032,0x090a3b3431722520,0x65726168732e7473,0x5f5b092038732e64\n"
".quad 0x6f6c5f616475635f,0x5f7261765f6c6163,0x38335f3932333632,0x5d7473614c6d615f\n"
".quad 0x0a3b35317225202c,0x335f38325f744c24,0x2e090a3a36343731,0x3109363109636f6c\n"
".quad 0x6162090a30093636,0x0920636e79732e72,0x732e646c090a3b30,0x38732e6465726168\n"
".quad 0x202c363172250920,0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f39323336325f72\n"
".quad 0x73614c6d615f3833,0x766f6d090a3b5d74,0x722509203233752e,0x090a3b30202c3731\n"
".quad 0x2e71652e70746573,0x3570250920323373,0x202c36317225202c,0x40090a3b37317225\n"
".quad 0x2061726220357025,0x5f38325f744c2409,0x090a3b3835323233,0x2e656c2e70746573\n"
".quad 0x3670250920323375,0x25202c367225202c,0x702540090a3b3172,0x2409206172622036\n"
".quad 0x33335f38325f744c,0x6c2e090a3b363230,0x373109363109636f,0x2e646c090a300932\n"
".quad 0x36752e6d61726170,0x3631647225092034,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4c45326a4c497373,0x664b507645453162\n"
".quad 0x646f5f675f6a6650,0x61090a3b5d617461,0x09203436752e6464,0x25202c3731647225\n"
".quad 0x7225202c36316472,0x2e646c090a3b3264,0x662e6c61626f6c67,0x3031662509203233\n"
".quad 0x37316472255b202c,0x7262090a3b5d302b,0x240920696e752e61,0x32335f38325f744c\n"
".quad 0x744c240a3b303737,0x323033335f38325f,0x2e766f6d090a3a36,0x3166250920323366\n"
".quad 0x3030306630202c30,0x20203b3030303030,0x0a30202f2f092020,0x335f38325f744c24\n"
".quad 0x6d090a3a30373732,0x09203436752e766f,0x73202c3831647225,0x6461090a3b6d656d\n"
".quad 0x2509203436752e64,0x7225202c39316472,0x31647225202c3264,0x732e7473090a3b38\n"
".quad 0x33662e6465726168,0x316472255b092032,0x6625202c5d302b39,0x6f6c2e090a3b3031\n"
".quad 0x0931370936310963,0x732e726162090a30,0x0a3b300920636e79,0x6220337025214009\n"
".quad 0x5f744c2409206172,0x32383233335f3832,0x09636f6c2e090a3b,0x0a30093237093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c31316625,0x3b5d302b39316472\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3231662509,0x5d342b3931647225\n"
".quad 0x662e646461090a3b,0x3331662509203233,0x202c31316625202c,0x73090a3b32316625\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x2c5d302b39316472,0x240a3b3331662520\n"
".quad 0x33335f38325f744c,0x6162090a3a323832,0x0920636e79732e72,0x636f6c2e090a3b30\n"
".quad 0x0936373109363109,0x3370252140090a30,0x4c24092061726220,0x3733335f38325f74\n"
".quad 0x6f6c2e090a3b3439,0x3038310936310963,0x732e646c090a3009,0x33662e6465726168\n"
".quad 0x2c34316625092032,0x302b6d656d735b20,0x702e646c090a3b5d,0x3436752e6d617261\n"
".quad 0x2c30326472250920,0x616475635f5f5b20,0x315a5f5f6d726170,0x5365637564657236\n"
".quad 0x736150656c676e69,0x624c45326a4c4973,0x50664b5076454531,0x61646f5f675f6a66\n"
".quad 0x7473090a3b5d6174,0x2e6c61626f6c672e,0x72255b0920323366,0x202c5d302b303264\n"
".quad 0x2e090a3b34316625,0x3109363109636f6c,0x6f6d090a30093338,0x2509203233752e76\n"
".quad 0x0a3b30202c383172,0x626f6c672e747309,0x09203233752e6c61,0x6d6572697465725b\n"
".quad 0x746e756f43746e65,0x3b38317225202c5d,0x5f38325f744c240a,0x240a3a3439373333\n"
".quad 0x32335f38325f744c,0x744c240a3a383532,0x333231335f38325f,0x636f6c2e090a3a34\n"
".quad 0x0937383109363109,0x3b74697865090a30,0x646e6557444c240a,0x64657236315a5f5f\n"
".quad 0x6c676e6953656375,0x6a4c497373615065,0x76454531624c4532,0x0a3a6a6650664b50\n"
".quad 0x5a5f202f2f207d09,0x6563756465723631,0x6150656c676e6953,0x4c45326a4c497373\n"
".quad 0x664b507645453162,0x652e090a0a6a6650,0x315a5f207972746e,0x5365637564657236\n"
".quad 0x736150656c676e69,0x624c45316a4c4973,0x50664b5076454531,0x2e09090a28206a66\n"
".quad 0x752e206d61726170,0x6475635f5f203436,0x5a5f5f6d72617061,0x6563756465723631\n"
".quad 0x6150656c676e6953,0x4c45316a4c497373,0x664b507645453162,0x64695f675f6a6650\n"
".quad 0x2e09090a2c617461,0x752e206d61726170,0x6475635f5f203436,0x5a5f5f6d72617061\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4c45316a4c497373,0x664b507645453162\n"
".quad 0x646f5f675f6a6650,0x2e09090a2c617461,0x752e206d61726170,0x6475635f5f203233\n"
".quad 0x5a5f5f6d72617061,0x6563756465723631,0x6150656c676e6953,0x4c45316a4c497373\n"
".quad 0x664b507645453162,0x090a296e5f6a6650,0x206765722e090a7b,0x767225203233752e\n"
".quad 0x6765722e090a3b31,0x7225203233752e20,0x2e090a3b3e30323c,0x3436752e20676572\n"
".quad 0x3e32323c64722520,0x206765722e090a3b,0x3c6625203233662e,0x722e090a3b3e3031\n"
".quad 0x646572702e206765,0x0a3b3e383c702520,0x6465726168732e09,0x635f5f2038732e20\n"
".quad 0x61636f6c5f616475,0x36325f7261765f6c,0x615f38335f393233,0x090a3b7473614c6d\n"
".quad 0x09363109636f6c2e,0x4c240a3009373331,0x36315a5f5f314242,0x6953656375646572\n"
".quad 0x73736150656c676e,0x31624c45316a4c49,0x6650664b50764545,0x636f6c2e090a3a6a\n"
".quad 0x3009363809363109,0x33752e747663090a,0x2509203631752e32,0x64697425202c3172\n"
".quad 0x747663090a3b782e,0x3233752e3436752e,0x202c316472250920,0x756d090a3b317225\n"
".quad 0x752e656469772e6c,0x3264722509203233,0x34202c317225202c,0x752e766f6d090a3b\n"
".quad 0x3364722509203436,0x3b6174616473202c,0x36752e646461090a,0x2c34647225092034\n"
".quad 0x25202c3264722520,0x6f6d090a3b336472,0x2509203233662e76,0x30306630202c3166\n"
".quad 0x203b303030303030,0x202f2f0920202020,0x662e766f6d090a30,0x2c32662509203233\n"
".quad 0x3030303030663020,0x202020203b303030,0x090a30202f2f0920,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x2c5d302b34647225,0x63090a3b32662520,0x752e3233752e7476\n"
".quad 0x2c32722509203631,0x2e64696174632520,0x326c756d090a3b78,0x3233752e6f6c2e34\n"
".quad 0x25202c3372250920,0x090a3b32202c3272,0x203233752e646461,0x7225202c34722509\n"
".quad 0x0a3b317225202c33,0x3233732e766f6d09,0x25202c3572250920,0x747663090a3b3472\n"
".quad 0x3631752e3233752e,0x25202c3672250920,0x782e64696174636e,0x61702e646c090a3b\n"
".quad 0x203233752e6d6172,0x5f5b202c37722509,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x454531624c45316a,0x5f6a6650664b5076\n"
".quad 0x746573090a3b5d6e,0x3233752e65672e70,0x25202c3170250920,0x3b377225202c3472\n"
".quad 0x622031702540090a,0x5f744c2409206172,0x38393639325f3932,0x34326c756d090a3b\n"
".quad 0x203233752e6f6c2e,0x7225202c38722509,0x63090a3b32202c36,0x752e3436732e7476\n"
".quad 0x3564722509203233,0x090a3b387225202c,0x6d617261702e646c,0x722509203436752e\n"
".quad 0x635f5f5b202c3664,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x316a4c4973736150,0x5076454531624c45,0x5f675f6a6650664b,0x0a3b5d6174616469\n"
".quad 0x3436752e74766309,0x722509203233752e,0x3b347225202c3764,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x7225202c38647225,0x61090a3b34202c34,0x09203436752e6464\n"
".quad 0x7225202c39647225,0x38647225202c3664,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x202c303164722509,0x0a3b34202c387225,0x335f39325f744c24,0x2f200a3a30313230\n"
".quad 0x203e706f6f6c3c2f,0x646f6220706f6f4c,0x3820656e696c2079,0x697473656e202c36\n"
".quad 0x687470656420676e,0x747365202c31203a,0x6920646574616d69,0x6e6f697461726574\n"
".quad 0x6f6e6b6e75203a73,0x636f6c2e090a6e77,0x3009333909363109,0x6f6c672e646c090a\n"
".quad 0x203233662e6c6162,0x255b202c33662509,0x0a3b5d302b396472,0x3233662e64646109\n"
".quad 0x25202c3466250920,0x3b316625202c3366,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x302b346472255b09,0x0a3b346625202c5d,0x363109636f6c2e09,0x6c090a3009363909\n"
".quad 0x6c61626f6c672e64,0x662509203233662e,0x396472255b202c35,0x6461090a3b5d342b\n"
".quad 0x2509203233662e64,0x2c356625202c3166,0x73090a3b34662520,0x6465726168732e74\n"
".quad 0x255b09203233662e,0x202c5d302b346472,0x6461090a3b316625,0x2509203233752e64\n"
".quad 0x2c387225202c3572,0x61090a3b35722520,0x09203436752e6464,0x7225202c39647225\n"
".quad 0x31647225202c3964,0x636f6c2e090a3b30,0x3009363809363109,0x7261702e646c090a\n"
".quad 0x09203233752e6d61,0x5f5f5b202c377225,0x6d72617061647563,0x64657236315a5f5f\n"
".quad 0x6c676e6953656375,0x6a4c497373615065,0x76454531624c4531,0x6e5f6a6650664b50\n"
".quad 0x636f6c2e090a3b5d,0x3009363909363109,0x6c2e70746573090a,0x2509203233752e74\n"
".quad 0x2c357225202c3270,0x40090a3b37722520,0x2061726220327025,0x5f39325f744c2409\n"
".quad 0x240a3b3031323033,0x39325f39325f744c,0x6c2e090a3a383936,0x323709363109636f\n"
".quad 0x2e726162090a3009,0x3b300920636e7973,0x3109636f6c2e090a,0x0a30093330310936\n"
".quad 0x3233752e766f6d09,0x30202c3972250920,0x2e70746573090a3b,0x09203233752e7165\n"
".quad 0x317225202c337025,0x090a3b397225202c,0x7262203370252140,0x325f744c24092061\n"
".quad 0x3b32323730335f39,0x3109636f6c2e090a,0x0a30093630310936,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x64735b202c366625,0x0a3b5d302b617461,0x617261702e646c09\n"
".quad 0x2509203436752e6d,0x5f5b202c31316472,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x454531624c45316a,0x5f6a6650664b5076\n"
".quad 0x5d617461646f5f67,0x752e747663090a3b,0x09203233752e3436,0x25202c3231647225\n"
".quad 0x6c756d090a3b3272,0x33752e656469772e,0x3331647225092032,0x34202c327225202c\n"
".quad 0x752e646461090a3b,0x3164722509203436,0x3131647225202c34,0x3b3331647225202c\n"
".quad 0x6f6c672e7473090a,0x203233662e6c6162,0x2b34316472255b09,0x3b366625202c5d30\n"
".quad 0x5f39325f744c240a,0x090a3a3232373033,0x09363109636f6c2e,0x6d090a3009343431\n"
".quad 0x09203233752e766f,0x3b31202c30317225,0x6c2e70746573090a,0x2509203233752e65\n"
".quad 0x2c367225202c3470,0x090a3b3031722520,0x6172622034702540,0x39325f744c240920\n"
".quad 0x0a3b34333231335f,0x363109636f6c2e09,0x090a300937353109,0x672e7261626d656d\n"
".quad 0x70252140090a3b6c,0x2409206172622033,0x31335f39325f744c,0x6c2e090a3b363437\n"
".quad 0x363109363109636f,0x766f6d090a300932,0x722509203436752e,0x746572202c353164\n"
".quad 0x43746e656d657269,0x61090a3b746e756f,0x626f6c672e6d6f74,0x752e636e692e6c61\n"
".quad 0x3131722509203233,0x35316472255b202c,0x0a3b367225202c5d,0x3233732e766f6d09\n"
".quad 0x202c323172250920,0x2e090a3b31317225,0x3109363109636f6c,0x7573090a30093436\n"
".quad 0x2509203233752e62,0x367225202c333172,0x6573090a3b31202c,0x3233752e71652e74\n"
".quad 0x722509203233752e,0x32317225202c3431,0x0a3b33317225202c,0x3233732e67656e09\n"
".quad 0x202c353172250920,0x73090a3b34317225,0x6465726168732e74,0x5f5f5b092038732e\n"
".quad 0x636f6c5f61647563,0x325f7261765f6c61,0x5f38335f39323336,0x2c5d7473614c6d61\n"
".quad 0x240a3b3531722520,0x31335f39325f744c,0x6c2e090a3a363437,0x363109363109636f\n"
".quad 0x726162090a300936,0x300920636e79732e,0x68732e646c090a3b,0x2038732e64657261\n"
".quad 0x5b202c3631722509,0x6c5f616475635f5f,0x7261765f6c61636f,0x335f39323336325f\n"
".quad 0x7473614c6d615f38,0x2e766f6d090a3b5d,0x3172250920323375,0x73090a3b30202c37\n"
".quad 0x732e71652e707465,0x2c35702509203233,0x25202c3631722520,0x2540090a3b373172\n"
".quad 0x0920617262203570,0x335f39325f744c24,0x73090a3b38353232,0x752e656c2e707465\n"
".quad 0x2c36702509203233,0x7225202c36722520,0x36702540090a3b31,0x4c24092061726220\n"
".quad 0x3033335f39325f74,0x6f6c2e090a3b3632,0x3237310936310963,0x702e646c090a3009\n"
".quad 0x3436752e6d617261,0x2c36316472250920,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x5365637564657236,0x736150656c676e69,0x624c45316a4c4973,0x50664b5076454531\n"
".quad 0x61646f5f675f6a66,0x6461090a3b5d6174,0x2509203436752e64,0x7225202c37316472\n"
".quad 0x647225202c363164,0x672e646c090a3b32,0x33662e6c61626f6c,0x202c376625092032\n"
".quad 0x302b37316472255b,0x2e617262090a3b5d,0x744c240920696e75,0x373732335f39325f\n"
".quad 0x325f744c240a3b30,0x3a36323033335f39,0x33662e766f6d090a,0x202c376625092032\n"
".quad 0x3030303030306630,0x20202020203b3030,0x4c240a30202f2f09,0x3732335f39325f74\n"
".quad 0x766f6d090a3a3037,0x722509203436752e,0x656d73202c383164,0x2e646461090a3b6d\n"
".quad 0x6472250920343675,0x32647225202c3931,0x3b3831647225202c,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x2b39316472255b09,0x3b376625202c5d30,0x3109636f6c2e090a\n"
".quad 0x090a300932370936,0x636e79732e726162,0x6c2e090a3b300920,0x373109363109636f\n"
".quad 0x252140090a300936,0x0920617262203370,0x335f39325f744c24,0x2e090a3b32383233\n"
".quad 0x3109363109636f6c,0x646c090a30093038,0x2e6465726168732e,0x3866250920323366\n"
".quad 0x2b6d656d735b202c,0x2e646c090a3b5d30,0x36752e6d61726170,0x3032647225092034\n"
".quad 0x6475635f5f5b202c,0x5a5f5f6d72617061,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x4c45316a4c497373,0x664b507645453162,0x646f5f675f6a6650,0x73090a3b5d617461\n"
".quad 0x6c61626f6c672e74,0x255b09203233662e,0x2c5d302b30326472,0x2e090a3b38662520\n"
".quad 0x3109363109636f6c,0x6f6d090a30093338,0x2509203233752e76,0x0a3b30202c383172\n"
".quad 0x626f6c672e747309,0x09203233752e6c61,0x6d6572697465725b,0x746e756f43746e65\n"
".quad 0x3b38317225202c5d,0x5f39325f744c240a,0x240a3a3238323333,0x32335f39325f744c\n"
".quad 0x744c240a3a383532,0x333231335f39325f,0x636f6c2e090a3a34,0x0937383109363109\n"
".quad 0x3b74697865090a30,0x646e6557444c240a,0x64657236315a5f5f,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x76454531624c4531,0x0a3a6a6650664b50,0x5a5f202f2f207d09\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4c45316a4c497373,0x664b507645453162\n"
".quad 0x652e090a0a6a6650,0x315a5f207972746e,0x5365637564657236,0x736150656c676e69\n"
".quad 0x453231356a4c4973,0x4b5076454530624c,0x090a28206a665066,0x206d617261702e09\n"
".quad 0x635f5f203436752e,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x356a4c4973736150,0x454530624c453231,0x5f6a6650664b5076,0x2c61746164695f67\n"
".quad 0x617261702e09090a,0x5f203436752e206d,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x30624c453231356a,0x6650664b50764545\n"
".quad 0x7461646f5f675f6a,0x61702e09090a2c61,0x3233752e206d6172,0x70616475635f5f20\n"
".quad 0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e,0x4c453231356a4c49\n"
".quad 0x664b507645453062,0x090a296e5f6a6650,0x206765722e090a7b,0x767225203233752e\n"
".quad 0x6765722e090a3b31,0x7225203233752e20,0x2e090a3b3e39323c,0x3436752e20676572\n"
".quad 0x3e32323c64722520,0x206765722e090a3b,0x3c6625203233662e,0x722e090a3b3e3336\n"
".quad 0x646572702e206765,0x3b3e37313c702520,0x65726168732e090a,0x5f5f2038732e2064\n"
".quad 0x636f6c5f61647563,0x325f7261765f6c61,0x5f38335f39323336,0x0a3b7473614c6d61\n"
".quad 0x363109636f6c2e09,0x240a300937333109,0x315a5f5f3142424c,0x5365637564657236\n"
".quad 0x736150656c676e69,0x453231356a4c4973,0x4b5076454530624c,0x2e090a3a6a665066\n"
".quad 0x3809363109636f6c,0x747663090a300936,0x3631752e3233752e,0x25202c3172250920\n"
".quad 0x090a3b782e646974,0x2e3436752e747663,0x6472250920323375,0x0a3b317225202c31\n"
".quad 0x6469772e6c756d09,0x2509203233752e65,0x317225202c326472,0x6f6d090a3b34202c\n"
".quad 0x2509203436752e76,0x616473202c336472,0x646461090a3b6174,0x722509203436752e\n"
".quad 0x32647225202c3464,0x0a3b33647225202c,0x3233662e766f6d09,0x30202c3166250920\n"
".quad 0x3030303030303066,0x0920202020203b30,0x6f6d090a30202f2f,0x2509203233662e76\n"
".quad 0x30306630202c3266,0x203b303030303030,0x202f2f0920202020,0x68732e7473090a30\n"
".quad 0x3233662e64657261,0x2b346472255b0920,0x3b326625202c5d30,0x33752e747663090a\n"
".quad 0x2509203631752e32,0x61746325202c3272,0x6d090a3b782e6469,0x33752e6f6c2e6c75\n"
".quad 0x202c337225092032,0x323031202c327225,0x2e646461090a3b34,0x3472250920323375\n"
".quad 0x25202c337225202c,0x747663090a3b3172,0x3631752e3233752e,0x25202c3572250920\n"
".quad 0x782e64696174636e,0x61702e646c090a3b,0x203233752e6d6172,0x5f5b202c36722509\n"
".quad 0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x30624c453231356a,0x6650664b50764545,0x73090a3b5d6e5f6a,0x752e65672e707465\n"
".quad 0x2c31702509203233,0x7225202c34722520,0x31702540090a3b36,0x4c24092061726220\n"
".quad 0x3035325f30335f74,0x646461090a3b3039,0x722509203233752e,0x202c347225202c37\n"
".quad 0x646c090a3b323135,0x752e6d617261702e,0x2c36722509203233,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69,0x453231356a4c4973\n"
".quad 0x4b5076454530624c,0x3b5d6e5f6a665066,0x33752e646461090a,0x202c387225092032\n"
".quad 0x323135202c367225,0x6c2e6c756d090a3b,0x2509203233752e6f,0x2c357225202c3972\n"
".quad 0x090a3b3432303120,0x2e3436732e747663,0x6472250920323375,0x0a3b397225202c35\n"
".quad 0x617261702e646c09,0x2509203436752e6d,0x5f5f5b202c366472,0x6d72617061647563\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x4530624c45323135\n"
".quad 0x6a6650664b507645,0x61746164695f675f,0x2e747663090a3b5d,0x203233752e343675\n"
".quad 0x25202c3764722509,0x6c756d090a3b3472,0x33752e656469772e,0x2c38647225092032\n"
".quad 0x3b34202c34722520,0x36752e646461090a,0x2c39647225092034,0x25202c3664722520\n"
".quad 0x756d090a3b386472,0x752e656469772e6c,0x3164722509203233,0x202c397225202c30\n"
".quad 0x335f744c240a3b34,0x3a32303635325f30,0x6f6f6c3c2f2f200a,0x20706f6f4c203e70\n"
".quad 0x6e696c2079646f62,0x656e202c36382065,0x656420676e697473,0x202c31203a687470\n"
".quad 0x6574616d69747365,0x7461726574692064,0x6e75203a736e6f69,0x2e090a6e776f6e6b\n"
".quad 0x3909363109636f6c,0x2e646c090a300933,0x662e6c61626f6c67,0x2c33662509203233\n"
".quad 0x302b396472255b20,0x2e646461090a3b5d,0x3166250920323366,0x25202c336625202c\n"
".quad 0x2e7473090a3b3166,0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34\n"
".quad 0x636f6c2e090a3b31,0x3009363809363109,0x7261702e646c090a,0x09203233752e6d61\n"
".quad 0x5f5f5b202c367225,0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x4530624c45323135,0x6a6650664b507645,0x6c2e090a3b5d6e5f\n"
".quad 0x333909363109636f,0x70746573090a3009,0x203233752e65672e,0x7225202c32702509\n"
".quad 0x0a3b367225202c37,0x7262203270254009,0x335f744c24092061,0x3b38353835325f30\n"
".quad 0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62\n"
".quad 0x6568202c36382065,0x6c6562616c206461,0x335f744c24206465,0x0a32303635325f30\n"
".quad 0x363109636f6c2e09,0x6c090a3009363909,0x6c61626f6c672e64,0x662509203233662e\n"
".quad 0x396472255b202c34,0x0a3b5d383430322b,0x3233662e64646109,0x25202c3166250920\n"
".quad 0x3b316625202c3466,0x6168732e7473090a,0x203233662e646572,0x302b346472255b09\n"
".quad 0x0a3b316625202c5d,0x325f30335f744c24,0x2f200a3a38353835,0x203e706f6f6c3c2f\n"
".quad 0x20666f2074726150,0x646f6220706f6f6c,0x3820656e696c2079,0x2064616568202c36\n"
".quad 0x2064656c6562616c,0x325f30335f744c24,0x6461090a32303635,0x2509203233752e64\n"
".quad 0x2c377225202c3772,0x61090a3b39722520,0x09203436752e6464,0x7225202c39647225\n"
".quad 0x31647225202c3964,0x70746573090a3b30,0x203233752e746c2e,0x7225202c33702509\n"
".quad 0x0a3b387225202c37,0x7262203370254009,0x335f744c24092061,0x3b32303635325f30\n"
".quad 0x5f30335f744c240a,0x090a3a3039303532,0x09363109636f6c2e,0x62090a3009303031\n"
".quad 0x20636e79732e7261,0x6f6c2e090a3b3009,0x3330310936310963,0x2e766f6d090a3009\n"
".quad 0x3172250920323375,0x0a3b353532202c30,0x656c2e7074657309,0x702509203233752e\n"
".quad 0x202c317225202c34,0x40090a3b30317225,0x6172622034702521,0x30335f744c240920\n"
".quad 0x0a3b36323636325f,0x363109636f6c2e09,0x6c090a3009333609,0x6465726168732e64\n"
".quad 0x662509203233662e,0x346472255b202c35,0x646c090a3b5d302b,0x2e6465726168732e\n"
".quad 0x3666250920323366,0x2b346472255b202c,0x090a3b5d34323031,0x203233662e646461\n"
".quad 0x6625202c37662509,0x0a3b366625202c35,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x240a3b376625202c,0x36325f30335f744c,0x6162090a3a363236\n"
".quad 0x0920636e79732e72,0x2e766f6d090a3b30,0x3172250920323375,0x0a3b373231202c31\n"
".quad 0x656c2e7074657309,0x702509203233752e,0x202c317225202c35,0x40090a3b31317225\n"
".quad 0x6172622035702521,0x30335f744c240920,0x0a3b38333137325f,0x363109636f6c2e09\n"
".quad 0x6c090a3009343609,0x6465726168732e64,0x662509203233662e,0x346472255b202c38\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3966250920323366,0x2b346472255b202c\n"
".quad 0x61090a3b5d323135,0x09203233662e6464,0x6625202c30316625,0x0a3b396625202c38\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x0a3b30316625202c\n"
".quad 0x325f30335f744c24,0x62090a3a38333137,0x20636e79732e7261,0x766f6d090a3b3009\n"
".quad 0x722509203233752e,0x0a3b3336202c3231,0x656c2e7074657309,0x702509203233752e\n"
".quad 0x202c317225202c36,0x40090a3b32317225,0x6172622036702521,0x30335f744c240920\n"
".quad 0x0a3b30353637325f,0x363109636f6c2e09,0x6c090a3009353609,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3131,0x6c090a3b5d302b34,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3231,0x0a3b5d3635322b34,0x3233662e64646109\n"
".quad 0x202c333166250920,0x6625202c31316625,0x2e7473090a3b3231,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3331,0x30353637325f3033\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09,0x202c333172250920\n"
".quad 0x746573090a3b3133,0x3233752e656c2e70,0x25202c3770250920,0x33317225202c3172\n"
".quad 0x3770252140090a3b,0x4c24092061726220,0x3138325f30335f74,0x6f6c2e090a3b3236\n"
".quad 0x0937360936310963,0x68732e646c090a30,0x3233662e64657261,0x202c343166250920\n"
".quad 0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261,0x202c353166250920\n"
".quad 0x32312b346472255b,0x646461090a3b5d38,0x662509203233662e,0x34316625202c3631\n"
".quad 0x0a3b35316625202c,0x726168732e747309,0x09203233662e6465,0x5d302b346472255b\n"
".quad 0x0a3b36316625202c,0x325f30335f744c24,0x62090a3a32363138,0x20636e79732e7261\n"
".quad 0x766f6d090a3b3009,0x722509203233752e,0x0a3b3531202c3431,0x656c2e7074657309\n"
".quad 0x702509203233752e,0x202c317225202c38,0x40090a3b34317225,0x6172622038702521\n"
".quad 0x30335f744c240920,0x0a3b34373638325f,0x363109636f6c2e09,0x6c090a3009383609\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3731,0x6c090a3b5d302b34\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3831,0x090a3b5d34362b34\n"
".quad 0x203233662e646461,0x25202c3931662509,0x316625202c373166,0x732e7473090a3b38\n"
".quad 0x33662e6465726168,0x346472255b092032,0x316625202c5d302b,0x335f744c240a3b39\n"
".quad 0x3a34373638325f30,0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d\n"
".quad 0x37202c3531722509,0x2e70746573090a3b,0x09203233752e656c,0x317225202c397025\n"
".quad 0x0a3b35317225202c,0x6220397025214009,0x5f744c2409206172,0x36383139325f3033\n"
".quad 0x09636f6c2e090a3b,0x0a30093936093631,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c30326625,0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c31326625,0x3b5d32332b346472,0x33662e646461090a,0x2c32326625092032\n"
".quad 0x25202c3032662520,0x7473090a3b313266,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x744c240a3b323266,0x383139325f30335f,0x2e726162090a3a36\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c36317225092032,0x746573090a3b3320\n"
".quad 0x3233752e656c2e70,0x202c303170250920,0x317225202c317225,0x70252140090a3b36\n"
".quad 0x0920617262203031,0x325f30335f744c24,0x2e090a3b38393639,0x3709363109636f6c\n"
".quad 0x2e646c090a300930,0x662e646572616873,0x3332662509203233,0x2b346472255b202c\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3432662509203233,0x2b346472255b202c\n"
".quad 0x6461090a3b5d3631,0x2509203233662e64,0x326625202c353266,0x3b34326625202c33\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x3b35326625202c5d\n"
".quad 0x5f30335f744c240a,0x090a3a3839363932,0x636e79732e726162,0x6f6d090a3b300920\n"
".quad 0x2509203233752e76,0x0a3b31202c373172,0x656c2e7074657309,0x702509203233752e\n"
".quad 0x2c317225202c3131,0x090a3b3731722520,0x6220313170252140,0x5f744c2409206172\n"
".quad 0x30313230335f3033,0x09636f6c2e090a3b,0x0a30093137093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c36326625,0x0a3b5d302b346472,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c37326625,0x0a3b5d382b346472,0x3233662e64646109\n"
".quad 0x202c383266250920,0x6625202c36326625,0x2e7473090a3b3732,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3832,0x30313230335f3033\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09,0x202c383172250920\n"
".quad 0x70746573090a3b30,0x203233752e71652e,0x25202c3231702509,0x38317225202c3172\n"
".quad 0x3170252140090a3b,0x2409206172622032,0x30335f30335f744c,0x6c2e090a3b323237\n"
".quad 0x323709363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c39326625092032\n"
".quad 0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168,0x2c30336625092032\n"
".quad 0x342b346472255b20,0x2e646461090a3b5d,0x3366250920323366,0x2c39326625202c31\n"
".quad 0x090a3b3033662520,0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225\n"
".quad 0x240a3b3133662520,0x30335f30335f744c,0x6162090a3a323237,0x0920636e79732e72\n"
".quad 0x636f6c2e090a3b30,0x0933303109363109,0x3170252140090a30,0x2409206172622032\n"
".quad 0x31335f30335f744c,0x6c2e090a3b343332,0x303109363109636f,0x2e646c090a300936\n"
".quad 0x662e646572616873,0x3233662509203233,0x61746164735b202c,0x646c090a3b5d302b\n"
".quad 0x752e6d617261702e,0x3164722509203436,0x75635f5f5b202c31,0x5f5f6d7261706164\n"
".quad 0x637564657236315a,0x50656c676e695365,0x31356a4c49737361,0x76454530624c4532\n"
".quad 0x675f6a6650664b50,0x3b5d617461646f5f,0x36752e747663090a,0x2509203233752e34\n"
".quad 0x7225202c32316472,0x2e6c756d090a3b32,0x3233752e65646977,0x2c33316472250920\n"
".quad 0x3b34202c32722520,0x36752e646461090a,0x3431647225092034,0x2c3131647225202c\n"
".quad 0x0a3b333164722520,0x626f6c672e747309,0x09203233662e6c61,0x302b34316472255b\n"
".quad 0x3b32336625202c5d,0x5f30335f744c240a,0x090a3a3433323133,0x09363109636f6c2e\n"
".quad 0x6d090a3009343431,0x09203233752e766f,0x3b31202c39317225,0x6c2e70746573090a\n"
".quad 0x2509203233752e65,0x357225202c333170,0x0a3b39317225202c,0x6220333170254009\n"
".quad 0x5f744c2409206172,0x36343731335f3033,0x09636f6c2e090a3b,0x3009373531093631\n"
".quad 0x7261626d656d090a,0x2140090a3b6c672e,0x6172622032317025,0x30335f744c240920\n"
".quad 0x0a3b38353232335f,0x363109636f6c2e09,0x090a300932363109,0x203436752e766f6d\n"
".quad 0x202c353164722509,0x656d657269746572,0x3b746e756f43746e,0x672e6d6f7461090a\n"
".quad 0x6e692e6c61626f6c,0x2509203233752e63,0x72255b202c303272,0x7225202c5d353164\n"
".quad 0x2e766f6d090a3b35,0x3272250920323373,0x3b30327225202c31,0x3109636f6c2e090a\n"
".quad 0x0a30093436310936,0x3233752e62757309,0x202c323272250920,0x0a3b31202c357225\n"
".quad 0x2e71652e74657309,0x203233752e323375,0x25202c3332722509,0x327225202c313272\n"
".quad 0x2e67656e090a3b32,0x3272250920323373,0x3b33327225202c34,0x6168732e7473090a\n"
".quad 0x092038732e646572,0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f39323336325f72\n"
".quad 0x73614c6d615f3833,0x34327225202c5d74,0x30335f744c240a3b,0x0a3a38353232335f\n"
".quad 0x363109636f6c2e09,0x090a300936363109,0x636e79732e726162,0x646c090a3b300920\n"
".quad 0x2e6465726168732e,0x3532722509203873,0x6475635f5f5b202c,0x5f6c61636f6c5f61\n"
".quad 0x323336325f726176,0x4c6d615f38335f39,0x6d090a3b5d747361,0x09203233752e766f\n"
".quad 0x3b30202c36327225,0x652e70746573090a,0x2509203233732e71,0x327225202c343170\n"
".quad 0x3b36327225202c35,0x203431702540090a,0x744c240920617262,0x373732335f30335f\n"
".quad 0x70746573090a3b30,0x203233752e656c2e,0x25202c3531702509,0x3b317225202c3572\n"
".quad 0x203531702540090a,0x744c240920617262,0x333533335f30335f,0x636f6c2e090a3b38\n"
".quad 0x0932373109363109,0x61702e646c090a30,0x203436752e6d6172,0x202c363164722509\n"
".quad 0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x4c453231356a4c49,0x664b507645453062,0x646f5f675f6a6650,0x61090a3b5d617461\n"
".quad 0x09203436752e6464,0x25202c3731647225,0x7225202c36316472,0x2e646c090a3b3264\n"
".quad 0x662e6c61626f6c67,0x3333662509203233,0x37316472255b202c,0x7262090a3b5d302b\n"
".quad 0x240920696e752e61,0x33335f30335f744c,0x744c240a3b323832,0x333533335f30335f\n"
".quad 0x2e766f6d090a3a38,0x3366250920323366,0x3030306630202c33,0x20203b3030303030\n"
".quad 0x0a30202f2f092020,0x335f30335f744c24,0x6d090a3a32383233,0x09203436752e766f\n"
".quad 0x73202c3831647225,0x6461090a3b6d656d,0x2509203436752e64,0x7225202c39316472\n"
".quad 0x31647225202c3264,0x732e7473090a3b38,0x33662e6465726168,0x316472255b092032\n"
".quad 0x6625202c5d302b39,0x6f6c2e090a3b3333,0x3437310936310963,0x2e726162090a3009\n"
".quad 0x3b300920636e7973,0x3109636f6c2e090a,0x0a30093637310936,0x6220347025214009\n"
".quad 0x5f744c2409206172,0x34393733335f3033,0x09636f6c2e090a3b,0x0a30093336093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c34336625,0x3b5d302b39316472\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3533662509,0x30312b3931647225\n"
".quad 0x6461090a3b5d3432,0x2509203233662e64,0x336625202c363366,0x3b35336625202c34\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x2b39316472255b09,0x36336625202c5d30\n"
".quad 0x30335f744c240a3b,0x0a3a34393733335f,0x6e79732e72616209,0x40090a3b30092063\n"
".quad 0x6172622035702521,0x30335f744c240920,0x0a3b36303334335f,0x363109636f6c2e09\n"
".quad 0x6c090a3009343609,0x6465726168732e64,0x662509203233662e,0x6472255b202c3733\n"
".quad 0x090a3b5d302b3931,0x65726168732e646c,0x2509203233662e64,0x72255b202c383366\n"
".quad 0x5d3231352b393164,0x662e646461090a3b,0x3933662509203233,0x202c37336625202c\n"
".quad 0x73090a3b38336625,0x6465726168732e74,0x255b09203233662e,0x2c5d302b39316472\n"
".quad 0x240a3b3933662520,0x34335f30335f744c,0x6162090a3a363033,0x0920636e79732e72\n"
".quad 0x70252140090a3b30,0x2409206172622036,0x34335f30335f744c,0x6c2e090a3b383138\n"
".quad 0x353609363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c30346625092032\n"
".quad 0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873,0x3134662509203233\n"
".quad 0x39316472255b202c,0x090a3b5d3635322b,0x203233662e646461,0x25202c3234662509\n"
".quad 0x346625202c303466,0x732e7473090a3b31,0x33662e6465726168,0x316472255b092032\n"
".quad 0x6625202c5d302b39,0x5f744c240a3b3234,0x38313834335f3033,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x6220377025214009,0x5f744c2409206172,0x30333335335f3033\n"
".quad 0x09636f6c2e090a3b,0x0a30093736093631,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c33346625,0x3b5d302b39316472,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3434662509,0x32312b3931647225,0x646461090a3b5d38,0x662509203233662e\n"
".quad 0x33346625202c3534,0x0a3b34346625202c,0x726168732e747309,0x09203233662e6465\n"
".quad 0x302b39316472255b,0x3b35346625202c5d,0x5f30335f744c240a,0x090a3a3033333533\n"
".quad 0x636e79732e726162,0x2140090a3b300920,0x2061726220387025,0x5f30335f744c2409\n"
".quad 0x090a3b3234383533,0x09363109636f6c2e,0x646c090a30093836,0x2e6465726168732e\n"
".quad 0x3466250920323366,0x316472255b202c36,0x6c090a3b5d302b39,0x6465726168732e64\n"
".quad 0x662509203233662e,0x6472255b202c3734,0x0a3b5d34362b3931,0x3233662e64646109\n"
".quad 0x202c383466250920,0x6625202c36346625,0x2e7473090a3b3734,0x662e646572616873\n"
".quad 0x6472255b09203233,0x25202c5d302b3931,0x744c240a3b383466,0x343835335f30335f\n"
".quad 0x2e726162090a3a32,0x3b300920636e7973,0x203970252140090a,0x744c240920617262\n"
".quad 0x353336335f30335f,0x636f6c2e090a3b34,0x3009393609363109,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3934662509,0x5d302b3931647225,0x68732e646c090a3b\n"
".quad 0x3233662e64657261,0x202c303566250920,0x332b39316472255b,0x646461090a3b5d32\n"
".quad 0x662509203233662e,0x39346625202c3135,0x0a3b30356625202c,0x726168732e747309\n"
".quad 0x09203233662e6465,0x302b39316472255b,0x3b31356625202c5d,0x5f30335f744c240a\n"
".quad 0x090a3a3435333633,0x636e79732e726162,0x2140090a3b300920,0x6172622030317025\n"
".quad 0x30335f744c240920,0x0a3b36363836335f,0x363109636f6c2e09,0x6c090a3009303709\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3235,0x090a3b5d302b3931\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c333566,0x3b5d36312b393164\n"
".quad 0x33662e646461090a,0x2c34356625092032,0x25202c3235662520,0x7473090a3b333566\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x202c5d302b393164,0x4c240a3b34356625\n"
".quad 0x3836335f30335f74,0x726162090a3a3636,0x300920636e79732e,0x3170252140090a3b\n"
".quad 0x2409206172622031,0x37335f30335f744c,0x6c2e090a3b383733,0x313709363109636f\n"
".quad 0x732e646c090a3009,0x33662e6465726168,0x2c35356625092032,0x2b39316472255b20\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3635662509203233,0x39316472255b202c\n"
".quad 0x6461090a3b5d382b,0x2509203233662e64,0x356625202c373566,0x3b36356625202c35\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x2b39316472255b09,0x37356625202c5d30\n"
".quad 0x30335f744c240a3b,0x0a3a38373337335f,0x6e79732e72616209,0x40090a3b30092063\n"
".quad 0x7262203231702521,0x335f744c24092061,0x3b30393837335f30,0x3109636f6c2e090a\n"
".quad 0x090a300932370936,0x65726168732e646c,0x2509203233662e64,0x72255b202c383566\n"
".quad 0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465,0x255b202c39356625\n"
".quad 0x3b5d342b39316472,0x33662e646461090a,0x2c30366625092032,0x25202c3835662520\n"
".quad 0x7473090a3b393566,0x2e6465726168732e,0x72255b0920323366,0x202c5d302b393164\n"
".quad 0x4c240a3b30366625,0x3837335f30335f74,0x726162090a3a3039,0x300920636e79732e\n"
".quad 0x09636f6c2e090a3b,0x3009363731093631,0x323170252140090a,0x4c24092061726220\n"
".quad 0x3438335f30335f74,0x6f6c2e090a3b3230,0x3038310936310963,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x2c31366625092032,0x302b6d656d735b20,0x702e646c090a3b5d\n"
".quad 0x3436752e6d617261,0x2c30326472250920,0x616475635f5f5b20,0x315a5f5f6d726170\n"
".quad 0x5365637564657236,0x736150656c676e69,0x453231356a4c4973,0x4b5076454530624c\n"
".quad 0x6f5f675f6a665066,0x090a3b5d61746164,0x61626f6c672e7473,0x5b09203233662e6c\n"
".quad 0x5d302b3032647225,0x0a3b31366625202c,0x363109636f6c2e09,0x090a300933383109\n"
".quad 0x203233752e766f6d,0x30202c3732722509,0x6c672e7473090a3b,0x3233752e6c61626f\n"
".quad 0x72697465725b0920,0x756f43746e656d65,0x327225202c5d746e,0x335f744c240a3b37\n"
".quad 0x3a32303438335f30,0x5f30335f744c240a,0x240a3a3037373233,0x31335f30335f744c\n"
".quad 0x6c2e090a3a363437,0x383109363109636f,0x697865090a300937,0x6557444c240a3b74\n"
".quad 0x7236315a5f5f646e,0x6e69536563756465,0x4973736150656c67,0x624c453231356a4c\n"
".quad 0x50664b5076454530,0x2f207d090a3a6a66,0x657236315a5f202f,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x30624c453231356a,0x6650664b50764545,0x746e652e090a0a6a\n"
".quad 0x7236315a5f207972,0x6e69536563756465,0x4973736150656c67,0x624c453635326a4c\n"
".quad 0x50664b5076454530,0x2e09090a28206a66,0x752e206d61726170,0x6475635f5f203436\n"
".quad 0x5a5f5f6d72617061,0x6563756465723631,0x6150656c676e6953,0x3635326a4c497373\n"
".quad 0x5076454530624c45,0x5f675f6a6650664b,0x090a2c6174616469,0x206d617261702e09\n"
".quad 0x635f5f203436752e,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x326a4c4973736150,0x454530624c453635,0x5f6a6650664b5076,0x2c617461646f5f67\n"
".quad 0x617261702e09090a,0x5f203233752e206d,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x30624c453635326a,0x6650664b50764545\n"
".quad 0x0a7b090a296e5f6a,0x752e206765722e09,0x3b31767225203233,0x2e206765722e090a\n"
".quad 0x323c722520323375,0x65722e090a3b3e38,0x25203436752e2067,0x0a3b3e32323c6472\n"
".quad 0x662e206765722e09,0x37353c6625203233,0x6765722e090a3b3e,0x2520646572702e20\n"
".quad 0x090a3b3e36313c70,0x206465726168732e,0x75635f5f2038732e,0x6c61636f6c5f6164\n"
".quad 0x3336325f7261765f,0x6d615f38335f3932,0x2e090a3b7473614c,0x3109363109636f6c\n"
".quad 0x424c240a30093733,0x7236315a5f5f3142,0x6e69536563756465,0x4973736150656c67\n"
".quad 0x624c453635326a4c,0x50664b5076454530,0x6f6c2e090a3a6a66,0x0936380936310963\n"
".quad 0x752e747663090a30,0x09203631752e3233,0x697425202c317225,0x7663090a3b782e64\n"
".quad 0x33752e3436752e74,0x2c31647225092032,0x6d090a3b31722520,0x2e656469772e6c75\n"
".quad 0x6472250920323375,0x202c317225202c32,0x2e766f6d090a3b34,0x6472250920343675\n"
".quad 0x6174616473202c33,0x752e646461090a3b,0x3464722509203436,0x202c32647225202c\n"
".quad 0x6d090a3b33647225,0x09203233662e766f,0x306630202c316625,0x3b30303030303030\n"
".quad 0x2f2f092020202020,0x2e766f6d090a3020,0x3266250920323366,0x303030306630202c\n"
".quad 0x2020203b30303030,0x0a30202f2f092020,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x090a3b326625202c,0x2e3233752e747663,0x3272250920363175\n"
".quad 0x646961746325202c,0x6c756d090a3b782e,0x203233752e6f6c2e,0x7225202c33722509\n"
".quad 0x0a3b323135202c32,0x3233752e64646109,0x25202c3472250920,0x3b317225202c3372\n"
".quad 0x33752e747663090a,0x2509203631752e32,0x74636e25202c3572,0x090a3b782e646961\n"
".quad 0x6d617261702e646c,0x722509203233752e,0x75635f5f5b202c36,0x5f5f6d7261706164\n"
".quad 0x637564657236315a,0x50656c676e695365,0x35326a4c49737361,0x76454530624c4536\n"
".quad 0x6e5f6a6650664b50,0x70746573090a3b5d,0x203233752e65672e,0x7225202c31702509\n"
".quad 0x0a3b367225202c34,0x7262203170254009,0x335f744c24092061,0x3b32303635325f31\n"
".quad 0x33752e646461090a,0x202c377225092032,0x363532202c347225,0x61702e646c090a3b\n"
".quad 0x203233752e6d6172,0x5f5b202c36722509,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x30624c453635326a,0x6650664b50764545\n"
".quad 0x61090a3b5d6e5f6a,0x09203233752e6464,0x367225202c387225,0x090a3b363532202c\n"
".quad 0x752e6f6c2e6c756d,0x2c39722509203233,0x3135202c35722520,0x2e747663090a3b32\n"
".quad 0x203233752e343673,0x25202c3564722509,0x2e646c090a3b3972,0x36752e6d61726170\n"
".quad 0x2c36647225092034,0x616475635f5f5b20,0x315a5f5f6d726170,0x5365637564657236\n"
".quad 0x736150656c676e69,0x453635326a4c4973,0x4b5076454530624c,0x695f675f6a665066\n"
".quad 0x090a3b5d61746164,0x2e3436752e747663,0x6472250920323375,0x0a3b347225202c37\n"
".quad 0x6469772e6c756d09,0x2509203233752e65,0x347225202c386472,0x6461090a3b34202c\n"
".quad 0x2509203436752e64,0x647225202c396472,0x3b38647225202c36,0x69772e6c756d090a\n"
".quad 0x09203233752e6564,0x25202c3031647225,0x240a3b34202c3972,0x36325f31335f744c\n"
".quad 0x2f2f200a3a343131,0x4c203e706f6f6c3c,0x79646f6220706f6f,0x363820656e696c20\n"
".quad 0x6e697473656e202c,0x3a68747065642067,0x69747365202c3120,0x746920646574616d\n"
".quad 0x736e6f6974617265,0x776f6e6b6e75203a,0x09636f6c2e090a6e,0x0a30093339093631\n"
".quad 0x626f6c672e646c09,0x09203233662e6c61,0x72255b202c336625,0x090a3b5d302b3964\n"
".quad 0x203233662e646461,0x6625202c31662509,0x0a3b316625202c33,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x090a3b316625202c,0x09363109636f6c2e\n"
".quad 0x646c090a30093638,0x752e6d617261702e,0x2c36722509203233,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69,0x453635326a4c4973\n"
".quad 0x4b5076454530624c,0x3b5d6e5f6a665066,0x3109636f6c2e090a,0x090a300933390936\n"
".quad 0x2e65672e70746573,0x3270250920323375,0x25202c377225202c,0x702540090a3b3672\n"
".quad 0x2409206172622032,0x36325f31335f744c,0x2f2f200a3b303733,0x50203e706f6f6c3c\n"
".quad 0x6c20666f20747261,0x79646f6220706f6f,0x363820656e696c20,0x6c2064616568202c\n"
".quad 0x242064656c656261,0x36325f31335f744c,0x6f6c2e090a343131,0x0936390936310963\n"
".quad 0x6c672e646c090a30,0x3233662e6c61626f,0x5b202c3466250920,0x3230312b39647225\n"
".quad 0x646461090a3b5d34,0x662509203233662e,0x202c346625202c31,0x7473090a3b316625\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464,0x5f744c240a3b3166\n"
".quad 0x30373336325f3133,0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20\n"
".quad 0x696c2079646f6220,0x68202c363820656e,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x34313136325f3133,0x33752e646461090a,0x202c377225092032,0x397225202c377225\n"
".quad 0x752e646461090a3b,0x3964722509203436,0x202c39647225202c,0x090a3b3031647225\n"
".quad 0x2e746c2e70746573,0x3370250920323375,0x25202c377225202c,0x702540090a3b3872\n"
".quad 0x2409206172622033,0x36325f31335f744c,0x744c240a3b343131,0x303635325f31335f\n"
".quad 0x636f6c2e090a3a32,0x0930303109363109,0x732e726162090a30,0x0a3b300920636e79\n"
".quad 0x363109636f6c2e09,0x090a300933303109,0x203233752e766f6d,0x31202c3031722509\n"
".quad 0x746573090a3b3732,0x3233752e656c2e70,0x25202c3470250920,0x30317225202c3172\n"
".quad 0x3470252140090a3b,0x4c24092061726220,0x3137325f31335f74,0x6f6c2e090a3b3833\n"
".quad 0x0934360936310963,0x68732e646c090a30,0x3233662e64657261,0x5b202c3566250920\n"
".quad 0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572,0x255b202c36662509\n"
".quad 0x5d3231352b346472,0x662e646461090a3b,0x2c37662509203233,0x6625202c35662520\n"
".quad 0x732e7473090a3b36,0x33662e6465726168,0x346472255b092032,0x376625202c5d302b\n"
".quad 0x31335f744c240a3b,0x0a3a38333137325f,0x6e79732e72616209,0x6d090a3b30092063\n"
".quad 0x09203233752e766f,0x3336202c31317225,0x2e70746573090a3b,0x09203233752e656c\n"
".quad 0x317225202c357025,0x0a3b31317225202c,0x6220357025214009,0x5f744c2409206172\n"
".quad 0x30353637325f3133,0x09636f6c2e090a3b,0x0a30093536093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x72255b202c386625,0x090a3b5d302b3464,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x6472255b202c3966,0x0a3b5d3635322b34,0x3233662e64646109\n"
".quad 0x202c303166250920,0x396625202c386625,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x2b346472255b0920,0x30316625202c5d30,0x31335f744c240a3b,0x0a3a30353637325f\n"
".quad 0x6e79732e72616209,0x6d090a3b30092063,0x09203233752e766f,0x3133202c32317225\n"
".quad 0x2e70746573090a3b,0x09203233752e656c,0x317225202c367025,0x0a3b32317225202c\n"
".quad 0x6220367025214009,0x5f744c2409206172,0x32363138325f3133,0x09636f6c2e090a3b\n"
".quad 0x0a30093736093631,0x726168732e646c09,0x09203233662e6465,0x255b202c31316625\n"
".quad 0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465,0x255b202c32316625\n"
".quad 0x5d3832312b346472,0x662e646461090a3b,0x3331662509203233,0x202c31316625202c\n"
".quad 0x73090a3b32316625,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x4c240a3b33316625,0x3138325f31335f74,0x726162090a3a3236,0x300920636e79732e\n"
".quad 0x752e766f6d090a3b,0x3331722509203233,0x73090a3b3531202c,0x752e656c2e707465\n"
".quad 0x2c37702509203233,0x7225202c31722520,0x252140090a3b3331,0x0920617262203770\n"
".quad 0x325f31335f744c24,0x2e090a3b34373638,0x3609363109636f6c,0x2e646c090a300938\n"
".quad 0x662e646572616873,0x3431662509203233,0x2b346472255b202c,0x2e646c090a3b5d30\n"
".quad 0x662e646572616873,0x3531662509203233,0x2b346472255b202c,0x6461090a3b5d3436\n"
".quad 0x2509203233662e64,0x316625202c363166,0x3b35316625202c34,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x302b346472255b09,0x3b36316625202c5d,0x5f31335f744c240a\n"
".quad 0x090a3a3437363832,0x636e79732e726162,0x6f6d090a3b300920,0x2509203233752e76\n"
".quad 0x0a3b37202c343172,0x656c2e7074657309,0x702509203233752e,0x202c317225202c38\n"
".quad 0x40090a3b34317225,0x6172622038702521,0x31335f744c240920,0x0a3b36383139325f\n"
".quad 0x363109636f6c2e09,0x6c090a3009393609,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3731,0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3831,0x090a3b5d32332b34,0x203233662e646461,0x25202c3931662509\n"
".quad 0x316625202c373166,0x732e7473090a3b38,0x33662e6465726168,0x346472255b092032\n"
".quad 0x316625202c5d302b,0x335f744c240a3b39,0x3a36383139325f31,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x203233752e766f6d,0x33202c3531722509,0x2e70746573090a3b\n"
".quad 0x09203233752e656c,0x317225202c397025,0x0a3b35317225202c,0x6220397025214009\n"
".quad 0x5f744c2409206172,0x38393639325f3133,0x09636f6c2e090a3b,0x0a30093037093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c30326625,0x0a3b5d302b346472\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c31326625,0x3b5d36312b346472\n"
".quad 0x33662e646461090a,0x2c32326625092032,0x25202c3032662520,0x7473090a3b313266\n"
".quad 0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464,0x744c240a3b323266\n"
".quad 0x393639325f31335f,0x2e726162090a3a38,0x3b300920636e7973,0x33752e766f6d090a\n"
".quad 0x2c36317225092032,0x746573090a3b3120,0x3233752e656c2e70,0x202c303170250920\n"
".quad 0x317225202c317225,0x70252140090a3b36,0x0920617262203031,0x335f31335f744c24\n"
".quad 0x2e090a3b30313230,0x3709363109636f6c,0x2e646c090a300931,0x662e646572616873\n"
".quad 0x3332662509203233,0x2b346472255b202c,0x2e646c090a3b5d30,0x662e646572616873\n"
".quad 0x3432662509203233,0x2b346472255b202c,0x646461090a3b5d38,0x662509203233662e\n"
".quad 0x33326625202c3532,0x0a3b34326625202c,0x726168732e747309,0x09203233662e6465\n"
".quad 0x5d302b346472255b,0x0a3b35326625202c,0x335f31335f744c24,0x62090a3a30313230\n"
".quad 0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e,0x090a3b30202c3731\n"
".quad 0x2e71652e70746573,0x3170250920323375,0x202c317225202c31,0x40090a3b37317225\n"
".quad 0x7262203131702521,0x335f744c24092061,0x3b32323730335f31,0x3109636f6c2e090a\n"
".quad 0x090a300932370936,0x65726168732e646c,0x2509203233662e64,0x72255b202c363266\n"
".quad 0x090a3b5d302b3464,0x65726168732e646c,0x2509203233662e64,0x72255b202c373266\n"
".quad 0x090a3b5d342b3464,0x203233662e646461,0x25202c3832662509,0x326625202c363266\n"
".quad 0x732e7473090a3b37,0x33662e6465726168,0x346472255b092032,0x326625202c5d302b\n"
".quad 0x335f744c240a3b38,0x3a32323730335f31,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x09363109636f6c2e,0x40090a3009333031,0x7262203131702521,0x335f744c24092061\n"
".quad 0x3b34333231335f31,0x3109636f6c2e090a,0x0a30093630310936,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x735b202c39326625,0x3b5d302b61746164,0x7261702e646c090a\n"
".quad 0x09203436752e6d61,0x5b202c3131647225,0x6170616475635f5f,0x7236315a5f5f6d72\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x624c453635326a4c,0x50664b5076454530\n"
".quad 0x61646f5f675f6a66,0x7663090a3b5d6174,0x33752e3436752e74,0x3231647225092032\n"
".quad 0x090a3b327225202c,0x656469772e6c756d,0x722509203233752e,0x327225202c333164\n"
".quad 0x6461090a3b34202c,0x2509203436752e64,0x7225202c34316472,0x647225202c313164\n"
".quad 0x2e7473090a3b3331,0x662e6c61626f6c67,0x6472255b09203233,0x25202c5d302b3431\n"
".quad 0x744c240a3b393266,0x333231335f31335f,0x636f6c2e090a3a34,0x0934343109363109\n"
".quad 0x752e766f6d090a30,0x3831722509203233,0x6573090a3b31202c,0x33752e656c2e7074\n"
".quad 0x2c32317025092032,0x7225202c35722520,0x702540090a3b3831,0x0920617262203231\n"
".quad 0x335f31335f744c24,0x2e090a3b36343731,0x3109363109636f6c,0x656d090a30093735\n"
".quad 0x3b6c672e7261626d,0x313170252140090a,0x4c24092061726220,0x3232335f31335f74\n"
".quad 0x6f6c2e090a3b3835,0x3236310936310963,0x2e766f6d090a3009,0x6472250920343675\n"
".quad 0x69746572202c3531,0x6f43746e656d6572,0x7461090a3b746e75,0x61626f6c672e6d6f\n"
".quad 0x33752e636e692e6c,0x2c39317225092032,0x5d35316472255b20,0x090a3b357225202c\n"
".quad 0x203233732e766f6d,0x25202c3032722509,0x6c2e090a3b393172,0x363109363109636f\n"
".quad 0x627573090a300934,0x722509203233752e,0x2c357225202c3132,0x746573090a3b3120\n"
".quad 0x2e3233752e71652e,0x3272250920323375,0x2c30327225202c32,0x090a3b3132722520\n"
".quad 0x203233732e67656e,0x25202c3332722509,0x7473090a3b323272,0x2e6465726168732e\n"
".quad 0x635f5f5b09203873,0x61636f6c5f616475,0x36325f7261765f6c,0x615f38335f393233\n"
".quad 0x202c5d7473614c6d,0x4c240a3b33327225,0x3232335f31335f74,0x6f6c2e090a3a3835\n"
".quad 0x3636310936310963,0x2e726162090a3009,0x3b300920636e7973,0x6168732e646c090a\n"
".quad 0x092038732e646572,0x5f5b202c34327225,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x38335f3932333632,0x5d7473614c6d615f,0x752e766f6d090a3b,0x3532722509203233\n"
".quad 0x6573090a3b30202c,0x33732e71652e7074,0x2c33317025092032,0x25202c3432722520\n"
".quad 0x2540090a3b353272,0x2061726220333170,0x5f31335f744c2409,0x090a3b3037373233\n"
".quad 0x2e656c2e70746573,0x3170250920323375,0x202c357225202c34,0x2540090a3b317225\n"
".quad 0x2061726220343170,0x5f31335f744c2409,0x090a3b3833353333,0x09363109636f6c2e\n"
".quad 0x6c090a3009323731,0x2e6d617261702e64,0x6472250920343675,0x635f5f5b202c3631\n"
".quad 0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563,0x326a4c4973736150\n"
".quad 0x454530624c453635,0x5f6a6650664b5076,0x5d617461646f5f67,0x752e646461090a3b\n"
".quad 0x3164722509203436,0x3631647225202c37,0x0a3b32647225202c,0x626f6c672e646c09\n"
".quad 0x09203233662e6c61,0x255b202c30336625,0x3b5d302b37316472,0x6e752e617262090a\n"
".quad 0x335f744c24092069,0x3b32383233335f31,0x5f31335f744c240a,0x090a3a3833353333\n"
".quad 0x203233662e766f6d,0x30202c3033662509,0x3030303030303066,0x2f09202020203b30\n"
".quad 0x5f744c240a30202f,0x32383233335f3133,0x752e766f6d090a3a,0x3164722509203436\n"
".quad 0x3b6d656d73202c38,0x36752e646461090a,0x3931647225092034,0x202c32647225202c\n"
".quad 0x090a3b3831647225,0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225\n"
".quad 0x0a3b30336625202c,0x363109636f6c2e09,0x090a300934373109,0x636e79732e726162\n"
".quad 0x6c2e090a3b300920,0x373109363109636f,0x252140090a300936,0x0920617262203470\n"
".quad 0x335f31335f744c24,0x2e090a3b34393733,0x3609363109636f6c,0x2e646c090a300934\n"
".quad 0x662e646572616873,0x3133662509203233,0x39316472255b202c,0x646c090a3b5d302b\n"
".quad 0x2e6465726168732e,0x3366250920323366,0x316472255b202c32,0x0a3b5d3231352b39\n"
".quad 0x3233662e64646109,0x202c333366250920,0x6625202c31336625,0x2e7473090a3b3233\n"
".quad 0x662e646572616873,0x6472255b09203233,0x25202c5d302b3931,0x744c240a3b333366\n"
".quad 0x393733335f31335f,0x2e726162090a3a34,0x3b300920636e7973,0x203570252140090a\n"
".quad 0x744c240920617262,0x303334335f31335f,0x636f6c2e090a3b36,0x3009353609363109\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3433662509,0x5d302b3931647225\n"
".quad 0x68732e646c090a3b,0x3233662e64657261,0x202c353366250920,0x322b39316472255b\n"
".quad 0x6461090a3b5d3635,0x2509203233662e64,0x336625202c363366,0x3b35336625202c34\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x2b39316472255b09,0x36336625202c5d30\n"
".quad 0x31335f744c240a3b,0x0a3a36303334335f,0x6e79732e72616209,0x40090a3b30092063\n"
".quad 0x6172622036702521,0x31335f744c240920,0x0a3b38313834335f,0x363109636f6c2e09\n"
".quad 0x6c090a3009373609,0x6465726168732e64,0x662509203233662e,0x6472255b202c3733\n"
".quad 0x090a3b5d302b3931,0x65726168732e646c,0x2509203233662e64,0x72255b202c383366\n"
".quad 0x5d3832312b393164,0x662e646461090a3b,0x3933662509203233,0x202c37336625202c\n"
".quad 0x73090a3b38336625,0x6465726168732e74,0x255b09203233662e,0x2c5d302b39316472\n"
".quad 0x240a3b3933662520,0x34335f31335f744c,0x6162090a3a383138,0x0920636e79732e72\n"
".quad 0x70252140090a3b30,0x2409206172622037,0x35335f31335f744c,0x6c2e090a3b303333\n"
".quad 0x383609363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c30346625092032\n"
".quad 0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873,0x3134662509203233\n"
".quad 0x39316472255b202c,0x61090a3b5d34362b,0x09203233662e6464,0x6625202c32346625\n"
".quad 0x31346625202c3034,0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920\n"
".quad 0x346625202c5d302b,0x335f744c240a3b32,0x3a30333335335f31,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x7262203870252140,0x335f744c24092061,0x3b32343835335f31\n"
".quad 0x3109636f6c2e090a,0x090a300939360936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c333466,0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c34346625,0x5d32332b39316472,0x662e646461090a3b,0x3534662509203233\n"
".quad 0x202c33346625202c,0x73090a3b34346625,0x6465726168732e74,0x255b09203233662e\n"
".quad 0x2c5d302b39316472,0x240a3b3534662520,0x35335f31335f744c,0x6162090a3a323438\n"
".quad 0x0920636e79732e72,0x70252140090a3b30,0x2409206172622039,0x36335f31335f744c\n"
".quad 0x6c2e090a3b343533,0x303709363109636f,0x732e646c090a3009,0x33662e6465726168\n"
".quad 0x2c36346625092032,0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873\n"
".quad 0x3734662509203233,0x39316472255b202c,0x61090a3b5d36312b,0x09203233662e6464\n"
".quad 0x6625202c38346625,0x37346625202c3634,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x39316472255b0920,0x346625202c5d302b,0x335f744c240a3b38,0x3a34353336335f31\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x6220303170252140,0x5f744c2409206172\n"
".quad 0x36363836335f3133,0x09636f6c2e090a3b,0x0a30093137093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c39346625,0x3b5d302b39316472,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3035662509,0x5d382b3931647225,0x662e646461090a3b\n"
".quad 0x3135662509203233,0x202c39346625202c,0x73090a3b30356625,0x6465726168732e74\n"
".quad 0x255b09203233662e,0x2c5d302b39316472,0x240a3b3135662520,0x36335f31335f744c\n"
".quad 0x6162090a3a363638,0x0920636e79732e72,0x70252140090a3b30,0x0920617262203131\n"
".quad 0x335f31335f744c24,0x2e090a3b38373337,0x3709363109636f6c,0x2e646c090a300932\n"
".quad 0x662e646572616873,0x3235662509203233,0x39316472255b202c,0x646c090a3b5d302b\n"
".quad 0x2e6465726168732e,0x3566250920323366,0x316472255b202c33,0x61090a3b5d342b39\n"
".quad 0x09203233662e6464,0x6625202c34356625,0x33356625202c3235,0x68732e7473090a3b\n"
".quad 0x3233662e64657261,0x39316472255b0920,0x356625202c5d302b,0x335f744c240a3b34\n"
".quad 0x3a38373337335f31,0x79732e726162090a,0x090a3b300920636e,0x09363109636f6c2e\n"
".quad 0x40090a3009363731,0x7262203131702521,0x335f744c24092061,0x3b30393837335f31\n"
".quad 0x3109636f6c2e090a,0x0a30093038310936,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x735b202c35356625,0x0a3b5d302b6d656d,0x617261702e646c09,0x2509203436752e6d\n"
".quad 0x5f5b202c30326472,0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x30624c453635326a,0x6650664b50764545,0x7461646f5f675f6a\n"
".quad 0x2e7473090a3b5d61,0x662e6c61626f6c67,0x6472255b09203233,0x25202c5d302b3032\n"
".quad 0x6c2e090a3b353566,0x383109363109636f,0x766f6d090a300933,0x722509203233752e\n"
".quad 0x090a3b30202c3632,0x61626f6c672e7473,0x5b09203233752e6c,0x656d657269746572\n"
".quad 0x5d746e756f43746e,0x0a3b36327225202c,0x335f31335f744c24,0x4c240a3a30393837\n"
".quad 0x3732335f31335f74,0x5f744c240a3a3037,0x36343731335f3133,0x09636f6c2e090a3a\n"
".quad 0x3009373831093631,0x0a3b74697865090a,0x5f646e6557444c24,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x326a4c4973736150,0x454530624c453635,0x3a6a6650664b5076\n"
".quad 0x5f202f2f207d090a,0x637564657236315a,0x50656c676e695365,0x35326a4c49737361\n"
".quad 0x76454530624c4536,0x0a0a6a6650664b50,0x207972746e652e09,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x316a4c4973736150,0x454530624c453832,0x206a6650664b5076\n"
".quad 0x7261702e09090a28,0x203436752e206d61,0x6170616475635f5f,0x7236315a5f5f6d72\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x624c453832316a4c,0x50664b5076454530\n"
".quad 0x6164695f675f6a66,0x702e09090a2c6174,0x36752e206d617261,0x616475635f5f2034\n"
".quad 0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69,0x453832316a4c4973\n"
".quad 0x4b5076454530624c,0x6f5f675f6a665066,0x09090a2c61746164,0x2e206d617261702e\n"
".quad 0x75635f5f20323375,0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365\n"
".quad 0x32316a4c49737361,0x76454530624c4538,0x6e5f6a6650664b50,0x722e090a7b090a29\n"
".quad 0x203233752e206765,0x2e090a3b31767225,0x3233752e20676572,0x3b3e37323c722520\n"
".quad 0x2e206765722e090a,0x3c64722520343675,0x722e090a3b3e3232,0x203233662e206765\n"
".quad 0x0a3b3e31353c6625,0x702e206765722e09,0x313c702520646572,0x68732e090a3b3e35\n"
".quad 0x38732e2064657261,0x5f616475635f5f20,0x61765f6c61636f6c,0x5f39323336325f72\n"
".quad 0x73614c6d615f3833,0x636f6c2e090a3b74,0x0937333109363109,0x5f3142424c240a30\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150,0x454530624c453832\n"
".quad 0x3a6a6650664b5076,0x3109636f6c2e090a,0x090a300936380936,0x2e3233752e747663\n"
".quad 0x3172250920363175,0x782e64697425202c,0x752e747663090a3b,0x09203233752e3436\n"
".quad 0x7225202c31647225,0x2e6c756d090a3b31,0x3233752e65646977,0x202c326472250920\n"
".quad 0x0a3b34202c317225,0x3436752e766f6d09,0x202c336472250920,0x090a3b6174616473\n"
".quad 0x203436752e646461,0x25202c3464722509,0x647225202c326472,0x2e766f6d090a3b33\n"
".quad 0x3166250920323366,0x303030306630202c,0x2020203b30303030,0x0a30202f2f092020\n"
".quad 0x3233662e766f6d09,0x30202c3266250920,0x3030303030303066,0x0920202020203b30\n"
".quad 0x7473090a30202f2f,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x747663090a3b3266,0x3631752e3233752e,0x25202c3272250920,0x3b782e6469617463\n"
".quad 0x6f6c2e6c756d090a,0x722509203233752e,0x202c327225202c33,0x6461090a3b363532\n"
".quad 0x2509203233752e64,0x2c337225202c3472,0x63090a3b31722520,0x752e3233752e7476\n"
".quad 0x2c35722509203631,0x64696174636e2520,0x2e646c090a3b782e,0x33752e6d61726170\n"
".quad 0x202c367225092032,0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572\n"
".quad 0x73736150656c676e,0x4c453832316a4c49,0x664b507645453062,0x0a3b5d6e5f6a6650\n"
".quad 0x65672e7074657309,0x702509203233752e,0x202c347225202c31,0x2540090a3b367225\n"
".quad 0x0920617262203170,0x325f32335f744c24,0x61090a3b34313136,0x09203233752e6464\n"
".quad 0x347225202c377225,0x090a3b383231202c,0x6d617261702e646c,0x722509203233752e\n"
".quad 0x75635f5f5b202c36,0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365\n"
".quad 0x32316a4c49737361,0x76454530624c4538,0x6e5f6a6650664b50,0x2e646461090a3b5d\n"
".quad 0x3872250920323375,0x31202c367225202c,0x6c756d090a3b3832,0x203233752e6f6c2e\n"
".quad 0x7225202c39722509,0x0a3b363532202c35,0x3436732e74766309,0x722509203233752e\n"
".quad 0x3b397225202c3564,0x7261702e646c090a,0x09203436752e6d61,0x5f5b202c36647225\n"
".quad 0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x30624c453832316a,0x6650664b50764545,0x746164695f675f6a,0x747663090a3b5d61\n"
".quad 0x3233752e3436752e,0x202c376472250920,0x756d090a3b347225,0x752e656469772e6c\n"
".quad 0x3864722509203233,0x34202c347225202c,0x752e646461090a3b,0x3964722509203436\n"
".quad 0x202c36647225202c,0x6d090a3b38647225,0x2e656469772e6c75,0x6472250920323375\n"
".quad 0x2c397225202c3031,0x5f744c240a3b3420,0x36323636325f3233,0x6f6c3c2f2f200a3a\n"
".quad 0x706f6f4c203e706f,0x696c2079646f6220,0x6e202c363820656e,0x6420676e69747365\n"
".quad 0x2c31203a68747065,0x74616d6974736520,0x6172657469206465,0x75203a736e6f6974\n"
".quad 0x090a6e776f6e6b6e,0x09363109636f6c2e,0x646c090a30093339,0x2e6c61626f6c672e\n"
".quad 0x3366250920323366,0x2b396472255b202c,0x646461090a3b5d30,0x662509203233662e\n"
".quad 0x202c336625202c31,0x7473090a3b316625,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x6f6c2e090a3b3166,0x0936380936310963,0x61702e646c090a30\n"
".quad 0x203233752e6d6172,0x5f5b202c36722509,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x30624c453832316a,0x6650664b50764545\n"
".quad 0x2e090a3b5d6e5f6a,0x3909363109636f6c,0x746573090a300933,0x3233752e65672e70\n"
".quad 0x25202c3270250920,0x3b367225202c3772,0x622032702540090a,0x5f744c2409206172\n"
".quad 0x32383836325f3233,0x6f6c3c2f2f200a3b,0x74726150203e706f,0x706f6f6c20666f20\n"
".quad 0x696c2079646f6220,0x68202c363820656e,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x36323636325f3233,0x3109636f6c2e090a,0x090a300936390936,0x61626f6c672e646c\n"
".quad 0x2509203233662e6c,0x6472255b202c3466,0x0a3b5d3231352b39,0x3233662e64646109\n"
".quad 0x25202c3166250920,0x3b316625202c3466,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x302b346472255b09,0x0a3b316625202c5d,0x325f32335f744c24,0x2f200a3a32383836\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3820656e696c2079\n"
".quad 0x2064616568202c36,0x2064656c6562616c,0x325f32335f744c24,0x6461090a36323636\n"
".quad 0x2509203233752e64,0x2c377225202c3772,0x61090a3b39722520,0x09203436752e6464\n"
".quad 0x7225202c39647225,0x31647225202c3964,0x70746573090a3b30,0x203233752e746c2e\n"
".quad 0x7225202c33702509,0x0a3b387225202c37,0x7262203370254009,0x335f744c24092061\n"
".quad 0x3b36323636325f32,0x5f32335f744c240a,0x090a3a3431313632,0x09363109636f6c2e\n"
".quad 0x62090a3009303031,0x20636e79732e7261,0x6f6c2e090a3b3009,0x3330310936310963\n"
".quad 0x2e766f6d090a3009,0x3172250920323375,0x090a3b3336202c30,0x2e656c2e70746573\n"
".quad 0x3470250920323375,0x25202c317225202c,0x2140090a3b303172,0x2061726220347025\n"
".quad 0x5f32335f744c2409,0x090a3b3035363732,0x09363109636f6c2e,0x646c090a30093536\n"
".quad 0x2e6465726168732e,0x3566250920323366,0x2b346472255b202c,0x2e646c090a3b5d30\n"
".quad 0x662e646572616873,0x2c36662509203233,0x322b346472255b20,0x6461090a3b5d3635\n"
".quad 0x2509203233662e64,0x2c356625202c3766,0x73090a3b36662520,0x6465726168732e74\n"
".quad 0x255b09203233662e,0x202c5d302b346472,0x744c240a3b376625,0x353637325f32335f\n"
".quad 0x2e726162090a3a30,0x3b300920636e7973,0x33752e766f6d090a,0x2c31317225092032\n"
".quad 0x6573090a3b313320,0x33752e656c2e7074,0x202c357025092032,0x317225202c317225\n"
".quad 0x70252140090a3b31,0x2409206172622035,0x38325f32335f744c,0x6c2e090a3b323631\n"
".quad 0x373609363109636f,0x732e646c090a3009,0x33662e6465726168,0x202c386625092032\n"
".quad 0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261,0x5b202c3966250920\n"
".quad 0x3832312b34647225,0x2e646461090a3b5d,0x3166250920323366,0x202c386625202c30\n"
".quad 0x7473090a3b396625,0x2e6465726168732e,0x72255b0920323366,0x25202c5d302b3464\n"
".quad 0x744c240a3b303166,0x363138325f32335f,0x2e726162090a3a32,0x3b300920636e7973\n"
".quad 0x33752e766f6d090a,0x2c32317225092032,0x6573090a3b353120,0x33752e656c2e7074\n"
".quad 0x202c367025092032,0x317225202c317225,0x70252140090a3b32,0x2409206172622036\n"
".quad 0x38325f32335f744c,0x6c2e090a3b343736,0x383609363109636f,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x2c31316625092032,0x302b346472255b20,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x2c32316625092032,0x362b346472255b20,0x646461090a3b5d34\n"
".quad 0x662509203233662e,0x31316625202c3331,0x0a3b32316625202c,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x0a3b33316625202c,0x325f32335f744c24\n"
".quad 0x62090a3a34373638,0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e\n"
".quad 0x090a3b37202c3331,0x2e656c2e70746573,0x3770250920323375,0x25202c317225202c\n"
".quad 0x2140090a3b333172,0x2061726220377025,0x5f32335f744c2409,0x090a3b3638313932\n"
".quad 0x09363109636f6c2e,0x646c090a30093936,0x2e6465726168732e,0x3166250920323366\n"
".quad 0x346472255b202c34,0x646c090a3b5d302b,0x2e6465726168732e,0x3166250920323366\n"
".quad 0x346472255b202c35,0x61090a3b5d32332b,0x09203233662e6464,0x6625202c36316625\n"
".quad 0x35316625202c3431,0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920\n"
".quad 0x36316625202c5d30,0x32335f744c240a3b,0x0a3a36383139325f,0x6e79732e72616209\n"
".quad 0x6d090a3b30092063,0x09203233752e766f,0x3b33202c34317225,0x6c2e70746573090a\n"
".quad 0x2509203233752e65,0x2c317225202c3870,0x090a3b3431722520,0x7262203870252140\n"
".quad 0x335f744c24092061,0x3b38393639325f32,0x3109636f6c2e090a,0x090a300930370936\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c373166,0x090a3b5d302b3464\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c383166,0x0a3b5d36312b3464\n"
".quad 0x3233662e64646109,0x202c393166250920,0x6625202c37316625,0x2e7473090a3b3831\n"
".quad 0x662e646572616873,0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3931\n"
".quad 0x38393639325f3233,0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09\n"
".quad 0x202c353172250920,0x70746573090a3b31,0x203233752e656c2e,0x7225202c39702509\n"
".quad 0x3b35317225202c31,0x203970252140090a,0x744c240920617262,0x313230335f32335f\n"
".quad 0x636f6c2e090a3b30,0x3009313709363109,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3032662509,0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3132662509,0x3b5d382b34647225,0x33662e646461090a,0x2c32326625092032\n"
".quad 0x25202c3032662520,0x7473090a3b313266,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x744c240a3b323266,0x313230335f32335f,0x2e726162090a3a30\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c36317225092032,0x746573090a3b3020\n"
".quad 0x3233752e71652e70,0x202c303170250920,0x317225202c317225,0x70252140090a3b36\n"
".quad 0x0920617262203031,0x335f32335f744c24,0x2e090a3b32323730,0x3709363109636f6c\n"
".quad 0x2e646c090a300932,0x662e646572616873,0x3332662509203233,0x2b346472255b202c\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3432662509203233,0x2b346472255b202c\n"
".quad 0x646461090a3b5d34,0x662509203233662e,0x33326625202c3532,0x0a3b34326625202c\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x0a3b35326625202c\n"
".quad 0x335f32335f744c24,0x62090a3a32323730,0x20636e79732e7261,0x6f6c2e090a3b3009\n"
".quad 0x3330310936310963,0x70252140090a3009,0x0920617262203031,0x335f32335f744c24\n"
".quad 0x2e090a3b34333231,0x3109363109636f6c,0x646c090a30093630,0x2e6465726168732e\n"
".quad 0x3266250920323366,0x746164735b202c36,0x6c090a3b5d302b61,0x2e6d617261702e64\n"
".quad 0x6472250920343675,0x635f5f5b202c3131,0x5f6d726170616475,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x316a4c4973736150,0x454530624c453832,0x5f6a6650664b5076\n"
".quad 0x5d617461646f5f67,0x752e747663090a3b,0x09203233752e3436,0x25202c3231647225\n"
".quad 0x6c756d090a3b3272,0x33752e656469772e,0x3331647225092032,0x34202c327225202c\n"
".quad 0x752e646461090a3b,0x3164722509203436,0x3131647225202c34,0x3b3331647225202c\n"
".quad 0x6f6c672e7473090a,0x203233662e6c6162,0x2b34316472255b09,0x36326625202c5d30\n"
".quad 0x32335f744c240a3b,0x0a3a34333231335f,0x363109636f6c2e09,0x090a300934343109\n"
".quad 0x203233752e766f6d,0x31202c3731722509,0x2e70746573090a3b,0x09203233752e656c\n"
".quad 0x7225202c31317025,0x3b37317225202c35,0x203131702540090a,0x744c240920617262\n"
".quad 0x343731335f32335f,0x636f6c2e090a3b36,0x0937353109363109,0x61626d656d090a30\n"
".quad 0x40090a3b6c672e72,0x7262203031702521,0x335f744c24092061,0x3b38353232335f32\n"
".quad 0x3109636f6c2e090a,0x0a30093236310936,0x3436752e766f6d09,0x2c35316472250920\n"
".quad 0x6d65726974657220,0x746e756f43746e65,0x2e6d6f7461090a3b,0x692e6c61626f6c67\n"
".quad 0x09203233752e636e,0x255b202c38317225,0x25202c5d35316472,0x766f6d090a3b3572\n"
".quad 0x722509203233732e,0x38317225202c3931,0x09636f6c2e090a3b,0x3009343631093631\n"
".quad 0x33752e627573090a,0x2c30327225092032,0x3b31202c35722520,0x71652e746573090a\n"
".quad 0x3233752e3233752e,0x202c313272250920,0x7225202c39317225,0x67656e090a3b3032\n"
".quad 0x722509203233732e,0x31327225202c3232,0x68732e7473090a3b,0x2038732e64657261\n"
".quad 0x616475635f5f5b09,0x765f6c61636f6c5f,0x39323336325f7261,0x614c6d615f38335f\n"
".quad 0x327225202c5d7473,0x335f744c240a3b32,0x3a38353232335f32,0x3109636f6c2e090a\n"
".quad 0x0a30093636310936,0x6e79732e72616209,0x6c090a3b30092063,0x6465726168732e64\n"
".quad 0x327225092038732e,0x75635f5f5b202c33,0x6c61636f6c5f6164,0x3336325f7261765f\n"
".quad 0x6d615f38335f3932,0x090a3b5d7473614c,0x203233752e766f6d,0x30202c3432722509\n"
".quad 0x2e70746573090a3b,0x09203233732e7165,0x7225202c32317025,0x34327225202c3332\n"
".quad 0x3231702540090a3b,0x4c24092061726220,0x3732335f32335f74,0x746573090a3b3037\n"
".quad 0x3233752e656c2e70,0x202c333170250920,0x317225202c357225,0x3331702540090a3b\n"
".quad 0x4c24092061726220,0x3533335f32335f74,0x6f6c2e090a3b3833,0x3237310936310963\n"
".quad 0x702e646c090a3009,0x3436752e6d617261,0x2c36316472250920,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69,0x453832316a4c4973\n"
".quad 0x4b5076454530624c,0x6f5f675f6a665066,0x090a3b5d61746164,0x203436752e646461\n"
".quad 0x202c373164722509,0x25202c3631647225,0x646c090a3b326472,0x2e6c61626f6c672e\n"
".quad 0x3266250920323366,0x316472255b202c37,0x62090a3b5d302b37,0x0920696e752e6172\n"
".quad 0x335f32335f744c24,0x4c240a3b32383233,0x3533335f32335f74,0x766f6d090a3a3833\n"
".quad 0x662509203233662e,0x30306630202c3732,0x203b303030303030,0x30202f2f09202020\n"
".quad 0x5f32335f744c240a,0x090a3a3238323333,0x203436752e766f6d,0x202c383164722509\n"
".quad 0x61090a3b6d656d73,0x09203436752e6464,0x25202c3931647225,0x647225202c326472\n"
".quad 0x2e7473090a3b3831,0x662e646572616873,0x6472255b09203233,0x25202c5d302b3931\n"
".quad 0x6c2e090a3b373266,0x373109363109636f,0x726162090a300934,0x300920636e79732e\n"
".quad 0x09636f6c2e090a3b,0x3009363731093631,0x203470252140090a,0x744c240920617262\n"
".quad 0x393733335f32335f,0x636f6c2e090a3b34,0x3009353609363109,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3832662509,0x5d302b3931647225,0x68732e646c090a3b\n"
".quad 0x3233662e64657261,0x202c393266250920,0x322b39316472255b,0x6461090a3b5d3635\n"
".quad 0x2509203233662e64,0x326625202c303366,0x3b39326625202c38,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x2b39316472255b09,0x30336625202c5d30,0x32335f744c240a3b\n"
".quad 0x0a3a34393733335f,0x6e79732e72616209,0x40090a3b30092063,0x6172622035702521\n"
".quad 0x32335f744c240920,0x0a3b36303334335f,0x363109636f6c2e09,0x6c090a3009373609\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3133,0x090a3b5d302b3931\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c323366,0x5d3832312b393164\n"
".quad 0x662e646461090a3b,0x3333662509203233,0x202c31336625202c,0x73090a3b32336625\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x2c5d302b39316472,0x240a3b3333662520\n"
".quad 0x34335f32335f744c,0x6162090a3a363033,0x0920636e79732e72,0x70252140090a3b30\n"
".quad 0x2409206172622036,0x34335f32335f744c,0x6c2e090a3b383138,0x383609363109636f\n"
".quad 0x732e646c090a3009,0x33662e6465726168,0x2c34336625092032,0x2b39316472255b20\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3533662509203233,0x39316472255b202c\n"
".quad 0x61090a3b5d34362b,0x09203233662e6464,0x6625202c36336625,0x35336625202c3433\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920,0x336625202c5d302b\n"
".quad 0x335f744c240a3b36,0x3a38313834335f32,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x7262203770252140,0x335f744c24092061,0x3b30333335335f32,0x3109636f6c2e090a\n"
".quad 0x090a300939360936,0x65726168732e646c,0x2509203233662e64,0x72255b202c373366\n"
".quad 0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465,0x255b202c38336625\n"
".quad 0x5d32332b39316472,0x662e646461090a3b,0x3933662509203233,0x202c37336625202c\n"
".quad 0x73090a3b38336625,0x6465726168732e74,0x255b09203233662e,0x2c5d302b39316472\n"
".quad 0x240a3b3933662520,0x35335f32335f744c,0x6162090a3a303333,0x0920636e79732e72\n"
".quad 0x70252140090a3b30,0x2409206172622038,0x35335f32335f744c,0x6c2e090a3b323438\n"
".quad 0x303709363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c30346625092032\n"
".quad 0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873,0x3134662509203233\n"
".quad 0x39316472255b202c,0x61090a3b5d36312b,0x09203233662e6464,0x6625202c32346625\n"
".quad 0x31346625202c3034,0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920\n"
".quad 0x346625202c5d302b,0x335f744c240a3b32,0x3a32343835335f32,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x7262203970252140,0x335f744c24092061,0x3b34353336335f32\n"
".quad 0x3109636f6c2e090a,0x090a300931370936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c333466,0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c34346625,0x3b5d382b39316472,0x33662e646461090a,0x2c35346625092032\n"
".quad 0x25202c3334662520,0x7473090a3b343466,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x202c5d302b393164,0x4c240a3b35346625,0x3336335f32335f74,0x726162090a3a3435\n"
".quad 0x300920636e79732e,0x3170252140090a3b,0x2409206172622030,0x36335f32335f744c\n"
".quad 0x6c2e090a3b363638,0x323709363109636f,0x732e646c090a3009,0x33662e6465726168\n"
".quad 0x2c36346625092032,0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873\n"
".quad 0x3734662509203233,0x39316472255b202c,0x6461090a3b5d342b,0x2509203233662e64\n"
".quad 0x346625202c383466,0x3b37346625202c36,0x6168732e7473090a,0x203233662e646572\n"
".quad 0x2b39316472255b09,0x38346625202c5d30,0x32335f744c240a3b,0x0a3a36363836335f\n"
".quad 0x6e79732e72616209,0x2e090a3b30092063,0x3109363109636f6c,0x2140090a30093637\n"
".quad 0x6172622030317025,0x32335f744c240920,0x0a3b38373337335f,0x363109636f6c2e09\n"
".quad 0x090a300930383109,0x65726168732e646c,0x2509203233662e64,0x6d735b202c393466\n"
".quad 0x090a3b5d302b6d65,0x6d617261702e646c,0x722509203436752e,0x5f5f5b202c303264\n"
".quad 0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x4530624c45383231,0x6a6650664b507645,0x617461646f5f675f,0x672e7473090a3b5d\n"
".quad 0x33662e6c61626f6c,0x326472255b092032,0x6625202c5d302b30,0x6f6c2e090a3b3934\n"
".quad 0x3338310936310963,0x2e766f6d090a3009,0x3272250920323375,0x73090a3b30202c35\n"
".quad 0x6c61626f6c672e74,0x725b09203233752e,0x6e656d6572697465,0x2c5d746e756f4374\n"
".quad 0x240a3b3532722520,0x37335f32335f744c,0x744c240a3a383733,0x373732335f32335f\n"
".quad 0x335f744c240a3a30,0x3a36343731335f32,0x3109636f6c2e090a,0x0a30093738310936\n"
".quad 0x240a3b7469786509,0x5f5f646e6557444c,0x637564657236315a,0x50656c676e695365\n"
".quad 0x32316a4c49737361,0x76454530624c4538,0x0a3a6a6650664b50,0x5a5f202f2f207d09\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x3832316a4c497373,0x5076454530624c45\n"
".quad 0x090a0a6a6650664b,0x5f207972746e652e,0x637564657236315a,0x50656c676e695365\n"
".quad 0x34366a4c49737361,0x5076454530624c45,0x0a28206a6650664b,0x6d617261702e0909\n"
".quad 0x5f5f203436752e20,0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x454530624c453436,0x5f6a6650664b5076,0x2c61746164695f67\n"
".quad 0x617261702e09090a,0x5f203436752e206d,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x4530624c4534366a,0x6a6650664b507645\n"
".quad 0x617461646f5f675f,0x7261702e09090a2c,0x203233752e206d61,0x6170616475635f5f\n"
".quad 0x7236315a5f5f6d72,0x6e69536563756465,0x4973736150656c67,0x30624c4534366a4c\n"
".quad 0x6650664b50764545,0x0a7b090a296e5f6a,0x752e206765722e09,0x3b31767225203233\n"
".quad 0x2e206765722e090a,0x323c722520323375,0x65722e090a3b3e36,0x25203436752e2067\n"
".quad 0x0a3b3e32323c6472,0x662e206765722e09,0x35343c6625203233,0x6765722e090a3b3e\n"
".quad 0x2520646572702e20,0x090a3b3e34313c70,0x206465726168732e,0x75635f5f2038732e\n"
".quad 0x6c61636f6c5f6164,0x3336325f7261765f,0x6d615f38335f3932,0x2e090a3b7473614c\n"
".quad 0x3109363109636f6c,0x424c240a30093733,0x7236315a5f5f3142,0x6e69536563756465\n"
".quad 0x4973736150656c67,0x30624c4534366a4c,0x6650664b50764545,0x636f6c2e090a3a6a\n"
".quad 0x3009363809363109,0x33752e747663090a,0x2509203631752e32,0x64697425202c3172\n"
".quad 0x747663090a3b782e,0x3233752e3436752e,0x202c316472250920,0x756d090a3b317225\n"
".quad 0x752e656469772e6c,0x3264722509203233,0x34202c317225202c,0x752e766f6d090a3b\n"
".quad 0x3364722509203436,0x3b6174616473202c,0x36752e646461090a,0x2c34647225092034\n"
".quad 0x25202c3264722520,0x6f6d090a3b336472,0x2509203233662e76,0x30306630202c3166\n"
".quad 0x203b303030303030,0x202f2f0920202020,0x662e766f6d090a30,0x2c32662509203233\n"
".quad 0x3030303030663020,0x202020203b303030,0x090a30202f2f0920,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x2c5d302b34647225,0x63090a3b32662520,0x752e3233752e7476\n"
".quad 0x2c32722509203631,0x2e64696174632520,0x326c756d090a3b78,0x3233752e6f6c2e34\n"
".quad 0x25202c3372250920,0x3b383231202c3272,0x33752e646461090a,0x202c347225092032\n"
".quad 0x317225202c337225,0x752e747663090a3b,0x09203631752e3233,0x636e25202c357225\n"
".quad 0x0a3b782e64696174,0x617261702e646c09,0x2509203233752e6d,0x635f5f5b202c3672\n"
".quad 0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563,0x366a4c4973736150\n"
".quad 0x76454530624c4534,0x6e5f6a6650664b50,0x70746573090a3b5d,0x203233752e65672e\n"
".quad 0x7225202c31702509,0x0a3b367225202c34,0x7262203170254009,0x335f744c24092061\n"
".quad 0x3b36323636325f33,0x33752e646461090a,0x202c377225092032,0x3b3436202c347225\n"
".quad 0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c367225,0x6d72617061647563\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x454530624c453436\n"
".quad 0x5f6a6650664b5076,0x646461090a3b5d6e,0x722509203233752e,0x202c367225202c38\n"
".quad 0x6c756d090a3b3436,0x33752e6f6c2e3432,0x202c397225092032,0x383231202c357225\n"
".quad 0x732e747663090a3b,0x09203233752e3436,0x7225202c35647225,0x702e646c090a3b39\n"
".quad 0x3436752e6d617261,0x202c366472250920,0x70616475635f5f5b,0x36315a5f5f6d7261\n"
".quad 0x6953656375646572,0x73736150656c676e,0x624c4534366a4c49,0x50664b5076454530\n"
".quad 0x6164695f675f6a66,0x7663090a3b5d6174,0x33752e3436752e74,0x2c37647225092032\n"
".quad 0x6d090a3b34722520,0x2e656469772e6c75,0x6472250920323375,0x202c347225202c38\n"
".quad 0x2e646461090a3b34,0x6472250920343675,0x2c36647225202c39,0x090a3b3864722520\n"
".quad 0x656469772e6c756d,0x722509203233752e,0x397225202c303164,0x744c240a3b34202c\n"
".quad 0x333137325f33335f,0x6c3c2f2f200a3a38,0x6f6f4c203e706f6f,0x6c2079646f622070\n"
".quad 0x202c363820656e69,0x20676e697473656e,0x31203a6874706564,0x616d69747365202c\n"
".quad 0x7265746920646574,0x203a736e6f697461,0x0a6e776f6e6b6e75,0x363109636f6c2e09\n"
".quad 0x6c090a3009333909,0x6c61626f6c672e64,0x662509203233662e,0x396472255b202c33\n"
".quad 0x6461090a3b5d302b,0x2509203233662e64,0x2c336625202c3166,0x73090a3b31662520\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472,0x6c2e090a3b316625\n"
".quad 0x363809363109636f,0x702e646c090a3009,0x3233752e6d617261,0x5b202c3672250920\n"
".quad 0x6170616475635f5f,0x7236315a5f5f6d72,0x6e69536563756465,0x4973736150656c67\n"
".quad 0x30624c4534366a4c,0x6650664b50764545,0x2e090a3b5d6e5f6a,0x3909363109636f6c\n"
".quad 0x746573090a300933,0x3233752e65672e70,0x25202c3270250920,0x3b367225202c3772\n"
".quad 0x622032702540090a,0x5f744c2409206172,0x34393337325f3333,0x6f6c3c2f2f200a3b\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x68202c363820656e\n"
".quad 0x6562616c20646165,0x5f744c242064656c,0x38333137325f3333,0x3109636f6c2e090a\n"
".quad 0x090a300936390936,0x61626f6c672e646c,0x2509203233662e6c,0x6472255b202c3466\n"
".quad 0x0a3b5d3635322b39,0x3233662e64646109,0x25202c3166250920,0x3b316625202c3466\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x0a3b316625202c5d\n"
".quad 0x325f33335f744c24,0x2f200a3a34393337,0x203e706f6f6c3c2f,0x20666f2074726150\n"
".quad 0x646f6220706f6f6c,0x3820656e696c2079,0x2064616568202c36,0x2064656c6562616c\n"
".quad 0x325f33335f744c24,0x6461090a38333137,0x2509203233752e64,0x2c377225202c3772\n"
".quad 0x61090a3b39722520,0x09203436752e6464,0x7225202c39647225,0x31647225202c3964\n"
".quad 0x70746573090a3b30,0x203233752e746c2e,0x7225202c33702509,0x0a3b387225202c37\n"
".quad 0x7262203370254009,0x335f744c24092061,0x3b38333137325f33,0x5f33335f744c240a\n"
".quad 0x090a3a3632363632,0x09363109636f6c2e,0x62090a3009303031,0x20636e79732e7261\n"
".quad 0x6f6c2e090a3b3009,0x3330310936310963,0x2e766f6d090a3009,0x3172250920323375\n"
".quad 0x090a3b3133202c30,0x2e656c2e70746573,0x3470250920323375,0x25202c317225202c\n"
".quad 0x2140090a3b303172,0x2061726220347025,0x5f33335f744c2409,0x090a3b3236313832\n"
".quad 0x09363109636f6c2e,0x646c090a30093736,0x2e6465726168732e,0x3566250920323366\n"
".quad 0x2b346472255b202c,0x2e646c090a3b5d30,0x662e646572616873,0x2c36662509203233\n"
".quad 0x312b346472255b20,0x6461090a3b5d3832,0x2509203233662e64,0x2c356625202c3766\n"
".quad 0x73090a3b36662520,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x744c240a3b376625,0x363138325f33335f,0x2e726162090a3a32,0x3b300920636e7973\n"
".quad 0x33752e766f6d090a,0x2c31317225092032,0x6573090a3b353120,0x33752e656c2e7074\n"
".quad 0x202c357025092032,0x317225202c317225,0x70252140090a3b31,0x2409206172622035\n"
".quad 0x38325f33335f744c,0x6c2e090a3b343736,0x383609363109636f,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x202c386625092032,0x5d302b346472255b,0x68732e646c090a3b\n"
".quad 0x3233662e64657261,0x5b202c3966250920,0x5d34362b34647225,0x662e646461090a3b\n"
".quad 0x3031662509203233,0x25202c386625202c,0x2e7473090a3b3966,0x662e646572616873\n"
".quad 0x6472255b09203233,0x6625202c5d302b34,0x5f744c240a3b3031,0x34373638325f3333\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x3233752e766f6d09,0x202c323172250920\n"
".quad 0x70746573090a3b37,0x203233752e656c2e,0x7225202c36702509,0x3b32317225202c31\n"
".quad 0x203670252140090a,0x744c240920617262,0x383139325f33335f,0x636f6c2e090a3b36\n"
".quad 0x3009393609363109,0x6168732e646c090a,0x203233662e646572,0x5b202c3131662509\n"
".quad 0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572,0x5b202c3231662509\n"
".quad 0x5d32332b34647225,0x662e646461090a3b,0x3331662509203233,0x202c31316625202c\n"
".quad 0x73090a3b32316625,0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472\n"
".quad 0x4c240a3b33316625,0x3139325f33335f74,0x726162090a3a3638,0x300920636e79732e\n"
".quad 0x752e766f6d090a3b,0x3331722509203233,0x6573090a3b33202c,0x33752e656c2e7074\n"
".quad 0x202c377025092032,0x317225202c317225,0x70252140090a3b33,0x2409206172622037\n"
".quad 0x39325f33335f744c,0x6c2e090a3b383936,0x303709363109636f,0x732e646c090a3009\n"
".quad 0x33662e6465726168,0x2c34316625092032,0x302b346472255b20,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x2c35316625092032,0x312b346472255b20,0x646461090a3b5d36\n"
".quad 0x662509203233662e,0x34316625202c3631,0x0a3b35316625202c,0x726168732e747309\n"
".quad 0x09203233662e6465,0x5d302b346472255b,0x0a3b36316625202c,0x325f33335f744c24\n"
".quad 0x62090a3a38393639,0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e\n"
".quad 0x090a3b31202c3431,0x2e656c2e70746573,0x3870250920323375,0x25202c317225202c\n"
".quad 0x2140090a3b343172,0x2061726220387025,0x5f33335f744c2409,0x090a3b3031323033\n"
".quad 0x09363109636f6c2e,0x646c090a30093137,0x2e6465726168732e,0x3166250920323366\n"
".quad 0x346472255b202c37,0x646c090a3b5d302b,0x2e6465726168732e,0x3166250920323366\n"
".quad 0x346472255b202c38,0x6461090a3b5d382b,0x2509203233662e64,0x316625202c393166\n"
".quad 0x3b38316625202c37,0x6168732e7473090a,0x203233662e646572,0x302b346472255b09\n"
".quad 0x3b39316625202c5d,0x5f33335f744c240a,0x090a3a3031323033,0x636e79732e726162\n"
".quad 0x6f6d090a3b300920,0x2509203233752e76,0x0a3b30202c353172,0x71652e7074657309\n"
".quad 0x702509203233752e,0x202c317225202c39,0x40090a3b35317225,0x6172622039702521\n"
".quad 0x33335f744c240920,0x0a3b32323730335f,0x363109636f6c2e09,0x6c090a3009323709\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3032,0x6c090a3b5d302b34\n"
".quad 0x6465726168732e64,0x662509203233662e,0x6472255b202c3132,0x61090a3b5d342b34\n"
".quad 0x09203233662e6464,0x6625202c32326625,0x31326625202c3032,0x68732e7473090a3b\n"
".quad 0x3233662e64657261,0x2b346472255b0920,0x32326625202c5d30,0x33335f744c240a3b\n"
".quad 0x0a3a32323730335f,0x6e79732e72616209,0x2e090a3b30092063,0x3109363109636f6c\n"
".quad 0x2140090a30093330,0x2061726220397025,0x5f33335f744c2409,0x090a3b3433323133\n"
".quad 0x09363109636f6c2e,0x6c090a3009363031,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6164735b202c3332,0x090a3b5d302b6174,0x6d617261702e646c,0x722509203436752e\n"
".quad 0x5f5f5b202c313164,0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x454530624c453436,0x5f6a6650664b5076,0x5d617461646f5f67\n"
".quad 0x752e747663090a3b,0x09203233752e3436,0x25202c3231647225,0x6c756d090a3b3272\n"
".quad 0x33752e656469772e,0x3331647225092032,0x34202c327225202c,0x752e646461090a3b\n"
".quad 0x3164722509203436,0x3131647225202c34,0x3b3331647225202c,0x6f6c672e7473090a\n"
".quad 0x203233662e6c6162,0x2b34316472255b09,0x33326625202c5d30,0x33335f744c240a3b\n"
".quad 0x0a3a34333231335f,0x363109636f6c2e09,0x090a300934343109,0x203233752e766f6d\n"
".quad 0x31202c3631722509,0x2e70746573090a3b,0x09203233752e656c,0x7225202c30317025\n"
".quad 0x3b36317225202c35,0x203031702540090a,0x744c240920617262,0x343731335f33335f\n"
".quad 0x636f6c2e090a3b36,0x0937353109363109,0x61626d656d090a30,0x40090a3b6c672e72\n"
".quad 0x6172622039702521,0x33335f744c240920,0x0a3b38353232335f,0x363109636f6c2e09\n"
".quad 0x090a300932363109,0x203436752e766f6d,0x202c353164722509,0x656d657269746572\n"
".quad 0x3b746e756f43746e,0x672e6d6f7461090a,0x6e692e6c61626f6c,0x2509203233752e63\n"
".quad 0x72255b202c373172,0x7225202c5d353164,0x2e766f6d090a3b35,0x3172250920323373\n"
".quad 0x3b37317225202c38,0x3109636f6c2e090a,0x0a30093436310936,0x3233752e62757309\n"
".quad 0x202c393172250920,0x0a3b31202c357225,0x2e71652e74657309,0x203233752e323375\n"
".quad 0x25202c3032722509,0x317225202c383172,0x2e67656e090a3b39,0x3272250920323373\n"
".quad 0x3b30327225202c31,0x6168732e7473090a,0x092038732e646572,0x5f616475635f5f5b\n"
".quad 0x61765f6c61636f6c,0x5f39323336325f72,0x73614c6d615f3833,0x31327225202c5d74\n"
".quad 0x33335f744c240a3b,0x0a3a38353232335f,0x363109636f6c2e09,0x090a300936363109\n"
".quad 0x636e79732e726162,0x646c090a3b300920,0x2e6465726168732e,0x3232722509203873\n"
".quad 0x6475635f5f5b202c,0x5f6c61636f6c5f61,0x323336325f726176,0x4c6d615f38335f39\n"
".quad 0x6d090a3b5d747361,0x09203233752e766f,0x3b30202c33327225,0x652e70746573090a\n"
".quad 0x2509203233732e71,0x327225202c313170,0x3b33327225202c32,0x203131702540090a\n"
".quad 0x744c240920617262,0x373732335f33335f,0x70746573090a3b30,0x203233752e656c2e\n"
".quad 0x25202c3231702509,0x3b317225202c3572,0x203231702540090a,0x744c240920617262\n"
".quad 0x333533335f33335f,0x636f6c2e090a3b38,0x0932373109363109,0x61702e646c090a30\n"
".quad 0x203436752e6d6172,0x202c363164722509,0x70616475635f5f5b,0x36315a5f5f6d7261\n"
".quad 0x6953656375646572,0x73736150656c676e,0x624c4534366a4c49,0x50664b5076454530\n"
".quad 0x61646f5f675f6a66,0x6461090a3b5d6174,0x2509203436752e64,0x7225202c37316472\n"
".quad 0x647225202c363164,0x672e646c090a3b32,0x33662e6c61626f6c,0x2c34326625092032\n"
".quad 0x2b37316472255b20,0x617262090a3b5d30,0x4c240920696e752e,0x3233335f33335f74\n"
".quad 0x5f744c240a3b3238,0x38333533335f3333,0x662e766f6d090a3a,0x3432662509203233\n"
".quad 0x303030306630202c,0x2020203b30303030,0x240a30202f2f0920,0x33335f33335f744c\n"
".quad 0x6f6d090a3a323832,0x2509203436752e76,0x6d73202c38316472,0x646461090a3b6d65\n"
".quad 0x722509203436752e,0x647225202c393164,0x3831647225202c32,0x68732e7473090a3b\n"
".quad 0x3233662e64657261,0x39316472255b0920,0x326625202c5d302b,0x636f6c2e090a3b34\n"
".quad 0x0934373109363109,0x732e726162090a30,0x0a3b300920636e79,0x363109636f6c2e09\n"
".quad 0x090a300936373109,0x7262203470252140,0x335f744c24092061,0x3b34393733335f33\n"
".quad 0x3109636f6c2e090a,0x090a300937360936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c353266,0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c36326625,0x3832312b39316472,0x2e646461090a3b5d,0x3266250920323366\n"
".quad 0x2c35326625202c37,0x090a3b3632662520,0x65726168732e7473,0x5b09203233662e64\n"
".quad 0x5d302b3931647225,0x0a3b37326625202c,0x335f33335f744c24,0x62090a3a34393733\n"
".quad 0x20636e79732e7261,0x252140090a3b3009,0x0920617262203570,0x335f33335f744c24\n"
".quad 0x2e090a3b36303334,0x3609363109636f6c,0x2e646c090a300938,0x662e646572616873\n"
".quad 0x3832662509203233,0x39316472255b202c,0x646c090a3b5d302b,0x2e6465726168732e\n"
".quad 0x3266250920323366,0x316472255b202c39,0x090a3b5d34362b39,0x203233662e646461\n"
".quad 0x25202c3033662509,0x326625202c383266,0x732e7473090a3b39,0x33662e6465726168\n"
".quad 0x316472255b092032,0x6625202c5d302b39,0x5f744c240a3b3033,0x36303334335f3333\n"
".quad 0x732e726162090a3a,0x0a3b300920636e79,0x6220367025214009,0x5f744c2409206172\n"
".quad 0x38313834335f3333,0x09636f6c2e090a3b,0x0a30093936093631,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c31336625,0x3b5d302b39316472,0x6168732e646c090a\n"
".quad 0x203233662e646572,0x5b202c3233662509,0x32332b3931647225,0x2e646461090a3b5d\n"
".quad 0x3366250920323366,0x2c31336625202c33,0x090a3b3233662520,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x5d302b3931647225,0x0a3b33336625202c,0x335f33335f744c24\n"
".quad 0x62090a3a38313834,0x20636e79732e7261,0x252140090a3b3009,0x0920617262203770\n"
".quad 0x335f33335f744c24,0x2e090a3b30333335,0x3709363109636f6c,0x2e646c090a300930\n"
".quad 0x662e646572616873,0x3433662509203233,0x39316472255b202c,0x646c090a3b5d302b\n"
".quad 0x2e6465726168732e,0x3366250920323366,0x316472255b202c35,0x090a3b5d36312b39\n"
".quad 0x203233662e646461,0x25202c3633662509,0x336625202c343366,0x732e7473090a3b35\n"
".quad 0x33662e6465726168,0x316472255b092032,0x6625202c5d302b39,0x5f744c240a3b3633\n"
".quad 0x30333335335f3333,0x732e726162090a3a,0x0a3b300920636e79,0x6220387025214009\n"
".quad 0x5f744c2409206172,0x32343835335f3333,0x09636f6c2e090a3b,0x0a30093137093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c37336625,0x3b5d302b39316472\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3833662509,0x5d382b3931647225\n"
".quad 0x662e646461090a3b,0x3933662509203233,0x202c37336625202c,0x73090a3b38336625\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x2c5d302b39316472,0x240a3b3933662520\n"
".quad 0x35335f33335f744c,0x6162090a3a323438,0x0920636e79732e72,0x70252140090a3b30\n"
".quad 0x2409206172622039,0x36335f33335f744c,0x6c2e090a3b343533,0x323709363109636f\n"
".quad 0x732e646c090a3009,0x33662e6465726168,0x2c30346625092032,0x2b39316472255b20\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3134662509203233,0x39316472255b202c\n"
".quad 0x6461090a3b5d342b,0x2509203233662e64,0x346625202c323466,0x3b31346625202c30\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x2b39316472255b09,0x32346625202c5d30\n"
".quad 0x33335f744c240a3b,0x0a3a34353336335f,0x6e79732e72616209,0x2e090a3b30092063\n"
".quad 0x3109363109636f6c,0x2140090a30093637,0x2061726220397025,0x5f33335f744c2409\n"
".quad 0x090a3b3636383633,0x09363109636f6c2e,0x6c090a3009303831,0x6465726168732e64\n"
".quad 0x662509203233662e,0x656d735b202c3334,0x6c090a3b5d302b6d,0x2e6d617261702e64\n"
".quad 0x6472250920343675,0x635f5f5b202c3032,0x5f6d726170616475,0x7564657236315a5f\n"
".quad 0x656c676e69536563,0x366a4c4973736150,0x76454530624c4534,0x675f6a6650664b50\n"
".quad 0x3b5d617461646f5f,0x6f6c672e7473090a,0x203233662e6c6162,0x2b30326472255b09\n"
".quad 0x33346625202c5d30,0x09636f6c2e090a3b,0x3009333831093631,0x33752e766f6d090a\n"
".quad 0x2c34327225092032,0x2e7473090a3b3020,0x752e6c61626f6c67,0x7465725b09203233\n"
".quad 0x43746e656d657269,0x25202c5d746e756f,0x744c240a3b343272,0x363836335f33335f\n"
".quad 0x335f744c240a3a36,0x3a30373732335f33,0x5f33335f744c240a,0x090a3a3634373133\n"
".quad 0x09363109636f6c2e,0x65090a3009373831,0x444c240a3b746978,0x315a5f5f646e6557\n"
".quad 0x5365637564657236,0x736150656c676e69,0x4c4534366a4c4973,0x664b507645453062\n"
".quad 0x207d090a3a6a6650,0x7236315a5f202f2f,0x6e69536563756465,0x4973736150656c67\n"
".quad 0x30624c4534366a4c,0x6650664b50764545,0x746e652e090a0a6a,0x7236315a5f207972\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x30624c4532336a4c,0x6650664b50764545\n"
".quad 0x702e09090a28206a,0x36752e206d617261,0x616475635f5f2034,0x315a5f5f6d726170\n"
".quad 0x5365637564657236,0x736150656c676e69,0x4c4532336a4c4973,0x664b507645453062\n"
".quad 0x64695f675f6a6650,0x2e09090a2c617461,0x752e206d61726170,0x6475635f5f203436\n"
".quad 0x5a5f5f6d72617061,0x6563756465723631,0x6150656c676e6953,0x4532336a4c497373\n"
".quad 0x4b5076454530624c,0x6f5f675f6a665066,0x09090a2c61746164,0x2e206d617261702e\n"
".quad 0x75635f5f20323375,0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365\n"
".quad 0x32336a4c49737361,0x5076454530624c45,0x296e5f6a6650664b,0x65722e090a7b090a\n"
".quad 0x25203233752e2067,0x722e090a3b317672,0x203233752e206765,0x0a3b3e35323c7225\n"
".quad 0x752e206765722e09,0x323c647225203436,0x65722e090a3b3e32,0x25203233662e2067\n"
".quad 0x090a3b3e39333c66,0x72702e206765722e,0x33313c7025206465,0x6168732e090a3b3e\n"
".quad 0x2038732e20646572,0x6c5f616475635f5f,0x7261765f6c61636f,0x335f39323336325f\n"
".quad 0x7473614c6d615f38,0x09636f6c2e090a3b,0x3009373331093631,0x5f5f3142424c240a\n"
".quad 0x637564657236315a,0x50656c676e695365,0x32336a4c49737361,0x5076454530624c45\n"
".quad 0x090a3a6a6650664b,0x09363109636f6c2e,0x7663090a30093638,0x31752e3233752e74\n"
".quad 0x202c317225092036,0x0a3b782e64697425,0x3436752e74766309,0x722509203233752e\n"
".quad 0x3b317225202c3164,0x69772e6c756d090a,0x09203233752e6564,0x7225202c32647225\n"
".quad 0x6d090a3b34202c31,0x09203436752e766f,0x6473202c33647225,0x6461090a3b617461\n"
".quad 0x2509203436752e64,0x647225202c346472,0x3b33647225202c32,0x33662e766f6d090a\n"
".quad 0x202c316625092032,0x3030303030306630,0x20202020203b3030,0x6d090a30202f2f09\n"
".quad 0x09203233662e766f,0x306630202c326625,0x3b30303030303030,0x2f2f092020202020\n"
".quad 0x732e7473090a3020,0x33662e6465726168,0x346472255b092032,0x326625202c5d302b\n"
".quad 0x752e747663090a3b,0x09203631752e3233,0x746325202c327225,0x090a3b782e646961\n"
".quad 0x6f6c2e34326c756d,0x722509203233752e,0x202c327225202c33,0x646461090a3b3436\n"
".quad 0x722509203233752e,0x202c337225202c34,0x7663090a3b317225,0x31752e3233752e74\n"
".quad 0x202c357225092036,0x2e64696174636e25,0x702e646c090a3b78,0x3233752e6d617261\n"
".quad 0x5b202c3672250920,0x6170616475635f5f,0x7236315a5f5f6d72,0x6e69536563756465\n"
".quad 0x4973736150656c67,0x30624c4532336a4c,0x6650664b50764545,0x73090a3b5d6e5f6a\n"
".quad 0x752e65672e707465,0x2c31702509203233,0x7225202c34722520,0x31702540090a3b36\n"
".quad 0x4c24092061726220,0x3137325f34335f74,0x646461090a3b3833,0x722509203233752e\n"
".quad 0x202c347225202c37,0x2e646c090a3b3233,0x33752e6d61726170,0x202c367225092032\n"
".quad 0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x624c4532336a4c49,0x50664b5076454530,0x090a3b5d6e5f6a66,0x203233752e646461\n"
".quad 0x7225202c38722509,0x090a3b3233202c36,0x6f6c2e34326c756d,0x722509203233752e\n"
".quad 0x202c357225202c39,0x747663090a3b3436,0x3233752e3436732e,0x202c356472250920\n"
".quad 0x646c090a3b397225,0x752e6d617261702e,0x3664722509203436,0x6475635f5f5b202c\n"
".quad 0x5a5f5f6d72617061,0x6563756465723631,0x6150656c676e6953,0x4532336a4c497373\n"
".quad 0x4b5076454530624c,0x695f675f6a665066,0x090a3b5d61746164,0x2e3436752e747663\n"
".quad 0x6472250920323375,0x0a3b347225202c37,0x6469772e6c756d09,0x2509203233752e65\n"
".quad 0x347225202c386472,0x6461090a3b34202c,0x2509203436752e64,0x647225202c396472\n"
".quad 0x3b38647225202c36,0x69772e6c756d090a,0x09203233752e6564,0x25202c3031647225\n"
".quad 0x240a3b34202c3972,0x37325f34335f744c,0x2f2f200a3a303536,0x4c203e706f6f6c3c\n"
".quad 0x79646f6220706f6f,0x363820656e696c20,0x6e697473656e202c,0x3a68747065642067\n"
".quad 0x69747365202c3120,0x746920646574616d,0x736e6f6974617265,0x776f6e6b6e75203a\n"
".quad 0x09636f6c2e090a6e,0x0a30093339093631,0x626f6c672e646c09,0x09203233662e6c61\n"
".quad 0x72255b202c336625,0x090a3b5d302b3964,0x203233662e646461,0x6625202c31662509\n"
".quad 0x0a3b316625202c33,0x726168732e747309,0x09203233662e6465,0x5d302b346472255b\n"
".quad 0x090a3b316625202c,0x09363109636f6c2e,0x646c090a30093638,0x752e6d617261702e\n"
".quad 0x2c36722509203233,0x616475635f5f5b20,0x315a5f5f6d726170,0x5365637564657236\n"
".quad 0x736150656c676e69,0x4c4532336a4c4973,0x664b507645453062,0x0a3b5d6e5f6a6650\n"
".quad 0x363109636f6c2e09,0x73090a3009333909,0x752e65672e707465,0x2c32702509203233\n"
".quad 0x7225202c37722520,0x32702540090a3b36,0x4c24092061726220,0x3937325f34335f74\n"
".quad 0x3c2f2f200a3b3630,0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f\n"
".quad 0x2c363820656e696c,0x616c206461656820,0x4c242064656c6562,0x3637325f34335f74\n"
".quad 0x636f6c2e090a3035,0x3009363909363109,0x6f6c672e646c090a,0x203233662e6c6162\n"
".quad 0x255b202c34662509,0x5d3832312b396472,0x662e646461090a3b,0x2c31662509203233\n"
".quad 0x6625202c34662520,0x732e7473090a3b31,0x33662e6465726168,0x346472255b092032\n"
".quad 0x316625202c5d302b,0x34335f744c240a3b,0x0a3a36303937325f,0x706f6f6c3c2f2f20\n"
".quad 0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f,0x616568202c363820\n"
".quad 0x656c6562616c2064,0x34335f744c242064,0x090a30353637325f,0x203233752e646461\n"
".quad 0x7225202c37722509,0x0a3b397225202c37,0x3436752e64646109,0x202c396472250920\n"
".quad 0x7225202c39647225,0x6573090a3b303164,0x33752e746c2e7074,0x202c337025092032\n"
".quad 0x387225202c377225,0x2033702540090a3b,0x744c240920617262,0x353637325f34335f\n"
".quad 0x335f744c240a3b30,0x3a38333137325f34,0x3109636f6c2e090a,0x090a300937360936\n"
".quad 0x636e79732e726162,0x6f6d090a3b300920,0x2509203233752e76,0x3b3531202c303172\n"
".quad 0x6c2e70746573090a,0x2509203233752e65,0x2c317225202c3470,0x090a3b3031722520\n"
".quad 0x7262203470252140,0x335f744c24092061,0x3b34373638325f34,0x3109636f6c2e090a\n"
".quad 0x090a300938360936,0x65726168732e646c,0x2509203233662e64,0x6472255b202c3566\n"
".quad 0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e,0x346472255b202c36\n"
".quad 0x61090a3b5d34362b,0x09203233662e6464,0x356625202c376625,0x090a3b366625202c\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x4c240a3b37662520\n"
".quad 0x3638325f34335f74,0x726162090a3a3437,0x300920636e79732e,0x752e766f6d090a3b\n"
".quad 0x3131722509203233,0x6573090a3b37202c,0x33752e656c2e7074,0x202c357025092032\n"
".quad 0x317225202c317225,0x70252140090a3b31,0x2409206172622035,0x39325f34335f744c\n"
".quad 0x6c2e090a3b363831,0x393609363109636f,0x732e646c090a3009,0x33662e6465726168\n"
".quad 0x202c386625092032,0x5d302b346472255b,0x68732e646c090a3b,0x3233662e64657261\n"
".quad 0x5b202c3966250920,0x5d32332b34647225,0x662e646461090a3b,0x3031662509203233\n"
".quad 0x25202c386625202c,0x2e7473090a3b3966,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x5f744c240a3b3031,0x36383139325f3433,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x3233752e766f6d09,0x202c323172250920,0x70746573090a3b33\n"
".quad 0x203233752e656c2e,0x7225202c36702509,0x3b32317225202c31,0x203670252140090a\n"
".quad 0x744c240920617262,0x393639325f34335f,0x636f6c2e090a3b38,0x3009303709363109\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3131662509,0x3b5d302b34647225\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3231662509,0x5d36312b34647225\n"
".quad 0x662e646461090a3b,0x3331662509203233,0x202c31316625202c,0x73090a3b32316625\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x202c5d302b346472,0x4c240a3b33316625\n"
".quad 0x3639325f34335f74,0x726162090a3a3839,0x300920636e79732e,0x752e766f6d090a3b\n"
".quad 0x3331722509203233,0x6573090a3b31202c,0x33752e656c2e7074,0x202c377025092032\n"
".quad 0x317225202c317225,0x70252140090a3b33,0x2409206172622037,0x30335f34335f744c\n"
".quad 0x6c2e090a3b303132,0x313709363109636f,0x732e646c090a3009,0x33662e6465726168\n"
".quad 0x2c34316625092032,0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x2c35316625092032,0x382b346472255b20,0x2e646461090a3b5d,0x3166250920323366\n"
".quad 0x2c34316625202c36,0x090a3b3531662520,0x65726168732e7473,0x5b09203233662e64\n"
".quad 0x2c5d302b34647225,0x240a3b3631662520,0x30335f34335f744c,0x6162090a3a303132\n"
".quad 0x0920636e79732e72,0x2e766f6d090a3b30,0x3172250920323375,0x73090a3b30202c34\n"
".quad 0x752e71652e707465,0x2c38702509203233,0x7225202c31722520,0x252140090a3b3431\n"
".quad 0x0920617262203870,0x335f34335f744c24,0x2e090a3b32323730,0x3709363109636f6c\n"
".quad 0x2e646c090a300932,0x662e646572616873,0x3731662509203233,0x2b346472255b202c\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3831662509203233,0x2b346472255b202c\n"
".quad 0x646461090a3b5d34,0x662509203233662e,0x37316625202c3931,0x0a3b38316625202c\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x0a3b39316625202c\n"
".quad 0x335f34335f744c24,0x62090a3a32323730,0x20636e79732e7261,0x6f6c2e090a3b3009\n"
".quad 0x3330310936310963,0x70252140090a3009,0x2409206172622038,0x31335f34335f744c\n"
".quad 0x6c2e090a3b343332,0x303109363109636f,0x2e646c090a300936,0x662e646572616873\n"
".quad 0x3032662509203233,0x61746164735b202c,0x646c090a3b5d302b,0x752e6d617261702e\n"
".quad 0x3164722509203436,0x75635f5f5b202c31,0x5f5f6d7261706164,0x637564657236315a\n"
".quad 0x50656c676e695365,0x32336a4c49737361,0x5076454530624c45,0x5f675f6a6650664b\n"
".quad 0x0a3b5d617461646f,0x3436752e74766309,0x722509203233752e,0x327225202c323164\n"
".quad 0x772e6c756d090a3b,0x203233752e656469,0x202c333164722509,0x0a3b34202c327225\n"
".quad 0x3436752e64646109,0x2c34316472250920,0x202c313164722520,0x090a3b3331647225\n"
".quad 0x61626f6c672e7473,0x5b09203233662e6c,0x5d302b3431647225,0x0a3b30326625202c\n"
".quad 0x335f34335f744c24,0x2e090a3a34333231,0x3109363109636f6c,0x6f6d090a30093434\n"
".quad 0x2509203233752e76,0x0a3b31202c353172,0x656c2e7074657309,0x702509203233752e\n"
".quad 0x202c357225202c39,0x40090a3b35317225,0x2061726220397025,0x5f34335f744c2409\n"
".quad 0x090a3b3634373133,0x09363109636f6c2e,0x6d090a3009373531,0x6c672e7261626d65\n"
".quad 0x3870252140090a3b,0x4c24092061726220,0x3232335f34335f74,0x6f6c2e090a3b3835\n"
".quad 0x3236310936310963,0x2e766f6d090a3009,0x6472250920343675,0x69746572202c3531\n"
".quad 0x6f43746e656d6572,0x7461090a3b746e75,0x61626f6c672e6d6f,0x33752e636e692e6c\n"
".quad 0x2c36317225092032,0x5d35316472255b20,0x090a3b357225202c,0x203233732e766f6d\n"
".quad 0x25202c3731722509,0x6c2e090a3b363172,0x363109363109636f,0x627573090a300934\n"
".quad 0x722509203233752e,0x2c357225202c3831,0x746573090a3b3120,0x2e3233752e71652e\n"
".quad 0x3172250920323375,0x2c37317225202c39,0x090a3b3831722520,0x203233732e67656e\n"
".quad 0x25202c3032722509,0x7473090a3b393172,0x2e6465726168732e,0x635f5f5b09203873\n"
".quad 0x61636f6c5f616475,0x36325f7261765f6c,0x615f38335f393233,0x202c5d7473614c6d\n"
".quad 0x4c240a3b30327225,0x3232335f34335f74,0x6f6c2e090a3a3835,0x3636310936310963\n"
".quad 0x2e726162090a3009,0x3b300920636e7973,0x6168732e646c090a,0x092038732e646572\n"
".quad 0x5f5b202c31327225,0x6f6c5f616475635f,0x5f7261765f6c6163,0x38335f3932333632\n"
".quad 0x5d7473614c6d615f,0x752e766f6d090a3b,0x3232722509203233,0x6573090a3b30202c\n"
".quad 0x33732e71652e7074,0x2c30317025092032,0x25202c3132722520,0x2540090a3b323272\n"
".quad 0x2061726220303170,0x5f34335f744c2409,0x090a3b3037373233,0x2e656c2e70746573\n"
".quad 0x3170250920323375,0x202c357225202c31,0x2540090a3b317225,0x2061726220313170\n"
".quad 0x5f34335f744c2409,0x090a3b3833353333,0x09363109636f6c2e,0x6c090a3009323731\n"
".quad 0x2e6d617261702e64,0x6472250920343675,0x635f5f5b202c3631,0x5f6d726170616475\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x336a4c4973736150,0x76454530624c4532\n"
".quad 0x675f6a6650664b50,0x3b5d617461646f5f,0x36752e646461090a,0x3731647225092034\n"
".quad 0x2c3631647225202c,0x090a3b3264722520,0x61626f6c672e646c,0x2509203233662e6c\n"
".quad 0x72255b202c313266,0x0a3b5d302b373164,0x696e752e61726209,0x34335f744c240920\n"
".quad 0x0a3b32383233335f,0x335f34335f744c24,0x6d090a3a38333533,0x09203233662e766f\n"
".quad 0x6630202c31326625,0x3030303030303030,0x2f2f09202020203b,0x335f744c240a3020\n"
".quad 0x3a32383233335f34,0x36752e766f6d090a,0x3831647225092034,0x0a3b6d656d73202c\n"
".quad 0x3436752e64646109,0x2c39316472250920,0x25202c3264722520,0x73090a3b38316472\n"
".quad 0x6465726168732e74,0x255b09203233662e,0x2c5d302b39316472,0x090a3b3132662520\n"
".quad 0x09363109636f6c2e,0x6162090a30093736,0x0920636e79732e72,0x70252140090a3b30\n"
".quad 0x2409206172622034,0x33335f34335f744c,0x6c2e090a3b343937,0x383609363109636f\n"
".quad 0x732e646c090a3009,0x33662e6465726168,0x2c32326625092032,0x2b39316472255b20\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3332662509203233,0x39316472255b202c\n"
".quad 0x61090a3b5d34362b,0x09203233662e6464,0x6625202c34326625,0x33326625202c3232\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920,0x326625202c5d302b\n"
".quad 0x335f744c240a3b34,0x3a34393733335f34,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x7262203570252140,0x335f744c24092061,0x3b36303334335f34,0x3109636f6c2e090a\n"
".quad 0x090a300939360936,0x65726168732e646c,0x2509203233662e64,0x72255b202c353266\n"
".quad 0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465,0x255b202c36326625\n"
".quad 0x5d32332b39316472,0x662e646461090a3b,0x3732662509203233,0x202c35326625202c\n"
".quad 0x73090a3b36326625,0x6465726168732e74,0x255b09203233662e,0x2c5d302b39316472\n"
".quad 0x240a3b3732662520,0x34335f34335f744c,0x6162090a3a363033,0x0920636e79732e72\n"
".quad 0x70252140090a3b30,0x2409206172622036,0x34335f34335f744c,0x6c2e090a3b383138\n"
".quad 0x303709363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c38326625092032\n"
".quad 0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873,0x3932662509203233\n"
".quad 0x39316472255b202c,0x61090a3b5d36312b,0x09203233662e6464,0x6625202c30336625\n"
".quad 0x39326625202c3832,0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920\n"
".quad 0x336625202c5d302b,0x335f744c240a3b30,0x3a38313834335f34,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x7262203770252140,0x335f744c24092061,0x3b30333335335f34\n"
".quad 0x3109636f6c2e090a,0x090a300931370936,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x72255b202c313366,0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c32336625,0x3b5d382b39316472,0x33662e646461090a,0x2c33336625092032\n"
".quad 0x25202c3133662520,0x7473090a3b323366,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x202c5d302b393164,0x4c240a3b33336625,0x3335335f34335f74,0x726162090a3a3033\n"
".quad 0x300920636e79732e,0x3870252140090a3b,0x4c24092061726220,0x3835335f34335f74\n"
".quad 0x6f6c2e090a3b3234,0x0932370936310963,0x68732e646c090a30,0x3233662e64657261\n"
".quad 0x202c343366250920,0x302b39316472255b,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x2c35336625092032,0x2b39316472255b20,0x646461090a3b5d34,0x662509203233662e\n"
".quad 0x34336625202c3633,0x0a3b35336625202c,0x726168732e747309,0x09203233662e6465\n"
".quad 0x302b39316472255b,0x3b36336625202c5d,0x5f34335f744c240a,0x090a3a3234383533\n"
".quad 0x636e79732e726162,0x6c2e090a3b300920,0x373109363109636f,0x252140090a300936\n"
".quad 0x0920617262203870,0x335f34335f744c24,0x2e090a3b34353336,0x3109363109636f6c\n"
".quad 0x646c090a30093038,0x2e6465726168732e,0x3366250920323366,0x6d656d735b202c37\n"
".quad 0x646c090a3b5d302b,0x752e6d617261702e,0x3264722509203436,0x75635f5f5b202c30\n"
".quad 0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365,0x32336a4c49737361\n"
".quad 0x5076454530624c45,0x5f675f6a6650664b,0x0a3b5d617461646f,0x626f6c672e747309\n"
".quad 0x09203233662e6c61,0x302b30326472255b,0x3b37336625202c5d,0x3109636f6c2e090a\n"
".quad 0x0a30093338310936,0x3233752e766f6d09,0x202c333272250920,0x672e7473090a3b30\n"
".quad 0x33752e6c61626f6c,0x697465725b092032,0x6f43746e656d6572,0x7225202c5d746e75\n"
".quad 0x5f744c240a3b3332,0x34353336335f3433,0x34335f744c240a3a,0x0a3a30373732335f\n"
".quad 0x335f34335f744c24,0x2e090a3a36343731,0x3109363109636f6c,0x7865090a30093738\n"
".quad 0x57444c240a3b7469,0x36315a5f5f646e65,0x6953656375646572,0x73736150656c676e\n"
".quad 0x624c4532336a4c49,0x50664b5076454530,0x2f207d090a3a6a66,0x657236315a5f202f\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x4530624c4532336a,0x6a6650664b507645\n"
".quad 0x72746e652e090a0a,0x657236315a5f2079,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x4530624c4536316a,0x6a6650664b507645,0x61702e09090a2820,0x3436752e206d6172\n"
".quad 0x70616475635f5f20,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x624c4536316a4c49,0x50664b5076454530,0x6164695f675f6a66,0x702e09090a2c6174\n"
".quad 0x36752e206d617261,0x616475635f5f2034,0x315a5f5f6d726170,0x5365637564657236\n"
".quad 0x736150656c676e69,0x4c4536316a4c4973,0x664b507645453062,0x646f5f675f6a6650\n"
".quad 0x2e09090a2c617461,0x752e206d61726170,0x6475635f5f203233,0x5a5f5f6d72617061\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4536316a4c497373,0x4b5076454530624c\n"
".quad 0x0a296e5f6a665066,0x6765722e090a7b09,0x7225203233752e20,0x65722e090a3b3176\n"
".quad 0x25203233752e2067,0x090a3b3e34323c72,0x36752e206765722e,0x32323c6472252034\n"
".quad 0x6765722e090a3b3e,0x6625203233662e20,0x2e090a3b3e33333c,0x6572702e20676572\n"
".quad 0x3e32313c70252064,0x726168732e090a3b,0x5f2038732e206465,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x38335f3932333632,0x3b7473614c6d615f,0x3109636f6c2e090a\n"
".quad 0x0a30093733310936,0x5a5f5f3142424c24,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x4536316a4c497373,0x4b5076454530624c,0x2e090a3a6a665066,0x3809363109636f6c\n"
".quad 0x747663090a300936,0x3631752e3233752e,0x25202c3172250920,0x090a3b782e646974\n"
".quad 0x2e3436752e747663,0x6472250920323375,0x0a3b317225202c31,0x6469772e6c756d09\n"
".quad 0x2509203233752e65,0x317225202c326472,0x6f6d090a3b34202c,0x2509203436752e76\n"
".quad 0x616473202c336472,0x646461090a3b6174,0x722509203436752e,0x32647225202c3464\n"
".quad 0x0a3b33647225202c,0x3233662e766f6d09,0x30202c3166250920,0x3030303030303066\n"
".quad 0x0920202020203b30,0x6f6d090a30202f2f,0x2509203233662e76,0x30306630202c3266\n"
".quad 0x203b303030303030,0x202f2f0920202020,0x68732e7473090a30,0x3233662e64657261\n"
".quad 0x2b346472255b0920,0x3b326625202c5d30,0x33752e747663090a,0x2509203631752e32\n"
".quad 0x61746325202c3272,0x6d090a3b782e6469,0x2e6f6c2e34326c75,0x3372250920323375\n"
".quad 0x33202c327225202c,0x2e646461090a3b32,0x3472250920323375,0x25202c337225202c\n"
".quad 0x747663090a3b3172,0x3631752e3233752e,0x25202c3572250920,0x782e64696174636e\n"
".quad 0x61702e646c090a3b,0x203233752e6d6172,0x5f5b202c36722509,0x726170616475635f\n"
".quad 0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c,0x4530624c4536316a\n"
".quad 0x6a6650664b507645,0x6573090a3b5d6e5f,0x33752e65672e7074,0x202c317025092032\n"
".quad 0x367225202c347225,0x2031702540090a3b,0x744c240920617262,0x353637325f35335f\n"
".quad 0x2e646461090a3b30,0x3772250920323375,0x31202c347225202c,0x702e646c090a3b36\n"
".quad 0x3233752e6d617261,0x5b202c3672250920,0x6170616475635f5f,0x7236315a5f5f6d72\n"
".quad 0x6e69536563756465,0x4973736150656c67,0x30624c4536316a4c,0x6650664b50764545\n"
".quad 0x61090a3b5d6e5f6a,0x09203233752e6464,0x367225202c387225,0x6d090a3b3631202c\n"
".quad 0x2e6f6c2e34326c75,0x3972250920323375,0x33202c357225202c,0x2e747663090a3b32\n"
".quad 0x203233752e343673,0x25202c3564722509,0x2e646c090a3b3972,0x36752e6d61726170\n"
".quad 0x2c36647225092034,0x616475635f5f5b20,0x315a5f5f6d726170,0x5365637564657236\n"
".quad 0x736150656c676e69,0x4c4536316a4c4973,0x664b507645453062,0x64695f675f6a6650\n"
".quad 0x63090a3b5d617461,0x752e3436752e7476,0x3764722509203233,0x090a3b347225202c\n"
".quad 0x656469772e6c756d,0x722509203233752e,0x2c347225202c3864,0x646461090a3b3420\n"
".quad 0x722509203436752e,0x36647225202c3964,0x0a3b38647225202c,0x6469772e6c756d09\n"
".quad 0x2509203233752e65,0x7225202c30316472,0x4c240a3b34202c39,0x3138325f35335f74\n"
".quad 0x3c2f2f200a3a3236,0x6f4c203e706f6f6c,0x2079646f6220706f,0x2c363820656e696c\n"
".quad 0x676e697473656e20,0x203a687470656420,0x6d69747365202c31,0x6574692064657461\n"
".quad 0x3a736e6f69746172,0x6e776f6e6b6e7520,0x3109636f6c2e090a,0x090a300933390936\n"
".quad 0x61626f6c672e646c,0x2509203233662e6c,0x6472255b202c3366,0x61090a3b5d302b39\n"
".quad 0x09203233662e6464,0x336625202c316625,0x090a3b316625202c,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x2c5d302b34647225,0x2e090a3b31662520,0x3809363109636f6c\n"
".quad 0x2e646c090a300936,0x33752e6d61726170,0x202c367225092032,0x70616475635f5f5b\n"
".quad 0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e,0x624c4536316a4c49\n"
".quad 0x50664b5076454530,0x090a3b5d6e5f6a66,0x09363109636f6c2e,0x6573090a30093339\n"
".quad 0x33752e65672e7074,0x202c327025092032,0x367225202c377225,0x2032702540090a3b\n"
".quad 0x744c240920617262,0x313438325f35335f,0x6c3c2f2f200a3b38,0x726150203e706f6f\n"
".quad 0x6f6f6c20666f2074,0x6c2079646f622070,0x202c363820656e69,0x62616c2064616568\n"
".quad 0x744c242064656c65,0x363138325f35335f,0x09636f6c2e090a32,0x0a30093639093631\n"
".quad 0x626f6c672e646c09,0x09203233662e6c61,0x72255b202c346625,0x0a3b5d34362b3964\n"
".quad 0x3233662e64646109,0x25202c3166250920,0x3b316625202c3466,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x302b346472255b09,0x0a3b316625202c5d,0x325f35335f744c24\n"
".quad 0x2f200a3a38313438,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3820656e696c2079,0x2064616568202c36,0x2064656c6562616c,0x325f35335f744c24\n"
".quad 0x6461090a32363138,0x2509203233752e64,0x2c377225202c3772,0x61090a3b39722520\n"
".quad 0x09203436752e6464,0x7225202c39647225,0x31647225202c3964,0x70746573090a3b30\n"
".quad 0x203233752e746c2e,0x7225202c33702509,0x0a3b387225202c37,0x7262203370254009\n"
".quad 0x335f744c24092061,0x3b32363138325f35,0x5f35335f744c240a,0x090a3a3035363732\n"
".quad 0x09363109636f6c2e,0x6162090a30093836,0x0920636e79732e72,0x2e766f6d090a3b30\n"
".quad 0x3172250920323375,0x73090a3b37202c30,0x752e656c2e707465,0x2c34702509203233\n"
".quad 0x7225202c31722520,0x252140090a3b3031,0x0920617262203470,0x325f35335f744c24\n"
".quad 0x2e090a3b36383139,0x3609363109636f6c,0x2e646c090a300939,0x662e646572616873\n"
".quad 0x2c35662509203233,0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x202c366625092032,0x32332b346472255b,0x2e646461090a3b5d,0x3766250920323366\n"
".quad 0x25202c356625202c,0x2e7473090a3b3666,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x335f744c240a3b37,0x3a36383139325f35,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x203233752e766f6d,0x33202c3131722509,0x2e70746573090a3b\n"
".quad 0x09203233752e656c,0x317225202c357025,0x0a3b31317225202c,0x6220357025214009\n"
".quad 0x5f744c2409206172,0x38393639325f3533,0x09636f6c2e090a3b,0x0a30093037093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x72255b202c386625,0x090a3b5d302b3464\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x6472255b202c3966,0x090a3b5d36312b34\n"
".quad 0x203233662e646461,0x25202c3031662509,0x3b396625202c3866,0x6168732e7473090a\n"
".quad 0x203233662e646572,0x302b346472255b09,0x3b30316625202c5d,0x5f35335f744c240a\n"
".quad 0x090a3a3839363932,0x636e79732e726162,0x6f6d090a3b300920,0x2509203233752e76\n"
".quad 0x0a3b31202c323172,0x656c2e7074657309,0x702509203233752e,0x202c317225202c36\n"
".quad 0x40090a3b32317225,0x6172622036702521,0x35335f744c240920,0x0a3b30313230335f\n"
".quad 0x363109636f6c2e09,0x6c090a3009313709,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3131,0x6c090a3b5d302b34,0x6465726168732e64,0x662509203233662e\n"
".quad 0x6472255b202c3231,0x61090a3b5d382b34,0x09203233662e6464,0x6625202c33316625\n"
".quad 0x32316625202c3131,0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920\n"
".quad 0x33316625202c5d30,0x35335f744c240a3b,0x0a3a30313230335f,0x6e79732e72616209\n"
".quad 0x6d090a3b30092063,0x09203233752e766f,0x3b30202c33317225,0x652e70746573090a\n"
".quad 0x2509203233752e71,0x2c317225202c3770,0x090a3b3331722520,0x7262203770252140\n"
".quad 0x335f744c24092061,0x3b32323730335f35,0x3109636f6c2e090a,0x090a300932370936\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c343166,0x090a3b5d302b3464\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x72255b202c353166,0x090a3b5d342b3464\n"
".quad 0x203233662e646461,0x25202c3631662509,0x316625202c343166,0x732e7473090a3b35\n"
".quad 0x33662e6465726168,0x346472255b092032,0x316625202c5d302b,0x335f744c240a3b36\n"
".quad 0x3a32323730335f35,0x79732e726162090a,0x090a3b300920636e,0x09363109636f6c2e\n"
".quad 0x40090a3009333031,0x6172622037702521,0x35335f744c240920,0x0a3b34333231335f\n"
".quad 0x363109636f6c2e09,0x090a300936303109,0x65726168732e646c,0x2509203233662e64\n"
".quad 0x64735b202c373166,0x0a3b5d302b617461,0x617261702e646c09,0x2509203436752e6d\n"
".quad 0x5f5b202c31316472,0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x4530624c4536316a,0x6a6650664b507645,0x617461646f5f675f\n"
".quad 0x2e747663090a3b5d,0x203233752e343675,0x202c323164722509,0x756d090a3b327225\n"
".quad 0x752e656469772e6c,0x3164722509203233,0x202c327225202c33,0x2e646461090a3b34\n"
".quad 0x6472250920343675,0x31647225202c3431,0x3331647225202c31,0x6c672e7473090a3b\n"
".quad 0x3233662e6c61626f,0x34316472255b0920,0x316625202c5d302b,0x335f744c240a3b37\n"
".quad 0x3a34333231335f35,0x3109636f6c2e090a,0x0a30093434310936,0x3233752e766f6d09\n"
".quad 0x202c343172250920,0x70746573090a3b31,0x203233752e656c2e,0x7225202c38702509\n"
".quad 0x3b34317225202c35,0x622038702540090a,0x5f744c2409206172,0x36343731335f3533\n"
".quad 0x09636f6c2e090a3b,0x3009373531093631,0x7261626d656d090a,0x2140090a3b6c672e\n"
".quad 0x2061726220377025,0x5f35335f744c2409,0x090a3b3835323233,0x09363109636f6c2e\n"
".quad 0x6d090a3009323631,0x09203436752e766f,0x72202c3531647225,0x6e656d6572697465\n"
".quad 0x0a3b746e756f4374,0x6c672e6d6f746109,0x636e692e6c61626f,0x722509203233752e\n"
".quad 0x6472255b202c3531,0x357225202c5d3531,0x732e766f6d090a3b,0x3631722509203233\n"
".quad 0x0a3b35317225202c,0x363109636f6c2e09,0x090a300934363109,0x203233752e627573\n"
".quad 0x25202c3731722509,0x090a3b31202c3572,0x752e71652e746573,0x09203233752e3233\n"
".quad 0x7225202c38317225,0x37317225202c3631,0x732e67656e090a3b,0x3931722509203233\n"
".quad 0x0a3b38317225202c,0x726168732e747309,0x5b092038732e6465,0x6c5f616475635f5f\n"
".quad 0x7261765f6c61636f,0x335f39323336325f,0x7473614c6d615f38,0x3b39317225202c5d\n"
".quad 0x5f35335f744c240a,0x090a3a3835323233,0x09363109636f6c2e,0x62090a3009363631\n"
".quad 0x20636e79732e7261,0x2e646c090a3b3009,0x732e646572616873,0x2c30327225092038\n"
".quad 0x616475635f5f5b20,0x765f6c61636f6c5f,0x39323336325f7261,0x614c6d615f38335f\n"
".quad 0x6f6d090a3b5d7473,0x2509203233752e76,0x0a3b30202c313272,0x71652e7074657309\n"
".quad 0x702509203233732e,0x2c30327225202c39,0x090a3b3132722520,0x6172622039702540\n"
".quad 0x35335f744c240920,0x0a3b30373732335f,0x656c2e7074657309,0x702509203233752e\n"
".quad 0x2c357225202c3031,0x40090a3b31722520,0x6172622030317025,0x35335f744c240920\n"
".quad 0x0a3b38333533335f,0x363109636f6c2e09,0x090a300932373109,0x6d617261702e646c\n"
".quad 0x722509203436752e,0x5f5f5b202c363164,0x6d72617061647563,0x64657236315a5f5f\n"
".quad 0x6c676e6953656375,0x6a4c497373615065,0x454530624c453631,0x5f6a6650664b5076\n"
".quad 0x5d617461646f5f67,0x752e646461090a3b,0x3164722509203436,0x3631647225202c37\n"
".quad 0x0a3b32647225202c,0x626f6c672e646c09,0x09203233662e6c61,0x255b202c38316625\n"
".quad 0x3b5d302b37316472,0x6e752e617262090a,0x335f744c24092069,0x3b32383233335f35\n"
".quad 0x5f35335f744c240a,0x090a3a3833353333,0x203233662e766f6d,0x30202c3831662509\n"
".quad 0x3030303030303066,0x2f09202020203b30,0x5f744c240a30202f,0x32383233335f3533\n"
".quad 0x752e766f6d090a3a,0x3164722509203436,0x3b6d656d73202c38,0x36752e646461090a\n"
".quad 0x3931647225092034,0x202c32647225202c,0x090a3b3831647225,0x65726168732e7473\n"
".quad 0x5b09203233662e64,0x5d302b3931647225,0x0a3b38316625202c,0x363109636f6c2e09\n"
".quad 0x62090a3009383609,0x20636e79732e7261,0x252140090a3b3009,0x0920617262203470\n"
".quad 0x335f35335f744c24,0x2e090a3b34393733,0x3609363109636f6c,0x2e646c090a300939\n"
".quad 0x662e646572616873,0x3931662509203233,0x39316472255b202c,0x646c090a3b5d302b\n"
".quad 0x2e6465726168732e,0x3266250920323366,0x316472255b202c30,0x090a3b5d32332b39\n"
".quad 0x203233662e646461,0x25202c3132662509,0x326625202c393166,0x732e7473090a3b30\n"
".quad 0x33662e6465726168,0x316472255b092032,0x6625202c5d302b39,0x5f744c240a3b3132\n"
".quad 0x34393733335f3533,0x732e726162090a3a,0x0a3b300920636e79,0x6220357025214009\n"
".quad 0x5f744c2409206172,0x36303334335f3533,0x09636f6c2e090a3b,0x0a30093037093631\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x255b202c32326625,0x3b5d302b39316472\n"
".quad 0x6168732e646c090a,0x203233662e646572,0x5b202c3332662509,0x36312b3931647225\n"
".quad 0x2e646461090a3b5d,0x3266250920323366,0x2c32326625202c34,0x090a3b3332662520\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225,0x0a3b34326625202c\n"
".quad 0x335f35335f744c24,0x62090a3a36303334,0x20636e79732e7261,0x252140090a3b3009\n"
".quad 0x0920617262203670,0x335f35335f744c24,0x2e090a3b38313834,0x3709363109636f6c\n"
".quad 0x2e646c090a300931,0x662e646572616873,0x3532662509203233,0x39316472255b202c\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x3266250920323366,0x316472255b202c36\n"
".quad 0x61090a3b5d382b39,0x09203233662e6464,0x6625202c37326625,0x36326625202c3532\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920,0x326625202c5d302b\n"
".quad 0x335f744c240a3b37,0x3a38313834335f35,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x7262203770252140,0x335f744c24092061,0x3b30333335335f35,0x3109636f6c2e090a\n"
".quad 0x090a300932370936,0x65726168732e646c,0x2509203233662e64,0x72255b202c383266\n"
".quad 0x0a3b5d302b393164,0x726168732e646c09,0x09203233662e6465,0x255b202c39326625\n"
".quad 0x3b5d342b39316472,0x33662e646461090a,0x2c30336625092032,0x25202c3832662520\n"
".quad 0x7473090a3b393266,0x2e6465726168732e,0x72255b0920323366,0x202c5d302b393164\n"
".quad 0x4c240a3b30336625,0x3335335f35335f74,0x726162090a3a3033,0x300920636e79732e\n"
".quad 0x09636f6c2e090a3b,0x3009363731093631,0x203770252140090a,0x744c240920617262\n"
".quad 0x343835335f35335f,0x636f6c2e090a3b32,0x0930383109363109,0x68732e646c090a30\n"
".quad 0x3233662e64657261,0x202c313366250920,0x5d302b6d656d735b,0x61702e646c090a3b\n"
".quad 0x203436752e6d6172,0x202c303264722509,0x70616475635f5f5b,0x36315a5f5f6d7261\n"
".quad 0x6953656375646572,0x73736150656c676e,0x624c4536316a4c49,0x50664b5076454530\n"
".quad 0x61646f5f675f6a66,0x7473090a3b5d6174,0x2e6c61626f6c672e,0x72255b0920323366\n"
".quad 0x202c5d302b303264,0x2e090a3b31336625,0x3109363109636f6c,0x6f6d090a30093338\n"
".quad 0x2509203233752e76,0x0a3b30202c323272,0x626f6c672e747309,0x09203233752e6c61\n"
".quad 0x6d6572697465725b,0x746e756f43746e65,0x3b32327225202c5d,0x5f35335f744c240a\n"
".quad 0x240a3a3234383533,0x32335f35335f744c,0x744c240a3a303737,0x343731335f35335f\n"
".quad 0x636f6c2e090a3a36,0x0937383109363109,0x3b74697865090a30,0x646e6557444c240a\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x454530624c453631\n"
".quad 0x3a6a6650664b5076,0x5f202f2f207d090a,0x637564657236315a,0x50656c676e695365\n"
".quad 0x36316a4c49737361,0x5076454530624c45,0x090a0a6a6650664b,0x5f207972746e652e\n"
".quad 0x637564657236315a,0x50656c676e695365,0x45386a4c49737361,0x4b5076454530624c\n"
".quad 0x090a28206a665066,0x206d617261702e09,0x635f5f203436752e,0x5f6d726170616475\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x386a4c4973736150,0x5076454530624c45\n"
".quad 0x5f675f6a6650664b,0x090a2c6174616469,0x206d617261702e09,0x635f5f203436752e\n"
".quad 0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563,0x386a4c4973736150\n"
".quad 0x5076454530624c45,0x5f675f6a6650664b,0x090a2c617461646f,0x206d617261702e09\n"
".quad 0x635f5f203233752e,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x386a4c4973736150,0x5076454530624c45,0x296e5f6a6650664b,0x65722e090a7b090a\n"
".quad 0x25203233752e2067,0x722e090a3b317672,0x203233752e206765,0x0a3b3e33323c7225\n"
".quad 0x752e206765722e09,0x323c647225203436,0x65722e090a3b3e32,0x25203233662e2067\n"
".quad 0x090a3b3e37323c66,0x72702e206765722e,0x31313c7025206465,0x6168732e090a3b3e\n"
".quad 0x2038732e20646572,0x6c5f616475635f5f,0x7261765f6c61636f,0x335f39323336325f\n"
".quad 0x7473614c6d615f38,0x09636f6c2e090a3b,0x3009373331093631,0x5f5f3142424c240a\n"
".quad 0x637564657236315a,0x50656c676e695365,0x45386a4c49737361,0x4b5076454530624c\n"
".quad 0x2e090a3a6a665066,0x3809363109636f6c,0x747663090a300936,0x3631752e3233752e\n"
".quad 0x25202c3172250920,0x090a3b782e646974,0x2e3436752e747663,0x6472250920323375\n"
".quad 0x0a3b317225202c31,0x6469772e6c756d09,0x2509203233752e65,0x317225202c326472\n"
".quad 0x6f6d090a3b34202c,0x2509203436752e76,0x616473202c336472,0x646461090a3b6174\n"
".quad 0x722509203436752e,0x32647225202c3464,0x0a3b33647225202c,0x3233662e766f6d09\n"
".quad 0x30202c3166250920,0x3030303030303066,0x0920202020203b30,0x6f6d090a30202f2f\n"
".quad 0x2509203233662e76,0x30306630202c3266,0x203b303030303030,0x202f2f0920202020\n"
".quad 0x68732e7473090a30,0x3233662e64657261,0x2b346472255b0920,0x3b326625202c5d30\n"
".quad 0x33752e747663090a,0x2509203631752e32,0x61746325202c3272,0x6d090a3b782e6469\n"
".quad 0x2e6f6c2e34326c75,0x3372250920323375,0x31202c327225202c,0x2e646461090a3b36\n"
".quad 0x3472250920323375,0x25202c337225202c,0x747663090a3b3172,0x3631752e3233752e\n"
".quad 0x25202c3572250920,0x782e64696174636e,0x61702e646c090a3b,0x203233752e6d6172\n"
".quad 0x5f5b202c36722509,0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x454530624c45386a,0x5f6a6650664b5076,0x746573090a3b5d6e\n"
".quad 0x3233752e65672e70,0x25202c3170250920,0x3b367225202c3472,0x622031702540090a\n"
".quad 0x5f744c2409206172,0x32363138325f3633,0x752e646461090a3b,0x2c37722509203233\n"
".quad 0x3b38202c34722520,0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c367225\n"
".quad 0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x76454530624c4538,0x6e5f6a6650664b50,0x2e646461090a3b5d,0x3872250920323375\n"
".quad 0x38202c367225202c,0x34326c756d090a3b,0x203233752e6f6c2e,0x7225202c39722509\n"
".quad 0x090a3b3631202c35,0x2e3436732e747663,0x6472250920323375,0x0a3b397225202c35\n"
".quad 0x617261702e646c09,0x2509203436752e6d,0x5f5f5b202c366472,0x6d72617061647563\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x76454530624c4538\n"
".quad 0x675f6a6650664b50,0x3b5d61746164695f,0x36752e747663090a,0x2509203233752e34\n"
".quad 0x347225202c376472,0x772e6c756d090a3b,0x203233752e656469,0x25202c3864722509\n"
".quad 0x090a3b34202c3472,0x203436752e646461,0x25202c3964722509,0x647225202c366472\n"
".quad 0x2e6c756d090a3b38,0x3233752e65646977,0x2c30316472250920,0x3b34202c39722520\n"
".quad 0x5f36335f744c240a,0x200a3a3437363832,0x3e706f6f6c3c2f2f,0x6f6220706f6f4c20\n"
".quad 0x20656e696c207964,0x7473656e202c3638,0x7470656420676e69,0x7365202c31203a68\n"
".quad 0x20646574616d6974,0x6f69746172657469,0x6e6b6e75203a736e,0x6f6c2e090a6e776f\n"
".quad 0x0933390936310963,0x6c672e646c090a30,0x3233662e6c61626f,0x5b202c3366250920\n"
".quad 0x3b5d302b39647225,0x33662e646461090a,0x202c316625092032,0x316625202c336625\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920,0x3b316625202c5d30\n"
".quad 0x3109636f6c2e090a,0x090a300936380936,0x6d617261702e646c,0x722509203233752e\n"
".quad 0x75635f5f5b202c36,0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365\n"
".quad 0x45386a4c49737361,0x4b5076454530624c,0x3b5d6e5f6a665066,0x3109636f6c2e090a\n"
".quad 0x090a300933390936,0x2e65672e70746573,0x3270250920323375,0x25202c377225202c\n"
".quad 0x702540090a3b3672,0x2409206172622032,0x38325f36335f744c,0x2f2f200a3b303339\n"
".quad 0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f,0x363820656e696c20\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x38325f36335f744c,0x6f6c2e090a343736\n"
".quad 0x0936390936310963,0x6c672e646c090a30,0x3233662e6c61626f,0x5b202c3466250920\n"
".quad 0x5d32332b39647225,0x662e646461090a3b,0x2c31662509203233,0x6625202c34662520\n"
".quad 0x732e7473090a3b31,0x33662e6465726168,0x346472255b092032,0x316625202c5d302b\n"
".quad 0x36335f744c240a3b,0x0a3a30333938325f,0x706f6f6c3c2f2f20,0x6f2074726150203e\n"
".quad 0x6220706f6f6c2066,0x656e696c2079646f,0x616568202c363820,0x656c6562616c2064\n"
".quad 0x36335f744c242064,0x090a34373638325f,0x203233752e646461,0x7225202c37722509\n"
".quad 0x0a3b397225202c37,0x3436752e64646109,0x202c396472250920,0x7225202c39647225\n"
".quad 0x6573090a3b303164,0x33752e746c2e7074,0x202c337025092032,0x387225202c377225\n"
".quad 0x2033702540090a3b,0x744c240920617262,0x373638325f36335f,0x335f744c240a3b34\n"
".quad 0x3a32363138325f36,0x3109636f6c2e090a,0x090a300939360936,0x636e79732e726162\n"
".quad 0x6f6d090a3b300920,0x2509203233752e76,0x0a3b33202c303172,0x656c2e7074657309\n"
".quad 0x702509203233752e,0x202c317225202c34,0x40090a3b30317225,0x6172622034702521\n"
".quad 0x36335f744c240920,0x0a3b38393639325f,0x363109636f6c2e09,0x6c090a3009303709\n"
".quad 0x6465726168732e64,0x662509203233662e,0x346472255b202c35,0x646c090a3b5d302b\n"
".quad 0x2e6465726168732e,0x3666250920323366,0x2b346472255b202c,0x6461090a3b5d3631\n"
".quad 0x2509203233662e64,0x2c356625202c3766,0x73090a3b36662520,0x6465726168732e74\n"
".quad 0x255b09203233662e,0x202c5d302b346472,0x744c240a3b376625,0x393639325f36335f\n"
".quad 0x2e726162090a3a38,0x3b300920636e7973,0x33752e766f6d090a,0x2c31317225092032\n"
".quad 0x746573090a3b3120,0x3233752e656c2e70,0x25202c3570250920,0x31317225202c3172\n"
".quad 0x3570252140090a3b,0x4c24092061726220,0x3230335f36335f74,0x6f6c2e090a3b3031\n"
".quad 0x0931370936310963,0x68732e646c090a30,0x3233662e64657261,0x5b202c3866250920\n"
".quad 0x3b5d302b34647225,0x6168732e646c090a,0x203233662e646572,0x255b202c39662509\n"
".quad 0x0a3b5d382b346472,0x3233662e64646109,0x202c303166250920,0x396625202c386625\n"
".quad 0x68732e7473090a3b,0x3233662e64657261,0x2b346472255b0920,0x30316625202c5d30\n"
".quad 0x36335f744c240a3b,0x0a3a30313230335f,0x6e79732e72616209,0x6d090a3b30092063\n"
".quad 0x09203233752e766f,0x3b30202c32317225,0x652e70746573090a,0x2509203233752e71\n"
".quad 0x2c317225202c3670,0x090a3b3231722520,0x7262203670252140,0x335f744c24092061\n"
".quad 0x3b32323730335f36,0x3109636f6c2e090a,0x090a300932370936,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c313166,0x090a3b5d302b3464,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c323166,0x090a3b5d342b3464,0x203233662e646461\n"
".quad 0x25202c3331662509,0x316625202c313166,0x732e7473090a3b32,0x33662e6465726168\n"
".quad 0x346472255b092032,0x316625202c5d302b,0x335f744c240a3b33,0x3a32323730335f36\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x09363109636f6c2e,0x40090a3009333031\n"
".quad 0x6172622036702521,0x36335f744c240920,0x0a3b34333231335f,0x363109636f6c2e09\n"
".quad 0x090a300936303109,0x65726168732e646c,0x2509203233662e64,0x64735b202c343166\n"
".quad 0x0a3b5d302b617461,0x617261702e646c09,0x2509203436752e6d,0x5f5b202c31316472\n"
".quad 0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x454530624c45386a,0x5f6a6650664b5076,0x5d617461646f5f67,0x752e747663090a3b\n"
".quad 0x09203233752e3436,0x25202c3231647225,0x6c756d090a3b3272,0x33752e656469772e\n"
".quad 0x3331647225092032,0x34202c327225202c,0x752e646461090a3b,0x3164722509203436\n"
".quad 0x3131647225202c34,0x3b3331647225202c,0x6f6c672e7473090a,0x203233662e6c6162\n"
".quad 0x2b34316472255b09,0x34316625202c5d30,0x36335f744c240a3b,0x0a3a34333231335f\n"
".quad 0x363109636f6c2e09,0x090a300934343109,0x203233752e766f6d,0x31202c3331722509\n"
".quad 0x2e70746573090a3b,0x09203233752e656c,0x357225202c377025,0x0a3b33317225202c\n"
".quad 0x7262203770254009,0x335f744c24092061,0x3b36343731335f36,0x3109636f6c2e090a\n"
".quad 0x0a30093735310936,0x2e7261626d656d09,0x252140090a3b6c67,0x0920617262203670\n"
".quad 0x335f36335f744c24,0x2e090a3b38353232,0x3109363109636f6c,0x6f6d090a30093236\n"
".quad 0x2509203436752e76,0x6572202c35316472,0x746e656d65726974,0x090a3b746e756f43\n"
".quad 0x6f6c672e6d6f7461,0x2e636e692e6c6162,0x3172250920323375,0x316472255b202c34\n"
".quad 0x3b357225202c5d35,0x33732e766f6d090a,0x2c35317225092032,0x090a3b3431722520\n"
".quad 0x09363109636f6c2e,0x73090a3009343631,0x09203233752e6275,0x7225202c36317225\n"
".quad 0x73090a3b31202c35,0x33752e71652e7465,0x2509203233752e32,0x317225202c373172\n"
".quad 0x3b36317225202c35,0x33732e67656e090a,0x2c38317225092032,0x090a3b3731722520\n"
".quad 0x65726168732e7473,0x5f5b092038732e64,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x38335f3932333632,0x5d7473614c6d615f,0x0a3b38317225202c,0x335f36335f744c24\n"
".quad 0x2e090a3a38353232,0x3109363109636f6c,0x6162090a30093636,0x0920636e79732e72\n"
".quad 0x732e646c090a3b30,0x38732e6465726168,0x202c393172250920,0x5f616475635f5f5b\n"
".quad 0x61765f6c61636f6c,0x5f39323336325f72,0x73614c6d615f3833,0x766f6d090a3b5d74\n"
".quad 0x722509203233752e,0x090a3b30202c3032,0x2e71652e70746573,0x3870250920323373\n"
".quad 0x202c39317225202c,0x40090a3b30327225,0x2061726220387025,0x5f36335f744c2409\n"
".quad 0x090a3b3037373233,0x2e656c2e70746573,0x3970250920323375,0x25202c357225202c\n"
".quad 0x702540090a3b3172,0x2409206172622039,0x33335f36335f744c,0x6c2e090a3b383335\n"
".quad 0x373109363109636f,0x2e646c090a300932,0x36752e6d61726170,0x3631647225092034\n"
".quad 0x6475635f5f5b202c,0x5a5f5f6d72617061,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x4c45386a4c497373,0x664b507645453062,0x646f5f675f6a6650,0x61090a3b5d617461\n"
".quad 0x09203436752e6464,0x25202c3731647225,0x7225202c36316472,0x2e646c090a3b3264\n"
".quad 0x662e6c61626f6c67,0x3531662509203233,0x37316472255b202c,0x7262090a3b5d302b\n"
".quad 0x240920696e752e61,0x33335f36335f744c,0x744c240a3b323832,0x333533335f36335f\n"
".quad 0x2e766f6d090a3a38,0x3166250920323366,0x3030306630202c35,0x20203b3030303030\n"
".quad 0x0a30202f2f092020,0x335f36335f744c24,0x6d090a3a32383233,0x09203436752e766f\n"
".quad 0x73202c3831647225,0x6461090a3b6d656d,0x2509203436752e64,0x7225202c39316472\n"
".quad 0x31647225202c3264,0x732e7473090a3b38,0x33662e6465726168,0x316472255b092032\n"
".quad 0x6625202c5d302b39,0x6f6c2e090a3b3531,0x0939360936310963,0x732e726162090a30\n"
".quad 0x0a3b300920636e79,0x6220347025214009,0x5f744c2409206172,0x34393733335f3633\n"
".quad 0x09636f6c2e090a3b,0x0a30093037093631,0x726168732e646c09,0x09203233662e6465\n"
".quad 0x255b202c36316625,0x3b5d302b39316472,0x6168732e646c090a,0x203233662e646572\n"
".quad 0x5b202c3731662509,0x36312b3931647225,0x2e646461090a3b5d,0x3166250920323366\n"
".quad 0x2c36316625202c38,0x090a3b3731662520,0x65726168732e7473,0x5b09203233662e64\n"
".quad 0x5d302b3931647225,0x0a3b38316625202c,0x335f36335f744c24,0x62090a3a34393733\n"
".quad 0x20636e79732e7261,0x252140090a3b3009,0x0920617262203570,0x335f36335f744c24\n"
".quad 0x2e090a3b36303334,0x3709363109636f6c,0x2e646c090a300931,0x662e646572616873\n"
".quad 0x3931662509203233,0x39316472255b202c,0x646c090a3b5d302b,0x2e6465726168732e\n"
".quad 0x3266250920323366,0x316472255b202c30,0x61090a3b5d382b39,0x09203233662e6464\n"
".quad 0x6625202c31326625,0x30326625202c3931,0x68732e7473090a3b,0x3233662e64657261\n"
".quad 0x39316472255b0920,0x326625202c5d302b,0x335f744c240a3b31,0x3a36303334335f36\n"
".quad 0x79732e726162090a,0x090a3b300920636e,0x7262203670252140,0x335f744c24092061\n"
".quad 0x3b38313834335f36,0x3109636f6c2e090a,0x090a300932370936,0x65726168732e646c\n"
".quad 0x2509203233662e64,0x72255b202c323266,0x0a3b5d302b393164,0x726168732e646c09\n"
".quad 0x09203233662e6465,0x255b202c33326625,0x3b5d342b39316472,0x33662e646461090a\n"
".quad 0x2c34326625092032,0x25202c3232662520,0x7473090a3b333266,0x2e6465726168732e\n"
".quad 0x72255b0920323366,0x202c5d302b393164,0x4c240a3b34326625,0x3834335f36335f74\n"
".quad 0x726162090a3a3831,0x300920636e79732e,0x09636f6c2e090a3b,0x3009363731093631\n"
".quad 0x203670252140090a,0x744c240920617262,0x333335335f36335f,0x636f6c2e090a3b30\n"
".quad 0x0930383109363109,0x68732e646c090a30,0x3233662e64657261,0x202c353266250920\n"
".quad 0x5d302b6d656d735b,0x61702e646c090a3b,0x203436752e6d6172,0x202c303264722509\n"
".quad 0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x30624c45386a4c49,0x6650664b50764545,0x7461646f5f675f6a,0x2e7473090a3b5d61\n"
".quad 0x662e6c61626f6c67,0x6472255b09203233,0x25202c5d302b3032,0x6c2e090a3b353266\n"
".quad 0x383109363109636f,0x766f6d090a300933,0x722509203233752e,0x090a3b30202c3132\n"
".quad 0x61626f6c672e7473,0x5b09203233752e6c,0x656d657269746572,0x5d746e756f43746e\n"
".quad 0x0a3b31327225202c,0x335f36335f744c24,0x4c240a3a30333335,0x3732335f36335f74\n"
".quad 0x5f744c240a3a3037,0x36343731335f3633,0x09636f6c2e090a3a,0x3009373831093631\n"
".quad 0x0a3b74697865090a,0x5f646e6557444c24,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x386a4c4973736150,0x5076454530624c45,0x090a3a6a6650664b,0x315a5f202f2f207d\n"
".quad 0x5365637564657236,0x736150656c676e69,0x624c45386a4c4973,0x50664b5076454530\n"
".quad 0x6e652e090a0a6a66,0x36315a5f20797274,0x6953656375646572,0x73736150656c676e\n"
".quad 0x30624c45346a4c49,0x6650664b50764545,0x702e09090a28206a,0x36752e206d617261\n"
".quad 0x616475635f5f2034,0x315a5f5f6d726170,0x5365637564657236,0x736150656c676e69\n"
".quad 0x624c45346a4c4973,0x50664b5076454530,0x6164695f675f6a66,0x702e09090a2c6174\n"
".quad 0x36752e206d617261,0x616475635f5f2034,0x315a5f5f6d726170,0x5365637564657236\n"
".quad 0x736150656c676e69,0x624c45346a4c4973,0x50664b5076454530,0x61646f5f675f6a66\n"
".quad 0x702e09090a2c6174,0x33752e206d617261,0x616475635f5f2032,0x315a5f5f6d726170\n"
".quad 0x5365637564657236,0x736150656c676e69,0x624c45346a4c4973,0x50664b5076454530\n"
".quad 0x7b090a296e5f6a66,0x2e206765722e090a,0x3176722520323375,0x206765722e090a3b\n"
".quad 0x3c7225203233752e,0x722e090a3b3e3232,0x203436752e206765,0x3b3e32323c647225\n"
".quad 0x2e206765722e090a,0x323c662520323366,0x65722e090a3b3e31,0x20646572702e2067\n"
".quad 0x0a3b3e30313c7025,0x6465726168732e09,0x635f5f2038732e20,0x61636f6c5f616475\n"
".quad 0x36325f7261765f6c,0x615f38335f393233,0x090a3b7473614c6d,0x09363109636f6c2e\n"
".quad 0x4c240a3009373331,0x36315a5f5f314242,0x6953656375646572,0x73736150656c676e\n"
".quad 0x30624c45346a4c49,0x6650664b50764545,0x636f6c2e090a3a6a,0x3009363809363109\n"
".quad 0x33752e747663090a,0x2509203631752e32,0x64697425202c3172,0x747663090a3b782e\n"
".quad 0x3233752e3436752e,0x202c316472250920,0x756d090a3b317225,0x752e656469772e6c\n"
".quad 0x3264722509203233,0x34202c317225202c,0x752e766f6d090a3b,0x3364722509203436\n"
".quad 0x3b6174616473202c,0x36752e646461090a,0x2c34647225092034,0x25202c3264722520\n"
".quad 0x6f6d090a3b336472,0x2509203233662e76,0x30306630202c3166,0x203b303030303030\n"
".quad 0x202f2f0920202020,0x662e766f6d090a30,0x2c32662509203233,0x3030303030663020\n"
".quad 0x202020203b303030,0x090a30202f2f0920,0x65726168732e7473,0x5b09203233662e64\n"
".quad 0x2c5d302b34647225,0x63090a3b32662520,0x752e3233752e7476,0x2c32722509203631\n"
".quad 0x2e64696174632520,0x326c756d090a3b78,0x3233752e6f6c2e34,0x25202c3372250920\n"
".quad 0x090a3b38202c3272,0x203233752e646461,0x7225202c34722509,0x0a3b317225202c33\n"
".quad 0x3233752e74766309,0x722509203631752e,0x6174636e25202c35,0x6c090a3b782e6469\n"
".quad 0x2e6d617261702e64,0x3672250920323375,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4c45346a4c497373,0x664b507645453062\n"
".quad 0x0a3b5d6e5f6a6650,0x65672e7074657309,0x702509203233752e,0x202c347225202c31\n"
".quad 0x2540090a3b367225,0x0920617262203170,0x325f37335f744c24,0x61090a3b34373638\n"
".quad 0x09203233752e6464,0x347225202c377225,0x646c090a3b34202c,0x752e6d617261702e\n"
".quad 0x2c36722509203233,0x616475635f5f5b20,0x315a5f5f6d726170,0x5365637564657236\n"
".quad 0x736150656c676e69,0x624c45346a4c4973,0x50664b5076454530,0x090a3b5d6e5f6a66\n"
".quad 0x203233752e646461,0x7225202c38722509,0x6d090a3b34202c36,0x2e6f6c2e34326c75\n"
".quad 0x3972250920323375,0x38202c357225202c,0x732e747663090a3b,0x09203233752e3436\n"
".quad 0x7225202c35647225,0x702e646c090a3b39,0x3436752e6d617261,0x202c366472250920\n"
".quad 0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x30624c45346a4c49,0x6650664b50764545,0x746164695f675f6a,0x747663090a3b5d61\n"
".quad 0x3233752e3436752e,0x202c376472250920,0x756d090a3b347225,0x752e656469772e6c\n"
".quad 0x3864722509203233,0x34202c347225202c,0x752e646461090a3b,0x3964722509203436\n"
".quad 0x202c36647225202c,0x6d090a3b38647225,0x2e656469772e6c75,0x6472250920323375\n"
".quad 0x2c397225202c3031,0x5f744c240a3b3420,0x36383139325f3733,0x6f6c3c2f2f200a3a\n"
".quad 0x706f6f4c203e706f,0x696c2079646f6220,0x6e202c363820656e,0x6420676e69747365\n"
".quad 0x2c31203a68747065,0x74616d6974736520,0x6172657469206465,0x75203a736e6f6974\n"
".quad 0x090a6e776f6e6b6e,0x09363109636f6c2e,0x646c090a30093339,0x2e6c61626f6c672e\n"
".quad 0x3366250920323366,0x2b396472255b202c,0x646461090a3b5d30,0x662509203233662e\n"
".quad 0x202c336625202c31,0x7473090a3b316625,0x2e6465726168732e,0x72255b0920323366\n"
".quad 0x25202c5d302b3464,0x6f6c2e090a3b3166,0x0936380936310963,0x61702e646c090a30\n"
".quad 0x203233752e6d6172,0x5f5b202c36722509,0x726170616475635f,0x657236315a5f5f6d\n"
".quad 0x676e695365637564,0x4c4973736150656c,0x454530624c45346a,0x5f6a6650664b5076\n"
".quad 0x6f6c2e090a3b5d6e,0x0933390936310963,0x2e70746573090a30,0x09203233752e6567\n"
".quad 0x377225202c327025,0x090a3b367225202c,0x6172622032702540,0x37335f744c240920\n"
".quad 0x0a3b32343439325f,0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066\n"
".quad 0x656e696c2079646f,0x616568202c363820,0x656c6562616c2064,0x37335f744c242064\n"
".quad 0x090a36383139325f,0x09363109636f6c2e,0x646c090a30093639,0x2e6c61626f6c672e\n"
".quad 0x3466250920323366,0x2b396472255b202c,0x6461090a3b5d3631,0x2509203233662e64\n"
".quad 0x2c346625202c3166,0x73090a3b31662520,0x6465726168732e74,0x255b09203233662e\n"
".quad 0x202c5d302b346472,0x744c240a3b316625,0x343439325f37335f,0x6c3c2f2f200a3a32\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x202c363820656e69\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x383139325f37335f,0x752e646461090a36\n"
".quad 0x2c37722509203233,0x7225202c37722520,0x2e646461090a3b39,0x6472250920343675\n"
".quad 0x2c39647225202c39,0x0a3b303164722520,0x746c2e7074657309,0x702509203233752e\n"
".quad 0x202c377225202c33,0x2540090a3b387225,0x0920617262203370,0x325f37335f744c24\n"
".quad 0x4c240a3b36383139,0x3638325f37335f74,0x6f6c2e090a3a3437,0x0930370936310963\n"
".quad 0x732e726162090a30,0x0a3b300920636e79,0x3233752e766f6d09,0x202c303172250920\n"
".quad 0x70746573090a3b31,0x203233752e656c2e,0x7225202c34702509,0x3b30317225202c31\n"
".quad 0x203470252140090a,0x744c240920617262,0x313230335f37335f,0x636f6c2e090a3b30\n"
".quad 0x3009313709363109,0x6168732e646c090a,0x203233662e646572,0x255b202c35662509\n"
".quad 0x0a3b5d302b346472,0x726168732e646c09,0x09203233662e6465,0x72255b202c366625\n"
".quad 0x090a3b5d382b3464,0x203233662e646461,0x6625202c37662509,0x0a3b366625202c35\n"
".quad 0x726168732e747309,0x09203233662e6465,0x5d302b346472255b,0x240a3b376625202c\n"
".quad 0x30335f37335f744c,0x6162090a3a303132,0x0920636e79732e72,0x2e766f6d090a3b30\n"
".quad 0x3172250920323375,0x73090a3b30202c31,0x752e71652e707465,0x2c35702509203233\n"
".quad 0x7225202c31722520,0x252140090a3b3131,0x0920617262203570,0x335f37335f744c24\n"
".quad 0x2e090a3b32323730,0x3709363109636f6c,0x2e646c090a300932,0x662e646572616873\n"
".quad 0x2c38662509203233,0x302b346472255b20,0x732e646c090a3b5d,0x33662e6465726168\n"
".quad 0x202c396625092032,0x5d342b346472255b,0x662e646461090a3b,0x3031662509203233\n"
".quad 0x25202c386625202c,0x2e7473090a3b3966,0x662e646572616873,0x6472255b09203233\n"
".quad 0x6625202c5d302b34,0x5f744c240a3b3031,0x32323730335f3733,0x732e726162090a3a\n"
".quad 0x0a3b300920636e79,0x363109636f6c2e09,0x090a300933303109,0x7262203570252140\n"
".quad 0x335f744c24092061,0x3b34333231335f37,0x3109636f6c2e090a,0x0a30093630310936\n"
".quad 0x726168732e646c09,0x09203233662e6465,0x735b202c31316625,0x3b5d302b61746164\n"
".quad 0x7261702e646c090a,0x09203436752e6d61,0x5b202c3131647225,0x6170616475635f5f\n"
".quad 0x7236315a5f5f6d72,0x6e69536563756465,0x4973736150656c67,0x4530624c45346a4c\n"
".quad 0x6a6650664b507645,0x617461646f5f675f,0x2e747663090a3b5d,0x203233752e343675\n"
".quad 0x202c323164722509,0x756d090a3b327225,0x752e656469772e6c,0x3164722509203233\n"
".quad 0x202c327225202c33,0x2e646461090a3b34,0x6472250920343675,0x31647225202c3431\n"
".quad 0x3331647225202c31,0x6c672e7473090a3b,0x3233662e6c61626f,0x34316472255b0920\n"
".quad 0x316625202c5d302b,0x335f744c240a3b31,0x3a34333231335f37,0x3109636f6c2e090a\n"
".quad 0x0a30093434310936,0x3233752e766f6d09,0x202c323172250920,0x70746573090a3b31\n"
".quad 0x203233752e656c2e,0x7225202c36702509,0x3b32317225202c35,0x622036702540090a\n"
".quad 0x5f744c2409206172,0x36343731335f3733,0x09636f6c2e090a3b,0x3009373531093631\n"
".quad 0x7261626d656d090a,0x2140090a3b6c672e,0x2061726220357025,0x5f37335f744c2409\n"
".quad 0x090a3b3835323233,0x09363109636f6c2e,0x6d090a3009323631,0x09203436752e766f\n"
".quad 0x72202c3531647225,0x6e656d6572697465,0x0a3b746e756f4374,0x6c672e6d6f746109\n"
".quad 0x636e692e6c61626f,0x722509203233752e,0x6472255b202c3331,0x357225202c5d3531\n"
".quad 0x732e766f6d090a3b,0x3431722509203233,0x0a3b33317225202c,0x363109636f6c2e09\n"
".quad 0x090a300934363109,0x203233752e627573,0x25202c3531722509,0x090a3b31202c3572\n"
".quad 0x752e71652e746573,0x09203233752e3233,0x7225202c36317225,0x35317225202c3431\n"
".quad 0x732e67656e090a3b,0x3731722509203233,0x0a3b36317225202c,0x726168732e747309\n"
".quad 0x5b092038732e6465,0x6c5f616475635f5f,0x7261765f6c61636f,0x335f39323336325f\n"
".quad 0x7473614c6d615f38,0x3b37317225202c5d,0x5f37335f744c240a,0x090a3a3835323233\n"
".quad 0x09363109636f6c2e,0x62090a3009363631,0x20636e79732e7261,0x2e646c090a3b3009\n"
".quad 0x732e646572616873,0x2c38317225092038,0x616475635f5f5b20,0x765f6c61636f6c5f\n"
".quad 0x39323336325f7261,0x614c6d615f38335f,0x6f6d090a3b5d7473,0x2509203233752e76\n"
".quad 0x0a3b30202c393172,0x71652e7074657309,0x702509203233732e,0x2c38317225202c37\n"
".quad 0x090a3b3931722520,0x6172622037702540,0x37335f744c240920,0x0a3b30373732335f\n"
".quad 0x656c2e7074657309,0x702509203233752e,0x202c357225202c38,0x2540090a3b317225\n"
".quad 0x0920617262203870,0x335f37335f744c24,0x2e090a3b38333533,0x3109363109636f6c\n"
".quad 0x646c090a30093237,0x752e6d617261702e,0x3164722509203436,0x75635f5f5b202c36\n"
".quad 0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365,0x45346a4c49737361\n"
".quad 0x4b5076454530624c,0x6f5f675f6a665066,0x090a3b5d61746164,0x203436752e646461\n"
".quad 0x202c373164722509,0x25202c3631647225,0x646c090a3b326472,0x2e6c61626f6c672e\n"
".quad 0x3166250920323366,0x316472255b202c32,0x62090a3b5d302b37,0x0920696e752e6172\n"
".quad 0x335f37335f744c24,0x4c240a3b32383233,0x3533335f37335f74,0x766f6d090a3a3833\n"
".quad 0x662509203233662e,0x30306630202c3231,0x203b303030303030,0x30202f2f09202020\n"
".quad 0x5f37335f744c240a,0x090a3a3238323333,0x203436752e766f6d,0x202c383164722509\n"
".quad 0x61090a3b6d656d73,0x09203436752e6464,0x25202c3931647225,0x647225202c326472\n"
".quad 0x2e7473090a3b3831,0x662e646572616873,0x6472255b09203233,0x25202c5d302b3931\n"
".quad 0x6c2e090a3b323166,0x303709363109636f,0x2e726162090a3009,0x3b300920636e7973\n"
".quad 0x203470252140090a,0x744c240920617262,0x393733335f37335f,0x636f6c2e090a3b34\n"
".quad 0x3009313709363109,0x6168732e646c090a,0x203233662e646572,0x5b202c3331662509\n"
".quad 0x5d302b3931647225,0x68732e646c090a3b,0x3233662e64657261,0x202c343166250920\n"
".quad 0x382b39316472255b,0x2e646461090a3b5d,0x3166250920323366,0x2c33316625202c35\n"
".quad 0x090a3b3431662520,0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225\n"
".quad 0x0a3b35316625202c,0x335f37335f744c24,0x62090a3a34393733,0x20636e79732e7261\n"
".quad 0x252140090a3b3009,0x0920617262203570,0x335f37335f744c24,0x2e090a3b36303334\n"
".quad 0x3709363109636f6c,0x2e646c090a300932,0x662e646572616873,0x3631662509203233\n"
".quad 0x39316472255b202c,0x646c090a3b5d302b,0x2e6465726168732e,0x3166250920323366\n"
".quad 0x316472255b202c37,0x61090a3b5d342b39,0x09203233662e6464,0x6625202c38316625\n"
".quad 0x37316625202c3631,0x68732e7473090a3b,0x3233662e64657261,0x39316472255b0920\n"
".quad 0x316625202c5d302b,0x335f744c240a3b38,0x3a36303334335f37,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x09363109636f6c2e,0x40090a3009363731,0x6172622035702521\n"
".quad 0x37335f744c240920,0x0a3b38313834335f,0x363109636f6c2e09,0x090a300930383109\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x6d735b202c393166,0x090a3b5d302b6d65\n"
".quad 0x6d617261702e646c,0x722509203436752e,0x5f5f5b202c303264,0x6d72617061647563\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x76454530624c4534\n"
".quad 0x675f6a6650664b50,0x3b5d617461646f5f,0x6f6c672e7473090a,0x203233662e6c6162\n"
".quad 0x2b30326472255b09,0x39316625202c5d30,0x09636f6c2e090a3b,0x3009333831093631\n"
".quad 0x33752e766f6d090a,0x2c30327225092032,0x2e7473090a3b3020,0x752e6c61626f6c67\n"
".quad 0x7465725b09203233,0x43746e656d657269,0x25202c5d746e756f,0x744c240a3b303272\n"
".quad 0x313834335f37335f,0x335f744c240a3a38,0x3a30373732335f37,0x5f37335f744c240a\n"
".quad 0x090a3a3634373133,0x09363109636f6c2e,0x65090a3009373831,0x444c240a3b746978\n"
".quad 0x315a5f5f646e6557,0x5365637564657236,0x736150656c676e69,0x624c45346a4c4973\n"
".quad 0x50664b5076454530,0x2f207d090a3a6a66,0x657236315a5f202f,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x454530624c45346a,0x0a6a6650664b5076,0x7972746e652e090a\n"
".quad 0x64657236315a5f20,0x6c676e6953656375,0x6a4c497373615065,0x76454530624c4532\n"
".quad 0x28206a6650664b50,0x617261702e09090a,0x5f203436752e206d,0x726170616475635f\n"
".quad 0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c,0x454530624c45326a\n"
".quad 0x5f6a6650664b5076,0x2c61746164695f67,0x617261702e09090a,0x5f203436752e206d\n"
".quad 0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564,0x4c4973736150656c\n"
".quad 0x454530624c45326a,0x5f6a6650664b5076,0x2c617461646f5f67,0x617261702e09090a\n"
".quad 0x5f203233752e206d,0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x454530624c45326a,0x5f6a6650664b5076,0x2e090a7b090a296e\n"
".quad 0x3233752e20676572,0x090a3b3176722520,0x33752e206765722e,0x3e31323c72252032\n"
".quad 0x206765722e090a3b,0x647225203436752e,0x2e090a3b3e32323c,0x3233662e20676572\n"
".quad 0x3b3e35313c662520,0x2e206765722e090a,0x3c70252064657270,0x68732e090a3b3e39\n"
".quad 0x38732e2064657261,0x5f616475635f5f20,0x61765f6c61636f6c,0x5f39323336325f72\n"
".quad 0x73614c6d615f3833,0x636f6c2e090a3b74,0x0937333109363109,0x5f3142424c240a30\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x326a4c4973736150,0x5076454530624c45\n"
".quad 0x090a3a6a6650664b,0x09363109636f6c2e,0x7663090a30093638,0x31752e3233752e74\n"
".quad 0x202c317225092036,0x0a3b782e64697425,0x3436752e74766309,0x722509203233752e\n"
".quad 0x3b317225202c3164,0x69772e6c756d090a,0x09203233752e6564,0x7225202c32647225\n"
".quad 0x6d090a3b34202c31,0x09203436752e766f,0x6473202c33647225,0x6461090a3b617461\n"
".quad 0x2509203436752e64,0x647225202c346472,0x3b33647225202c32,0x33662e766f6d090a\n"
".quad 0x202c316625092032,0x3030303030306630,0x20202020203b3030,0x6d090a30202f2f09\n"
".quad 0x09203233662e766f,0x306630202c326625,0x3b30303030303030,0x2f2f092020202020\n"
".quad 0x732e7473090a3020,0x33662e6465726168,0x346472255b092032,0x326625202c5d302b\n"
".quad 0x752e747663090a3b,0x09203631752e3233,0x746325202c327225,0x090a3b782e646961\n"
".quad 0x6f6c2e34326c756d,0x722509203233752e,0x202c327225202c33,0x2e646461090a3b34\n"
".quad 0x3472250920323375,0x25202c337225202c,0x747663090a3b3172,0x3631752e3233752e\n"
".quad 0x25202c3572250920,0x782e64696174636e,0x61702e646c090a3b,0x203233752e6d6172\n"
".quad 0x5f5b202c36722509,0x726170616475635f,0x657236315a5f5f6d,0x676e695365637564\n"
".quad 0x4c4973736150656c,0x454530624c45326a,0x5f6a6650664b5076,0x746573090a3b5d6e\n"
".quad 0x3233752e65672e70,0x25202c3170250920,0x3b367225202c3472,0x622031702540090a\n"
".quad 0x5f744c2409206172,0x36383139325f3833,0x752e646461090a3b,0x2c37722509203233\n"
".quad 0x3b32202c34722520,0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c367225\n"
".quad 0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x76454530624c4532,0x6e5f6a6650664b50,0x2e646461090a3b5d,0x3872250920323375\n"
".quad 0x32202c367225202c,0x34326c756d090a3b,0x203233752e6f6c2e,0x7225202c39722509\n"
".quad 0x63090a3b34202c35,0x752e3436732e7476,0x3564722509203233,0x090a3b397225202c\n"
".quad 0x6d617261702e646c,0x722509203436752e,0x635f5f5b202c3664,0x5f6d726170616475\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x326a4c4973736150,0x5076454530624c45\n"
".quad 0x5f675f6a6650664b,0x0a3b5d6174616469,0x3436752e74766309,0x722509203233752e\n"
".quad 0x3b347225202c3764,0x69772e6c756d090a,0x09203233752e6564,0x7225202c38647225\n"
".quad 0x61090a3b34202c34,0x09203436752e6464,0x7225202c39647225,0x38647225202c3664\n"
".quad 0x772e6c756d090a3b,0x203233752e656469,0x202c303164722509,0x0a3b34202c397225\n"
".quad 0x325f38335f744c24,0x2f200a3a38393639,0x203e706f6f6c3c2f,0x646f6220706f6f4c\n"
".quad 0x3820656e696c2079,0x697473656e202c36,0x687470656420676e,0x747365202c31203a\n"
".quad 0x6920646574616d69,0x6e6f697461726574,0x6f6e6b6e75203a73,0x636f6c2e090a6e77\n"
".quad 0x3009333909363109,0x6f6c672e646c090a,0x203233662e6c6162,0x255b202c33662509\n"
".quad 0x0a3b5d302b396472,0x3233662e64646109,0x25202c3166250920,0x3b316625202c3366\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x0a3b316625202c5d\n"
".quad 0x363109636f6c2e09,0x6c090a3009363809,0x2e6d617261702e64,0x3672250920323375\n"
".quad 0x6475635f5f5b202c,0x5a5f5f6d72617061,0x6563756465723631,0x6150656c676e6953\n"
".quad 0x4c45326a4c497373,0x664b507645453062,0x0a3b5d6e5f6a6650,0x363109636f6c2e09\n"
".quad 0x73090a3009333909,0x752e65672e707465,0x2c32702509203233,0x7225202c37722520\n"
".quad 0x32702540090a3b36,0x4c24092061726220,0x3939325f38335f74,0x3c2f2f200a3b3435\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x2c363820656e696c\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x3639325f38335f74,0x636f6c2e090a3839\n"
".quad 0x3009363909363109,0x6f6c672e646c090a,0x203233662e6c6162,0x255b202c34662509\n"
".quad 0x0a3b5d382b396472,0x3233662e64646109,0x25202c3166250920,0x3b316625202c3466\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x0a3b316625202c5d\n"
".quad 0x325f38335f744c24,0x2f200a3a34353939,0x203e706f6f6c3c2f,0x20666f2074726150\n"
".quad 0x646f6220706f6f6c,0x3820656e696c2079,0x2064616568202c36,0x2064656c6562616c\n"
".quad 0x325f38335f744c24,0x6461090a38393639,0x2509203233752e64,0x2c377225202c3772\n"
".quad 0x61090a3b39722520,0x09203436752e6464,0x7225202c39647225,0x31647225202c3964\n"
".quad 0x70746573090a3b30,0x203233752e746c2e,0x7225202c33702509,0x0a3b387225202c37\n"
".quad 0x7262203370254009,0x335f744c24092061,0x3b38393639325f38,0x5f38335f744c240a\n"
".quad 0x090a3a3638313932,0x09363109636f6c2e,0x6162090a30093137,0x0920636e79732e72\n"
".quad 0x2e766f6d090a3b30,0x3172250920323375,0x73090a3b30202c30,0x752e71652e707465\n"
".quad 0x2c34702509203233,0x7225202c31722520,0x252140090a3b3031,0x0920617262203470\n"
".quad 0x335f38335f744c24,0x2e090a3b32323730,0x3709363109636f6c,0x2e646c090a300932\n"
".quad 0x662e646572616873,0x2c35662509203233,0x302b346472255b20,0x732e646c090a3b5d\n"
".quad 0x33662e6465726168,0x202c366625092032,0x5d342b346472255b,0x662e646461090a3b\n"
".quad 0x2c37662509203233,0x6625202c35662520,0x732e7473090a3b36,0x33662e6465726168\n"
".quad 0x346472255b092032,0x376625202c5d302b,0x38335f744c240a3b,0x0a3a32323730335f\n"
".quad 0x6e79732e72616209,0x2e090a3b30092063,0x3109363109636f6c,0x2140090a30093330\n"
".quad 0x2061726220347025,0x5f38335f744c2409,0x090a3b3433323133,0x09363109636f6c2e\n"
".quad 0x6c090a3009363031,0x6465726168732e64,0x662509203233662e,0x746164735b202c38\n"
".quad 0x6c090a3b5d302b61,0x2e6d617261702e64,0x6472250920343675,0x635f5f5b202c3131\n"
".quad 0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563,0x326a4c4973736150\n"
".quad 0x5076454530624c45,0x5f675f6a6650664b,0x0a3b5d617461646f,0x3436752e74766309\n"
".quad 0x722509203233752e,0x327225202c323164,0x772e6c756d090a3b,0x203233752e656469\n"
".quad 0x202c333164722509,0x0a3b34202c327225,0x3436752e64646109,0x2c34316472250920\n"
".quad 0x202c313164722520,0x090a3b3331647225,0x61626f6c672e7473,0x5b09203233662e6c\n"
".quad 0x5d302b3431647225,0x240a3b386625202c,0x31335f38335f744c,0x6c2e090a3a343332\n"
".quad 0x343109363109636f,0x766f6d090a300934,0x722509203233752e,0x090a3b31202c3131\n"
".quad 0x2e656c2e70746573,0x3570250920323375,0x25202c357225202c,0x2540090a3b313172\n"
".quad 0x0920617262203570,0x335f38335f744c24,0x2e090a3b36343731,0x3109363109636f6c\n"
".quad 0x656d090a30093735,0x3b6c672e7261626d,0x203470252140090a,0x744c240920617262\n"
".quad 0x353232335f38335f,0x636f6c2e090a3b38,0x0932363109363109,0x752e766f6d090a30\n"
".quad 0x3164722509203436,0x7269746572202c35,0x756f43746e656d65,0x6f7461090a3b746e\n"
".quad 0x6c61626f6c672e6d,0x3233752e636e692e,0x202c323172250920,0x2c5d35316472255b\n"
".quad 0x6d090a3b35722520,0x09203233732e766f,0x7225202c33317225,0x6f6c2e090a3b3231\n"
".quad 0x3436310936310963,0x2e627573090a3009,0x3172250920323375,0x202c357225202c34\n"
".quad 0x2e746573090a3b31,0x752e3233752e7165,0x3531722509203233,0x202c33317225202c\n"
".quad 0x6e090a3b34317225,0x09203233732e6765,0x7225202c36317225,0x2e7473090a3b3531\n"
".quad 0x732e646572616873,0x75635f5f5b092038,0x6c61636f6c5f6164,0x3336325f7261765f\n"
".quad 0x6d615f38335f3932,0x25202c5d7473614c,0x744c240a3b363172,0x353232335f38335f\n"
".quad 0x636f6c2e090a3a38,0x0936363109363109,0x732e726162090a30,0x0a3b300920636e79\n"
".quad 0x726168732e646c09,0x25092038732e6465,0x5f5f5b202c373172,0x636f6c5f61647563\n"
".quad 0x325f7261765f6c61,0x5f38335f39323336,0x3b5d7473614c6d61,0x33752e766f6d090a\n"
".quad 0x2c38317225092032,0x746573090a3b3020,0x3233732e71652e70,0x25202c3670250920\n"
".quad 0x317225202c373172,0x36702540090a3b38,0x4c24092061726220,0x3732335f38335f74\n"
".quad 0x746573090a3b3037,0x3233752e656c2e70,0x25202c3770250920,0x3b317225202c3572\n"
".quad 0x622037702540090a,0x5f744c2409206172,0x38333533335f3833,0x09636f6c2e090a3b\n"
".quad 0x3009323731093631,0x7261702e646c090a,0x09203436752e6d61,0x5b202c3631647225\n"
".quad 0x6170616475635f5f,0x7236315a5f5f6d72,0x6e69536563756465,0x4973736150656c67\n"
".quad 0x4530624c45326a4c,0x6a6650664b507645,0x617461646f5f675f,0x2e646461090a3b5d\n"
".quad 0x6472250920343675,0x31647225202c3731,0x3b32647225202c36,0x6f6c672e646c090a\n"
".quad 0x203233662e6c6162,0x255b202c39662509,0x3b5d302b37316472,0x6e752e617262090a\n"
".quad 0x335f744c24092069,0x3b32383233335f38,0x5f38335f744c240a,0x090a3a3833353333\n"
".quad 0x203233662e766f6d,0x6630202c39662509,0x3030303030303030,0x2f0920202020203b\n"
".quad 0x5f744c240a30202f,0x32383233335f3833,0x752e766f6d090a3a,0x3164722509203436\n"
".quad 0x3b6d656d73202c38,0x36752e646461090a,0x3931647225092034,0x202c32647225202c\n"
".quad 0x090a3b3831647225,0x65726168732e7473,0x5b09203233662e64,0x5d302b3931647225\n"
".quad 0x090a3b396625202c,0x09363109636f6c2e,0x6162090a30093137,0x0920636e79732e72\n"
".quad 0x70252140090a3b30,0x2409206172622034,0x33335f38335f744c,0x6c2e090a3b343937\n"
".quad 0x323709363109636f,0x732e646c090a3009,0x33662e6465726168,0x2c30316625092032\n"
".quad 0x2b39316472255b20,0x2e646c090a3b5d30,0x662e646572616873,0x3131662509203233\n"
".quad 0x39316472255b202c,0x6461090a3b5d342b,0x2509203233662e64,0x316625202c323166\n"
".quad 0x3b31316625202c30,0x6168732e7473090a,0x203233662e646572,0x2b39316472255b09\n"
".quad 0x32316625202c5d30,0x38335f744c240a3b,0x0a3a34393733335f,0x6e79732e72616209\n"
".quad 0x2e090a3b30092063,0x3109363109636f6c,0x2140090a30093637,0x2061726220347025\n"
".quad 0x5f38335f744c2409,0x090a3b3630333433,0x09363109636f6c2e,0x6c090a3009303831\n"
".quad 0x6465726168732e64,0x662509203233662e,0x656d735b202c3331,0x6c090a3b5d302b6d\n"
".quad 0x2e6d617261702e64,0x6472250920343675,0x635f5f5b202c3032,0x5f6d726170616475\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x326a4c4973736150,0x5076454530624c45\n"
".quad 0x5f675f6a6650664b,0x0a3b5d617461646f,0x626f6c672e747309,0x09203233662e6c61\n"
".quad 0x302b30326472255b,0x3b33316625202c5d,0x3109636f6c2e090a,0x0a30093338310936\n"
".quad 0x3233752e766f6d09,0x202c393172250920,0x672e7473090a3b30,0x33752e6c61626f6c\n"
".quad 0x697465725b092032,0x6f43746e656d6572,0x7225202c5d746e75,0x5f744c240a3b3931\n"
".quad 0x36303334335f3833,0x38335f744c240a3a,0x0a3a30373732335f,0x335f38335f744c24\n"
".quad 0x2e090a3a36343731,0x3109363109636f6c,0x7865090a30093738,0x57444c240a3b7469\n"
".quad 0x36315a5f5f646e65,0x6953656375646572,0x73736150656c676e,0x30624c45326a4c49\n"
".quad 0x6650664b50764545,0x2f2f207d090a3a6a,0x64657236315a5f20,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x76454530624c4532,0x0a0a6a6650664b50,0x207972746e652e09\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150,0x5076454530624c45\n"
".quad 0x0a28206a6650664b,0x6d617261702e0909,0x5f5f203436752e20,0x6d72617061647563\n"
".quad 0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065,0x76454530624c4531\n"
".quad 0x675f6a6650664b50,0x0a2c61746164695f,0x6d617261702e0909,0x5f5f203436752e20\n"
".quad 0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375,0x6a4c497373615065\n"
".quad 0x76454530624c4531,0x675f6a6650664b50,0x0a2c617461646f5f,0x6d617261702e0909\n"
".quad 0x5f5f203233752e20,0x6d72617061647563,0x64657236315a5f5f,0x6c676e6953656375\n"
".quad 0x6a4c497373615065,0x76454530624c4531,0x6e5f6a6650664b50,0x722e090a7b090a29\n"
".quad 0x203233752e206765,0x2e090a3b31767225,0x3233752e20676572,0x3b3e31323c722520\n"
".quad 0x2e206765722e090a,0x3c64722520343675,0x722e090a3b3e3232,0x203233662e206765\n"
".quad 0x090a3b3e393c6625,0x72702e206765722e,0x3e393c7025206465,0x726168732e090a3b\n"
".quad 0x5f2038732e206465,0x6f6c5f616475635f,0x5f7261765f6c6163,0x38335f3932333632\n"
".quad 0x3b7473614c6d615f,0x3109636f6c2e090a,0x0a30093733310936,0x5a5f5f3142424c24\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4c45316a4c497373,0x664b507645453062\n"
".quad 0x6c2e090a3a6a6650,0x363809363109636f,0x2e747663090a3009,0x203631752e323375\n"
".quad 0x7425202c31722509,0x63090a3b782e6469,0x752e3436752e7476,0x3164722509203233\n"
".quad 0x090a3b317225202c,0x656469772e6c756d,0x722509203233752e,0x2c317225202c3264\n"
".quad 0x766f6d090a3b3420,0x722509203436752e,0x74616473202c3364,0x2e646461090a3b61\n"
".quad 0x6472250920343675,0x2c32647225202c34,0x090a3b3364722520,0x203233662e766f6d\n"
".quad 0x6630202c31662509,0x3030303030303030,0x2f0920202020203b,0x766f6d090a30202f\n"
".quad 0x662509203233662e,0x3030306630202c32,0x20203b3030303030,0x30202f2f09202020\n"
".quad 0x6168732e7473090a,0x203233662e646572,0x302b346472255b09,0x0a3b326625202c5d\n"
".quad 0x3233752e74766309,0x722509203631752e,0x6961746325202c32,0x756d090a3b782e64\n"
".quad 0x752e6f6c2e34326c,0x2c33722509203233,0x3b32202c32722520,0x33752e646461090a\n"
".quad 0x202c347225092032,0x317225202c337225,0x752e747663090a3b,0x09203631752e3233\n"
".quad 0x636e25202c357225,0x0a3b782e64696174,0x617261702e646c09,0x2509203233752e6d\n"
".quad 0x635f5f5b202c3672,0x5f6d726170616475,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x316a4c4973736150,0x5076454530624c45,0x5d6e5f6a6650664b,0x2e70746573090a3b\n"
".quad 0x09203233752e6567,0x347225202c317025,0x090a3b367225202c,0x6172622031702540\n"
".quad 0x39335f744c240920,0x0a3b38393639325f,0x3233752e64646109,0x25202c3772250920\n"
".quad 0x090a3b31202c3472,0x6d617261702e646c,0x722509203233752e,0x75635f5f5b202c36\n"
".quad 0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365,0x45316a4c49737361\n"
".quad 0x4b5076454530624c,0x3b5d6e5f6a665066,0x33752e646461090a,0x202c387225092032\n"
".quad 0x0a3b31202c367225,0x6c2e34326c756d09,0x2509203233752e6f,0x2c357225202c3972\n"
".quad 0x747663090a3b3220,0x3233752e3436732e,0x202c356472250920,0x646c090a3b397225\n"
".quad 0x752e6d617261702e,0x3664722509203436,0x6475635f5f5b202c,0x5a5f5f6d72617061\n"
".quad 0x6563756465723631,0x6150656c676e6953,0x4c45316a4c497373,0x664b507645453062\n"
".quad 0x64695f675f6a6650,0x63090a3b5d617461,0x752e3436752e7476,0x3764722509203233\n"
".quad 0x090a3b347225202c,0x656469772e6c756d,0x722509203233752e,0x2c347225202c3864\n"
".quad 0x646461090a3b3420,0x722509203436752e,0x36647225202c3964,0x0a3b38647225202c\n"
".quad 0x6469772e6c756d09,0x2509203233752e65,0x7225202c30316472,0x4c240a3b34202c39\n"
".quad 0x3230335f39335f74,0x3c2f2f200a3a3031,0x6f4c203e706f6f6c,0x2079646f6220706f\n"
".quad 0x2c363820656e696c,0x676e697473656e20,0x203a687470656420,0x6d69747365202c31\n"
".quad 0x6574692064657461,0x3a736e6f69746172,0x6e776f6e6b6e7520,0x3109636f6c2e090a\n"
".quad 0x090a300933390936,0x61626f6c672e646c,0x2509203233662e6c,0x6472255b202c3366\n"
".quad 0x61090a3b5d302b39,0x09203233662e6464,0x336625202c316625,0x090a3b316625202c\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x2e090a3b31662520\n"
".quad 0x3809363109636f6c,0x2e646c090a300936,0x33752e6d61726170,0x202c367225092032\n"
".quad 0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x30624c45316a4c49,0x6650664b50764545,0x2e090a3b5d6e5f6a,0x3909363109636f6c\n"
".quad 0x746573090a300933,0x3233752e65672e70,0x25202c3270250920,0x3b367225202c3772\n"
".quad 0x622032702540090a,0x5f744c2409206172,0x36363430335f3933,0x6f6c3c2f2f200a3b\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x68202c363820656e\n"
".quad 0x6562616c20646165,0x5f744c242064656c,0x30313230335f3933,0x3109636f6c2e090a\n"
".quad 0x090a300936390936,0x61626f6c672e646c,0x2509203233662e6c,0x6472255b202c3466\n"
".quad 0x61090a3b5d342b39,0x09203233662e6464,0x346625202c316625,0x090a3b316625202c\n"
".quad 0x65726168732e7473,0x5b09203233662e64,0x2c5d302b34647225,0x4c240a3b31662520\n"
".quad 0x3430335f39335f74,0x3c2f2f200a3a3636,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x2c363820656e696c,0x616c206461656820,0x4c242064656c6562\n"
".quad 0x3230335f39335f74,0x2e646461090a3031,0x3772250920323375,0x25202c377225202c\n"
".quad 0x646461090a3b3972,0x722509203436752e,0x39647225202c3964,0x3b3031647225202c\n"
".quad 0x6c2e70746573090a,0x2509203233752e74,0x2c377225202c3370,0x40090a3b38722520\n"
".quad 0x2061726220337025,0x5f39335f744c2409,0x240a3b3031323033,0x39325f39335f744c\n"
".quad 0x6c2e090a3a383936,0x323709363109636f,0x2e726162090a3009,0x3b300920636e7973\n"
".quad 0x3109636f6c2e090a,0x0a30093330310936,0x3233752e766f6d09,0x202c303172250920\n"
".quad 0x70746573090a3b30,0x203233752e71652e,0x7225202c34702509,0x3b30317225202c31\n"
".quad 0x203470252140090a,0x744c240920617262,0x333231335f39335f,0x636f6c2e090a3b34\n"
".quad 0x0936303109363109,0x68732e646c090a30,0x3233662e64657261,0x5b202c3566250920\n"
".quad 0x5d302b6174616473,0x61702e646c090a3b,0x203436752e6d6172,0x202c313164722509\n"
".quad 0x70616475635f5f5b,0x36315a5f5f6d7261,0x6953656375646572,0x73736150656c676e\n"
".quad 0x30624c45316a4c49,0x6650664b50764545,0x7461646f5f675f6a,0x747663090a3b5d61\n"
".quad 0x3233752e3436752e,0x2c32316472250920,0x6d090a3b32722520,0x2e656469772e6c75\n"
".quad 0x6472250920323375,0x2c327225202c3331,0x646461090a3b3420,0x722509203436752e\n"
".quad 0x647225202c343164,0x31647225202c3131,0x672e7473090a3b33,0x33662e6c61626f6c\n"
".quad 0x316472255b092032,0x6625202c5d302b34,0x335f744c240a3b35,0x3a34333231335f39\n"
".quad 0x3109636f6c2e090a,0x0a30093434310936,0x3233752e766f6d09,0x202c313172250920\n"
".quad 0x70746573090a3b31,0x203233752e656c2e,0x7225202c35702509,0x3b31317225202c35\n"
".quad 0x622035702540090a,0x5f744c2409206172,0x36343731335f3933,0x09636f6c2e090a3b\n"
".quad 0x3009373531093631,0x7261626d656d090a,0x2140090a3b6c672e,0x2061726220347025\n"
".quad 0x5f39335f744c2409,0x090a3b3835323233,0x09363109636f6c2e,0x6d090a3009323631\n"
".quad 0x09203436752e766f,0x72202c3531647225,0x6e656d6572697465,0x0a3b746e756f4374\n"
".quad 0x6c672e6d6f746109,0x636e692e6c61626f,0x722509203233752e,0x6472255b202c3231\n"
".quad 0x357225202c5d3531,0x732e766f6d090a3b,0x3331722509203233,0x0a3b32317225202c\n"
".quad 0x363109636f6c2e09,0x090a300934363109,0x203233752e627573,0x25202c3431722509\n"
".quad 0x090a3b31202c3572,0x752e71652e746573,0x09203233752e3233,0x7225202c35317225\n"
".quad 0x34317225202c3331,0x732e67656e090a3b,0x3631722509203233,0x0a3b35317225202c\n"
".quad 0x726168732e747309,0x5b092038732e6465,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x335f39323336325f,0x7473614c6d615f38,0x3b36317225202c5d,0x5f39335f744c240a\n"
".quad 0x090a3a3835323233,0x09363109636f6c2e,0x62090a3009363631,0x20636e79732e7261\n"
".quad 0x2e646c090a3b3009,0x732e646572616873,0x2c37317225092038,0x616475635f5f5b20\n"
".quad 0x765f6c61636f6c5f,0x39323336325f7261,0x614c6d615f38335f,0x6f6d090a3b5d7473\n"
".quad 0x2509203233752e76,0x0a3b30202c383172,0x71652e7074657309,0x702509203233732e\n"
".quad 0x2c37317225202c36,0x090a3b3831722520,0x6172622036702540,0x39335f744c240920\n"
".quad 0x0a3b30373732335f,0x656c2e7074657309,0x702509203233752e,0x202c357225202c37\n"
".quad 0x2540090a3b317225,0x0920617262203770,0x335f39335f744c24,0x2e090a3b38333533\n"
".quad 0x3109363109636f6c,0x646c090a30093237,0x752e6d617261702e,0x3164722509203436\n"
".quad 0x75635f5f5b202c36,0x5f5f6d7261706164,0x637564657236315a,0x50656c676e695365\n"
".quad 0x45316a4c49737361,0x4b5076454530624c,0x6f5f675f6a665066,0x090a3b5d61746164\n"
".quad 0x203436752e646461,0x202c373164722509,0x25202c3631647225,0x646c090a3b326472\n"
".quad 0x2e6c61626f6c672e,0x3666250920323366,0x37316472255b202c,0x7262090a3b5d302b\n"
".quad 0x240920696e752e61,0x33335f39335f744c,0x744c240a3b323832,0x333533335f39335f\n"
".quad 0x2e766f6d090a3a38,0x3666250920323366,0x303030306630202c,0x2020203b30303030\n"
".quad 0x0a30202f2f092020,0x335f39335f744c24,0x6d090a3a32383233,0x09203436752e766f\n"
".quad 0x73202c3831647225,0x6461090a3b6d656d,0x2509203436752e64,0x7225202c39316472\n"
".quad 0x31647225202c3264,0x732e7473090a3b38,0x33662e6465726168,0x316472255b092032\n"
".quad 0x6625202c5d302b39,0x636f6c2e090a3b36,0x3009323709363109,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x09363109636f6c2e,0x40090a3009363731,0x6172622034702521\n"
".quad 0x39335f744c240920,0x0a3b34393733335f,0x363109636f6c2e09,0x090a300930383109\n"
".quad 0x65726168732e646c,0x2509203233662e64,0x656d735b202c3766,0x6c090a3b5d302b6d\n"
".quad 0x2e6d617261702e64,0x6472250920343675,0x635f5f5b202c3032,0x5f6d726170616475\n"
".quad 0x7564657236315a5f,0x656c676e69536563,0x316a4c4973736150,0x5076454530624c45\n"
".quad 0x5f675f6a6650664b,0x0a3b5d617461646f,0x626f6c672e747309,0x09203233662e6c61\n"
".quad 0x302b30326472255b,0x0a3b376625202c5d,0x363109636f6c2e09,0x090a300933383109\n"
".quad 0x203233752e766f6d,0x30202c3931722509,0x6c672e7473090a3b,0x3233752e6c61626f\n"
".quad 0x72697465725b0920,0x756f43746e656d65,0x317225202c5d746e,0x335f744c240a3b39\n"
".quad 0x3a34393733335f39,0x5f39335f744c240a,0x240a3a3037373233,0x31335f39335f744c\n"
".quad 0x6c2e090a3a363437,0x383109363109636f,0x697865090a300937,0x6557444c240a3b74\n"
".quad 0x7236315a5f5f646e,0x6e69536563756465,0x4973736150656c67,0x4530624c45316a4c\n"
".quad 0x6a6650664b507645,0x202f2f207d090a3a,0x7564657236315a5f,0x656c676e69536563\n"
".quad 0x316a4c4973736150,0x5076454530624c45,0x000a0a6a6650664b\n"
".text");

extern "C" {

extern const unsigned long long __deviceText_$compute_13$[22851];

}

static __cudaFatPtxEntry __ptxEntries [] = {{(char*)"compute_13",(char*)__deviceText_$compute_13$},{0,0}};
static __cudaFatCubinEntry __cubinEntries[] = {{0,0}};
static __cudaFatDebugEntry __debugEntries0 = {0, 0, 0, 0} ;
static __cudaFatElfEntry __elfEntries0 = {0, 0, 0, 0} ;
static __cudaFatElfEntry __elfEntries1 = {(char*)"sm_13", (char*)__deviceText_$sm_13$, &__elfEntries0, (unsigned int)sizeof(__deviceText_$sm_13$)};



static __cudaFatCudaBinary __fatDeviceText __attribute__ ((section (".nvFatBinSegment")))= {0x1ee55a01,0x00000004,0xa14f518d,(char*)"9c2c10299cf4adac",(char*)"threadFenceReduction.cu",(char*)" ",__ptxEntries,__cubinEntries,&__debugEntries0,0,0,0,0,0,0x64f98d6d,&__elfEntries1};
# 2 "/tmp/tmpxft_0000226b_00000000-1_threadFenceReduction.cudafe1.stub.c" 2
# 1 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 1
# 93 "/usr/local/cuda/bin/../include/crt/host_runtime.h"
extern "C" {

extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);



extern int atexit(void(*)(void)) throw();







}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

# 1 "/usr/local/cuda/bin/../include/common_functions.h" 1
# 87 "/usr/local/cuda/bin/../include/common_functions.h"
# 1 "/usr/local/cuda/bin/../include/math_functions.h" 1 3
# 948 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_constants.h" 1 3
# 949 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 2969 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/crt/func_macro.h" 1 3
# 2970 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 4679 "/usr/local/cuda/bin/../include/math_functions.h" 3
extern __attribute__((__weak__)) double rsqrt(double a); double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

extern __attribute__((__weak__)) double rcbrt(double a); double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

extern __attribute__((__weak__)) double sinpi(double a); double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

extern __attribute__((__weak__)) double erfinv(double a); double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

extern __attribute__((__weak__)) double erfcinv(double a); double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

extern __attribute__((__weak__)) float rsqrtf(float a); float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

extern __attribute__((__weak__)) float rcbrtf(float a); float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

extern __attribute__((__weak__)) float sinpif(float a); float sinpif(float a)
{
  return (float)sinpi((double)a);
}

extern __attribute__((__weak__)) float erfinvf(float a); float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

extern __attribute__((__weak__)) float erfcinvf(float a); float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}







extern __attribute__((__weak__)) int min(int a, int b); int min(int a, int b)
{
  return a < b ? a : b;
}

extern __attribute__((__weak__)) unsigned int umin(unsigned int a, unsigned int b); unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

extern __attribute__((__weak__)) long long int llmin(long long int a, long long int b); long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

extern __attribute__((__weak__)) unsigned long long int ullmin(unsigned long long int a, unsigned long long int b); unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

extern __attribute__((__weak__)) int max(int a, int b); int max(int a, int b)
{
  return a > b ? a : b;
}

extern __attribute__((__weak__)) unsigned int umax(unsigned int a, unsigned int b); unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

extern __attribute__((__weak__)) long long int llmax(long long int a, long long int b); long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

extern __attribute__((__weak__)) unsigned long long int ullmax(unsigned long long int a, unsigned long long int b); unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}
# 5002 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_functions_dbl_ptx3.h" 1 3
# 5003 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 88 "/usr/local/cuda/bin/../include/common_functions.h" 2
# 166 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2
# 3 "/tmp/tmpxft_0000226b_00000000-1_threadFenceReduction.cudafe1.stub.c" 2
struct __T20 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T21 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T22 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T23 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T24 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T25 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T26 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T27 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T28 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T29 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T210 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T211 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T212 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T213 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T214 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T215 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T216 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T217 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T218 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T219 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T220 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T221 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T222 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T223 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T224 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T225 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T226 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T227 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T228 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T229 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T230 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T231 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T232 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T233 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T234 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T235 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T236 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T237 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T238 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
struct __T239 {const float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
static void __device_stub__Z15reduceMultiPassILj512ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj256ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj128ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj64ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj32ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj16ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj8ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj4ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj2ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj1ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj512ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj256ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj128ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj64ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj32ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj16ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj8ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj4ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj2ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z15reduceMultiPassILj1ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj512ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj256ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj128ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj64ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj32ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj16ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj8ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj4ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj2ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj1ELb1EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj512ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj256ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj128ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj64ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj32ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj16ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj8ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj4ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj2ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __device_stub__Z16reduceSinglePassILj1ELb0EEvPKfPfj(const float *, float *, unsigned);
static void __sti____cudaRegisterAll_55_tmpxft_0000226b_00000000_4_threadFenceReduction_cpp1_ii_1e3911aa(void) __attribute__((__constructor__));
static void __device_stub__Z15reduceMultiPassILj512ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T20 *__T244;
*(void**)(void*)&__T244 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T244->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T244->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T244->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)512u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)512u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<512U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj512ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj256ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T21 *__T245;
*(void**)(void*)&__T245 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T245->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T245->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T245->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)256u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)256u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<256U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj256ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj128ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T22 *__T246;
*(void**)(void*)&__T246 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T246->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T246->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T246->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)128u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)128u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<128U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj128ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj64ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T23 *__T247;
*(void**)(void*)&__T247 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T247->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T247->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T247->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)64u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)64u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<64U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj64ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj32ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T24 *__T248;
*(void**)(void*)&__T248 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T248->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T248->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T248->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)32u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)32u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<32U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj32ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj16ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T25 *__T249;
*(void**)(void*)&__T249 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T249->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T249->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T249->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)16u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)16u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<16U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj16ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj8ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T26 *__T250;
*(void**)(void*)&__T250 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T250->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T250->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T250->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)8u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)8u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<8U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj8ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj4ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T27 *__T251;
*(void**)(void*)&__T251 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T251->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T251->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T251->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)4u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)4u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<4U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj4ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj2ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T28 *__T252;
*(void**)(void*)&__T252 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T252->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T252->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T252->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)2u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)2u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<2U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj2ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj1ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T29 *__T253;
*(void**)(void*)&__T253 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T253->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T253->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T253->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)1u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)1u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<1U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj1ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj512ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T210 *__T254;
*(void**)(void*)&__T254 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T254->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T254->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T254->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)512u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)512u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<512U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj512ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj256ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T211 *__T255;
*(void**)(void*)&__T255 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T255->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T255->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T255->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)256u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)256u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<256U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj256ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj128ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T212 *__T256;
*(void**)(void*)&__T256 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T256->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T256->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T256->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)128u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)128u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<128U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj128ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj64ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T213 *__T257;
*(void**)(void*)&__T257 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T257->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T257->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T257->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)64u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)64u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<64U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj64ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj32ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T214 *__T258;
*(void**)(void*)&__T258 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T258->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T258->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T258->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)32u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)32u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<32U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj32ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj16ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T215 *__T259;
*(void**)(void*)&__T259 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T259->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T259->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T259->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)16u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)16u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<16U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj16ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj8ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T216 *__T260;
*(void**)(void*)&__T260 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T260->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T260->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T260->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)8u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)8u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<8U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj8ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj4ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T217 *__T261;
*(void**)(void*)&__T261 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T261->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T261->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T261->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)4u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)4u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<4U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj4ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj2ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T218 *__T262;
*(void**)(void*)&__T262 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T262->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T262->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T262->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)2u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)2u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<2U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj2ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z15reduceMultiPassILj1ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T219 *__T263;
*(void**)(void*)&__T263 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T263->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T263->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T263->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)1u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)1u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceMultiPass<1U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z15reduceMultiPassILj1ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj512ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T220 *__T268;
*(void**)(void*)&__T268 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T268->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T268->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T268->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)512u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)512u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<512U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj512ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj256ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T221 *__T269;
*(void**)(void*)&__T269 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T269->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T269->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T269->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)256u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)256u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<256U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj256ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj128ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T222 *__T270;
*(void**)(void*)&__T270 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T270->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T270->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T270->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)128u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)128u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<128U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj128ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj64ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T223 *__T271;
*(void**)(void*)&__T271 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T271->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T271->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T271->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)64u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)64u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<64U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj64ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj32ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T224 *__T272;
*(void**)(void*)&__T272 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T272->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T272->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T272->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)32u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)32u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<32U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj32ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj16ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T225 *__T273;
*(void**)(void*)&__T273 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T273->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T273->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T273->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)16u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)16u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<16U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj16ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj8ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T226 *__T274;
*(void**)(void*)&__T274 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T274->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T274->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T274->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)8u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)8u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<8U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj8ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj4ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T227 *__T275;
*(void**)(void*)&__T275 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T275->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T275->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T275->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)4u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)4u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<4U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj4ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj2ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T228 *__T276;
*(void**)(void*)&__T276 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T276->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T276->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T276->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)2u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)2u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<2U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj2ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj1ELb1EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T229 *__T277;
*(void**)(void*)&__T277 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T277->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T277->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T277->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)1u, (bool)1> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)1u, (bool)1> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<1U,true>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj1ELb1EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj512ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T230 *__T278;
*(void**)(void*)&__T278 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T278->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T278->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T278->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)512u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)512u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<512U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj512ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj256ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T231 *__T279;
*(void**)(void*)&__T279 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T279->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T279->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T279->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)256u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)256u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<256U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj256ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj128ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T232 *__T280;
*(void**)(void*)&__T280 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T280->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T280->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T280->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)128u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)128u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<128U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj128ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj64ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T233 *__T281;
*(void**)(void*)&__T281 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T281->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T281->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T281->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)64u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)64u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<64U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj64ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj32ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T234 *__T282;
*(void**)(void*)&__T282 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T282->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T282->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T282->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)32u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)32u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<32U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj32ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj16ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T235 *__T283;
*(void**)(void*)&__T283 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T283->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T283->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T283->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)16u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)16u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<16U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj16ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj8ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T236 *__T284;
*(void**)(void*)&__T284 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T284->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T284->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T284->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)8u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)8u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<8U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj8ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj4ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T237 *__T285;
*(void**)(void*)&__T285 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T285->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T285->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T285->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)4u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)4u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<4U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj4ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj2ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T238 *__T286;
*(void**)(void*)&__T286 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T286->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T286->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T286->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)2u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)2u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<2U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj2ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __device_stub__Z16reduceSinglePassILj1ELb0EEvPKfPfj(const float *__par0, float *__par1, unsigned __par2){ struct __T239 *__T287;
*(void**)(void*)&__T287 = (void*)0;if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T287->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T287->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T287->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)1u, (bool)0> )); (void)cudaLaunch(((char *)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)1u, (bool)0> ))); };}
template<> void __wrapper__device_stub_reduceSinglePass<1U,false>( const float *&__cuda_0,float *&__cuda_1,unsigned &__cuda_2){__device_stub__Z16reduceSinglePassILj1ELb0EEvPKfPfj( __cuda_0,__cuda_1,__cuda_2);}
static void __sti____cudaRegisterAll_55_tmpxft_0000226b_00000000_4_threadFenceReduction_cpp1_ii_1e3911aa(void){__cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); atexit(__cudaUnregisterBinaryUtil);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)1u, (bool)0> ), (char*)"_Z16reduceSinglePassILj1ELb0EEvPKfPfj", "_Z16reduceSinglePassILj1ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)2u, (bool)0> ), (char*)"_Z16reduceSinglePassILj2ELb0EEvPKfPfj", "_Z16reduceSinglePassILj2ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)4u, (bool)0> ), (char*)"_Z16reduceSinglePassILj4ELb0EEvPKfPfj", "_Z16reduceSinglePassILj4ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)8u, (bool)0> ), (char*)"_Z16reduceSinglePassILj8ELb0EEvPKfPfj", "_Z16reduceSinglePassILj8ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)16u, (bool)0> ), (char*)"_Z16reduceSinglePassILj16ELb0EEvPKfPfj", "_Z16reduceSinglePassILj16ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)32u, (bool)0> ), (char*)"_Z16reduceSinglePassILj32ELb0EEvPKfPfj", "_Z16reduceSinglePassILj32ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)64u, (bool)0> ), (char*)"_Z16reduceSinglePassILj64ELb0EEvPKfPfj", "_Z16reduceSinglePassILj64ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)128u, (bool)0> ), (char*)"_Z16reduceSinglePassILj128ELb0EEvPKfPfj", "_Z16reduceSinglePassILj128ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)256u, (bool)0> ), (char*)"_Z16reduceSinglePassILj256ELb0EEvPKfPfj", "_Z16reduceSinglePassILj256ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)512u, (bool)0> ), (char*)"_Z16reduceSinglePassILj512ELb0EEvPKfPfj", "_Z16reduceSinglePassILj512ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)1u, (bool)1> ), (char*)"_Z16reduceSinglePassILj1ELb1EEvPKfPfj", "_Z16reduceSinglePassILj1ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)2u, (bool)1> ), (char*)"_Z16reduceSinglePassILj2ELb1EEvPKfPfj", "_Z16reduceSinglePassILj2ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)4u, (bool)1> ), (char*)"_Z16reduceSinglePassILj4ELb1EEvPKfPfj", "_Z16reduceSinglePassILj4ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)8u, (bool)1> ), (char*)"_Z16reduceSinglePassILj8ELb1EEvPKfPfj", "_Z16reduceSinglePassILj8ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)16u, (bool)1> ), (char*)"_Z16reduceSinglePassILj16ELb1EEvPKfPfj", "_Z16reduceSinglePassILj16ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)32u, (bool)1> ), (char*)"_Z16reduceSinglePassILj32ELb1EEvPKfPfj", "_Z16reduceSinglePassILj32ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)64u, (bool)1> ), (char*)"_Z16reduceSinglePassILj64ELb1EEvPKfPfj", "_Z16reduceSinglePassILj64ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)128u, (bool)1> ), (char*)"_Z16reduceSinglePassILj128ELb1EEvPKfPfj", "_Z16reduceSinglePassILj128ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)256u, (bool)1> ), (char*)"_Z16reduceSinglePassILj256ELb1EEvPKfPfj", "_Z16reduceSinglePassILj256ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceSinglePass<(unsigned int)512u, (bool)1> ), (char*)"_Z16reduceSinglePassILj512ELb1EEvPKfPfj", "_Z16reduceSinglePassILj512ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)1u, (bool)0> ), (char*)"_Z15reduceMultiPassILj1ELb0EEvPKfPfj", "_Z15reduceMultiPassILj1ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)2u, (bool)0> ), (char*)"_Z15reduceMultiPassILj2ELb0EEvPKfPfj", "_Z15reduceMultiPassILj2ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)4u, (bool)0> ), (char*)"_Z15reduceMultiPassILj4ELb0EEvPKfPfj", "_Z15reduceMultiPassILj4ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)8u, (bool)0> ), (char*)"_Z15reduceMultiPassILj8ELb0EEvPKfPfj", "_Z15reduceMultiPassILj8ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)16u, (bool)0> ), (char*)"_Z15reduceMultiPassILj16ELb0EEvPKfPfj", "_Z15reduceMultiPassILj16ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)32u, (bool)0> ), (char*)"_Z15reduceMultiPassILj32ELb0EEvPKfPfj", "_Z15reduceMultiPassILj32ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)64u, (bool)0> ), (char*)"_Z15reduceMultiPassILj64ELb0EEvPKfPfj", "_Z15reduceMultiPassILj64ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)128u, (bool)0> ), (char*)"_Z15reduceMultiPassILj128ELb0EEvPKfPfj", "_Z15reduceMultiPassILj128ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)256u, (bool)0> ), (char*)"_Z15reduceMultiPassILj256ELb0EEvPKfPfj", "_Z15reduceMultiPassILj256ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)512u, (bool)0> ), (char*)"_Z15reduceMultiPassILj512ELb0EEvPKfPfj", "_Z15reduceMultiPassILj512ELb0EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)1u, (bool)1> ), (char*)"_Z15reduceMultiPassILj1ELb1EEvPKfPfj", "_Z15reduceMultiPassILj1ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)2u, (bool)1> ), (char*)"_Z15reduceMultiPassILj2ELb1EEvPKfPfj", "_Z15reduceMultiPassILj2ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)4u, (bool)1> ), (char*)"_Z15reduceMultiPassILj4ELb1EEvPKfPfj", "_Z15reduceMultiPassILj4ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)8u, (bool)1> ), (char*)"_Z15reduceMultiPassILj8ELb1EEvPKfPfj", "_Z15reduceMultiPassILj8ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)16u, (bool)1> ), (char*)"_Z15reduceMultiPassILj16ELb1EEvPKfPfj", "_Z15reduceMultiPassILj16ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)32u, (bool)1> ), (char*)"_Z15reduceMultiPassILj32ELb1EEvPKfPfj", "_Z15reduceMultiPassILj32ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)64u, (bool)1> ), (char*)"_Z15reduceMultiPassILj64ELb1EEvPKfPfj", "_Z15reduceMultiPassILj64ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)128u, (bool)1> ), (char*)"_Z15reduceMultiPassILj128ELb1EEvPKfPfj", "_Z15reduceMultiPassILj128ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)256u, (bool)1> ), (char*)"_Z15reduceMultiPassILj256ELb1EEvPKfPfj", "_Z15reduceMultiPassILj256ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(const float *, float *, unsigned))reduceMultiPass<(unsigned int)512u, (bool)1> ), (char*)"_Z15reduceMultiPassILj512ELb1EEvPKfPfj", "_Z15reduceMultiPassILj512ELb1EEvPKfPfj", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0);__cudaRegisterVar(__cudaFatCubinHandle, (char*)&retirementCount, (char*)"retirementCount", "retirementCount", 0, 4, 0, 0);}
# 1 "/tmp/tmpxft_0000226b_00000000-1_threadFenceReduction.cudafe1.stub.c" 2
