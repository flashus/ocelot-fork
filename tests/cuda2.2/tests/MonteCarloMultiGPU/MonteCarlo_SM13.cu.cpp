# 1 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.cpp"
# 1 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
# 46 "/usr/local/cuda/bin/../include/device_types.h"
# 149 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 3
typedef int ptrdiff_t;
# 211 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 3
typedef unsigned size_t;
# 1 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda/bin/../include/builtin_types.h" 1 3
# 42 "/usr/local/cuda/bin/../include/builtin_types.h" 3
# 1 "/usr/local/cuda/bin/../include/device_types.h" 1 3
# 46 "/usr/local/cuda/bin/../include/device_types.h" 3
enum cudaRoundMode
{
  cudaRoundNearest,
  cudaRoundZero,
  cudaRoundPosInf,
  cudaRoundMinInf
};
# 43 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/driver_types.h" 1 3
# 96 "/usr/local/cuda/bin/../include/driver_types.h" 3
enum cudaError
{





  cudaSuccess = 0,





  cudaErrorMissingConfiguration = 1,





  cudaErrorMemoryAllocation = 2,





  cudaErrorInitializationError = 3,
# 131 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorLaunchFailure = 4,
# 140 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorPriorLaunchFailure = 5,
# 150 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorLaunchTimeout = 6,
# 159 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorLaunchOutOfResources = 7,





  cudaErrorInvalidDeviceFunction = 8,
# 174 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorInvalidConfiguration = 9,





  cudaErrorInvalidDevice = 10,





  cudaErrorInvalidValue = 11,





  cudaErrorInvalidPitchValue = 12,





  cudaErrorInvalidSymbol = 13,




  cudaErrorMapBufferObjectFailed = 14,




  cudaErrorUnmapBufferObjectFailed = 15,





  cudaErrorInvalidHostPointer = 16,





  cudaErrorInvalidDevicePointer = 17,





  cudaErrorInvalidTexture = 18,





  cudaErrorInvalidTextureBinding = 19,






  cudaErrorInvalidChannelDescriptor = 20,





  cudaErrorInvalidMemcpyDirection = 21,
# 255 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorAddressOfConstant = 22,
# 264 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorTextureFetchFailed = 23,
# 273 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorTextureNotBound = 24,
# 282 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorSynchronizationError = 25,





  cudaErrorInvalidFilterSetting = 26,





  cudaErrorInvalidNormSetting = 27,







  cudaErrorMixedDeviceExecution = 28,







  cudaErrorCudartUnloading = 29,




  cudaErrorUnknown = 30,





  cudaErrorNotYetImplemented = 31,
# 330 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorMemoryValueTooLarge = 32,






  cudaErrorInvalidResourceHandle = 33,







  cudaErrorNotReady = 34,






  cudaErrorInsufficientDriver = 35,
# 365 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorSetOnActiveProcess = 36,





  cudaErrorInvalidSurface = 37,





  cudaErrorNoDevice = 38,





  cudaErrorECCUncorrectable = 39,




  cudaErrorSharedObjectSymbolNotFound = 40,




  cudaErrorSharedObjectInitFailed = 41,





  cudaErrorUnsupportedLimit = 42,





  cudaErrorDuplicateVariableName = 43,





  cudaErrorDuplicateTextureName = 44,





  cudaErrorDuplicateSurfaceName = 45,
# 426 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorDevicesUnavailable = 46,




  cudaErrorInvalidKernelImage = 47,







  cudaErrorNoKernelImageForDevice = 48,
# 448 "/usr/local/cuda/bin/../include/driver_types.h" 3
  cudaErrorIncompatibleDriverContext = 49,




  cudaErrorStartupFailure = 0x7f,





  cudaErrorApiFailureBase = 10000
};





enum cudaChannelFormatKind
{
  cudaChannelFormatKindSigned = 0,
  cudaChannelFormatKindUnsigned = 1,
  cudaChannelFormatKindFloat = 2,
  cudaChannelFormatKindNone = 3
};





struct cudaChannelFormatDesc
{
  int x;
  int y;
  int z;
  int w;
  enum cudaChannelFormatKind f;
};





struct cudaArray;





enum cudaMemcpyKind
{
  cudaMemcpyHostToHost = 0,
  cudaMemcpyHostToDevice = 1,
  cudaMemcpyDeviceToHost = 2,
  cudaMemcpyDeviceToDevice = 3
};






struct cudaPitchedPtr
{
  void *ptr;
  size_t pitch;
  size_t xsize;
  size_t ysize;
};






struct cudaExtent
{
  size_t width;
  size_t height;
  size_t depth;
};






struct cudaPos
{
  size_t x;
  size_t y;
  size_t z;
};





struct cudaMemcpy3DParms
{
  struct cudaArray *srcArray;
  struct cudaPos srcPos;
  struct cudaPitchedPtr srcPtr;

  struct cudaArray *dstArray;
  struct cudaPos dstPos;
  struct cudaPitchedPtr dstPtr;

  struct cudaExtent extent;
  enum cudaMemcpyKind kind;
};





struct cudaGraphicsResource;





enum cudaGraphicsRegisterFlags
{
  cudaGraphicsRegisterFlagsNone = 0
};





enum cudaGraphicsMapFlags
{
  cudaGraphicsMapFlagsNone = 0,
  cudaGraphicsMapFlagsReadOnly = 1,
  cudaGraphicsMapFlagsWriteDiscard = 2
};





enum cudaGraphicsCubeFace {
  cudaGraphicsCubeFacePositiveX = 0x00,
  cudaGraphicsCubeFaceNegativeX = 0x01,
  cudaGraphicsCubeFacePositiveY = 0x02,
  cudaGraphicsCubeFaceNegativeY = 0x03,
  cudaGraphicsCubeFacePositiveZ = 0x04,
  cudaGraphicsCubeFaceNegativeZ = 0x05
};





struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;

   int __cudaReserved[6];
};





enum cudaFuncCache
{
  cudaFuncCachePreferNone = 0,
  cudaFuncCachePreferShared = 1,
  cudaFuncCachePreferL1 = 2
};





enum cudaComputeMode
{
  cudaComputeModeDefault = 0,
  cudaComputeModeExclusive = 1,
  cudaComputeModeProhibited = 2
};





enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02
};





struct cudaDeviceProp
{
  char name[256];
  size_t totalGlobalMem;
  size_t sharedMemPerBlock;
  int regsPerBlock;
  int warpSize;
  size_t memPitch;
  int maxThreadsPerBlock;
  int maxThreadsDim[3];
  int maxGridSize[3];
  int clockRate;
  size_t totalConstMem;
  int major;
  int minor;
  size_t textureAlignment;
  int deviceOverlap;
  int multiProcessorCount;
  int kernelExecTimeoutEnabled;
  int integrated;
  int canMapHostMemory;
  int computeMode;
  int maxTexture1D;
  int maxTexture2D[2];
  int maxTexture3D[3];
  int maxTexture2DArray[3];
  size_t surfaceAlignment;
  int concurrentKernels;
  int ECCEnabled;
  int pciBusID;
  int pciDeviceID;
  int tccDriver;
  int __cudaReserved[21];
};
# 768 "/usr/local/cuda/bin/../include/driver_types.h" 3
typedef enum cudaError cudaError_t;





typedef struct CUstream_st *cudaStream_t;





typedef struct CUevent_st *cudaEvent_t;





typedef struct cudaGraphicsResource *cudaGraphicsResource_t;





typedef struct CUuuid_st cudaUUID_t;
# 44 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/surface_types.h" 1 3
# 63 "/usr/local/cuda/bin/../include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
  cudaBoundaryModeZero = 0,
  cudaBoundaryModeClamp = 1,
  cudaBoundaryModeTrap = 2
};





enum cudaSurfaceFormatMode
{
  cudaFormatModeForced = 0,
  cudaFormatModeAuto = 1
};





struct surfaceReference
{



  struct cudaChannelFormatDesc channelDesc;
};
# 45 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/texture_types.h" 1 3
# 63 "/usr/local/cuda/bin/../include/texture_types.h" 3
enum cudaTextureAddressMode
{
  cudaAddressModeWrap = 0,
  cudaAddressModeClamp = 1,
  cudaAddressModeMirror = 2,
  cudaAddressModeBorder = 3
};





enum cudaTextureFilterMode
{
  cudaFilterModePoint = 0,
  cudaFilterModeLinear = 1
};





enum cudaTextureReadMode
{
  cudaReadModeElementType = 0,
  cudaReadModeNormalizedFloat = 1
};





struct textureReference
{



  int normalized;



  enum cudaTextureFilterMode filterMode;



  enum cudaTextureAddressMode addressMode[3];



  struct cudaChannelFormatDesc channelDesc;
  int __cudaReserved[16];
};
# 46 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/vector_types.h" 1 3
# 45 "/usr/local/cuda/bin/../include/vector_types.h" 3
# 1 "/usr/local/cuda/bin/../include/builtin_types.h" 1 3
# 46 "/usr/local/cuda/bin/../include/builtin_types.h" 3
# 1 "/usr/local/cuda/bin/../include/vector_types.h" 1 3
# 46 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 46 "/usr/local/cuda/bin/../include/vector_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/host_defines.h" 1 3
# 47 "/usr/local/cuda/bin/../include/vector_types.h" 2 3
# 75 "/usr/local/cuda/bin/../include/vector_types.h" 3
struct char1
{
  signed char x;
};


struct uchar1
{
  unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
  signed char x, y;
};


struct __attribute__((aligned(2))) uchar2
{
  unsigned char x, y;
};


struct char3
{
  signed char x, y, z;
};


struct uchar3
{
  unsigned char x, y, z;
};


struct __attribute__((aligned(4))) char4
{
  signed char x, y, z, w;
};


struct __attribute__((aligned(4))) uchar4
{
  unsigned char x, y, z, w;
};


struct short1
{
  short x;
};


struct ushort1
{
  unsigned short x;
};


struct __attribute__((aligned(4))) short2
{
  short x, y;
};


struct __attribute__((aligned(4))) ushort2
{
  unsigned short x, y;
};


struct short3
{
  short x, y, z;
};


struct ushort3
{
  unsigned short x, y, z;
};


struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };


struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };


struct int1
{
  int x;
};


struct uint1
{
  unsigned int x;
};


struct __attribute__((aligned(8))) int2 { int x; int y; };


struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };


struct int3
{
  int x, y, z;
};


struct uint3
{
  unsigned int x, y, z;
};


struct __attribute__((aligned(16))) int4
{
  int x, y, z, w;
};


struct __attribute__((aligned(16))) uint4
{
  unsigned int x, y, z, w;
};


struct long1
{
  long int x;
};


struct ulong1
{
  unsigned long x;
};
# 229 "/usr/local/cuda/bin/../include/vector_types.h" 3
struct __attribute__((aligned(2*sizeof(long int)))) long2
{
  long int x, y;
};


struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
  unsigned long int x, y;
};




struct long3
{
  long int x, y, z;
};


struct ulong3
{
  unsigned long int x, y, z;
};


struct __attribute__((aligned(16))) long4
{
  long int x, y, z, w;
};


struct __attribute__((aligned(16))) ulong4
{
  unsigned long int x, y, z, w;
};


struct float1
{
  float x;
};


struct __attribute__((aligned(8))) float2 { float x; float y; };


struct float3
{
  float x, y, z;
};


struct __attribute__((aligned(16))) float4
{
  float x, y, z, w;
};


struct longlong1
{
  long long int x;
};


struct ulonglong1
{
  unsigned long long int x;
};


struct __attribute__((aligned(16))) longlong2
{
  long long int x, y;
};


struct __attribute__((aligned(16))) ulonglong2
{
  unsigned long long int x, y;
};


struct longlong3
{
  long long int x, y, z;
};


struct ulonglong3
{
  unsigned long long int x, y, z;
};


struct __attribute__((aligned(16))) longlong4
{
  long long int x, y, z ,w;
};


struct __attribute__((aligned(16))) ulonglong4
{
  unsigned long long int x, y, z, w;
};


struct double1
{
  double x;
};


struct __attribute__((aligned(16))) double2
{
  double x, y;
};


struct double3
{
  double x, y, z;
};


struct __attribute__((aligned(16))) double4
{
  double x, y, z, w;
};
# 366 "/usr/local/cuda/bin/../include/vector_types.h" 3
typedef struct char1 char1;

typedef struct uchar1 uchar1;

typedef struct char2 char2;

typedef struct uchar2 uchar2;

typedef struct char3 char3;

typedef struct uchar3 uchar3;

typedef struct char4 char4;

typedef struct uchar4 uchar4;

typedef struct short1 short1;

typedef struct ushort1 ushort1;

typedef struct short2 short2;

typedef struct ushort2 ushort2;

typedef struct short3 short3;

typedef struct ushort3 ushort3;

typedef struct short4 short4;

typedef struct ushort4 ushort4;

typedef struct int1 int1;

typedef struct uint1 uint1;

typedef struct int2 int2;

typedef struct uint2 uint2;

typedef struct int3 int3;

typedef struct uint3 uint3;

typedef struct int4 int4;

typedef struct uint4 uint4;

typedef struct long1 long1;

typedef struct ulong1 ulong1;

typedef struct long2 long2;

typedef struct ulong2 ulong2;

typedef struct long3 long3;

typedef struct ulong3 ulong3;

typedef struct long4 long4;

typedef struct ulong4 ulong4;

typedef struct float1 float1;

typedef struct float2 float2;

typedef struct float3 float3;

typedef struct float4 float4;

typedef struct longlong1 longlong1;

typedef struct ulonglong1 ulonglong1;

typedef struct longlong2 longlong2;

typedef struct ulonglong2 ulonglong2;

typedef struct longlong3 longlong3;

typedef struct ulonglong3 ulonglong3;

typedef struct longlong4 longlong4;

typedef struct ulonglong4 ulonglong4;

typedef struct double1 double1;

typedef struct double2 double2;

typedef struct double3 double3;

typedef struct double4 double4;
# 469 "/usr/local/cuda/bin/../include/vector_types.h" 3
struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};


typedef struct dim3 dim3;
# 46 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 70 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda/bin/../include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3
# 213 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/stddef.h" 2 3
# 96 "/usr/local/cuda/bin/../include/driver_types.h"
# 466 "/usr/local/cuda/bin/../include/driver_types.h"
# 478 "/usr/local/cuda/bin/../include/driver_types.h"
# 491 "/usr/local/cuda/bin/../include/driver_types.h"
# 497 "/usr/local/cuda/bin/../include/driver_types.h"
# 510 "/usr/local/cuda/bin/../include/driver_types.h"
# 523 "/usr/local/cuda/bin/../include/driver_types.h"
# 535 "/usr/local/cuda/bin/../include/driver_types.h"
# 546 "/usr/local/cuda/bin/../include/driver_types.h"
# 564 "/usr/local/cuda/bin/../include/driver_types.h"
# 570 "/usr/local/cuda/bin/../include/driver_types.h"
# 579 "/usr/local/cuda/bin/../include/driver_types.h"
# 590 "/usr/local/cuda/bin/../include/driver_types.h"
# 603 "/usr/local/cuda/bin/../include/driver_types.h"
# 656 "/usr/local/cuda/bin/../include/driver_types.h"
# 667 "/usr/local/cuda/bin/../include/driver_types.h"
# 678 "/usr/local/cuda/bin/../include/driver_types.h"
# 689 "/usr/local/cuda/bin/../include/driver_types.h"
# 768 "/usr/local/cuda/bin/../include/driver_types.h"
# 774 "/usr/local/cuda/bin/../include/driver_types.h"
# 780 "/usr/local/cuda/bin/../include/driver_types.h"
# 786 "/usr/local/cuda/bin/../include/driver_types.h"
# 792 "/usr/local/cuda/bin/../include/driver_types.h"
# 63 "/usr/local/cuda/bin/../include/surface_types.h"
# 74 "/usr/local/cuda/bin/../include/surface_types.h"
# 84 "/usr/local/cuda/bin/../include/surface_types.h"
# 63 "/usr/local/cuda/bin/../include/texture_types.h"
# 75 "/usr/local/cuda/bin/../include/texture_types.h"
# 85 "/usr/local/cuda/bin/../include/texture_types.h"
# 95 "/usr/local/cuda/bin/../include/texture_types.h"
# 75 "/usr/local/cuda/bin/../include/vector_types.h"
# 81 "/usr/local/cuda/bin/../include/vector_types.h"
# 87 "/usr/local/cuda/bin/../include/vector_types.h"
# 93 "/usr/local/cuda/bin/../include/vector_types.h"
# 99 "/usr/local/cuda/bin/../include/vector_types.h"
# 105 "/usr/local/cuda/bin/../include/vector_types.h"
# 111 "/usr/local/cuda/bin/../include/vector_types.h"
# 117 "/usr/local/cuda/bin/../include/vector_types.h"
# 123 "/usr/local/cuda/bin/../include/vector_types.h"
# 129 "/usr/local/cuda/bin/../include/vector_types.h"
# 135 "/usr/local/cuda/bin/../include/vector_types.h"
# 141 "/usr/local/cuda/bin/../include/vector_types.h"
# 147 "/usr/local/cuda/bin/../include/vector_types.h"
# 153 "/usr/local/cuda/bin/../include/vector_types.h"
# 159 "/usr/local/cuda/bin/../include/vector_types.h"
# 162 "/usr/local/cuda/bin/../include/vector_types.h"
# 165 "/usr/local/cuda/bin/../include/vector_types.h"
# 171 "/usr/local/cuda/bin/../include/vector_types.h"
# 177 "/usr/local/cuda/bin/../include/vector_types.h"
# 180 "/usr/local/cuda/bin/../include/vector_types.h"
# 183 "/usr/local/cuda/bin/../include/vector_types.h"
# 189 "/usr/local/cuda/bin/../include/vector_types.h"
# 195 "/usr/local/cuda/bin/../include/vector_types.h"
# 201 "/usr/local/cuda/bin/../include/vector_types.h"
# 207 "/usr/local/cuda/bin/../include/vector_types.h"
# 213 "/usr/local/cuda/bin/../include/vector_types.h"
# 229 "/usr/local/cuda/bin/../include/vector_types.h"
# 235 "/usr/local/cuda/bin/../include/vector_types.h"
# 243 "/usr/local/cuda/bin/../include/vector_types.h"
# 249 "/usr/local/cuda/bin/../include/vector_types.h"
# 255 "/usr/local/cuda/bin/../include/vector_types.h"
# 261 "/usr/local/cuda/bin/../include/vector_types.h"
# 267 "/usr/local/cuda/bin/../include/vector_types.h"
# 273 "/usr/local/cuda/bin/../include/vector_types.h"
# 276 "/usr/local/cuda/bin/../include/vector_types.h"
# 282 "/usr/local/cuda/bin/../include/vector_types.h"
# 288 "/usr/local/cuda/bin/../include/vector_types.h"
# 294 "/usr/local/cuda/bin/../include/vector_types.h"
# 300 "/usr/local/cuda/bin/../include/vector_types.h"
# 306 "/usr/local/cuda/bin/../include/vector_types.h"
# 312 "/usr/local/cuda/bin/../include/vector_types.h"
# 318 "/usr/local/cuda/bin/../include/vector_types.h"
# 324 "/usr/local/cuda/bin/../include/vector_types.h"
# 330 "/usr/local/cuda/bin/../include/vector_types.h"
# 336 "/usr/local/cuda/bin/../include/vector_types.h"
# 342 "/usr/local/cuda/bin/../include/vector_types.h"
# 348 "/usr/local/cuda/bin/../include/vector_types.h"
# 354 "/usr/local/cuda/bin/../include/vector_types.h"
# 366 "/usr/local/cuda/bin/../include/vector_types.h"
# 368 "/usr/local/cuda/bin/../include/vector_types.h"
# 370 "/usr/local/cuda/bin/../include/vector_types.h"
# 372 "/usr/local/cuda/bin/../include/vector_types.h"
# 374 "/usr/local/cuda/bin/../include/vector_types.h"
# 376 "/usr/local/cuda/bin/../include/vector_types.h"
# 378 "/usr/local/cuda/bin/../include/vector_types.h"
# 380 "/usr/local/cuda/bin/../include/vector_types.h"
# 382 "/usr/local/cuda/bin/../include/vector_types.h"
# 384 "/usr/local/cuda/bin/../include/vector_types.h"
# 386 "/usr/local/cuda/bin/../include/vector_types.h"
# 388 "/usr/local/cuda/bin/../include/vector_types.h"
# 390 "/usr/local/cuda/bin/../include/vector_types.h"
# 392 "/usr/local/cuda/bin/../include/vector_types.h"
# 394 "/usr/local/cuda/bin/../include/vector_types.h"
# 396 "/usr/local/cuda/bin/../include/vector_types.h"
# 398 "/usr/local/cuda/bin/../include/vector_types.h"
# 400 "/usr/local/cuda/bin/../include/vector_types.h"
# 402 "/usr/local/cuda/bin/../include/vector_types.h"
# 404 "/usr/local/cuda/bin/../include/vector_types.h"
# 406 "/usr/local/cuda/bin/../include/vector_types.h"
# 408 "/usr/local/cuda/bin/../include/vector_types.h"
# 410 "/usr/local/cuda/bin/../include/vector_types.h"
# 412 "/usr/local/cuda/bin/../include/vector_types.h"
# 414 "/usr/local/cuda/bin/../include/vector_types.h"
# 416 "/usr/local/cuda/bin/../include/vector_types.h"
# 418 "/usr/local/cuda/bin/../include/vector_types.h"
# 420 "/usr/local/cuda/bin/../include/vector_types.h"
# 422 "/usr/local/cuda/bin/../include/vector_types.h"
# 424 "/usr/local/cuda/bin/../include/vector_types.h"
# 426 "/usr/local/cuda/bin/../include/vector_types.h"
# 428 "/usr/local/cuda/bin/../include/vector_types.h"
# 430 "/usr/local/cuda/bin/../include/vector_types.h"
# 432 "/usr/local/cuda/bin/../include/vector_types.h"
# 434 "/usr/local/cuda/bin/../include/vector_types.h"
# 436 "/usr/local/cuda/bin/../include/vector_types.h"
# 438 "/usr/local/cuda/bin/../include/vector_types.h"
# 440 "/usr/local/cuda/bin/../include/vector_types.h"
# 442 "/usr/local/cuda/bin/../include/vector_types.h"
# 444 "/usr/local/cuda/bin/../include/vector_types.h"
# 446 "/usr/local/cuda/bin/../include/vector_types.h"
# 448 "/usr/local/cuda/bin/../include/vector_types.h"
# 450 "/usr/local/cuda/bin/../include/vector_types.h"
# 452 "/usr/local/cuda/bin/../include/vector_types.h"
# 454 "/usr/local/cuda/bin/../include/vector_types.h"
# 456 "/usr/local/cuda/bin/../include/vector_types.h"
# 458 "/usr/local/cuda/bin/../include/vector_types.h"
# 460 "/usr/local/cuda/bin/../include/vector_types.h"
# 469 "/usr/local/cuda/bin/../include/vector_types.h"
# 480 "/usr/local/cuda/bin/../include/vector_types.h"
# 115 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadExit();
# 131 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSynchronize();
# 183 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetLimit(cudaLimit, size_t);
# 207 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetLimit(size_t *, cudaLimit);
# 237 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetCacheConfig(cudaFuncCache *);
# 278 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetCacheConfig(cudaFuncCache);
# 330 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 373 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 387 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t);
# 418 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int *);
# 536 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceProperties(cudaDeviceProp *, int);
# 555 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaChooseDevice(int *, const cudaDeviceProp *);
# 579 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDevice(int);
# 597 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int *);
# 626 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetValidDevices(int *, int);
# 677 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDeviceFlags(unsigned);
# 703 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreate(cudaStream_t *);
# 719 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t);
# 753 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t, cudaEvent_t, unsigned);
# 771 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamSynchronize(cudaStream_t);
# 789 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamQuery(cudaStream_t);
# 821 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreate(cudaEvent_t *);
# 852 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t *, unsigned);
# 885 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t, cudaStream_t = 0);
# 914 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventQuery(cudaEvent_t);
# 946 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventSynchronize(cudaEvent_t);
# 966 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t);
# 1007 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventElapsedTime(float *, cudaEvent_t, cudaEvent_t);
# 1046 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaConfigureCall(dim3, dim3, size_t = (0), cudaStream_t = 0);
# 1073 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetupArgument(const void *, size_t, size_t);
# 1119 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetCacheConfig(const char *, cudaFuncCache);
# 1154 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaLaunch(const char *);
# 1187 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes *, const char *);
# 1209 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForDevice(double *);
# 1231 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForHost(double *);
# 1263 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void **, size_t);
# 1292 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocHost(void **, size_t);
# 1331 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocPitch(void **, size_t *, size_t, size_t);
# 1370 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocArray(cudaArray **, const cudaChannelFormatDesc *, size_t, size_t = (0), unsigned = (0));
# 1394 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFree(void *);
# 1414 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeHost(void *);
# 1436 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeArray(cudaArray *);
# 1495 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostAlloc(void **, size_t, unsigned);
# 1522 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetDevicePointer(void **, void *, unsigned);
# 1541 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetFlags(unsigned *, void *);
# 1576 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3D(cudaPitchedPtr *, cudaExtent);
# 1626 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3DArray(cudaArray **, const cudaChannelFormatDesc *, cudaExtent, unsigned = (0));
# 1723 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms *);
# 1828 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms *, cudaStream_t = 0);
# 1847 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemGetInfo(size_t *, size_t *);
# 1880 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy(void *, const void *, size_t, cudaMemcpyKind);
# 1913 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArray(cudaArray *, size_t, size_t, const void *, size_t, cudaMemcpyKind);
# 1946 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArray(void *, const cudaArray *, size_t, size_t, size_t, cudaMemcpyKind);
# 1981 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyArrayToArray(cudaArray *, size_t, size_t, const cudaArray *, size_t, size_t, size_t, cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 2023 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2D(void *, size_t, const void *, size_t, size_t, size_t, cudaMemcpyKind);
# 2064 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArray(cudaArray *, size_t, size_t, const void *, size_t, size_t, size_t, cudaMemcpyKind);
# 2105 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArray(void *, size_t, const cudaArray *, size_t, size_t, size_t, size_t, cudaMemcpyKind);
# 2144 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DArrayToArray(cudaArray *, size_t, size_t, const cudaArray *, size_t, size_t, size_t, size_t, cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 2179 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbol(const char *, const void *, size_t, size_t = (0), cudaMemcpyKind = cudaMemcpyHostToDevice);
# 2213 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbol(void *, const char *, size_t, size_t = (0), cudaMemcpyKind = cudaMemcpyDeviceToHost);
# 2256 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void *, const void *, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 2298 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArrayAsync(cudaArray *, size_t, size_t, const void *, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 2340 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArrayAsync(void *, const cudaArray *, size_t, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 2391 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void *, size_t, const void *, size_t, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 2441 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArrayAsync(cudaArray *, size_t, size_t, const void *, size_t, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 2491 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArrayAsync(void *, size_t, const cudaArray *, size_t, size_t, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 2535 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbolAsync(const char *, const void *, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 2578 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbolAsync(void *, const char *, size_t, size_t, cudaMemcpyKind, cudaStream_t = 0);
# 2600 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset(void *, int, size_t);
# 2626 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2D(void *, size_t, int, size_t, size_t);
# 2665 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3D(cudaPitchedPtr, int, cudaExtent);
# 2692 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemsetAsync(void *, int, size_t, cudaStream_t = 0);
# 2724 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2DAsync(void *, size_t, int, size_t, size_t, cudaStream_t = 0);
# 2769 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr, int, cudaExtent, cudaStream_t = 0);
# 2796 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolAddress(void **, const char *);
# 2819 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolSize(size_t *, const char *);
# 2865 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t);
# 2897 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t, unsigned);
# 2932 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsMapResources(int, cudaGraphicsResource_t *, cudaStream_t = 0);
# 2963 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnmapResources(int, cudaGraphicsResource_t *, cudaStream_t = 0);
# 2992 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedPointer(void **, size_t *, cudaGraphicsResource_t);
# 3026 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray **, cudaGraphicsResource_t, unsigned, unsigned);
# 3059 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc *, const cudaArray *);
# 3094 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaChannelFormatDesc cudaCreateChannelDesc(int, int, int, int, cudaChannelFormatKind);
# 3136 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture(size_t *, const textureReference *, const void *, const cudaChannelFormatDesc *, size_t = (((2147483647) * 2U) + 1U));
# 3179 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture2D(size_t *, const textureReference *, const void *, const cudaChannelFormatDesc *, size_t, size_t, size_t);
# 3207 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToArray(const textureReference *, const cudaArray *, const cudaChannelFormatDesc *);
# 3228 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaUnbindTexture(const textureReference *);
# 3253 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureAlignmentOffset(size_t *, const textureReference *);
# 3277 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureReference(const textureReference **, const char *);
# 3310 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindSurfaceToArray(const surfaceReference *, const cudaArray *, const cudaChannelFormatDesc *);
# 3328 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceReference(const surfaceReference **, const char *);
# 3355 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDriverGetVersion(int *);
# 3372 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int *);
# 3377 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetExportTable(const void **, const cudaUUID_t *);
# 93 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 94 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 95 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 96 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 98 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 99 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 100 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 102 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 103 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 105 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 106 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 107 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 109 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 110 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 112 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 113 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 114 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 119 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 120 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 121 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 126 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 127 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 128 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 133 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 135 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 137 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 138 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 139 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 141 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 142 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 144 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 145 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 146 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 148 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 149 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 151 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 152 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 153 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 158 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 159 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 160 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 165 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 166 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 167 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 172 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 173 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 174 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 179 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 180 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 181 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 186 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 187 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 188 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 193 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 194 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 195 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 197 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 200 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 201 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 202 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 204 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 207 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 208 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 209 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 214 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 215 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 216 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 221 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 222 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 223 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 228 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 229 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 230 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 235 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 236 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 237 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 242 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 243 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 244 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 249 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 250 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 251 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 253 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 256 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 257 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 258 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 260 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 263 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 264 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 265 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 270 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 271 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 272 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 277 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 278 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 279 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 284 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 285 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 286 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 291 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 292 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 293 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 298 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 299 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 300 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 307 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< long> ()
# 308 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 309 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(long)) * 8);
# 311 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 312 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 314 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned long> ()
# 315 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 316 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8);
# 318 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 319 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 321 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< long1> ()
# 322 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 323 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(long)) * 8);
# 325 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 326 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 328 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong1> ()
# 329 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 330 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8);
# 332 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 333 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 335 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< long2> ()
# 336 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 337 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(long)) * 8);
# 339 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 340 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 342 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong2> ()
# 343 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 344 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8);
# 346 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 347 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 349 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< long4> ()
# 350 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 351 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(long)) * 8);
# 353 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 354 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 356 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong4> ()
# 357 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 358 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8);
# 360 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 361 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 365 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 366 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 367 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 369 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 370 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 372 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 373 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 374 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 376 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 377 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 379 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 380 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 381 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 386 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 387 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 388 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 65 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 66 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 67 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaPitchedPtr s;
# 69 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.ptr) = d;
# 70 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.pitch) = p;
# 71 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.xsize) = xsz;
# 72 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.ysize) = ysz;
# 74 "/usr/local/cuda/bin/../include/driver_functions.h"
return s;
# 75 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 92 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 93 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 94 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaPos p;
# 96 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.x) = x;
# 97 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.y) = y;
# 98 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.z) = z;
# 100 "/usr/local/cuda/bin/../include/driver_functions.h"
return p;
# 101 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 118 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 119 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 120 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaExtent e;
# 122 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.width) = w;
# 123 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.height) = h;
# 124 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.depth) = d;
# 126 "/usr/local/cuda/bin/../include/driver_functions.h"
return e;
# 127 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 55 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char1 make_char1(signed char x)
# 56 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 57 "/usr/local/cuda/bin/../include/vector_functions.h"
char1 t; (t.x) = x; return t;
# 58 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 60 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar1 make_uchar1(unsigned char x)
# 61 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 62 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar1 t; (t.x) = x; return t;
# 63 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 65 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char2 make_char2(signed char x, signed char y)
# 66 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 67 "/usr/local/cuda/bin/../include/vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t;
# 68 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 70 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 71 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 72 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 73 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 75 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 76 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 77 "/usr/local/cuda/bin/../include/vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 78 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 80 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 81 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 82 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 83 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 85 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 86 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 87 "/usr/local/cuda/bin/../include/vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 88 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 90 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 91 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 92 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 93 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 95 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short1 make_short1(short x)
# 96 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 97 "/usr/local/cuda/bin/../include/vector_functions.h"
short1 t; (t.x) = x; return t;
# 98 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 100 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort1 make_ushort1(unsigned short x)
# 101 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 102 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort1 t; (t.x) = x; return t;
# 103 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 105 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short2 make_short2(short x, short y)
# 106 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 107 "/usr/local/cuda/bin/../include/vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t;
# 108 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 110 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 111 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 112 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 113 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 115 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short3 make_short3(short x, short y, short z)
# 116 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 117 "/usr/local/cuda/bin/../include/vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 118 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 120 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 121 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 122 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 123 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 125 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short4 make_short4(short x, short y, short z, short w)
# 126 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 127 "/usr/local/cuda/bin/../include/vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 128 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 130 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 131 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 132 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 133 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 135 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int1 make_int1(int x)
# 136 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 137 "/usr/local/cuda/bin/../include/vector_functions.h"
int1 t; (t.x) = x; return t;
# 138 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 140 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint1 make_uint1(unsigned x)
# 141 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 142 "/usr/local/cuda/bin/../include/vector_functions.h"
uint1 t; (t.x) = x; return t;
# 143 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 145 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int2 make_int2(int x, int y)
# 146 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 147 "/usr/local/cuda/bin/../include/vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t;
# 148 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 150 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 151 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 152 "/usr/local/cuda/bin/../include/vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 153 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 155 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int3 make_int3(int x, int y, int z)
# 156 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 157 "/usr/local/cuda/bin/../include/vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 158 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 160 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 161 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 162 "/usr/local/cuda/bin/../include/vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 163 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 165 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int4 make_int4(int x, int y, int z, int w)
# 166 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 167 "/usr/local/cuda/bin/../include/vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 168 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 170 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 171 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 172 "/usr/local/cuda/bin/../include/vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 173 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 175 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long1 make_long1(long x)
# 176 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 177 "/usr/local/cuda/bin/../include/vector_functions.h"
long1 t; (t.x) = x; return t;
# 178 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 180 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong1 make_ulong1(unsigned long x)
# 181 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 182 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong1 t; (t.x) = x; return t;
# 183 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 185 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long2 make_long2(long x, long y)
# 186 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 187 "/usr/local/cuda/bin/../include/vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t;
# 188 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 190 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 191 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 192 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 193 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 195 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long3 make_long3(long x, long y, long z)
# 196 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 197 "/usr/local/cuda/bin/../include/vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 198 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 200 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 201 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 202 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 203 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 205 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long4 make_long4(long x, long y, long z, long w)
# 206 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 207 "/usr/local/cuda/bin/../include/vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 208 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 210 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 211 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 212 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 213 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 215 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float1 make_float1(float x)
# 216 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 217 "/usr/local/cuda/bin/../include/vector_functions.h"
float1 t; (t.x) = x; return t;
# 218 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 220 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float2 make_float2(float x, float y)
# 221 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 222 "/usr/local/cuda/bin/../include/vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t;
# 223 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 225 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float3 make_float3(float x, float y, float z)
# 226 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 227 "/usr/local/cuda/bin/../include/vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 228 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 230 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float4 make_float4(float x, float y, float z, float w)
# 231 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 232 "/usr/local/cuda/bin/../include/vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 233 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 235 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong1 make_longlong1(long long x)
# 236 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 237 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong1 t; (t.x) = x; return t;
# 238 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 240 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 241 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 242 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong1 t; (t.x) = x; return t;
# 243 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 245 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong2 make_longlong2(long long x, long long y)
# 246 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 247 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 248 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 250 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 251 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 252 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 253 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 255 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 256 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 257 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 258 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 260 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 261 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 262 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 263 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 265 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 266 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 267 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 268 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 270 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 271 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 272 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 273 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 275 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double1 make_double1(double x)
# 276 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 277 "/usr/local/cuda/bin/../include/vector_functions.h"
double1 t; (t.x) = x; return t;
# 278 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 280 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double2 make_double2(double x, double y)
# 281 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 282 "/usr/local/cuda/bin/../include/vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t;
# 283 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 285 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double3 make_double3(double x, double y, double z)
# 286 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 287 "/usr/local/cuda/bin/../include/vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 288 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 290 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double4 make_double4(double x, double y, double z, double w)
# 291 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 292 "/usr/local/cuda/bin/../include/vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 293 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 44 "/usr/include/string.h" 3
extern "C" __attribute__((weak)) void *memcpy(void *__restrict__, const void *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 49 "/usr/include/string.h" 3
extern "C" void *memmove(void *, const void *, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 57 "/usr/include/string.h" 3
extern "C" void *memccpy(void *__restrict__, const void *__restrict__, int, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 65 "/usr/include/string.h" 3
extern "C" __attribute__((weak)) void *memset(void *, int, size_t) throw() __attribute__((nonnull(1)));
# 68 "/usr/include/string.h" 3
extern "C" int memcmp(const void *, const void *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 75 "/usr/include/string.h" 3
extern void *memchr(void *, int, size_t) throw() __asm__("memchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 77 "/usr/include/string.h" 3
extern const void *memchr(const void *, int, size_t) throw() __asm__("memchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 104 "/usr/include/string.h" 3
void *rawmemchr(void *, int) throw() __asm__("rawmemchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 106 "/usr/include/string.h" 3
const void *rawmemchr(const void *, int) throw() __asm__("rawmemchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 115 "/usr/include/string.h" 3
void *memrchr(void *, int, size_t) throw() __asm__("memrchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 117 "/usr/include/string.h" 3
const void *memrchr(const void *, int, size_t) throw() __asm__("memrchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 128 "/usr/include/string.h" 3
extern "C" char *strcpy(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 131 "/usr/include/string.h" 3
extern "C" char *strncpy(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 136 "/usr/include/string.h" 3
extern "C" char *strcat(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 139 "/usr/include/string.h" 3
extern "C" char *strncat(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 143 "/usr/include/string.h" 3
extern "C" int strcmp(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 146 "/usr/include/string.h" 3
extern "C" int strncmp(const char *, const char *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 150 "/usr/include/string.h" 3
extern "C" int strcoll(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 153 "/usr/include/string.h" 3
extern "C" size_t strxfrm(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(2)));
# 40 "/usr/include/xlocale.h" 3
extern "C" { typedef
# 28 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 31 "/usr/include/xlocale.h" 3
struct __locale_data *__locales[13];
# 34 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 36 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 39 "/usr/include/xlocale.h" 3
const char *__names[13];
# 40 "/usr/include/xlocale.h" 3
} *__locale_t; }
# 43 "/usr/include/xlocale.h" 3
extern "C" { typedef __locale_t locale_t; }
# 165 "/usr/include/string.h" 3
extern "C" int strcoll_l(const char *, const char *, __locale_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 168 "/usr/include/string.h" 3
extern "C" size_t strxfrm_l(char *, const char *, size_t, __locale_t) throw() __attribute__((nonnull(2))) __attribute__((nonnull(4)));
# 175 "/usr/include/string.h" 3
extern "C" char *strdup(const char *) throw() __attribute__((__malloc__)) __attribute__((nonnull(1)));
# 183 "/usr/include/string.h" 3
extern "C" char *strndup(const char *, size_t) throw() __attribute__((__malloc__)) __attribute__((nonnull(1)));
# 215 "/usr/include/string.h" 3
extern char *strchr(char *, int) throw() __asm__("strchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 217 "/usr/include/string.h" 3
extern const char *strchr(const char *, int) throw() __asm__("strchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 242 "/usr/include/string.h" 3
extern char *strrchr(char *, int) throw() __asm__("strrchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 244 "/usr/include/string.h" 3
extern const char *strrchr(const char *, int) throw() __asm__("strrchr") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 271 "/usr/include/string.h" 3
char *strchrnul(char *, int) throw() __asm__("strchrnul") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 273 "/usr/include/string.h" 3
const char *strchrnul(const char *, int) throw() __asm__("strchrnul") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 284 "/usr/include/string.h" 3
extern "C" size_t strcspn(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 288 "/usr/include/string.h" 3
extern "C" size_t strspn(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 294 "/usr/include/string.h" 3
extern char *strpbrk(char *, const char *) throw() __asm__("strpbrk") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 296 "/usr/include/string.h" 3
extern const char *strpbrk(const char *, const char *) throw() __asm__("strpbrk") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 321 "/usr/include/string.h" 3
extern char *strstr(char *, const char *) throw() __asm__("strstr") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 323 "/usr/include/string.h" 3
extern const char *strstr(const char *, const char *) throw() __asm__("strstr") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 348 "/usr/include/string.h" 3
extern "C" char *strtok(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(2)));
# 354 "/usr/include/string.h" 3
extern "C" char *__strtok_r(char *__restrict__, const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 359 "/usr/include/string.h" 3
extern "C" char *strtok_r(char *__restrict__, const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 367 "/usr/include/string.h" 3
char *strcasestr(char *, const char *) throw() __asm__("strcasestr") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 369 "/usr/include/string.h" 3
const char *strcasestr(const char *, const char *) throw() __asm__("strcasestr") __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 382 "/usr/include/string.h" 3
extern "C" void *memmem(const void *, size_t, const void *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(3)));
# 388 "/usr/include/string.h" 3
extern "C" void *__mempcpy(void *__restrict__, const void *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 391 "/usr/include/string.h" 3
extern "C" void *mempcpy(void *__restrict__, const void *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 399 "/usr/include/string.h" 3
extern "C" size_t strlen(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 406 "/usr/include/string.h" 3
extern "C" size_t strnlen(const char *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 413 "/usr/include/string.h" 3
extern "C" char *strerror(int) throw();
# 438 "/usr/include/string.h" 3
extern "C" char *strerror_r(int, char *, size_t) throw() __attribute__((nonnull(2)));
# 445 "/usr/include/string.h" 3
extern "C" char *strerror_l(int, __locale_t) throw();
# 451 "/usr/include/string.h" 3
extern "C" void __bzero(void *, size_t) throw() __attribute__((nonnull(1)));
# 455 "/usr/include/string.h" 3
extern "C" void bcopy(const void *, void *, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 459 "/usr/include/string.h" 3
extern "C" void bzero(void *, size_t) throw() __attribute__((nonnull(1)));
# 462 "/usr/include/string.h" 3
extern "C" int bcmp(const void *, const void *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 469 "/usr/include/string.h" 3
extern char *index(char *, int) throw() __asm__("index") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 471 "/usr/include/string.h" 3
extern const char *index(const char *, int) throw() __asm__("index") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 497 "/usr/include/string.h" 3
extern char *rindex(char *, int) throw() __asm__("rindex") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 499 "/usr/include/string.h" 3
extern const char *rindex(const char *, int) throw() __asm__("rindex") __attribute__((__pure__)) __attribute__((nonnull(1)));
# 523 "/usr/include/string.h" 3
extern "C" int ffs(int) throw() __attribute__((__const__));
# 528 "/usr/include/string.h" 3
extern "C" int ffsl(long) throw() __attribute__((__const__));
# 530 "/usr/include/string.h" 3
extern "C" int ffsll(long long) throw() __attribute__((__const__));
# 536 "/usr/include/string.h" 3
extern "C" int strcasecmp(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 540 "/usr/include/string.h" 3
extern "C" int strncasecmp(const char *, const char *, size_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 547 "/usr/include/string.h" 3
extern "C" int strcasecmp_l(const char *, const char *, __locale_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 551 "/usr/include/string.h" 3
extern "C" int strncasecmp_l(const char *, const char *, size_t, __locale_t) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(4)));
# 559 "/usr/include/string.h" 3
extern "C" char *strsep(char **__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 566 "/usr/include/string.h" 3
extern "C" char *strsignal(int) throw();
# 569 "/usr/include/string.h" 3
extern "C" char *__stpcpy(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 571 "/usr/include/string.h" 3
extern "C" char *stpcpy(char *__restrict__, const char *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 576 "/usr/include/string.h" 3
extern "C" char *__stpncpy(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 579 "/usr/include/string.h" 3
extern "C" char *stpncpy(char *__restrict__, const char *__restrict__, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 586 "/usr/include/string.h" 3
extern "C" int strverscmp(const char *, const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 590 "/usr/include/string.h" 3
extern "C" char *strfry(char *) throw() __attribute__((nonnull(1)));
# 593 "/usr/include/string.h" 3
extern "C" void *memfrob(void *, size_t) throw() __attribute__((nonnull(1)));
# 601 "/usr/include/string.h" 3
char *basename(char *) throw() __asm__("basename") __attribute__((nonnull(1)));
# 603 "/usr/include/string.h" 3
const char *basename(const char *) throw() __asm__("basename") __attribute__((nonnull(1)));
# 31 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __u_char; }
# 32 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __u_short; }
# 33 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __u_int; }
# 34 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_long; }
# 37 "/usr/include/bits/types.h" 3
extern "C" { typedef signed char __int8_t; }
# 38 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __uint8_t; }
# 39 "/usr/include/bits/types.h" 3
extern "C" { typedef signed short __int16_t; }
# 40 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __uint16_t; }
# 41 "/usr/include/bits/types.h" 3
extern "C" { typedef signed int __int32_t; }
# 42 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uint32_t; }
# 47 "/usr/include/bits/types.h" 3
extern "C" { typedef signed long long __int64_t; }
# 48 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long long __uint64_t; }
# 56 "/usr/include/bits/types.h" 3
extern "C" { typedef long long __quad_t; }
# 57 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long long __u_quad_t; }
# 134 "/usr/include/bits/types.h" 3
extern "C" { typedef __u_quad_t __dev_t; }
# 135 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uid_t; }
# 136 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __gid_t; }
# 137 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino_t; }
# 138 "/usr/include/bits/types.h" 3
extern "C" { typedef __u_quad_t __ino64_t; }
# 139 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __mode_t; }
# 140 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __nlink_t; }
# 141 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off_t; }
# 142 "/usr/include/bits/types.h" 3
extern "C" { typedef __quad_t __off64_t; }
# 143 "/usr/include/bits/types.h" 3
extern "C" { typedef int __pid_t; }
# 144 "/usr/include/bits/types.h" 3
extern "C" { typedef struct { int __val[2]; } __fsid_t; }
# 145 "/usr/include/bits/types.h" 3
extern "C" { typedef long __clock_t; }
# 146 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim_t; }
# 147 "/usr/include/bits/types.h" 3
extern "C" { typedef __u_quad_t __rlim64_t; }
# 148 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __id_t; }
# 149 "/usr/include/bits/types.h" 3
extern "C" { typedef long __time_t; }
# 150 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __useconds_t; }
# 151 "/usr/include/bits/types.h" 3
extern "C" { typedef long __suseconds_t; }
# 153 "/usr/include/bits/types.h" 3
extern "C" { typedef int __daddr_t; }
# 154 "/usr/include/bits/types.h" 3
extern "C" { typedef long __swblk_t; }
# 155 "/usr/include/bits/types.h" 3
extern "C" { typedef int __key_t; }
# 158 "/usr/include/bits/types.h" 3
extern "C" { typedef int __clockid_t; }
# 161 "/usr/include/bits/types.h" 3
extern "C" { typedef void *__timer_t; }
# 164 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blksize_t; }
# 169 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt_t; }
# 170 "/usr/include/bits/types.h" 3
extern "C" { typedef __quad_t __blkcnt64_t; }
# 173 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt_t; }
# 174 "/usr/include/bits/types.h" 3
extern "C" { typedef __u_quad_t __fsblkcnt64_t; }
# 177 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt_t; }
# 178 "/usr/include/bits/types.h" 3
extern "C" { typedef __u_quad_t __fsfilcnt64_t; }
# 180 "/usr/include/bits/types.h" 3
extern "C" { typedef int __ssize_t; }
# 184 "/usr/include/bits/types.h" 3
extern "C" { typedef __off64_t __loff_t; }
# 185 "/usr/include/bits/types.h" 3
extern "C" { typedef __quad_t *__qaddr_t; }
# 186 "/usr/include/bits/types.h" 3
extern "C" { typedef char *__caddr_t; }
# 189 "/usr/include/bits/types.h" 3
extern "C" { typedef int __intptr_t; }
# 192 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __socklen_t; }
# 60 "/usr/include/time.h" 3
extern "C" { typedef __clock_t clock_t; }
# 76 "/usr/include/time.h" 3
extern "C" { typedef __time_t time_t; }
# 92 "/usr/include/time.h" 3
extern "C" { typedef __clockid_t clockid_t; }
# 104 "/usr/include/time.h" 3
extern "C" { typedef __timer_t timer_t; }
# 120 "/usr/include/time.h" 3
extern "C" { struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
long tv_nsec;
# 124 "/usr/include/time.h" 3
}; }
# 133 "/usr/include/time.h" 3
extern "C" { struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
}; }
# 161 "/usr/include/time.h" 3
extern "C" { struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
}; }
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
extern "C" { typedef __pid_t pid_t; }
# 183 "/usr/include/time.h" 3
extern "C" __attribute__((weak)) clock_t clock() throw();
# 186 "/usr/include/time.h" 3
extern "C" time_t time(time_t *) throw();
# 189 "/usr/include/time.h" 3
extern "C" double difftime(time_t, time_t) throw() __attribute__((__const__));
# 193 "/usr/include/time.h" 3
extern "C" time_t mktime(tm *) throw();
# 199 "/usr/include/time.h" 3
extern "C" size_t strftime(char *__restrict__, size_t, const char *__restrict__, const tm *__restrict__) throw();
# 207 "/usr/include/time.h" 3
extern "C" char *strptime(const char *__restrict__, const char *__restrict__, tm *) throw();
# 217 "/usr/include/time.h" 3
extern "C" size_t strftime_l(char *__restrict__, size_t, const char *__restrict__, const tm *__restrict__, __locale_t) throw();
# 224 "/usr/include/time.h" 3
extern "C" char *strptime_l(const char *__restrict__, const char *__restrict__, tm *, __locale_t) throw();
# 233 "/usr/include/time.h" 3
extern "C" tm *gmtime(const time_t *) throw();
# 237 "/usr/include/time.h" 3
extern "C" tm *localtime(const time_t *) throw();
# 243 "/usr/include/time.h" 3
extern "C" tm *gmtime_r(const time_t *__restrict__, tm *__restrict__) throw();
# 248 "/usr/include/time.h" 3
extern "C" tm *localtime_r(const time_t *__restrict__, tm *__restrict__) throw();
# 255 "/usr/include/time.h" 3
extern "C" char *asctime(const tm *) throw();
# 258 "/usr/include/time.h" 3
extern "C" char *ctime(const time_t *) throw();
# 266 "/usr/include/time.h" 3
extern "C" char *asctime_r(const tm *__restrict__, char *__restrict__) throw();
# 270 "/usr/include/time.h" 3
extern "C" char *ctime_r(const time_t *__restrict__, char *__restrict__) throw();
# 276 "/usr/include/time.h" 3
extern "C" { extern char *__tzname[2]; }
# 277 "/usr/include/time.h" 3
extern "C" { extern int __daylight; }
# 278 "/usr/include/time.h" 3
extern "C" { extern long __timezone; }
# 283 "/usr/include/time.h" 3
extern "C" { extern char *tzname[2]; }
# 287 "/usr/include/time.h" 3
extern "C" void tzset() throw();
# 291 "/usr/include/time.h" 3
extern "C" { extern int daylight; }
# 292 "/usr/include/time.h" 3
extern "C" { extern long timezone; }
# 298 "/usr/include/time.h" 3
extern "C" int stime(const time_t *) throw();
# 313 "/usr/include/time.h" 3
extern "C" time_t timegm(tm *) throw();
# 316 "/usr/include/time.h" 3
extern "C" time_t timelocal(tm *) throw();
# 319 "/usr/include/time.h" 3
extern "C" int dysize(int) throw() __attribute__((__const__));
# 328 "/usr/include/time.h" 3
extern "C" int nanosleep(const timespec *, timespec *);
# 333 "/usr/include/time.h" 3
extern "C" int clock_getres(clockid_t, timespec *) throw();
# 336 "/usr/include/time.h" 3
extern "C" int clock_gettime(clockid_t, timespec *) throw();
# 339 "/usr/include/time.h" 3
extern "C" int clock_settime(clockid_t, const timespec *) throw();
# 347 "/usr/include/time.h" 3
extern "C" int clock_nanosleep(clockid_t, int, const timespec *, timespec *);
# 352 "/usr/include/time.h" 3
extern "C" int clock_getcpuclockid(pid_t, clockid_t *) throw();
# 357 "/usr/include/time.h" 3
extern "C" int timer_create(clockid_t, sigevent *__restrict__, timer_t *__restrict__) throw();
# 362 "/usr/include/time.h" 3
extern "C" int timer_delete(timer_t) throw();
# 365 "/usr/include/time.h" 3
extern "C" int timer_settime(timer_t, int, const itimerspec *__restrict__, itimerspec *__restrict__) throw();
# 370 "/usr/include/time.h" 3
extern "C" int timer_gettime(timer_t, itimerspec *) throw();
# 374 "/usr/include/time.h" 3
extern "C" int timer_getoverrun(timer_t) throw();
# 390 "/usr/include/time.h" 3
extern "C" { extern int getdate_err; }
# 399 "/usr/include/time.h" 3
extern "C" tm *getdate(const char *);
# 413 "/usr/include/time.h" 3
extern "C" int getdate_r(const char *__restrict__, tm *__restrict__);
# 57 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" __attribute__((weak)) clock_t clock() throw();
# 59 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" __attribute__((weak)) void *memset(void *, int, size_t) throw() __attribute__((nonnull(1)));
# 61 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" __attribute__((weak)) void *memcpy(void *, const void *, size_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 66 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int abs(int) throw() __attribute__((__const__));
# 68 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long labs(long) throw() __attribute__((__const__));
# 70 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llabs(long long) throw() __attribute__((__const__));
# 72 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fabs(double) throw() __attribute__((__const__));
# 74 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fabsf(float) throw() __attribute__((__const__));
# 77 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int min(int, int);
# 79 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) unsigned umin(unsigned, unsigned);
# 81 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llmin(long long, long long);
# 83 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) unsigned long long ullmin(unsigned long long, unsigned long long);
# 85 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fminf(float, float) throw();
# 87 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fmin(double, double) throw();
# 90 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int max(int, int);
# 92 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) unsigned umax(unsigned, unsigned);
# 94 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llmax(long long, long long);
# 96 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) unsigned long long ullmax(unsigned long long, unsigned long long);
# 98 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fmaxf(float, float) throw();
# 100 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fmax(double, double) throw();
# 103 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double sin(double) throw();
# 105 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float sinf(float) throw();
# 108 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double cos(double) throw();
# 110 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float cosf(float) throw();
# 113 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) void sincos(double, double *, double *) throw();
# 115 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) void sincosf(float, float *, float *) throw();
# 118 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double tan(double) throw();
# 120 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float tanf(float) throw();
# 123 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double sqrt(double) throw();
# 125 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float sqrtf(float) throw();
# 128 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double rsqrt(double);
# 130 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float rsqrtf(float);
# 133 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double exp2(double) throw();
# 135 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float exp2f(float) throw();
# 138 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double exp10(double) throw();
# 140 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float exp10f(float) throw();
# 143 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double expm1(double) throw();
# 145 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float expm1f(float) throw();
# 148 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double log2(double) throw();
# 150 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float log2f(float) throw();
# 153 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double log10(double) throw();
# 155 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float log10f(float) throw();
# 158 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double log(double) throw();
# 160 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float logf(float) throw();
# 163 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double log1p(double) throw();
# 165 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float log1pf(float) throw();
# 168 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double floor(double) throw() __attribute__((__const__));
# 170 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float floorf(float) throw() __attribute__((__const__));
# 173 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double exp(double) throw();
# 175 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float expf(float) throw();
# 178 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double cosh(double) throw();
# 180 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float coshf(float) throw();
# 183 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double sinh(double) throw();
# 185 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float sinhf(float) throw();
# 188 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double tanh(double) throw();
# 190 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float tanhf(float) throw();
# 193 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double acosh(double) throw();
# 195 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float acoshf(float) throw();
# 198 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double asinh(double) throw();
# 200 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float asinhf(float) throw();
# 203 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double atanh(double) throw();
# 205 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float atanhf(float) throw();
# 208 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double ldexp(double, int) throw();
# 210 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float ldexpf(float, int) throw();
# 213 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double logb(double) throw();
# 215 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float logbf(float) throw();
# 218 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int ilogb(double) throw();
# 220 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int ilogbf(float) throw();
# 223 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double scalbn(double, int) throw();
# 225 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float scalbnf(float, int) throw();
# 228 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double scalbln(double, long) throw();
# 230 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float scalblnf(float, long) throw();
# 233 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double frexp(double, int *) throw();
# 235 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float frexpf(float, int *) throw();
# 238 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double round(double) throw() __attribute__((__const__));
# 240 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float roundf(float) throw() __attribute__((__const__));
# 243 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long lround(double) throw();
# 245 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long lroundf(float) throw();
# 248 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llround(double) throw();
# 250 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llroundf(float) throw();
# 253 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double rint(double) throw();
# 255 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float rintf(float) throw();
# 258 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long lrint(double) throw();
# 260 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long lrintf(float) throw();
# 263 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llrint(double) throw();
# 265 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) long long llrintf(float) throw();
# 268 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double nearbyint(double) throw();
# 270 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float nearbyintf(float) throw();
# 273 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double ceil(double) throw() __attribute__((__const__));
# 275 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float ceilf(float) throw() __attribute__((__const__));
# 278 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double trunc(double) throw() __attribute__((__const__));
# 280 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float truncf(float) throw() __attribute__((__const__));
# 283 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fdim(double, double) throw();
# 285 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fdimf(float, float) throw();
# 288 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double atan2(double, double) throw();
# 290 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float atan2f(float, float) throw();
# 293 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double atan(double) throw();
# 295 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float atanf(float) throw();
# 298 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double asin(double) throw();
# 300 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float asinf(float) throw();
# 303 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double acos(double) throw();
# 305 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float acosf(float) throw();
# 308 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double hypot(double, double) throw();
# 310 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float hypotf(float, float) throw();
# 313 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double cbrt(double) throw();
# 315 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float cbrtf(float) throw();
# 318 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double rcbrt(double);
# 320 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float rcbrtf(float);
# 323 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double sinpi(double);
# 325 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float sinpif(float);
# 328 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double pow(double, double) throw();
# 330 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float powf(float, float) throw();
# 333 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double modf(double, double *) throw();
# 335 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float modff(float, float *) throw();
# 338 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fmod(double, double) throw();
# 340 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fmodf(float, float) throw();
# 343 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double remainder(double, double) throw();
# 345 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float remainderf(float, float) throw();
# 348 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double remquo(double, double, int *) throw();
# 350 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float remquof(float, float, int *) throw();
# 353 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double erf(double) throw();
# 355 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float erff(float) throw();
# 358 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double erfinv(double);
# 360 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float erfinvf(float);
# 363 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double erfc(double) throw();
# 365 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float erfcf(float) throw();
# 368 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double erfcinv(double);
# 370 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float erfcinvf(float);
# 373 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double lgamma(double) throw();
# 375 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float lgammaf(float) throw();
# 378 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double tgamma(double) throw();
# 380 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float tgammaf(float) throw();
# 383 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double copysign(double, double) throw() __attribute__((__const__));
# 385 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float copysignf(float, float) throw() __attribute__((__const__));
# 388 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double nextafter(double, double) throw() __attribute__((__const__));
# 390 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float nextafterf(float, float) throw() __attribute__((__const__));
# 393 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double nan(const char *) throw() __attribute__((__const__));
# 395 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float nanf(const char *) throw() __attribute__((__const__));
# 398 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isinf(double) throw() __attribute__((__const__));
# 400 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isinff(float) throw() __attribute__((__const__));
# 403 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isnan(double) throw() __attribute__((__const__));
# 405 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isnanf(float) throw() __attribute__((__const__));
# 419 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __finite(double) throw() __attribute__((__const__));
# 421 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __finitef(float) throw() __attribute__((__const__));
# 423 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __signbit(double) throw() __attribute__((__const__));
# 428 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __signbitf(float) throw() __attribute__((__const__));
# 431 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) double fma(double, double, double) throw();
# 433 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) float fmaf(float, float, float) throw();
# 441 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __signbitl(long double) throw() __attribute__((__const__));
# 443 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isinfl(long double) throw() __attribute__((__const__));
# 445 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __isnanl(long double) throw() __attribute__((__const__));
# 455 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" __attribute__((weak)) int __finitel(long double) throw() __attribute__((__const__));
# 38 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef long double float_t; }
# 40 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef long double double_t; }
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double acos(double) throw(); extern "C" double __acos(double) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double asin(double) throw(); extern "C" double __asin(double) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double atan(double) throw(); extern "C" double __atan(double) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double atan2(double, double) throw(); extern "C" double __atan2(double, double) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double cos(double) throw(); extern "C" double __cos(double) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double sin(double) throw(); extern "C" double __sin(double) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double tan(double) throw(); extern "C" double __tan(double) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double cosh(double) throw(); extern "C" double __cosh(double) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double sinh(double) throw(); extern "C" double __sinh(double) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double tanh(double) throw(); extern "C" double __tanh(double) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) void sincos(double, double *, double *) throw(); extern "C" void __sincos(double, double *, double *) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double acosh(double) throw(); extern "C" double __acosh(double) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double asinh(double) throw(); extern "C" double __asinh(double) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double atanh(double) throw(); extern "C" double __atanh(double) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double exp(double) throw(); extern "C" double __exp(double) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double frexp(double, int *) throw(); extern "C" double __frexp(double, int *) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double ldexp(double, int) throw(); extern "C" double __ldexp(double, int) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double log(double) throw(); extern "C" double __log(double) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double log10(double) throw(); extern "C" double __log10(double) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double modf(double, double *) throw(); extern "C" double __modf(double, double *) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double exp10(double) throw(); extern "C" double __exp10(double) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow10(double) throw(); extern "C" double __pow10(double) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double expm1(double) throw(); extern "C" double __expm1(double) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double log1p(double) throw(); extern "C" double __log1p(double) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double logb(double) throw(); extern "C" double __logb(double) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double exp2(double) throw(); extern "C" double __exp2(double) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double log2(double) throw(); extern "C" double __log2(double) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double pow(double, double) throw(); extern "C" double __pow(double, double) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double sqrt(double) throw(); extern "C" double __sqrt(double) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double hypot(double, double) throw(); extern "C" double __hypot(double, double) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double cbrt(double) throw(); extern "C" double __cbrt(double) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double ceil(double) throw() __attribute__((__const__)); extern "C" double __ceil(double) throw() __attribute__((__const__));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fabs(double) throw() __attribute__((__const__)); extern "C" double __fabs(double) throw() __attribute__((__const__));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double floor(double) throw() __attribute__((__const__)); extern "C" double __floor(double) throw() __attribute__((__const__));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fmod(double, double) throw(); extern "C" double __fmod(double, double) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isinf(double) throw() __attribute__((__const__));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __finite(double) throw() __attribute__((__const__));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinf(double) throw() __attribute__((__const__));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finite(double) throw() __attribute__((__const__));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" double drem(double, double) throw(); extern "C" double __drem(double, double) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" double significand(double) throw(); extern "C" double __significand(double) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double copysign(double, double) throw() __attribute__((__const__)); extern "C" double __copysign(double, double) throw() __attribute__((__const__));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double nan(const char *) throw() __attribute__((__const__)); extern "C" double __nan(const char *) throw() __attribute__((__const__));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isnan(double) throw() __attribute__((__const__));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnan(double) throw() __attribute__((__const__));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" double j0(double) throw(); extern "C" double __j0(double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" double j1(double) throw(); extern "C" double __j1(double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" double jn(int, double) throw(); extern "C" double __jn(int, double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" double y0(double) throw(); extern "C" double __y0(double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" double y1(double) throw(); extern "C" double __y1(double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" double yn(int, double) throw(); extern "C" double __yn(int, double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double erf(double) throw(); extern "C" double __erf(double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double erfc(double) throw(); extern "C" double __erfc(double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double lgamma(double) throw(); extern "C" double __lgamma(double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double tgamma(double) throw(); extern "C" double __tgamma(double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" double gamma(double) throw(); extern "C" double __gamma(double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma_r(double, int *) throw(); extern "C" double __lgamma_r(double, int *) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double rint(double) throw(); extern "C" double __rint(double) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double nextafter(double, double) throw() __attribute__((__const__)); extern "C" double __nextafter(double, double) throw() __attribute__((__const__));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" double nexttoward(double, long double) throw() __attribute__((__const__)); extern "C" double __nexttoward(double, long double) throw() __attribute__((__const__));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double remainder(double, double) throw(); extern "C" double __remainder(double, double) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double scalbn(double, int) throw(); extern "C" double __scalbn(double, int) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int ilogb(double) throw(); extern "C" int __ilogb(double) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double scalbln(double, long) throw(); extern "C" double __scalbln(double, long) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double nearbyint(double) throw(); extern "C" double __nearbyint(double) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double round(double) throw() __attribute__((__const__)); extern "C" double __round(double) throw() __attribute__((__const__));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double trunc(double) throw() __attribute__((__const__)); extern "C" double __trunc(double) throw() __attribute__((__const__));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double remquo(double, double, int *) throw(); extern "C" double __remquo(double, double, int *) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long lrint(double) throw(); extern "C" long __lrint(double) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long long llrint(double) throw(); extern "C" long long __llrint(double) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long lround(double) throw(); extern "C" long __lround(double) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long long llround(double) throw(); extern "C" long long __llround(double) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fdim(double, double) throw(); extern "C" double __fdim(double, double) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fmax(double, double) throw(); extern "C" double __fmax(double, double) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fmin(double, double) throw(); extern "C" double __fmin(double, double) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassify(double) throw() __attribute__((__const__));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __signbit(double) throw() __attribute__((__const__));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) double fma(double, double, double) throw(); extern "C" double __fma(double, double, double) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalb(double, double) throw(); extern "C" double __scalb(double, double) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float acosf(float) throw(); extern "C" float __acosf(float) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float asinf(float) throw(); extern "C" float __asinf(float) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float atanf(float) throw(); extern "C" float __atanf(float) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float atan2f(float, float) throw(); extern "C" float __atan2f(float, float) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float cosf(float) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float sinf(float) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float tanf(float) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float coshf(float) throw(); extern "C" float __coshf(float) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float sinhf(float) throw(); extern "C" float __sinhf(float) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float tanhf(float) throw(); extern "C" float __tanhf(float) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) void sincosf(float, float *, float *) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float acoshf(float) throw(); extern "C" float __acoshf(float) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float asinhf(float) throw(); extern "C" float __asinhf(float) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float atanhf(float) throw(); extern "C" float __atanhf(float) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float expf(float) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float frexpf(float, int *) throw(); extern "C" float __frexpf(float, int *) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float ldexpf(float, int) throw(); extern "C" float __ldexpf(float, int) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float logf(float) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float log10f(float) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float modff(float, float *) throw(); extern "C" float __modff(float, float *) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float exp10f(float) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" float pow10f(float) throw(); extern "C" float __pow10f(float) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float expm1f(float) throw(); extern "C" float __expm1f(float) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float log1pf(float) throw(); extern "C" float __log1pf(float) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float logbf(float) throw(); extern "C" float __logbf(float) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float exp2f(float) throw(); extern "C" float __exp2f(float) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float log2f(float) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float powf(float, float) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float sqrtf(float) throw(); extern "C" float __sqrtf(float) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float hypotf(float, float) throw(); extern "C" float __hypotf(float, float) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float cbrtf(float) throw(); extern "C" float __cbrtf(float) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float ceilf(float) throw() __attribute__((__const__)); extern "C" float __ceilf(float) throw() __attribute__((__const__));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fabsf(float) throw() __attribute__((__const__)); extern "C" float __fabsf(float) throw() __attribute__((__const__));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float floorf(float) throw() __attribute__((__const__)); extern "C" float __floorf(float) throw() __attribute__((__const__));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fmodf(float, float) throw(); extern "C" float __fmodf(float, float) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isinff(float) throw() __attribute__((__const__));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __finitef(float) throw() __attribute__((__const__));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinff(float) throw() __attribute__((__const__));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitef(float) throw() __attribute__((__const__));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" float dremf(float, float) throw(); extern "C" float __dremf(float, float) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" float significandf(float) throw(); extern "C" float __significandf(float) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float copysignf(float, float) throw() __attribute__((__const__)); extern "C" float __copysignf(float, float) throw() __attribute__((__const__));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float nanf(const char *) throw() __attribute__((__const__)); extern "C" float __nanf(const char *) throw() __attribute__((__const__));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isnanf(float) throw() __attribute__((__const__));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanf(float) throw() __attribute__((__const__));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" float j0f(float) throw(); extern "C" float __j0f(float) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" float j1f(float) throw(); extern "C" float __j1f(float) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" float jnf(int, float) throw(); extern "C" float __jnf(int, float) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" float y0f(float) throw(); extern "C" float __y0f(float) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" float y1f(float) throw(); extern "C" float __y1f(float) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" float ynf(int, float) throw(); extern "C" float __ynf(int, float) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float erff(float) throw(); extern "C" float __erff(float) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float erfcf(float) throw(); extern "C" float __erfcf(float) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float lgammaf(float) throw(); extern "C" float __lgammaf(float) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float tgammaf(float) throw(); extern "C" float __tgammaf(float) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" float gammaf(float) throw(); extern "C" float __gammaf(float) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf_r(float, int *) throw(); extern "C" float __lgammaf_r(float, int *) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float rintf(float) throw(); extern "C" float __rintf(float) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float nextafterf(float, float) throw() __attribute__((__const__)); extern "C" float __nextafterf(float, float) throw() __attribute__((__const__));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" float nexttowardf(float, long double) throw() __attribute__((__const__)); extern "C" float __nexttowardf(float, long double) throw() __attribute__((__const__));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float remainderf(float, float) throw(); extern "C" float __remainderf(float, float) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float scalbnf(float, int) throw(); extern "C" float __scalbnf(float, int) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int ilogbf(float) throw(); extern "C" int __ilogbf(float) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float scalblnf(float, long) throw(); extern "C" float __scalblnf(float, long) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float nearbyintf(float) throw(); extern "C" float __nearbyintf(float) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float roundf(float) throw() __attribute__((__const__)); extern "C" float __roundf(float) throw() __attribute__((__const__));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float truncf(float) throw() __attribute__((__const__)); extern "C" float __truncf(float) throw() __attribute__((__const__));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float remquof(float, float, int *) throw(); extern "C" float __remquof(float, float, int *) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long lrintf(float) throw(); extern "C" long __lrintf(float) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long long llrintf(float) throw(); extern "C" long long __llrintf(float) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long lroundf(float) throw(); extern "C" long __lroundf(float) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) long long llroundf(float) throw(); extern "C" long long __llroundf(float) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fdimf(float, float) throw(); extern "C" float __fdimf(float, float) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fmaxf(float, float) throw(); extern "C" float __fmaxf(float, float) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fminf(float, float) throw(); extern "C" float __fminf(float, float) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyf(float) throw() __attribute__((__const__));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __signbitf(float) throw() __attribute__((__const__));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) float fmaf(float, float, float) throw(); extern "C" float __fmaf(float, float, float) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbf(float, float) throw(); extern "C" float __scalbf(float, float) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acosl(long double) throw(); extern "C" long double __acosl(long double) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinl(long double) throw(); extern "C" long double __asinl(long double) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanl(long double) throw(); extern "C" long double __atanl(long double) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atan2l(long double, long double) throw(); extern "C" long double __atan2l(long double, long double) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cosl(long double) throw(); extern "C" long double __cosl(long double) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinl(long double) throw(); extern "C" long double __sinl(long double) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanl(long double) throw(); extern "C" long double __tanl(long double) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" long double coshl(long double) throw(); extern "C" long double __coshl(long double) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinhl(long double) throw(); extern "C" long double __sinhl(long double) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanhl(long double) throw(); extern "C" long double __tanhl(long double) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosl(long double, long double *, long double *) throw(); extern "C" void __sincosl(long double, long double *, long double *) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acoshl(long double) throw(); extern "C" long double __acoshl(long double) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinhl(long double) throw(); extern "C" long double __asinhl(long double) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanhl(long double) throw(); extern "C" long double __atanhl(long double) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expl(long double) throw(); extern "C" long double __expl(long double) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" long double frexpl(long double, int *) throw(); extern "C" long double __frexpl(long double, int *) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ldexpl(long double, int) throw(); extern "C" long double __ldexpl(long double, int) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logl(long double) throw(); extern "C" long double __logl(long double) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log10l(long double) throw(); extern "C" long double __log10l(long double) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" long double modfl(long double, long double *) throw(); extern "C" long double __modfl(long double, long double *) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp10l(long double) throw(); extern "C" long double __exp10l(long double) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" long double pow10l(long double) throw(); extern "C" long double __pow10l(long double) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expm1l(long double) throw(); extern "C" long double __expm1l(long double) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log1pl(long double) throw(); extern "C" long double __log1pl(long double) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logbl(long double) throw(); extern "C" long double __logbl(long double) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp2l(long double) throw(); extern "C" long double __exp2l(long double) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log2l(long double) throw(); extern "C" long double __log2l(long double) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" long double powl(long double, long double) throw(); extern "C" long double __powl(long double, long double) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sqrtl(long double) throw(); extern "C" long double __sqrtl(long double) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" long double hypotl(long double, long double) throw(); extern "C" long double __hypotl(long double, long double) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cbrtl(long double) throw(); extern "C" long double __cbrtl(long double) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ceill(long double) throw() __attribute__((__const__)); extern "C" long double __ceill(long double) throw() __attribute__((__const__));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fabsl(long double) throw() __attribute__((__const__)); extern "C" long double __fabsl(long double) throw() __attribute__((__const__));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" long double floorl(long double) throw() __attribute__((__const__)); extern "C" long double __floorl(long double) throw() __attribute__((__const__));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmodl(long double, long double) throw(); extern "C" long double __fmodl(long double, long double) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isinfl(long double) throw() __attribute__((__const__));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __finitel(long double) throw() __attribute__((__const__));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinfl(long double) throw() __attribute__((__const__));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitel(long double) throw() __attribute__((__const__));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" long double dreml(long double, long double) throw(); extern "C" long double __dreml(long double, long double) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" long double significandl(long double) throw(); extern "C" long double __significandl(long double) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" long double copysignl(long double, long double) throw() __attribute__((__const__)); extern "C" long double __copysignl(long double, long double) throw() __attribute__((__const__));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nanl(const char *) throw() __attribute__((__const__)); extern "C" long double __nanl(const char *) throw() __attribute__((__const__));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __isnanl(long double) throw() __attribute__((__const__));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanl(long double) throw() __attribute__((__const__));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j0l(long double) throw(); extern "C" long double __j0l(long double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j1l(long double) throw(); extern "C" long double __j1l(long double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" long double jnl(int, long double) throw(); extern "C" long double __jnl(int, long double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y0l(long double) throw(); extern "C" long double __y0l(long double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y1l(long double) throw(); extern "C" long double __y1l(long double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ynl(int, long double) throw(); extern "C" long double __ynl(int, long double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfl(long double) throw(); extern "C" long double __erfl(long double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfcl(long double) throw(); extern "C" long double __erfcl(long double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal(long double) throw(); extern "C" long double __lgammal(long double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tgammal(long double) throw(); extern "C" long double __tgammal(long double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" long double gammal(long double) throw(); extern "C" long double __gammal(long double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal_r(long double, int *) throw(); extern "C" long double __lgammal_r(long double, int *) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" long double rintl(long double) throw(); extern "C" long double __rintl(long double) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nextafterl(long double, long double) throw() __attribute__((__const__)); extern "C" long double __nextafterl(long double, long double) throw() __attribute__((__const__));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nexttowardl(long double, long double) throw() __attribute__((__const__)); extern "C" long double __nexttowardl(long double, long double) throw() __attribute__((__const__));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remainderl(long double, long double) throw(); extern "C" long double __remainderl(long double, long double) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbnl(long double, int) throw(); extern "C" long double __scalbnl(long double, int) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbl(long double) throw(); extern "C" int __ilogbl(long double) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalblnl(long double, long) throw(); extern "C" long double __scalblnl(long double, long) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nearbyintl(long double) throw(); extern "C" long double __nearbyintl(long double) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" long double roundl(long double) throw() __attribute__((__const__)); extern "C" long double __roundl(long double) throw() __attribute__((__const__));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" long double truncl(long double) throw() __attribute__((__const__)); extern "C" long double __truncl(long double) throw() __attribute__((__const__));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remquol(long double, long double, int *) throw(); extern "C" long double __remquol(long double, long double, int *) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintl(long double) throw(); extern "C" long __lrintl(long double) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintl(long double) throw(); extern "C" long long __llrintl(long double) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundl(long double) throw(); extern "C" long __lroundl(long double) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundl(long double) throw(); extern "C" long long __llroundl(long double) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fdiml(long double, long double) throw(); extern "C" long double __fdiml(long double, long double) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmaxl(long double, long double) throw(); extern "C" long double __fmaxl(long double, long double) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fminl(long double, long double) throw(); extern "C" long double __fminl(long double, long double) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyl(long double) throw() __attribute__((__const__));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" __attribute__((weak)) int __signbitl(long double) throw() __attribute__((__const__));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmal(long double, long double, long double) throw(); extern "C" long double __fmal(long double, long double, long double) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbl(long double, long double) throw(); extern "C" long double __scalbl(long double, long double) throw();
# 161 "/usr/include/math.h" 3
extern "C" { extern int signgam; }
# 203 "/usr/include/math.h" 3
enum {
# 204 "/usr/include/math.h" 3
FP_NAN,
# 206 "/usr/include/math.h" 3
FP_INFINITE,
# 208 "/usr/include/math.h" 3
FP_ZERO,
# 210 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 212 "/usr/include/math.h" 3
FP_NORMAL
# 214 "/usr/include/math.h" 3
};
# 302 "/usr/include/math.h" 3
extern "C" { typedef
# 296 "/usr/include/math.h" 3
enum {
# 297 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 298 "/usr/include/math.h" 3
_SVID_ = 0,
# 299 "/usr/include/math.h" 3
_XOPEN_,
# 300 "/usr/include/math.h" 3
_POSIX_,
# 301 "/usr/include/math.h" 3
_ISOC_
# 302 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE; }
# 307 "/usr/include/math.h" 3
extern "C" { extern _LIB_VERSION_TYPE _LIB_VERSION; }
# 318 "/usr/include/math.h" 3
extern "C" { struct __exception {
# 323 "/usr/include/math.h" 3
int type;
# 324 "/usr/include/math.h" 3
char *name;
# 325 "/usr/include/math.h" 3
double arg1;
# 326 "/usr/include/math.h" 3
double arg2;
# 327 "/usr/include/math.h" 3
double retval;
# 328 "/usr/include/math.h" 3
}; }
# 331 "/usr/include/math.h" 3
extern "C" int matherr(__exception *) throw();
# 67 "/usr/include/bits/waitstatus.h" 3
extern "C" { union wait {
# 69 "/usr/include/bits/waitstatus.h" 3
int w_status;
# 71 "/usr/include/bits/waitstatus.h" 3
struct {
# 73 "/usr/include/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 74 "/usr/include/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 75 "/usr/include/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 76 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 84 "/usr/include/bits/waitstatus.h" 3
} __wait_terminated;
# 86 "/usr/include/bits/waitstatus.h" 3
struct {
# 88 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 89 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 90 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 97 "/usr/include/bits/waitstatus.h" 3
} __wait_stopped;
# 98 "/usr/include/bits/waitstatus.h" 3
}; }
# 102 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 99 "/usr/include/stdlib.h" 3
struct {
# 100 "/usr/include/stdlib.h" 3
int quot;
# 101 "/usr/include/stdlib.h" 3
int rem;
# 102 "/usr/include/stdlib.h" 3
} div_t; }
# 110 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 107 "/usr/include/stdlib.h" 3
struct {
# 108 "/usr/include/stdlib.h" 3
long quot;
# 109 "/usr/include/stdlib.h" 3
long rem;
# 110 "/usr/include/stdlib.h" 3
} ldiv_t; }
# 122 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 119 "/usr/include/stdlib.h" 3
struct {
# 120 "/usr/include/stdlib.h" 3
long long quot;
# 121 "/usr/include/stdlib.h" 3
long long rem;
# 122 "/usr/include/stdlib.h" 3
} lldiv_t; }
# 140 "/usr/include/stdlib.h" 3
extern "C" size_t __ctype_get_mb_cur_max() throw();
# 145 "/usr/include/stdlib.h" 3
extern "C" double atof(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 148 "/usr/include/stdlib.h" 3
extern "C" int atoi(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 151 "/usr/include/stdlib.h" 3
extern "C" long atol(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 158 "/usr/include/stdlib.h" 3
extern "C" long long atoll(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 165 "/usr/include/stdlib.h" 3
extern "C" double strtod(const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(1)));
# 173 "/usr/include/stdlib.h" 3
extern "C" float strtof(const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(1)));
# 176 "/usr/include/stdlib.h" 3
extern "C" long double strtold(const char *__restrict__, char **__restrict__) throw() __attribute__((nonnull(1)));
# 184 "/usr/include/stdlib.h" 3
extern "C" long strtol(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 188 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 196 "/usr/include/stdlib.h" 3
extern "C" long long strtoq(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 201 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtouq(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 210 "/usr/include/stdlib.h" 3
extern "C" long long strtoll(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 215 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull(const char *__restrict__, char **__restrict__, int) throw() __attribute__((nonnull(1)));
# 240 "/usr/include/stdlib.h" 3
extern "C" long strtol_l(const char *__restrict__, char **__restrict__, int, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 244 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul_l(const char *__restrict__, char **__restrict__, int, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 250 "/usr/include/stdlib.h" 3
extern "C" long long strtoll_l(const char *__restrict__, char **__restrict__, int, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 256 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull_l(const char *__restrict__, char **__restrict__, int, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 261 "/usr/include/stdlib.h" 3
extern "C" double strtod_l(const char *__restrict__, char **__restrict__, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(3)));
# 265 "/usr/include/stdlib.h" 3
extern "C" float strtof_l(const char *__restrict__, char **__restrict__, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(3)));
# 269 "/usr/include/stdlib.h" 3
extern "C" long double strtold_l(const char *__restrict__, char **__restrict__, __locale_t) throw() __attribute__((nonnull(1))) __attribute__((nonnull(3)));
# 311 "/usr/include/stdlib.h" 3
extern "C" char *l64a(long) throw();
# 314 "/usr/include/stdlib.h" 3
extern "C" long a64l(const char *) throw() __attribute__((__pure__)) __attribute__((nonnull(1)));
# 34 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_char u_char; }
# 35 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_short u_short; }
# 36 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_int u_int; }
# 37 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_long u_long; }
# 38 "/usr/include/sys/types.h" 3
extern "C" { typedef __quad_t quad_t; }
# 39 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_quad_t u_quad_t; }
# 40 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsid_t fsid_t; }
# 45 "/usr/include/sys/types.h" 3
extern "C" { typedef __loff_t loff_t; }
# 49 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino_t ino_t; }
# 56 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino64_t ino64_t; }
# 61 "/usr/include/sys/types.h" 3
extern "C" { typedef __dev_t dev_t; }
# 66 "/usr/include/sys/types.h" 3
extern "C" { typedef __gid_t gid_t; }
# 71 "/usr/include/sys/types.h" 3
extern "C" { typedef __mode_t mode_t; }
# 76 "/usr/include/sys/types.h" 3
extern "C" { typedef __nlink_t nlink_t; }
# 81 "/usr/include/sys/types.h" 3
extern "C" { typedef __uid_t uid_t; }
# 87 "/usr/include/sys/types.h" 3
extern "C" { typedef __off_t off_t; }
# 94 "/usr/include/sys/types.h" 3
extern "C" { typedef __off64_t off64_t; }
# 105 "/usr/include/sys/types.h" 3
extern "C" { typedef __id_t id_t; }
# 110 "/usr/include/sys/types.h" 3
extern "C" { typedef __ssize_t ssize_t; }
# 116 "/usr/include/sys/types.h" 3
extern "C" { typedef __daddr_t daddr_t; }
# 117 "/usr/include/sys/types.h" 3
extern "C" { typedef __caddr_t caddr_t; }
# 123 "/usr/include/sys/types.h" 3
extern "C" { typedef __key_t key_t; }
# 137 "/usr/include/sys/types.h" 3
extern "C" { typedef __useconds_t useconds_t; }
# 141 "/usr/include/sys/types.h" 3
extern "C" { typedef __suseconds_t suseconds_t; }
# 151 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long ulong; }
# 152 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short ushort; }
# 153 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned uint; }
# 195 "/usr/include/sys/types.h" 3
extern "C" { typedef signed char int8_t; }
# 196 "/usr/include/sys/types.h" 3
extern "C" { typedef short int16_t; }
# 197 "/usr/include/sys/types.h" 3
extern "C" { typedef int int32_t; }
# 198 "/usr/include/sys/types.h" 3
extern "C" { typedef long long int64_t; }
# 201 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned char u_int8_t; }
# 202 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short u_int16_t; }
# 203 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned u_int32_t; }
# 204 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long long u_int64_t; }
# 206 "/usr/include/sys/types.h" 3
extern "C" { typedef int register_t; }
# 24 "/usr/include/bits/sigset.h" 3
extern "C" { typedef int __sig_atomic_t; }
# 32 "/usr/include/bits/sigset.h" 3
extern "C" { typedef
# 30 "/usr/include/bits/sigset.h" 3
struct {
# 31 "/usr/include/bits/sigset.h" 3
unsigned long __val[((1024) / ((8) * sizeof(unsigned long)))];
# 32 "/usr/include/bits/sigset.h" 3
} __sigset_t; }
# 38 "/usr/include/sys/select.h" 3
extern "C" { typedef __sigset_t sigset_t; }
# 75 "/usr/include/bits/time.h" 3
extern "C" { struct timeval {
# 77 "/usr/include/bits/time.h" 3
__time_t tv_sec;
# 78 "/usr/include/bits/time.h" 3
__suseconds_t tv_usec;
# 79 "/usr/include/bits/time.h" 3
}; }
# 55 "/usr/include/sys/select.h" 3
extern "C" { typedef long __fd_mask; }
# 78 "/usr/include/sys/select.h" 3
extern "C" { typedef
# 68 "/usr/include/sys/select.h" 3
struct {
# 72 "/usr/include/sys/select.h" 3
__fd_mask fds_bits[(1024 / (8 * ((int)sizeof(__fd_mask))))];
# 78 "/usr/include/sys/select.h" 3
} fd_set; }
# 85 "/usr/include/sys/select.h" 3
extern "C" { typedef __fd_mask fd_mask; }
# 109 "/usr/include/sys/select.h" 3
extern "C" int select(int, fd_set *__restrict__, fd_set *__restrict__, fd_set *__restrict__, timeval *__restrict__);
# 121 "/usr/include/sys/select.h" 3
extern "C" int pselect(int, fd_set *__restrict__, fd_set *__restrict__, fd_set *__restrict__, const timespec *__restrict__, const __sigset_t *__restrict__);
# 31 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_major(unsigned long long) throw();
# 34 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_minor(unsigned long long) throw();
# 37 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned long long gnu_dev_makedev(unsigned, unsigned) throw();
# 229 "/usr/include/sys/types.h" 3
extern "C" { typedef __blksize_t blksize_t; }
# 236 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt_t blkcnt_t; }
# 240 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt_t fsblkcnt_t; }
# 244 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt_t fsfilcnt_t; }
# 263 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt64_t blkcnt64_t; }
# 264 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt64_t fsblkcnt64_t; }
# 265 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt64_t fsfilcnt64_t; }
# 50 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned long pthread_t; }
# 57 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 54 "/usr/include/bits/pthreadtypes.h" 3
union {
# 55 "/usr/include/bits/pthreadtypes.h" 3
char __size[36];
# 56 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 57 "/usr/include/bits/pthreadtypes.h" 3
} pthread_attr_t; }
# 70 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 67 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_internal_slist {
# 69 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_slist *__next;
# 70 "/usr/include/bits/pthreadtypes.h" 3
} __pthread_slist_t; }
# 104 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 77 "/usr/include/bits/pthreadtypes.h" 3
union {
# 78 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 80 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 81 "/usr/include/bits/pthreadtypes.h" 3
unsigned __count;
# 82 "/usr/include/bits/pthreadtypes.h" 3
int __owner;
# 88 "/usr/include/bits/pthreadtypes.h" 3
int __kind;
# 94 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nusers;
# 96 "/usr/include/bits/pthreadtypes.h" 3
union {
# 97 "/usr/include/bits/pthreadtypes.h" 3
int __spins;
# 98 "/usr/include/bits/pthreadtypes.h" 3
__pthread_slist_t __list;
# 99 "/usr/include/bits/pthreadtypes.h" 3
};
# 101 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 102 "/usr/include/bits/pthreadtypes.h" 3
char __size[24];
# 103 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 104 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutex_t; }
# 110 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 107 "/usr/include/bits/pthreadtypes.h" 3
union {
# 108 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 109 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 110 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutexattr_t; }
# 130 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 116 "/usr/include/bits/pthreadtypes.h" 3
union {
# 118 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 119 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 120 "/usr/include/bits/pthreadtypes.h" 3
unsigned __futex;
# 121 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 122 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 123 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 124 "/usr/include/bits/pthreadtypes.h" 3
void *__mutex;
# 125 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 126 "/usr/include/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 127 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 128 "/usr/include/bits/pthreadtypes.h" 3
char __size[48];
# 129 "/usr/include/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 130 "/usr/include/bits/pthreadtypes.h" 3
} pthread_cond_t; }
# 136 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 133 "/usr/include/bits/pthreadtypes.h" 3
union {
# 134 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 135 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 136 "/usr/include/bits/pthreadtypes.h" 3
} pthread_condattr_t; }
# 140 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned pthread_key_t; }
# 144 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef int pthread_once_t; }
# 189 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 151 "/usr/include/bits/pthreadtypes.h" 3
union {
# 171 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 172 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 173 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 174 "/usr/include/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 175 "/usr/include/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 176 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 177 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 180 "/usr/include/bits/pthreadtypes.h" 3
unsigned char __flags;
# 181 "/usr/include/bits/pthreadtypes.h" 3
unsigned char __shared;
# 182 "/usr/include/bits/pthreadtypes.h" 3
unsigned char __pad1;
# 183 "/usr/include/bits/pthreadtypes.h" 3
unsigned char __pad2;
# 184 "/usr/include/bits/pthreadtypes.h" 3
int __writer;
# 185 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 187 "/usr/include/bits/pthreadtypes.h" 3
char __size[32];
# 188 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 189 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlock_t; }
# 195 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 192 "/usr/include/bits/pthreadtypes.h" 3
union {
# 193 "/usr/include/bits/pthreadtypes.h" 3
char __size[8];
# 194 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 195 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t; }
# 201 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef volatile int pthread_spinlock_t; }
# 210 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 207 "/usr/include/bits/pthreadtypes.h" 3
union {
# 208 "/usr/include/bits/pthreadtypes.h" 3
char __size[20];
# 209 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 210 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrier_t; }
# 216 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 213 "/usr/include/bits/pthreadtypes.h" 3
union {
# 214 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 215 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 216 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrierattr_t; }
# 327 "/usr/include/stdlib.h" 3
extern "C" long random() throw();
# 330 "/usr/include/stdlib.h" 3
extern "C" void srandom(unsigned) throw();
# 336 "/usr/include/stdlib.h" 3
extern "C" char *initstate(unsigned, char *, size_t) throw() __attribute__((nonnull(2)));
# 341 "/usr/include/stdlib.h" 3
extern "C" char *setstate(char *) throw() __attribute__((nonnull(1)));
# 349 "/usr/include/stdlib.h" 3
extern "C" { struct random_data {
# 351 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 352 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 353 "/usr/include/stdlib.h" 3
int32_t *state;
# 354 "/usr/include/stdlib.h" 3
int rand_type;
# 355 "/usr/include/stdlib.h" 3
int rand_deg;
# 356 "/usr/include/stdlib.h" 3
int rand_sep;
# 357 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 358 "/usr/include/stdlib.h" 3
}; }
# 360 "/usr/include/stdlib.h" 3
extern "C" int random_r(random_data *__restrict__, int32_t *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 363 "/usr/include/stdlib.h" 3
extern "C" int srandom_r(unsigned, random_data *) throw() __attribute__((nonnull(2)));
# 366 "/usr/include/stdlib.h" 3
extern "C" int initstate_r(unsigned, char *__restrict__, size_t, random_data *__restrict__) throw() __attribute__((nonnull(2))) __attribute__((nonnull(4)));
# 371 "/usr/include/stdlib.h" 3
extern "C" int setstate_r(char *__restrict__, random_data *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 380 "/usr/include/stdlib.h" 3
extern "C" int rand() throw();
# 382 "/usr/include/stdlib.h" 3
extern "C" void srand(unsigned) throw();
# 387 "/usr/include/stdlib.h" 3
extern "C" int rand_r(unsigned *) throw();
# 395 "/usr/include/stdlib.h" 3
extern "C" double drand48() throw();
# 396 "/usr/include/stdlib.h" 3
extern "C" double erand48(unsigned short [3]) throw() __attribute__((nonnull(1)));
# 399 "/usr/include/stdlib.h" 3
extern "C" long lrand48() throw();
# 400 "/usr/include/stdlib.h" 3
extern "C" long nrand48(unsigned short [3]) throw() __attribute__((nonnull(1)));
# 404 "/usr/include/stdlib.h" 3
extern "C" long mrand48() throw();
# 405 "/usr/include/stdlib.h" 3
extern "C" long jrand48(unsigned short [3]) throw() __attribute__((nonnull(1)));
# 409 "/usr/include/stdlib.h" 3
extern "C" void srand48(long) throw();
# 410 "/usr/include/stdlib.h" 3
extern "C" unsigned short *seed48(unsigned short [3]) throw() __attribute__((nonnull(1)));
# 412 "/usr/include/stdlib.h" 3
extern "C" void lcong48(unsigned short [7]) throw() __attribute__((nonnull(1)));
# 418 "/usr/include/stdlib.h" 3
extern "C" { struct drand48_data {
# 420 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 421 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 422 "/usr/include/stdlib.h" 3
unsigned short __c;
# 423 "/usr/include/stdlib.h" 3
unsigned short __init;
# 424 "/usr/include/stdlib.h" 3
unsigned long long __a;
# 425 "/usr/include/stdlib.h" 3
}; }
# 428 "/usr/include/stdlib.h" 3
extern "C" int drand48_r(drand48_data *__restrict__, double *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 430 "/usr/include/stdlib.h" 3
extern "C" int erand48_r(unsigned short [3], drand48_data *__restrict__, double *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 435 "/usr/include/stdlib.h" 3
extern "C" int lrand48_r(drand48_data *__restrict__, long *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 438 "/usr/include/stdlib.h" 3
extern "C" int nrand48_r(unsigned short [3], drand48_data *__restrict__, long *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 444 "/usr/include/stdlib.h" 3
extern "C" int mrand48_r(drand48_data *__restrict__, long *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 447 "/usr/include/stdlib.h" 3
extern "C" int jrand48_r(unsigned short [3], drand48_data *__restrict__, long *__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 453 "/usr/include/stdlib.h" 3
extern "C" int srand48_r(long, drand48_data *) throw() __attribute__((nonnull(2)));
# 456 "/usr/include/stdlib.h" 3
extern "C" int seed48_r(unsigned short [3], drand48_data *) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 459 "/usr/include/stdlib.h" 3
extern "C" int lcong48_r(unsigned short [7], drand48_data *) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2)));
# 471 "/usr/include/stdlib.h" 3
extern "C" void *malloc(size_t) throw() __attribute__((__malloc__));
# 473 "/usr/include/stdlib.h" 3
extern "C" void *calloc(size_t, size_t) throw() __attribute__((__malloc__));
# 485 "/usr/include/stdlib.h" 3
extern "C" void *realloc(void *, size_t) throw() __attribute__((__warn_unused_result__));
# 488 "/usr/include/stdlib.h" 3
extern "C" void free(void *) throw();
# 493 "/usr/include/stdlib.h" 3
extern "C" void cfree(void *) throw();
# 33 "/usr/include/alloca.h" 3
extern "C" void *alloca(size_t) throw();
# 503 "/usr/include/stdlib.h" 3
extern "C" void *valloc(size_t) throw() __attribute__((__malloc__));
# 508 "/usr/include/stdlib.h" 3
extern "C" int posix_memalign(void **, size_t, size_t) throw() __attribute__((nonnull(1)));
# 514 "/usr/include/stdlib.h" 3
extern "C" void abort() throw() __attribute__((__noreturn__));
# 518 "/usr/include/stdlib.h" 3
extern "C" int atexit(void (*)(void)) throw() __attribute__((nonnull(1)));
# 525 "/usr/include/stdlib.h" 3
int at_quick_exit(void (*)(void)) throw() __asm__("at_quick_exit") __attribute__((nonnull(1)));
# 536 "/usr/include/stdlib.h" 3
extern "C" int on_exit(void (*)(int, void *), void *) throw() __attribute__((nonnull(1)));
# 544 "/usr/include/stdlib.h" 3
extern "C" void exit(int) throw() __attribute__((__noreturn__));
# 552 "/usr/include/stdlib.h" 3
extern "C" void quick_exit(int) throw() __attribute__((__noreturn__));
# 560 "/usr/include/stdlib.h" 3
extern "C" void _Exit(int) throw() __attribute__((__noreturn__));
# 567 "/usr/include/stdlib.h" 3
extern "C" char *getenv(const char *) throw() __attribute__((nonnull(1)));
# 572 "/usr/include/stdlib.h" 3
extern "C" char *__secure_getenv(const char *) throw() __attribute__((nonnull(1)));
# 579 "/usr/include/stdlib.h" 3
extern "C" int putenv(char *) throw() __attribute__((nonnull(1)));
# 585 "/usr/include/stdlib.h" 3
extern "C" int setenv(const char *, const char *, int) throw() __attribute__((nonnull(2)));
# 589 "/usr/include/stdlib.h" 3
extern "C" int unsetenv(const char *) throw() __attribute__((nonnull(1)));
# 596 "/usr/include/stdlib.h" 3
extern "C" int clearenv() throw();
# 606 "/usr/include/stdlib.h" 3
extern "C" char *mktemp(char *) throw() __attribute__((nonnull(1)));
# 620 "/usr/include/stdlib.h" 3
extern "C" int mkstemp(char *) __attribute__((nonnull(1)));
# 630 "/usr/include/stdlib.h" 3
extern "C" int mkstemp64(char *) __attribute__((nonnull(1)));
# 642 "/usr/include/stdlib.h" 3
extern "C" int mkstemps(char *, int) __attribute__((nonnull(1)));
# 652 "/usr/include/stdlib.h" 3
extern "C" int mkstemps64(char *, int) __attribute__((nonnull(1)));
# 663 "/usr/include/stdlib.h" 3
extern "C" char *mkdtemp(char *) throw() __attribute__((nonnull(1)));
# 674 "/usr/include/stdlib.h" 3
extern "C" int mkostemp(char *, int) __attribute__((nonnull(1)));
# 684 "/usr/include/stdlib.h" 3
extern "C" int mkostemp64(char *, int) __attribute__((nonnull(1)));
# 694 "/usr/include/stdlib.h" 3
extern "C" int mkostemps(char *, int, int) __attribute__((nonnull(1)));
# 706 "/usr/include/stdlib.h" 3
extern "C" int mkostemps64(char *, int, int) __attribute__((nonnull(1)));
# 717 "/usr/include/stdlib.h" 3
extern "C" int system(const char *);
# 724 "/usr/include/stdlib.h" 3
extern "C" char *canonicalize_file_name(const char *) throw() __attribute__((nonnull(1)));
# 734 "/usr/include/stdlib.h" 3
extern "C" char *realpath(const char *__restrict__, char *__restrict__) throw();
# 742 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_fn_t)(const void *, const void *); }
# 745 "/usr/include/stdlib.h" 3
extern "C" { typedef __compar_fn_t comparison_fn_t; }
# 749 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_d_fn_t)(const void *, const void *, void *); }
# 755 "/usr/include/stdlib.h" 3
extern "C" void *bsearch(const void *, const void *, size_t, size_t, __compar_fn_t) __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(5)));
# 761 "/usr/include/stdlib.h" 3
extern "C" void qsort(void *, size_t, size_t, __compar_fn_t) __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 764 "/usr/include/stdlib.h" 3
extern "C" void qsort_r(void *, size_t, size_t, __compar_d_fn_t, void *) __attribute__((nonnull(1))) __attribute__((nonnull(4)));
# 771 "/usr/include/stdlib.h" 3
extern "C" __attribute__((weak)) int abs(int) throw() __attribute__((__const__));
# 772 "/usr/include/stdlib.h" 3
extern "C" __attribute__((weak)) long labs(long) throw() __attribute__((__const__));
# 776 "/usr/include/stdlib.h" 3
extern "C" __attribute__((weak)) long long llabs(long long) throw() __attribute__((__const__));
# 785 "/usr/include/stdlib.h" 3
extern "C" div_t div(int, int) throw() __attribute__((__const__));
# 787 "/usr/include/stdlib.h" 3
extern "C" ldiv_t ldiv(long, long) throw() __attribute__((__const__));
# 793 "/usr/include/stdlib.h" 3
extern "C" lldiv_t lldiv(long long, long long) throw() __attribute__((__const__));
# 808 "/usr/include/stdlib.h" 3
extern "C" char *ecvt(double, int, int *__restrict__, int *__restrict__) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4)));
# 814 "/usr/include/stdlib.h" 3
extern "C" char *fcvt(double, int, int *__restrict__, int *__restrict__) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4)));
# 820 "/usr/include/stdlib.h" 3
extern "C" char *gcvt(double, int, char *) throw() __attribute__((nonnull(3)));
# 826 "/usr/include/stdlib.h" 3
extern "C" char *qecvt(long double, int, int *__restrict__, int *__restrict__) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4)));
# 829 "/usr/include/stdlib.h" 3
extern "C" char *qfcvt(long double, int, int *__restrict__, int *__restrict__) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4)));
# 832 "/usr/include/stdlib.h" 3
extern "C" char *qgcvt(long double, int, char *) throw() __attribute__((nonnull(3)));
# 838 "/usr/include/stdlib.h" 3
extern "C" int ecvt_r(double, int, int *__restrict__, int *__restrict__, char *__restrict__, size_t) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4))) __attribute__((nonnull(5)));
# 841 "/usr/include/stdlib.h" 3
extern "C" int fcvt_r(double, int, int *__restrict__, int *__restrict__, char *__restrict__, size_t) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4))) __attribute__((nonnull(5)));
# 845 "/usr/include/stdlib.h" 3
extern "C" int qecvt_r(long double, int, int *__restrict__, int *__restrict__, char *__restrict__, size_t) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4))) __attribute__((nonnull(5)));
# 849 "/usr/include/stdlib.h" 3
extern "C" int qfcvt_r(long double, int, int *__restrict__, int *__restrict__, char *__restrict__, size_t) throw() __attribute__((nonnull(3))) __attribute__((nonnull(4))) __attribute__((nonnull(5)));
# 860 "/usr/include/stdlib.h" 3
extern "C" int mblen(const char *, size_t) throw();
# 863 "/usr/include/stdlib.h" 3
extern "C" int mbtowc(wchar_t *__restrict__, const char *__restrict__, size_t) throw();
# 867 "/usr/include/stdlib.h" 3
extern "C" int wctomb(char *, wchar_t) throw();
# 871 "/usr/include/stdlib.h" 3
extern "C" size_t mbstowcs(wchar_t *__restrict__, const char *__restrict__, size_t) throw();
# 874 "/usr/include/stdlib.h" 3
extern "C" size_t wcstombs(char *__restrict__, const wchar_t *__restrict__, size_t) throw();
# 885 "/usr/include/stdlib.h" 3
extern "C" int rpmatch(const char *) throw() __attribute__((nonnull(1)));
# 896 "/usr/include/stdlib.h" 3
extern "C" int getsubopt(char **__restrict__, char *const *__restrict__, char **__restrict__) throw() __attribute__((nonnull(1))) __attribute__((nonnull(2))) __attribute__((nonnull(3)));
# 905 "/usr/include/stdlib.h" 3
extern "C" void setkey(const char *) throw() __attribute__((nonnull(1)));
# 913 "/usr/include/stdlib.h" 3
extern "C" int posix_openpt(int);
# 921 "/usr/include/stdlib.h" 3
extern "C" int grantpt(int) throw();
# 925 "/usr/include/stdlib.h" 3
extern "C" int unlockpt(int) throw();
# 930 "/usr/include/stdlib.h" 3
extern "C" char *ptsname(int) throw();
# 937 "/usr/include/stdlib.h" 3
extern "C" int ptsname_r(int, char *, size_t) throw() __attribute__((nonnull(2)));
# 941 "/usr/include/stdlib.h" 3
extern "C" int getpt();
# 948 "/usr/include/stdlib.h" 3
extern "C" int getloadavg(double [], int) throw() __attribute__((nonnull(1)));
# 69 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute__((visibility("default"))) {
# 71 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container> class __normal_iterator;
# 74 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 76 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace std __attribute__((visibility("default"))) {
# 78 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __true_type { };
# 79 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __false_type { };
# 81 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< bool __T0>
# 82 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __truth_type {
# 83 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 86 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 87 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 91 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 92 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __traitor {
# 94 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = (((bool)_Sp::__value) || ((bool)_Tp::__value))};
# 95 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 96 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 99 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class , class >
# 100 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same {
# 102 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 103 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 104 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 106 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 107 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 109 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 110 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 111 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 115 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_void {
# 117 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 118 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 119 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 122 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 124 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 125 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 126 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 131 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 132 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_integer {
# 134 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 135 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 136 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 142 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 144 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 145 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 146 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 149 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 151 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 152 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 153 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 156 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 158 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 159 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 160 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 163 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 165 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 166 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 167 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 171 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 173 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 174 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 175 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 195 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 197 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 198 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 199 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 204 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 205 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 206 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 209 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 211 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 212 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 213 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 216 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 218 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 219 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 220 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 223 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 225 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 226 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 227 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 230 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 232 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 233 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 234 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 239 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 240 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 241 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 244 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 246 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 247 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 248 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 253 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 254 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_floating {
# 256 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 257 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 258 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 262 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 264 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 265 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 266 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 269 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 271 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 272 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 273 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 276 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 278 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 279 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 280 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 285 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 286 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 288 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 289 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 290 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 292 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 293 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 295 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 296 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 297 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 302 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 303 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 305 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 306 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 307 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 309 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 310 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 313 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 314 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 315 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 320 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 321 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 323 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 328 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 329 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_fundamental : public __traitor< __is_void< _Tp> , __is_arithmetic< _Tp> > {
# 331 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 339 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 344 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 345 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_char {
# 347 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 348 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 349 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 352 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 354 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 355 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 356 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 360 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 362 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 363 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 364 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 367 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 368 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_byte {
# 370 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 371 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 372 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 375 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 377 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 378 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 379 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 382 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 384 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 385 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 386 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 389 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 391 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 392 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 393 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 398 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 399 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 401 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 402 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 403 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 417 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/4.4/ext/type_traits.h" 3
namespace __gnu_cxx __attribute__((visibility("default"))) {
# 40 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool __T1, class >
# 41 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if {
# 42 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 44 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 45 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 46 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 50 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 51 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type {
# 52 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 54 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 55 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 56 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 60 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 61 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __add_unsigned {
# 64 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 67 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 68 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 71 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 72 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 75 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 76 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 79 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 80 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned short __type; };
# 83 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 84 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned __type; };
# 87 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 88 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long __type; };
# 91 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 92 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 96 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 99 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 103 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 104 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __remove_unsigned {
# 107 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 110 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 111 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 115 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 118 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 119 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 122 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 123 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef short __type; };
# 126 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 127 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef int __type; };
# 130 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 131 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long __type; };
# 134 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 135 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long long __type; };
# 139 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 142 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 146 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type * __ptr )
    { return __ptr == 0; }
# 151 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type )
    { return false; }
# 158 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, bool __T2 = std::__is_integer< _Tp> ::__value>
# 159 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote {
# 160 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef double __type; };
# 162 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 163 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 164 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 166 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up>
# 167 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_2 {
# 170 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 171 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 174 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(__type1() + __type2()) __type;
# 175 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp>
# 178 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_3 {
# 181 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 182 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 183 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 186 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__((__type1() + __type2()) + __type3()) __type;
# 187 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 189 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp>
# 190 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_4 {
# 193 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 194 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 195 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 196 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Wp, std::__is_integer< _Wp> ::__value> ::__type __type4;
# 199 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(((__type1() + __type2()) + __type3()) + __type4()) __type;
# 200 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/ext/type_traits.h" 3
}
# 77 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute__((visibility("default"))) {
# 81 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    _Tp __cmath_power ( _Tp, unsigned int );
# 84 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline _Tp
    __pow_helper ( _Tp __x, int __n )
    {
      return __n < 0
        ? _Tp ( 1 ) / __cmath_power ( __x, - __n )
        : __cmath_power ( __x, __n );
    }
# 94 "/usr/include/c++/4.4/cmath" 3
inline double abs(double __x)
# 95 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabs(__x); }
# 98 "/usr/include/c++/4.4/cmath" 3
inline float abs(float __x)
# 99 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 102 "/usr/include/c++/4.4/cmath" 3
inline long double abs(long double __x)
# 103 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 105 "/usr/include/c++/4.4/cmath" 3
using ::acos;
# 108 "/usr/include/c++/4.4/cmath" 3
inline float acos(float __x)
# 109 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosf(__x); }
# 112 "/usr/include/c++/4.4/cmath" 3
inline long double acos(long double __x)
# 113 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosl(__x); }
# 115 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    acos ( _Tp __x )
    { return __builtin_acos ( __x ); }
# 121 "/usr/include/c++/4.4/cmath" 3
using ::asin;
# 124 "/usr/include/c++/4.4/cmath" 3
inline float asin(float __x)
# 125 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinf(__x); }
# 128 "/usr/include/c++/4.4/cmath" 3
inline long double asin(long double __x)
# 129 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinl(__x); }
# 131 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    asin ( _Tp __x )
    { return __builtin_asin ( __x ); }
# 137 "/usr/include/c++/4.4/cmath" 3
using ::atan;
# 140 "/usr/include/c++/4.4/cmath" 3
inline float atan(float __x)
# 141 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanf(__x); }
# 144 "/usr/include/c++/4.4/cmath" 3
inline long double atan(long double __x)
# 145 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanl(__x); }
# 147 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    atan ( _Tp __x )
    { return __builtin_atan ( __x ); }
# 153 "/usr/include/c++/4.4/cmath" 3
using ::atan2;
# 156 "/usr/include/c++/4.4/cmath" 3
inline float atan2(float __y, float __x)
# 157 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 160 "/usr/include/c++/4.4/cmath" 3
inline long double atan2(long double __y, long double __x)
# 161 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 163 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    atan2 ( _Tp __y, _Up __x )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return atan2 ( __type ( __y ), __type ( __x ) );
    }
# 175 "/usr/include/c++/4.4/cmath" 3
using ::ceil;
# 178 "/usr/include/c++/4.4/cmath" 3
inline float ceil(float __x)
# 179 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceilf(__x); }
# 182 "/usr/include/c++/4.4/cmath" 3
inline long double ceil(long double __x)
# 183 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceill(__x); }
# 185 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    ceil ( _Tp __x )
    { return __builtin_ceil ( __x ); }
# 191 "/usr/include/c++/4.4/cmath" 3
using ::cos;
# 194 "/usr/include/c++/4.4/cmath" 3
inline float cos(float __x)
# 195 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosf(__x); }
# 198 "/usr/include/c++/4.4/cmath" 3
inline long double cos(long double __x)
# 199 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosl(__x); }
# 201 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cos ( _Tp __x )
    { return __builtin_cos ( __x ); }
# 207 "/usr/include/c++/4.4/cmath" 3
using ::cosh;
# 210 "/usr/include/c++/4.4/cmath" 3
inline float cosh(float __x)
# 211 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshf(__x); }
# 214 "/usr/include/c++/4.4/cmath" 3
inline long double cosh(long double __x)
# 215 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshl(__x); }
# 217 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cosh ( _Tp __x )
    { return __builtin_cosh ( __x ); }
# 223 "/usr/include/c++/4.4/cmath" 3
using ::exp;
# 226 "/usr/include/c++/4.4/cmath" 3
inline float exp(float __x)
# 227 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expf(__x); }
# 230 "/usr/include/c++/4.4/cmath" 3
inline long double exp(long double __x)
# 231 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expl(__x); }
# 233 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    exp ( _Tp __x )
    { return __builtin_exp ( __x ); }
# 239 "/usr/include/c++/4.4/cmath" 3
using ::fabs;
# 242 "/usr/include/c++/4.4/cmath" 3
inline float fabs(float __x)
# 243 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 246 "/usr/include/c++/4.4/cmath" 3
inline long double fabs(long double __x)
# 247 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 249 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    fabs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 255 "/usr/include/c++/4.4/cmath" 3
using ::floor;
# 258 "/usr/include/c++/4.4/cmath" 3
inline float floor(float __x)
# 259 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorf(__x); }
# 262 "/usr/include/c++/4.4/cmath" 3
inline long double floor(long double __x)
# 263 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorl(__x); }
# 265 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    floor ( _Tp __x )
    { return __builtin_floor ( __x ); }
# 271 "/usr/include/c++/4.4/cmath" 3
using ::fmod;
# 274 "/usr/include/c++/4.4/cmath" 3
inline float fmod(float __x, float __y)
# 275 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 278 "/usr/include/c++/4.4/cmath" 3
inline long double fmod(long double __x, long double __y)
# 279 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 281 "/usr/include/c++/4.4/cmath" 3
using ::frexp;
# 284 "/usr/include/c++/4.4/cmath" 3
inline float frexp(float __x, int *__exp)
# 285 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 288 "/usr/include/c++/4.4/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 289 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 291 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    frexp ( _Tp __x, int * __exp )
    { return __builtin_frexp ( __x, __exp ); }
# 297 "/usr/include/c++/4.4/cmath" 3
using ::ldexp;
# 300 "/usr/include/c++/4.4/cmath" 3
inline float ldexp(float __x, int __exp)
# 301 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 304 "/usr/include/c++/4.4/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 305 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 307 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
  ldexp ( _Tp __x, int __exp )
  { return __builtin_ldexp ( __x, __exp ); }
# 313 "/usr/include/c++/4.4/cmath" 3
using ::log;
# 316 "/usr/include/c++/4.4/cmath" 3
inline float log(float __x)
# 317 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logf(__x); }
# 320 "/usr/include/c++/4.4/cmath" 3
inline long double log(long double __x)
# 321 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logl(__x); }
# 323 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log ( _Tp __x )
    { return __builtin_log ( __x ); }
# 329 "/usr/include/c++/4.4/cmath" 3
using ::log10;
# 332 "/usr/include/c++/4.4/cmath" 3
inline float log10(float __x)
# 333 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10f(__x); }
# 336 "/usr/include/c++/4.4/cmath" 3
inline long double log10(long double __x)
# 337 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10l(__x); }
# 339 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log10 ( _Tp __x )
    { return __builtin_log10 ( __x ); }
# 345 "/usr/include/c++/4.4/cmath" 3
using ::modf;
# 348 "/usr/include/c++/4.4/cmath" 3
inline float modf(float __x, float *__iptr)
# 349 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 352 "/usr/include/c++/4.4/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 353 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 355 "/usr/include/c++/4.4/cmath" 3
using ::pow;
# 358 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, float __y)
# 359 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powf(__x, __y); }
# 362 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, long double __y)
# 363 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powl(__x, __y); }
# 369 "/usr/include/c++/4.4/cmath" 3
inline double pow(double __x, int __i)
# 370 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powi(__x, __i); }
# 373 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, int __n)
# 374 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powif(__x, __n); }
# 377 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, int __n)
# 378 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powil(__x, __n); }
# 381 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    pow ( _Tp __x, _Up __y )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return pow ( __type ( __x ), __type ( __y ) );
    }
# 393 "/usr/include/c++/4.4/cmath" 3
using ::sin;
# 396 "/usr/include/c++/4.4/cmath" 3
inline float sin(float __x)
# 397 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinf(__x); }
# 400 "/usr/include/c++/4.4/cmath" 3
inline long double sin(long double __x)
# 401 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinl(__x); }
# 403 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sin ( _Tp __x )
    { return __builtin_sin ( __x ); }
# 409 "/usr/include/c++/4.4/cmath" 3
using ::sinh;
# 412 "/usr/include/c++/4.4/cmath" 3
inline float sinh(float __x)
# 413 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhf(__x); }
# 416 "/usr/include/c++/4.4/cmath" 3
inline long double sinh(long double __x)
# 417 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhl(__x); }
# 419 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sinh ( _Tp __x )
    { return __builtin_sinh ( __x ); }
# 425 "/usr/include/c++/4.4/cmath" 3
using ::sqrt;
# 428 "/usr/include/c++/4.4/cmath" 3
inline float sqrt(float __x)
# 429 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtf(__x); }
# 432 "/usr/include/c++/4.4/cmath" 3
inline long double sqrt(long double __x)
# 433 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtl(__x); }
# 435 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sqrt ( _Tp __x )
    { return __builtin_sqrt ( __x ); }
# 441 "/usr/include/c++/4.4/cmath" 3
using ::tan;
# 444 "/usr/include/c++/4.4/cmath" 3
inline float tan(float __x)
# 445 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanf(__x); }
# 448 "/usr/include/c++/4.4/cmath" 3
inline long double tan(long double __x)
# 449 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanl(__x); }
# 451 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tan ( _Tp __x )
    { return __builtin_tan ( __x ); }
# 457 "/usr/include/c++/4.4/cmath" 3
using ::tanh;
# 460 "/usr/include/c++/4.4/cmath" 3
inline float tanh(float __x)
# 461 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhf(__x); }
# 464 "/usr/include/c++/4.4/cmath" 3
inline long double tanh(long double __x)
# 465 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhl(__x); }
# 467 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tanh ( _Tp __x )
    { return __builtin_tanh ( __x ); }
# 473 "/usr/include/c++/4.4/cmath" 3
}
# 492 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute__((visibility("default"))) {
# 494 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    fpclassify ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_fpclassify ( FP_NAN, FP_INFINITE, FP_NORMAL,
      FP_SUBNORMAL, FP_ZERO, __type ( __f ) );
    }
# 504 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isfinite ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isfinite ( __type ( __f ) );
    }
# 513 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isinf ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isinf ( __type ( __f ) );
    }
# 522 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnan ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnan ( __type ( __f ) );
    }
# 531 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnormal ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnormal ( __type ( __f ) );
    }
# 540 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    signbit ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_signbit ( __type ( __f ) );
    }
# 549 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 558 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreaterequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreaterequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 567 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isless ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isless ( __type ( __f1 ), __type ( __f2 ) );
    }
# 576 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 585 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 594 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isunordered ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isunordered ( __type ( __f1 ), __type ( __f2 ) );
    }
# 603 "/usr/include/c++/4.4/cmath" 3
}
# 35 "/usr/include/c++/4.4/bits/cmath.tcc" 3
namespace std __attribute__((visibility("default"))) {
# 37 "/usr/include/c++/4.4/bits/cmath.tcc" 3
template < typename _Tp >
    inline _Tp
    __cmath_power ( _Tp __x, unsigned int __n )
    {
      _Tp __y = __n % 2 ? __x : _Tp ( 1 );

      while ( __n >>= 1 )
        {
          __x = __x * __x;
          if ( __n % 2 )
            __y = __y * __x;
        }

      return __y;
    }
# 53 "/usr/include/c++/4.4/bits/cmath.tcc" 3
}
# 49 "/usr/include/c++/4.4/cstddef" 3
namespace std __attribute__((visibility("default"))) {
# 51 "/usr/include/c++/4.4/cstddef" 3
using ::ptrdiff_t;
# 52 "/usr/include/c++/4.4/cstddef" 3
using ::size_t;
# 54 "/usr/include/c++/4.4/cstddef" 3
}
# 100 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute__((visibility("default"))) {
# 102 "/usr/include/c++/4.4/cstdlib" 3
using ::div_t;
# 103 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv_t;
# 105 "/usr/include/c++/4.4/cstdlib" 3
using ::abort;
# 106 "/usr/include/c++/4.4/cstdlib" 3
using ::abs;
# 107 "/usr/include/c++/4.4/cstdlib" 3
using ::atexit;
# 108 "/usr/include/c++/4.4/cstdlib" 3
using ::atof;
# 109 "/usr/include/c++/4.4/cstdlib" 3
using ::atoi;
# 110 "/usr/include/c++/4.4/cstdlib" 3
using ::atol;
# 111 "/usr/include/c++/4.4/cstdlib" 3
using ::bsearch;
# 112 "/usr/include/c++/4.4/cstdlib" 3
using ::calloc;
# 113 "/usr/include/c++/4.4/cstdlib" 3
using ::div;
# 114 "/usr/include/c++/4.4/cstdlib" 3
using ::exit;
# 115 "/usr/include/c++/4.4/cstdlib" 3
using ::free;
# 116 "/usr/include/c++/4.4/cstdlib" 3
using ::getenv;
# 117 "/usr/include/c++/4.4/cstdlib" 3
using ::labs;
# 118 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv;
# 119 "/usr/include/c++/4.4/cstdlib" 3
using ::malloc;
# 121 "/usr/include/c++/4.4/cstdlib" 3
using ::mblen;
# 122 "/usr/include/c++/4.4/cstdlib" 3
using ::mbstowcs;
# 123 "/usr/include/c++/4.4/cstdlib" 3
using ::mbtowc;
# 125 "/usr/include/c++/4.4/cstdlib" 3
using ::qsort;
# 126 "/usr/include/c++/4.4/cstdlib" 3
using ::rand;
# 127 "/usr/include/c++/4.4/cstdlib" 3
using ::realloc;
# 128 "/usr/include/c++/4.4/cstdlib" 3
using ::srand;
# 129 "/usr/include/c++/4.4/cstdlib" 3
using ::strtod;
# 130 "/usr/include/c++/4.4/cstdlib" 3
using ::strtol;
# 131 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoul;
# 132 "/usr/include/c++/4.4/cstdlib" 3
using ::system;
# 134 "/usr/include/c++/4.4/cstdlib" 3
using ::wcstombs;
# 135 "/usr/include/c++/4.4/cstdlib" 3
using ::wctomb;
# 139 "/usr/include/c++/4.4/cstdlib" 3
inline long abs(long __i) { return labs(__i); }
# 142 "/usr/include/c++/4.4/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 144 "/usr/include/c++/4.4/cstdlib" 3
}
# 157 "/usr/include/c++/4.4/cstdlib" 3
namespace __gnu_cxx __attribute__((visibility("default"))) {
# 160 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv_t;
# 166 "/usr/include/c++/4.4/cstdlib" 3
using ::_Exit;
# 170 "/usr/include/c++/4.4/cstdlib" 3
inline long long abs(long long __x) { return (__x >= (0)) ? __x : (-__x); }
# 173 "/usr/include/c++/4.4/cstdlib" 3
using ::llabs;
# 176 "/usr/include/c++/4.4/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 177 "/usr/include/c++/4.4/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 179 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv;
# 190 "/usr/include/c++/4.4/cstdlib" 3
using ::atoll;
# 191 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoll;
# 192 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoull;
# 194 "/usr/include/c++/4.4/cstdlib" 3
using ::strtof;
# 195 "/usr/include/c++/4.4/cstdlib" 3
using ::strtold;
# 197 "/usr/include/c++/4.4/cstdlib" 3
}
# 199 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute__((visibility("default"))) {
# 202 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 204 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::_Exit;
# 205 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::abs;
# 207 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::llabs;
# 208 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::div;
# 209 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv;
# 211 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::atoll;
# 212 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtof;
# 213 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoll;
# 214 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoull;
# 215 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtold;
# 217 "/usr/include/c++/4.4/cstdlib" 3
}
# 497 "/usr/local/cuda/bin/../include/math_functions.h"
namespace __gnu_cxx {
# 499 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline long long abs(long long) __attribute__((visibility("default")));
# 500 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 502 "/usr/local/cuda/bin/../include/math_functions.h"
namespace std {
# 504 "/usr/local/cuda/bin/../include/math_functions.h"
template< class T> extern inline T __pow_helper(T, int);
# 505 "/usr/local/cuda/bin/../include/math_functions.h"
template< class T> extern inline T __cmath_power(T, unsigned);
# 506 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 508 "/usr/local/cuda/bin/../include/math_functions.h"
using std::abs;
# 509 "/usr/local/cuda/bin/../include/math_functions.h"
using std::fabs;
# 510 "/usr/local/cuda/bin/../include/math_functions.h"
using std::ceil;
# 511 "/usr/local/cuda/bin/../include/math_functions.h"
using std::floor;
# 512 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sqrt;
# 513 "/usr/local/cuda/bin/../include/math_functions.h"
using std::pow;
# 514 "/usr/local/cuda/bin/../include/math_functions.h"
using std::log;
# 515 "/usr/local/cuda/bin/../include/math_functions.h"
using std::log10;
# 516 "/usr/local/cuda/bin/../include/math_functions.h"
using std::fmod;
# 517 "/usr/local/cuda/bin/../include/math_functions.h"
using std::modf;
# 518 "/usr/local/cuda/bin/../include/math_functions.h"
using std::exp;
# 519 "/usr/local/cuda/bin/../include/math_functions.h"
using std::frexp;
# 520 "/usr/local/cuda/bin/../include/math_functions.h"
using std::ldexp;
# 521 "/usr/local/cuda/bin/../include/math_functions.h"
using std::asin;
# 522 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sin;
# 523 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sinh;
# 524 "/usr/local/cuda/bin/../include/math_functions.h"
using std::acos;
# 525 "/usr/local/cuda/bin/../include/math_functions.h"
using std::cos;
# 526 "/usr/local/cuda/bin/../include/math_functions.h"
using std::cosh;
# 527 "/usr/local/cuda/bin/../include/math_functions.h"
using std::atan;
# 528 "/usr/local/cuda/bin/../include/math_functions.h"
using std::atan2;
# 529 "/usr/local/cuda/bin/../include/math_functions.h"
using std::tan;
# 530 "/usr/local/cuda/bin/../include/math_functions.h"
using std::tanh;
# 584 "/usr/local/cuda/bin/../include/math_functions.h"
namespace std {
# 587 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline long abs(long) __attribute__((visibility("default")));
# 588 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float abs(float) __attribute__((visibility("default")));
# 589 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline double abs(double) __attribute__((visibility("default")));
# 590 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float fabs(float) __attribute__((visibility("default")));
# 591 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float ceil(float) __attribute__((visibility("default")));
# 592 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float floor(float) __attribute__((visibility("default")));
# 593 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sqrt(float) __attribute__((visibility("default")));
# 594 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float pow(float, float) __attribute__((visibility("default")));
# 595 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float pow(float, int) __attribute__((visibility("default")));
# 596 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline double pow(double, int) __attribute__((visibility("default")));
# 597 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float log(float) __attribute__((visibility("default")));
# 598 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float log10(float) __attribute__((visibility("default")));
# 599 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float fmod(float, float) __attribute__((visibility("default")));
# 600 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float modf(float, float *) __attribute__((visibility("default")));
# 601 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float exp(float) __attribute__((visibility("default")));
# 602 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float frexp(float, int *) __attribute__((visibility("default")));
# 603 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float ldexp(float, int) __attribute__((visibility("default")));
# 604 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float asin(float) __attribute__((visibility("default")));
# 605 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sin(float) __attribute__((visibility("default")));
# 606 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sinh(float) __attribute__((visibility("default")));
# 607 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float acos(float) __attribute__((visibility("default")));
# 608 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float cos(float) __attribute__((visibility("default")));
# 609 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float cosh(float) __attribute__((visibility("default")));
# 610 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float atan(float) __attribute__((visibility("default")));
# 611 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float atan2(float, float) __attribute__((visibility("default")));
# 612 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float tan(float) __attribute__((visibility("default")));
# 613 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float tanh(float) __attribute__((visibility("default")));
# 616 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 619 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float logb(float a)
# 620 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 621 "/usr/local/cuda/bin/../include/math_functions.h"
return logbf(a);
# 622 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 624 "/usr/local/cuda/bin/../include/math_functions.h"
static inline int ilogb(float a)
# 625 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 626 "/usr/local/cuda/bin/../include/math_functions.h"
return ilogbf(a);
# 627 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 629 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float scalbn(float a, int b)
# 630 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 631 "/usr/local/cuda/bin/../include/math_functions.h"
return scalbnf(a, b);
# 632 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 634 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float scalbln(float a, long b)
# 635 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 636 "/usr/local/cuda/bin/../include/math_functions.h"
return scalblnf(a, b);
# 637 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 639 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float exp2(float a)
# 640 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 641 "/usr/local/cuda/bin/../include/math_functions.h"
return exp2f(a);
# 642 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 644 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float exp10(float a)
# 645 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 646 "/usr/local/cuda/bin/../include/math_functions.h"
return exp10f(a);
# 647 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 649 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float expm1(float a)
# 650 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 651 "/usr/local/cuda/bin/../include/math_functions.h"
return expm1f(a);
# 652 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 654 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float log2(float a)
# 655 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 656 "/usr/local/cuda/bin/../include/math_functions.h"
return log2f(a);
# 657 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 659 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float log1p(float a)
# 660 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 661 "/usr/local/cuda/bin/../include/math_functions.h"
return log1pf(a);
# 662 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 664 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rsqrt(float a)
# 665 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 666 "/usr/local/cuda/bin/../include/math_functions.h"
return rsqrtf(a);
# 667 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 669 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float acosh(float a)
# 670 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 671 "/usr/local/cuda/bin/../include/math_functions.h"
return acoshf(a);
# 672 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 674 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float asinh(float a)
# 675 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 676 "/usr/local/cuda/bin/../include/math_functions.h"
return asinhf(a);
# 677 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 679 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float atanh(float a)
# 680 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 681 "/usr/local/cuda/bin/../include/math_functions.h"
return atanhf(a);
# 682 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 684 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float hypot(float a, float b)
# 685 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 686 "/usr/local/cuda/bin/../include/math_functions.h"
return hypotf(a, b);
# 687 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 689 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float cbrt(float a)
# 690 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 691 "/usr/local/cuda/bin/../include/math_functions.h"
return cbrtf(a);
# 692 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 694 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rcbrt(float a)
# 695 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 696 "/usr/local/cuda/bin/../include/math_functions.h"
return rcbrtf(a);
# 697 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 699 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float sinpi(float a)
# 700 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 701 "/usr/local/cuda/bin/../include/math_functions.h"
return sinpif(a);
# 702 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 704 "/usr/local/cuda/bin/../include/math_functions.h"
static inline void sincos(float a, float *sptr, float *cptr)
# 705 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 706 "/usr/local/cuda/bin/../include/math_functions.h"
sincosf(a, sptr, cptr);
# 707 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 709 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erf(float a)
# 710 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 711 "/usr/local/cuda/bin/../include/math_functions.h"
return erff(a);
# 712 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 714 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfinv(float a)
# 715 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 716 "/usr/local/cuda/bin/../include/math_functions.h"
return erfinvf(a);
# 717 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 719 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfc(float a)
# 720 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 721 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcf(a);
# 722 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 724 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfcinv(float a)
# 725 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 726 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcinvf(a);
# 727 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 729 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float lgamma(float a)
# 730 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 731 "/usr/local/cuda/bin/../include/math_functions.h"
return lgammaf(a);
# 732 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 734 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float tgamma(float a)
# 735 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 736 "/usr/local/cuda/bin/../include/math_functions.h"
return tgammaf(a);
# 737 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 739 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float copysign(float a, float b)
# 740 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 741 "/usr/local/cuda/bin/../include/math_functions.h"
return copysignf(a, b);
# 742 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 744 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double copysign(double a, float b)
# 745 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 746 "/usr/local/cuda/bin/../include/math_functions.h"
return copysign(a, (double)b);
# 747 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 749 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float copysign(float a, double b)
# 750 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 751 "/usr/local/cuda/bin/../include/math_functions.h"
return copysignf(a, (float)b);
# 752 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 754 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float nextafter(float a, float b)
# 755 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 756 "/usr/local/cuda/bin/../include/math_functions.h"
return nextafterf(a, b);
# 757 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 759 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float remainder(float a, float b)
# 760 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 761 "/usr/local/cuda/bin/../include/math_functions.h"
return remainderf(a, b);
# 762 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 764 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float remquo(float a, float b, int *quo)
# 765 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 766 "/usr/local/cuda/bin/../include/math_functions.h"
return remquof(a, b, quo);
# 767 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 769 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float round(float a)
# 770 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 771 "/usr/local/cuda/bin/../include/math_functions.h"
return roundf(a);
# 772 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 774 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long lround(float a)
# 775 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 776 "/usr/local/cuda/bin/../include/math_functions.h"
return lroundf(a);
# 777 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 779 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long llround(float a)
# 780 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 781 "/usr/local/cuda/bin/../include/math_functions.h"
return llroundf(a);
# 782 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 784 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float trunc(float a)
# 785 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 786 "/usr/local/cuda/bin/../include/math_functions.h"
return truncf(a);
# 787 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 789 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rint(float a)
# 790 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 791 "/usr/local/cuda/bin/../include/math_functions.h"
return rintf(a);
# 792 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 794 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long lrint(float a)
# 795 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 796 "/usr/local/cuda/bin/../include/math_functions.h"
return lrintf(a);
# 797 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 799 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long llrint(float a)
# 800 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 801 "/usr/local/cuda/bin/../include/math_functions.h"
return llrintf(a);
# 802 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 804 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float nearbyint(float a)
# 805 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 806 "/usr/local/cuda/bin/../include/math_functions.h"
return nearbyintf(a);
# 807 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 809 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fdim(float a, float b)
# 810 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 811 "/usr/local/cuda/bin/../include/math_functions.h"
return fdimf(a, b);
# 812 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 814 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fma(float a, float b, float c)
# 815 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 816 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaf(a, b, c);
# 817 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 819 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fmax(float a, float b)
# 820 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 821 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaxf(a, b);
# 822 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 824 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fmin(float a, float b)
# 825 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 826 "/usr/local/cuda/bin/../include/math_functions.h"
return fminf(a, b);
# 827 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 829 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b)
# 830 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 831 "/usr/local/cuda/bin/../include/math_functions.h"
return umin(a, b);
# 832 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 834 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(int a, unsigned b)
# 835 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 836 "/usr/local/cuda/bin/../include/math_functions.h"
return umin((unsigned)a, b);
# 837 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 839 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(unsigned a, int b)
# 840 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 841 "/usr/local/cuda/bin/../include/math_functions.h"
return umin(a, (unsigned)b);
# 842 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 844 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long min(long long a, long long b)
# 845 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 846 "/usr/local/cuda/bin/../include/math_functions.h"
return llmin(a, b);
# 847 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 849 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 850 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 851 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin(a, b);
# 852 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 854 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b)
# 855 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 856 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin((unsigned long long)a, b);
# 857 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 859 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b)
# 860 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 861 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin(a, (unsigned long long)b);
# 862 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 864 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float min(float a, float b)
# 865 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 866 "/usr/local/cuda/bin/../include/math_functions.h"
return fminf(a, b);
# 867 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 869 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(double a, double b)
# 870 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 871 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin(a, b);
# 872 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 874 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(float a, double b)
# 875 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 876 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin((double)a, b);
# 877 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 879 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(double a, float b)
# 880 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 881 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin(a, (double)b);
# 882 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 884 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b)
# 885 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 886 "/usr/local/cuda/bin/../include/math_functions.h"
return umax(a, b);
# 887 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 889 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(int a, unsigned b)
# 890 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 891 "/usr/local/cuda/bin/../include/math_functions.h"
return umax((unsigned)a, b);
# 892 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 894 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(unsigned a, int b)
# 895 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 896 "/usr/local/cuda/bin/../include/math_functions.h"
return umax(a, (unsigned)b);
# 897 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 899 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long max(long long a, long long b)
# 900 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 901 "/usr/local/cuda/bin/../include/math_functions.h"
return llmax(a, b);
# 902 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 904 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 905 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 906 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax(a, b);
# 907 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 909 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b)
# 910 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 911 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax((unsigned long long)a, b);
# 912 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 914 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b)
# 915 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 916 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax(a, (unsigned long long)b);
# 917 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 919 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float max(float a, float b)
# 920 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 921 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaxf(a, b);
# 922 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 924 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(double a, double b)
# 925 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 926 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax(a, b);
# 927 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 929 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(float a, double b)
# 930 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 931 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax((double)a, b);
# 932 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 934 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(double a, float b)
# 935 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 936 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax(a, (double)b);
# 937 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 60 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
template< class T, int dim = 1>
# 61 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 63 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface()
# 64 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 65 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 66 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 68 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 69 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 70 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = desc;
# 71 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 72 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
};
# 75 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
template< int dim>
# 76 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 78 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface()
# 79 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 80 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> ();
# 81 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 82 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
};
# 60 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
template< class T, int dim = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 61 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
struct texture : public textureReference {
# 63 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode
# 64 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 65 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
aMode = cudaAddressModeClamp)
# 66 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
{
# 67 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(normalized) = norm;
# 68 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(filterMode) = fMode;
# 69 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 70 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 71 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 72 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 73 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
}
# 75 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 76 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 77 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 78 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
desc)
# 79 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
{
# 80 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(normalized) = norm;
# 81 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(filterMode) = fMode;
# 82 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 83 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 84 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 85 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(channelDesc) = desc;
# 86 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
}
# 87 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
};
# 324 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 325 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 327 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 329 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 330 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 332 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 334 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 335 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 337 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 339 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 340 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 342 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 344 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 345 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 347 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 349 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 350 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 352 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 354 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 355 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 357 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 359 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 360 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 362 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 364 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a)
# 365 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 367 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 369 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a)
# 370 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 372 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 374 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float saturate(float a)
# 375 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 377 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 379 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b)
# 380 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 382 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 384 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 385 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 387 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 389 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void trap()
# 390 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 392 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 394 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void brkpt(int c)
# 395 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 397 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 399 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void syncthreads()
# 400 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 402 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 404 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void prof_trigger(int e)
# 405 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 422 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 424 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void threadfence(bool global = true)
# 425 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 427 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 429 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero)
# 430 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 435 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 437 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero)
# 438 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 443 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 445 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest)
# 446 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 451 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 453 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 454 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 459 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 102 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val)
# 103 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 105 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 107 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val)
# 108 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 110 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 112 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val)
# 113 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 115 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 117 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val)
# 118 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 120 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 122 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val)
# 123 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 125 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 127 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val)
# 128 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 130 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 132 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val)
# 133 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 135 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 137 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val)
# 138 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 140 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 142 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val)
# 143 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 145 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 147 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val)
# 148 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 150 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 152 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val)
# 153 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 155 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 157 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val)
# 158 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 160 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 162 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val)
# 163 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 165 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 167 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val)
# 168 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 170 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 172 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val)
# 173 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 175 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 177 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val)
# 178 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 180 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 182 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val)
# 183 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 185 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 187 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val)
# 188 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 190 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 192 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val)
# 193 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 195 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 197 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val)
# 198 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 200 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 202 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val)
# 203 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;
# 205 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 75 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val)
# 76 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 78 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 80 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val)
# 81 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 83 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 85 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val)
# 86 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 88 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 90 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool any(bool cond)
# 91 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 93 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 95 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool all(bool cond)
# 96 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;
# 98 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 170 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 171 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 176 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 178 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 179 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 184 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 186 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 187 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 192 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 194 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero)
# 195 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 200 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 202 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero)
# 203 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 208 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 210 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero)
# 211 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 216 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 218 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero)
# 219 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 224 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 226 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest)
# 227 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 232 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 234 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest)
# 235 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 240 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 242 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest)
# 243 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 245 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 247 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 248 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 250 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 252 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest)
# 253 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;
# 255 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 66 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val)
# 67 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
{int volatile ___ = 1;
# 69 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
exit(___);}
# 124 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned ballot(bool pred)
# 125 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;
# 127 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 129 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred)
# 130 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;
# 132 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 134 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred)
# 135 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;
# 137 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 139 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred)
# 140 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;
# 142 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 97 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 98 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 99 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 106 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 108 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 109 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 110 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 116 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 118 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 119 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 120 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 122 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 125 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 126 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 128 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 131 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 132 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 134 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 137 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 138 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 140 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 143 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 144 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 146 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 149 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 150 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 152 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 155 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 156 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 160 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 163 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 164 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 166 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 169 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 170 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 174 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 177 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 178 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 180 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 183 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 184 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 186 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 189 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 190 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 192 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 195 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 196 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 198 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 201 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 202 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 204 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 207 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 208 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 212 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 215 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 216 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 218 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 221 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 222 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 226 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 229 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 230 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 232 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 235 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 236 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 238 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 241 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 242 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 244 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 247 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 248 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 250 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 253 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 254 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 256 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 259 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 260 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 264 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 267 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 268 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 270 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 273 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 274 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 278 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 281 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 282 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 284 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 287 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 288 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 290 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 293 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 294 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 296 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 299 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 300 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 302 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 305 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 306 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 308 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 311 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 312 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 316 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 319 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 320 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 322 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 327 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 328 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 330 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 333 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 334 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 336 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 339 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 340 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 342 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 345 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 346 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 348 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 351 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 352 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 356 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 359 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 360 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 364 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 367 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 368 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 372 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 375 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulong4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 376 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 380 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 385 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 386 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 388 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 391 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 392 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 394 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 397 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 398 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 402 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 405 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 406 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 410 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 457 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 458 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 459 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 466 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 468 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 469 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 470 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 476 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 478 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 479 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 480 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 482 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 485 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 486 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 488 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 491 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 492 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 494 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 497 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 498 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 500 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 503 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 504 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 506 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 509 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 510 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 512 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 515 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 516 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 520 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 523 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 524 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 526 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 529 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 530 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 534 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 537 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 538 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 540 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 543 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 544 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 546 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 549 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 550 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 552 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 555 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 556 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 558 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 561 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 562 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 564 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 567 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 568 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 572 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 575 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 576 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 578 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 581 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 582 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 586 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 589 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 590 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 592 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 595 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 596 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 598 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 601 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 602 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 604 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 607 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 608 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 610 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 613 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 614 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 616 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 619 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 620 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 624 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 627 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 628 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 630 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 633 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 634 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 638 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 641 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 642 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 644 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 647 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 648 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 650 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 653 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 654 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 656 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 659 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 660 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 662 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 665 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 666 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 668 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 671 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 672 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 676 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 679 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 680 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 682 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 687 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 688 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 690 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 693 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 694 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 696 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 699 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 700 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 702 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 705 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 706 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 708 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 711 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 712 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 716 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 719 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 720 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 724 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 727 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 728 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 732 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 735 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulong4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 736 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 740 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 745 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 746 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 748 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 751 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 752 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 754 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 757 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 758 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 762 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 765 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 766 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 770 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 817 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 818 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 819 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 837 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 839 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 840 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 841 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 843 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 846 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 847 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 849 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 851 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 852 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 854 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 856 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 857 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 859 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 861 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 862 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 864 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 866 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 867 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 869 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 871 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 872 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 874 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 876 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 877 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 879 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 881 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 882 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 884 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 886 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 887 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 889 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 891 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 892 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 894 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 896 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 897 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 899 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 901 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 902 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 904 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 906 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 907 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 909 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 911 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 912 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 914 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 916 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 917 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 919 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 921 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 922 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 924 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 926 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 927 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 929 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 931 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 932 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 934 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 936 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 937 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 939 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 941 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 942 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 944 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 946 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 947 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 949 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 951 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 952 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 954 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 956 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 957 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 959 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 961 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 962 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 964 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 966 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 967 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 969 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 971 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 972 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 974 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 976 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 977 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 979 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 981 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 982 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 984 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 986 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 987 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 989 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 991 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 992 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 994 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 996 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 997 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 999 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1003 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1004 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1006 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1008 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1009 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1011 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1013 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(long1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1014 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1016 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1018 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1019 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1021 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1023 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(long2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1024 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1026 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1028 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1029 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1031 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1033 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(long4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1034 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1036 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1038 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulong4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1039 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1041 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1045 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1046 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1048 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1050 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1051 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1053 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1055 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1056 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1058 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1060 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1061 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1063 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1110 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1111 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1112 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1130 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1132 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1133 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1134 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1136 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1139 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1140 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1142 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1144 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1145 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1147 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1149 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1150 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1152 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1154 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1155 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1157 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1159 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1160 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1162 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1164 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1165 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1167 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1169 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1170 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1172 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1174 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1175 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1177 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1179 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1180 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1182 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1184 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1185 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1187 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1189 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1190 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1192 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1194 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1195 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1197 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1199 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1200 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1202 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1204 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1205 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1207 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1209 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1210 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1212 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1214 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1215 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1217 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1219 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1220 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1222 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1224 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1225 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1227 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1229 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1230 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1232 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1234 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1235 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1237 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1239 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1240 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1242 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1244 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1245 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1247 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1249 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1250 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1252 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1254 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1255 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1257 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1259 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1260 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1262 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1264 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1265 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1267 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1269 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1270 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1272 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1274 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1275 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1277 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1279 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1280 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1282 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1284 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1285 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1287 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1289 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1290 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1292 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1296 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1297 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1299 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1301 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1302 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1304 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1306 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(long1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1307 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1309 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1311 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1312 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1314 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1316 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(long2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1317 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1319 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1321 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1322 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1324 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1326 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(long4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1327 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1329 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1331 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulong4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1332 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1334 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1338 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1339 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1341 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1343 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1344 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1346 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1348 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1349 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1351 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1353 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1354 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;
# 1356 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 61 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> __attribute__((unused)) extern uint4 __utexfetchi(texture< T, 1, readMode> , int4);
# 63 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> __attribute__((unused)) extern int4 __itexfetchi(texture< T, 1, readMode> , int4);
# 65 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> __attribute__((unused)) extern float4 __ftexfetchi(texture< T, 1, readMode> , int4);
# 68 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template< class T, int dim, cudaTextureReadMode readMode> __attribute__((unused)) extern uint4 __utexfetch(texture< T, dim, readMode> , float4, int = dim);
# 70 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template< class T, int dim, cudaTextureReadMode readMode> __attribute__((unused)) extern int4 __itexfetch(texture< T, dim, readMode> , float4, int = dim);
# 72 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template< class T, int dim, cudaTextureReadMode readMode> __attribute__((unused)) extern float4 __ftexfetch(texture< T, dim, readMode> , float4, int = dim);
# 80 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x)
# 81 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 89 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 91 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x)
# 92 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 96 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 98 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x)
# 99 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 103 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 105 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x)
# 106 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 110 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 112 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x)
# 113 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 117 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 119 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x)
# 120 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 124 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 126 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x)
# 127 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 131 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 133 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x)
# 134 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 138 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 140 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x)
# 141 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 145 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 153 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x)
# 154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 158 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 160 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x)
# 161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 165 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 167 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x)
# 168 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 172 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 174 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x)
# 175 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 179 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 181 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x)
# 182 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 186 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 188 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x)
# 189 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 193 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 195 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x)
# 196 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 200 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 202 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x)
# 203 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 207 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 215 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x)
# 216 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 220 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 222 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x)
# 223 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 227 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 229 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x)
# 230 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 234 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 236 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x)
# 237 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 241 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 243 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x)
# 244 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 248 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 250 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x)
# 251 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 255 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 257 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x)
# 258 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 262 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x)
# 265 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 269 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 279 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long tex1Dfetch(texture< long, 1, cudaReadModeElementType> t, int x)
# 280 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 284 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 286 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned long tex1Dfetch(texture< unsigned long, 1, cudaReadModeElementType> t, int x)
# 287 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 291 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 293 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long1 tex1Dfetch(texture< long1, 1, cudaReadModeElementType> t, int x)
# 294 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 298 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 300 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong1 tex1Dfetch(texture< ulong1, 1, cudaReadModeElementType> t, int x)
# 301 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 305 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 307 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long2 tex1Dfetch(texture< long2, 1, cudaReadModeElementType> t, int x)
# 308 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 312 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 314 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong2 tex1Dfetch(texture< ulong2, 1, cudaReadModeElementType> t, int x)
# 315 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 319 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 321 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long4 tex1Dfetch(texture< long4, 1, cudaReadModeElementType> t, int x)
# 322 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 326 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 328 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong4 tex1Dfetch(texture< ulong4, 1, cudaReadModeElementType> t, int x)
# 329 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 333 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 343 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x)
# 344 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 348 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 350 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x)
# 351 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 355 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 357 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x)
# 358 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 362 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 364 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x)
# 365 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 369 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 377 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x)
# 378 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 389 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x)
# 390 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 395 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 397 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x)
# 398 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 403 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 405 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x)
# 406 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 411 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 413 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x)
# 414 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 419 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 421 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x)
# 422 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 429 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x)
# 430 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 435 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 437 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x)
# 438 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 443 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 445 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x)
# 446 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 451 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 459 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x)
# 460 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 465 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 467 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x)
# 468 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 473 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 475 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x)
# 476 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 481 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 483 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x)
# 484 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 489 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 491 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x)
# 492 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 497 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 499 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x)
# 500 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 505 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 507 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x)
# 508 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 513 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 515 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x)
# 516 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 521 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x)
# 530 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 538 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 540 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x)
# 541 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 545 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 547 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x)
# 548 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 552 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 554 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x)
# 555 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 559 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 561 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x)
# 562 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 566 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 568 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x)
# 569 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 573 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 575 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x)
# 576 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 580 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 582 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x)
# 583 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 587 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 589 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x)
# 590 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 594 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 602 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x)
# 603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 607 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 609 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x)
# 610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 614 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 616 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x)
# 617 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 621 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 623 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x)
# 624 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 628 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 630 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x)
# 631 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 635 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 637 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x)
# 638 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 642 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 644 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x)
# 645 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 649 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 651 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x)
# 652 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 656 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 664 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x)
# 665 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 669 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 671 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x)
# 672 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 676 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 678 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x)
# 679 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 683 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 685 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x)
# 686 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 690 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 692 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x)
# 693 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 697 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 699 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x)
# 700 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 704 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 706 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x)
# 707 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 711 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 713 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x)
# 714 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 718 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 734 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long tex1D(texture< long, 1, cudaReadModeElementType> t, float x)
# 735 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 739 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 741 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned long tex1D(texture< unsigned long, 1, cudaReadModeElementType> t, float x)
# 742 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 746 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 748 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long1 tex1D(texture< long1, 1, cudaReadModeElementType> t, float x)
# 749 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 753 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 755 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong1 tex1D(texture< ulong1, 1, cudaReadModeElementType> t, float x)
# 756 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 760 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 762 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long2 tex1D(texture< long2, 1, cudaReadModeElementType> t, float x)
# 763 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 767 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 769 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong2 tex1D(texture< ulong2, 1, cudaReadModeElementType> t, float x)
# 770 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 774 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 776 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long4 tex1D(texture< long4, 1, cudaReadModeElementType> t, float x)
# 777 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 781 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 783 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong4 tex1D(texture< ulong4, 1, cudaReadModeElementType> t, float x)
# 784 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 788 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 798 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x)
# 799 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 803 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 805 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x)
# 806 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 810 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 812 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x)
# 813 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 817 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 819 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x)
# 820 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 824 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 832 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x)
# 833 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 842 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 844 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x)
# 845 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 852 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x)
# 853 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x)
# 861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x)
# 869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x)
# 877 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 882 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 884 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x)
# 885 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 892 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x)
# 893 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 900 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x)
# 901 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 906 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 914 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x)
# 915 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 920 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 922 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x)
# 923 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 928 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 930 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x)
# 931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 936 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x)
# 939 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 944 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 946 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x)
# 947 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 952 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 954 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x)
# 955 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 960 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 962 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x)
# 963 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 968 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 970 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x)
# 971 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 976 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 984 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y)
# 985 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 993 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 995 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y)
# 996 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1000 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1002 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y)
# 1003 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1007 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1009 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y)
# 1010 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1014 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1016 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y)
# 1017 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1021 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1023 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y)
# 1024 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1028 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1030 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y)
# 1031 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1035 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1037 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y)
# 1038 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1042 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1044 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y)
# 1045 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1049 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1057 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y)
# 1058 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1062 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1064 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y)
# 1065 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1069 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1071 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y)
# 1072 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1076 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1078 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y)
# 1079 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1083 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1085 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y)
# 1086 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1090 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1092 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y)
# 1093 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1097 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1099 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y)
# 1100 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1104 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1106 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y)
# 1107 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1111 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1119 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y)
# 1120 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1124 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1126 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y)
# 1127 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1131 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1133 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y)
# 1134 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1138 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1140 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y)
# 1141 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1145 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1147 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y)
# 1148 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1152 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y)
# 1155 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1159 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y)
# 1162 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1166 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1168 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y)
# 1169 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1173 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1183 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long tex2D(texture< long, 2, cudaReadModeElementType> t, float x, float y)
# 1184 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1188 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1190 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned long tex2D(texture< unsigned long, 2, cudaReadModeElementType> t, float x, float y)
# 1191 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1195 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1197 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long1 tex2D(texture< long1, 2, cudaReadModeElementType> t, float x, float y)
# 1198 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1202 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1204 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong1 tex2D(texture< ulong1, 2, cudaReadModeElementType> t, float x, float y)
# 1205 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1209 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1211 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long2 tex2D(texture< long2, 2, cudaReadModeElementType> t, float x, float y)
# 1212 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1216 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1218 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong2 tex2D(texture< ulong2, 2, cudaReadModeElementType> t, float x, float y)
# 1219 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1223 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1225 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long4 tex2D(texture< long4, 2, cudaReadModeElementType> t, float x, float y)
# 1226 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1230 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1232 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong4 tex2D(texture< ulong4, 2, cudaReadModeElementType> t, float x, float y)
# 1233 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1237 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1247 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y)
# 1248 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1252 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1254 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y)
# 1255 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1259 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1261 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y)
# 1262 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1266 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1268 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y)
# 1269 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1273 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1281 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1282 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1291 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1293 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1294 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1299 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1301 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1302 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1307 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1309 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1310 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1315 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1317 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1318 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1323 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1325 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1326 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1331 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1333 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1334 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1339 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1341 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1342 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1347 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1349 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1350 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1355 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1363 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1364 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1369 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1371 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1372 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1377 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1379 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1385 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1388 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1393 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1395 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1396 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1401 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1403 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1404 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1409 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1411 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1412 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1417 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1419 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1420 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1425 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1433 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1434 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1442 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1444 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1445 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1449 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1451 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1452 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1456 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1458 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1459 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1463 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1465 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1466 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1470 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1472 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1473 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1477 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1479 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1480 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1484 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1486 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1487 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1491 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1493 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1494 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1498 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1506 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1507 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1511 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1513 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1514 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1518 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1520 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1521 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1525 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1527 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1528 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1532 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1534 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1535 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1539 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1541 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1542 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1546 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1548 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1549 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1553 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1555 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1556 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1560 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1568 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1569 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1573 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1575 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1576 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1580 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1582 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1583 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1587 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1589 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1590 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1594 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1596 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1597 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1601 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1604 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1608 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1611 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1615 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1617 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1618 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1622 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1632 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long tex3D(texture< long, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1633 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1637 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1639 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned long tex3D(texture< unsigned long, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1640 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1644 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1646 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long1 tex3D(texture< long1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1647 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1651 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1653 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong1 tex3D(texture< ulong1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1654 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1658 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1660 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long2 tex3D(texture< long2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1661 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1665 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1667 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong2 tex3D(texture< ulong2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1668 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1672 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1674 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline long4 tex3D(texture< long4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1675 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1679 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1681 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ulong4 tex3D(texture< ulong4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1682 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1686 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1696 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1697 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1701 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1703 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1704 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1708 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1710 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1711 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1715 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1717 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 1718 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1722 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1730 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1731 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1740 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1742 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1743 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1748 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1750 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1751 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1756 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1758 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1759 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1764 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1766 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1767 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1772 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1774 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1775 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1780 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1782 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1783 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1788 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1790 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1791 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1796 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1798 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1799 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1804 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1812 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1813 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1818 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1820 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1821 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1826 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1829 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1834 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1837 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1842 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1844 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1845 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1852 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1853 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 1869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1930 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template< int comp, class T> __attribute__((unused)) extern int4 __itex2Dgather(texture< T, 2, cudaReadModeElementType> , float2, int = comp);
# 1932 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template< int comp, class T> __attribute__((unused)) extern uint4 __utex2Dgather(texture< T, 2, cudaReadModeElementType> , float2, int = comp);
# 1934 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
template< int comp, class T> __attribute__((unused)) extern float4 __ftex2Dgather(texture< T, 2, cudaReadModeElementType> , float2, int = comp);
# 1954 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 1955 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1957 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1959 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 1960 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1962 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1964 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 1965 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1967 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1969 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 1970 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1972 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1974 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 1975 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1977 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1979 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 1980 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1982 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1984 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 1985 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1987 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1989 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 1990 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1992 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1994 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 1995 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 1997 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1999 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2000 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2002 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2004 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2005 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2007 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2009 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2010 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2012 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2014 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2015 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2017 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2019 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2020 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2022 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2024 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2025 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2027 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2029 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2030 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2032 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2034 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2035 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2037 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2039 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2040 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2042 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2044 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2045 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2047 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2049 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2050 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2052 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2054 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2055 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2057 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2059 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2060 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2062 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2064 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2065 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2067 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2069 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2070 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2072 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2074 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2075 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2077 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2079 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2080 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2082 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2084 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2085 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2087 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2089 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2090 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2092 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2094 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2095 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2097 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2099 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2100 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2102 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2104 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2105 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2107 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2109 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2110 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2112 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2114 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2115 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2117 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2119 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2120 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2122 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2124 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2125 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2127 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2129 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 2130 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;
# 2132 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 53 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const uint3 threadIdx; }
# 55 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const uint3 blockIdx; }
# 57 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const dim3 blockDim; }
# 59 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const dim3 gridDim; }
# 61 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const int warpSize; }
# 106 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 107 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaSetupArgument(T
# 108 "/usr/local/cuda/bin/../include/cuda_runtime.h"
arg, size_t
# 109 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset)
# 111 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 112 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 113 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 145 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 146 "/usr/local/cuda/bin/../include/cuda_runtime.h"
event, unsigned
# 147 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 149 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 150 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaEventCreateWithFlags(event, 0);
# 151 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 208 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 209 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 210 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 211 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 213 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 214 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostAlloc(ptr, size, flags);
# 215 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 217 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 218 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaHostAlloc(T **
# 219 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 220 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 221 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 223 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 224 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostAlloc((void **)((void *)ptr), size, flags);
# 225 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 227 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 228 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 229 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pDevice, void *
# 230 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pHost, unsigned
# 231 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 233 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 234 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 235 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 237 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 238 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMalloc(T **
# 239 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 240 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size)
# 242 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 243 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMalloc((void **)((void *)devPtr), size);
# 244 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 246 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 247 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMallocHost(T **
# 248 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 249 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 250 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags = (0))
# 252 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 253 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 254 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 256 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 257 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMallocPitch(T **
# 258 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t *
# 259 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch, size_t
# 260 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 261 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height)
# 263 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 264 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 265 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 275 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbol(char *
# 276 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 277 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 278 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 279 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 280 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 282 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 283 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)symbol, src, count, offset, kind);
# 284 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 286 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 287 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 288 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 289 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 290 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 291 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 292 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 294 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 295 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)(&symbol), src, count, offset, kind);
# 296 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 298 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbolAsync(char *
# 299 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 300 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 301 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 302 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 303 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 304 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 306 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 307 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)symbol, src, count, offset, kind, stream);
# 308 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 310 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 311 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 312 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 313 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 314 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 315 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 316 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 317 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 319 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 320 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)(&symbol), src, count, offset, kind, stream);
# 321 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 329 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbol(void *
# 330 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, char *
# 331 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 332 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 333 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 334 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 336 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 337 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)symbol, count, offset, kind);
# 338 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 340 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 341 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 342 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, const T &
# 343 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 344 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 345 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 346 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 348 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 349 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)(&symbol), count, offset, kind);
# 350 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 352 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbolAsync(void *
# 353 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, char *
# 354 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 355 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 356 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 357 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 358 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 360 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 361 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)symbol, count, offset, kind, stream);
# 362 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 364 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 365 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 366 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, const T &
# 367 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 368 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 369 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 370 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 371 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 373 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 374 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)(&symbol), count, offset, kind, stream);
# 375 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 377 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolAddress(void **
# 378 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, char *
# 379 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 381 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 382 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)symbol);
# 383 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 410 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 411 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 412 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const T &
# 413 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 415 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 416 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)(&symbol));
# 417 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 425 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolSize(size_t *
# 426 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, char *
# 427 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 429 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 430 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)symbol);
# 431 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 458 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 459 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 460 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, const T &
# 461 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 463 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 464 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)(&symbol));
# 465 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 507 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 508 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture(size_t *
# 509 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 510 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 511 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 512 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc, size_t
# 513 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 515 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 516 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 517 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 552 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 553 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture(size_t *
# 554 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 555 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 556 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 557 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 559 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 560 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 561 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 608 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 609 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 610 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 611 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 612 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 613 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc, size_t
# 614 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 615 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height, size_t
# 616 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch)
# 618 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 619 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 620 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 666 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 667 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 668 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 669 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 670 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 671 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 672 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height, size_t
# 673 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch)
# 675 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 676 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &(tex.texture< T, dim, readMode> ::channelDesc), width, height, pitch);
# 677 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 708 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 709 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 710 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const cudaArray *
# 711 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 712 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc)
# 714 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 715 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTextureToArray(&tex, array, &desc);
# 716 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 746 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 747 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 748 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const cudaArray *
# 749 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array)
# 751 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 752 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 753 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 755 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 756 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 785 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 786 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 787 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex)
# 789 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 790 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaUnbindTexture(&tex);
# 791 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 825 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 826 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 827 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 828 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex)
# 830 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 831 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetTextureAlignmentOffset(offset, &tex);
# 832 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 886 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 887 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 888 "/usr/local/cuda/bin/../include/cuda_runtime.h"
func, cudaFuncCache
# 889 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cacheConfig)
# 891 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 892 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncSetCacheConfig((const char *)func, cacheConfig);
# 893 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 930 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 931 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaLaunch(T *
# 932 "/usr/local/cuda/bin/../include/cuda_runtime.h"
entry)
# 934 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 935 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaLaunch((const char *)entry);
# 936 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 970 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 971 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 972 "/usr/local/cuda/bin/../include/cuda_runtime.h"
attr, T *
# 973 "/usr/local/cuda/bin/../include/cuda_runtime.h"
entry)
# 975 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 976 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncGetAttributes(attr, (const char *)entry);
# 977 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 999 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1000 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1001 "/usr/local/cuda/bin/../include/cuda_runtime.h"
surf, const cudaArray *
# 1002 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1003 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc)
# 1005 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 1006 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindSurfaceToArray(&surf, array, &desc);
# 1007 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 1028 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1029 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1030 "/usr/local/cuda/bin/../include/cuda_runtime.h"
surf, const cudaArray *
# 1031 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array)
# 1033 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 1034 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1035 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 1037 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1038 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 45 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 49 "/usr/include/stdio.h" 3
extern "C" { typedef _IO_FILE FILE; }
# 65 "/usr/include/stdio.h" 3
extern "C" { typedef _IO_FILE __FILE; }
# 95 "/usr/include/wchar.h" 3
extern "C" { typedef
# 84 "/usr/include/wchar.h" 3
struct {
# 85 "/usr/include/wchar.h" 3
int __count;
# 87 "/usr/include/wchar.h" 3
union {
# 89 "/usr/include/wchar.h" 3
unsigned __wch;
# 93 "/usr/include/wchar.h" 3
char __wchb[4];
# 94 "/usr/include/wchar.h" 3
} __value;
# 95 "/usr/include/wchar.h" 3
} __mbstate_t; }
# 26 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 23 "/usr/include/_G_config.h" 3
struct {
# 24 "/usr/include/_G_config.h" 3
__off_t __pos;
# 25 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 26 "/usr/include/_G_config.h" 3
} _G_fpos_t; }
# 31 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 28 "/usr/include/_G_config.h" 3
struct {
# 29 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 30 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 31 "/usr/include/_G_config.h" 3
} _G_fpos64_t; }
# 53 "/usr/include/_G_config.h" 3
extern "C" { typedef short _G_int16_t; }
# 54 "/usr/include/_G_config.h" 3
extern "C" { typedef int _G_int32_t; }
# 55 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned short _G_uint16_t; }
# 56 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned _G_uint32_t; }
# 40 "/usr/lib/gcc/i686-linux-gnu/4.4.5/include/va.h" 3
extern "C" { typedef __builtin_va_list __gnuc_va_list; }
# 170 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 180 "/usr/include/libio.h" 3
extern "C" { typedef void _IO_lock_t; }
# 186 "/usr/include/libio.h" 3
extern "C" { struct _IO_marker {
# 187 "/usr/include/libio.h" 3
_IO_marker *_next;
# 188 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 192 "/usr/include/libio.h" 3
int _pos;
# 203 "/usr/include/libio.h" 3
}; }
# 206 "/usr/include/libio.h" 3
enum __codecvt_result {
# 208 "/usr/include/libio.h" 3
__codecvt_ok,
# 209 "/usr/include/libio.h" 3
__codecvt_partial,
# 210 "/usr/include/libio.h" 3
__codecvt_error,
# 211 "/usr/include/libio.h" 3
__codecvt_noconv
# 212 "/usr/include/libio.h" 3
};
# 271 "/usr/include/libio.h" 3
extern "C" { struct _IO_FILE {
# 272 "/usr/include/libio.h" 3
int _flags;
# 277 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 278 "/usr/include/libio.h" 3
char *_IO_read_end;
# 279 "/usr/include/libio.h" 3
char *_IO_read_base;
# 280 "/usr/include/libio.h" 3
char *_IO_write_base;
# 281 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 282 "/usr/include/libio.h" 3
char *_IO_write_end;
# 283 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 284 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 286 "/usr/include/libio.h" 3
char *_IO_save_base;
# 287 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 288 "/usr/include/libio.h" 3
char *_IO_save_end;
# 290 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 292 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 294 "/usr/include/libio.h" 3
int _fileno;
# 298 "/usr/include/libio.h" 3
int _flags2;
# 300 "/usr/include/libio.h" 3
__off_t _old_offset;
# 304 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 305 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 306 "/usr/include/libio.h" 3
char _shortbuf[1];
# 310 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 319 "/usr/include/libio.h" 3
__off64_t _offset;
# 328 "/usr/include/libio.h" 3
void *__pad1;
# 329 "/usr/include/libio.h" 3
void *__pad2;
# 330 "/usr/include/libio.h" 3
void *__pad3;
# 331 "/usr/include/libio.h" 3
void *__pad4;
# 332 "/usr/include/libio.h" 3
size_t __pad5;
# 334 "/usr/include/libio.h" 3
int _mode;
# 336 "/usr/include/libio.h" 3
char _unused2[((((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t))];
# 338 "/usr/include/libio.h" 3
}; }
# 344 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 346 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdin_; }
# 347 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdout_; }
# 348 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stderr_; }
# 364 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_read_fn(void *, char *, size_t); }
# 372 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_write_fn(void *, const char *, size_t); }
# 381 "/usr/include/libio.h" 3
extern "C" { typedef int __io_seek_fn(void *, __off64_t *, int); }
# 384 "/usr/include/libio.h" 3
extern "C" { typedef int __io_close_fn(void *); }
# 389 "/usr/include/libio.h" 3
extern "C" { typedef __io_read_fn cookie_read_function_t; }
# 390 "/usr/include/libio.h" 3
extern "C" { typedef __io_write_fn cookie_write_function_t; }
# 391 "/usr/include/libio.h" 3
extern "C" { typedef __io_seek_fn cookie_seek_function_t; }
# 392 "/usr/include/libio.h" 3
extern "C" { typedef __io_close_fn cookie_close_function_t; }
# 401 "/usr/include/libio.h" 3
extern "C" { typedef
# 396 "/usr/include/libio.h" 3
struct {
# 397 "/usr/include/libio.h" 3
__io_read_fn *read;
# 398 "/usr/include/libio.h" 3
__io_write_fn *write;
# 399 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 400 "/usr/include/libio.h" 3
__io_close_fn *close;
# 401 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t; }
# 402 "/usr/include/libio.h" 3
extern "C" { typedef _IO_cookie_io_functions_t cookie_io_functions_t; }
# 404 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 407 "/usr/include/libio.h" 3
extern "C" void _IO_cookie_init(_IO_cookie_file *, int, void *, _IO_cookie_io_functions_t);
# 416 "/usr/include/libio.h" 3
extern "C" int __underflow(_IO_FILE *);
# 417 "/usr/include/libio.h" 3
extern "C" int __uflow(_IO_FILE *);
# 418 "/usr/include/libio.h" 3
extern "C" int __overflow(_IO_FILE *, int);
# 460 "/usr/include/libio.h" 3
extern "C" int _IO_getc(_IO_FILE *);
# 461 "/usr/include/libio.h" 3
extern "C" int _IO_putc(int, _IO_FILE *);
# 462 "/usr/include/libio.h" 3
extern "C" int _IO_feof(_IO_FILE *) throw();
# 463 "/usr/include/libio.h" 3
extern "C" int _IO_ferror(_IO_FILE *) throw();
# 465 "/usr/include/libio.h" 3
extern "C" int _IO_peekc_locked(_IO_FILE *);
# 471 "/usr/include/libio.h" 3
extern "C" void _IO_flockfile(_IO_FILE *) throw();
# 472 "/usr/include/libio.h" 3
extern "C" void _IO_funlockfile(_IO_FILE *) throw();
# 473 "/usr/include/libio.h" 3
extern "C" int _IO_ftrylockfile(_IO_FILE *) throw();
# 490 "/usr/include/libio.h" 3
extern "C" int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 492 "/usr/include/libio.h" 3
extern "C" int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 494 "/usr/include/libio.h" 3
extern "C" __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 495 "/usr/include/libio.h" 3
extern "C" size_t _IO_sgetn(_IO_FILE *, void *, size_t);
# 497 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 498 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 500 "/usr/include/libio.h" 3
extern "C" void _IO_free_backup_area(_IO_FILE *) throw();
# 80 "/usr/include/stdio.h" 3
extern "C" { typedef __gnuc_va_list va_list; }
# 111 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos_t fpos_t; }
# 117 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos64_t fpos64_t; }
# 165 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdin; }
# 166 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdout; }
# 167 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stderr; }
# 175 "/usr/include/stdio.h" 3
extern "C" int remove(const char *) throw();
# 177 "/usr/include/stdio.h" 3
extern "C" int rename(const char *, const char *) throw();
# 182 "/usr/include/stdio.h" 3
extern "C" int renameat(int, const char *, int, const char *) throw();
# 192 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile();
# 202 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile64();
# 206 "/usr/include/stdio.h" 3
extern "C" char *tmpnam(char *) throw();
# 212 "/usr/include/stdio.h" 3
extern "C" char *tmpnam_r(char *) throw();
# 224 "/usr/include/stdio.h" 3
extern "C" char *tempnam(const char *, const char *) throw() __attribute__((__malloc__));
# 234 "/usr/include/stdio.h" 3
extern "C" int fclose(FILE *);
# 239 "/usr/include/stdio.h" 3
extern "C" int fflush(FILE *);
# 249 "/usr/include/stdio.h" 3
extern "C" int fflush_unlocked(FILE *);
# 259 "/usr/include/stdio.h" 3
extern "C" int fcloseall();
# 269 "/usr/include/stdio.h" 3
extern "C" FILE *fopen(const char *__restrict__, const char *__restrict__);
# 275 "/usr/include/stdio.h" 3
extern "C" FILE *freopen(const char *__restrict__, const char *__restrict__, FILE *__restrict__);
# 294 "/usr/include/stdio.h" 3
extern "C" FILE *fopen64(const char *__restrict__, const char *__restrict__);
# 296 "/usr/include/stdio.h" 3
extern "C" FILE *freopen64(const char *__restrict__, const char *__restrict__, FILE *__restrict__);
# 303 "/usr/include/stdio.h" 3
extern "C" FILE *fdopen(int, const char *) throw();
# 309 "/usr/include/stdio.h" 3
extern "C" FILE *fopencookie(void *__restrict__, const char *__restrict__, _IO_cookie_io_functions_t) throw();
# 316 "/usr/include/stdio.h" 3
extern "C" FILE *fmemopen(void *, size_t, const char *) throw();
# 322 "/usr/include/stdio.h" 3
extern "C" FILE *open_memstream(char **, size_t *) throw();
# 329 "/usr/include/stdio.h" 3
extern "C" void setbuf(FILE *__restrict__, char *__restrict__) throw();
# 333 "/usr/include/stdio.h" 3
extern "C" int setvbuf(FILE *__restrict__, char *__restrict__, int, size_t) throw();
# 340 "/usr/include/stdio.h" 3
extern "C" void setbuffer(FILE *__restrict__, char *__restrict__, size_t) throw();
# 344 "/usr/include/stdio.h" 3
extern "C" void setlinebuf(FILE *) throw();
# 353 "/usr/include/stdio.h" 3
extern "C" int fprintf(FILE *__restrict__, const char *__restrict__, ...);
# 359 "/usr/include/stdio.h" 3
extern "C" int printf(const char *__restrict__, ...);
# 361 "/usr/include/stdio.h" 3
extern "C" int sprintf(char *__restrict__, const char *__restrict__, ...) throw();
# 368 "/usr/include/stdio.h" 3
extern "C" int vfprintf(FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 374 "/usr/include/stdio.h" 3
extern "C" int vprintf(const char *__restrict__, __gnuc_va_list);
# 376 "/usr/include/stdio.h" 3
extern "C" int vsprintf(char *__restrict__, const char *__restrict__, __gnuc_va_list) throw();
# 383 "/usr/include/stdio.h" 3
extern "C" int snprintf(char *__restrict__, size_t, const char *__restrict__, ...) throw();
# 387 "/usr/include/stdio.h" 3
extern "C" int vsnprintf(char *__restrict__, size_t, const char *__restrict__, __gnuc_va_list) throw();
# 396 "/usr/include/stdio.h" 3
extern "C" int vasprintf(char **__restrict__, const char *__restrict__, __gnuc_va_list) throw();
# 399 "/usr/include/stdio.h" 3
extern "C" int __asprintf(char **__restrict__, const char *__restrict__, ...) throw();
# 402 "/usr/include/stdio.h" 3
extern "C" int asprintf(char **__restrict__, const char *__restrict__, ...) throw();
# 414 "/usr/include/stdio.h" 3
extern "C" int vdprintf(int, const char *__restrict__, __gnuc_va_list);
# 417 "/usr/include/stdio.h" 3
extern "C" int dprintf(int, const char *__restrict__, ...);
# 427 "/usr/include/stdio.h" 3
extern "C" int fscanf(FILE *__restrict__, const char *__restrict__, ...);
# 433 "/usr/include/stdio.h" 3
extern "C" int scanf(const char *__restrict__, ...);
# 435 "/usr/include/stdio.h" 3
extern "C" int sscanf(const char *__restrict__, const char *__restrict__, ...) throw();
# 473 "/usr/include/stdio.h" 3
extern "C" int vfscanf(FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 481 "/usr/include/stdio.h" 3
extern "C" int vscanf(const char *__restrict__, __gnuc_va_list);
# 485 "/usr/include/stdio.h" 3
extern "C" int vsscanf(const char *__restrict__, const char *__restrict__, __gnuc_va_list) throw();
# 533 "/usr/include/stdio.h" 3
extern "C" int fgetc(FILE *);
# 534 "/usr/include/stdio.h" 3
extern "C" int getc(FILE *);
# 540 "/usr/include/stdio.h" 3
extern "C" int getchar();
# 552 "/usr/include/stdio.h" 3
extern "C" int getc_unlocked(FILE *);
# 553 "/usr/include/stdio.h" 3
extern "C" int getchar_unlocked();
# 563 "/usr/include/stdio.h" 3
extern "C" int fgetc_unlocked(FILE *);
# 575 "/usr/include/stdio.h" 3
extern "C" int fputc(int, FILE *);
# 576 "/usr/include/stdio.h" 3
extern "C" int putc(int, FILE *);
# 582 "/usr/include/stdio.h" 3
extern "C" int putchar(int);
# 596 "/usr/include/stdio.h" 3
extern "C" int fputc_unlocked(int, FILE *);
# 604 "/usr/include/stdio.h" 3
extern "C" int putc_unlocked(int, FILE *);
# 605 "/usr/include/stdio.h" 3
extern "C" int putchar_unlocked(int);
# 612 "/usr/include/stdio.h" 3
extern "C" int getw(FILE *);
# 615 "/usr/include/stdio.h" 3
extern "C" int putw(int, FILE *);
# 624 "/usr/include/stdio.h" 3
extern "C" char *fgets(char *__restrict__, int, FILE *__restrict__);
# 632 "/usr/include/stdio.h" 3
extern "C" char *gets(char *);
# 642 "/usr/include/stdio.h" 3
extern "C" char *fgets_unlocked(char *__restrict__, int, FILE *__restrict__);
# 658 "/usr/include/stdio.h" 3
extern "C" __ssize_t __getdelim(char **__restrict__, size_t *__restrict__, int, FILE *__restrict__);
# 661 "/usr/include/stdio.h" 3
extern "C" __ssize_t getdelim(char **__restrict__, size_t *__restrict__, int, FILE *__restrict__);
# 671 "/usr/include/stdio.h" 3
extern "C" __ssize_t getline(char **__restrict__, size_t *__restrict__, FILE *__restrict__);
# 682 "/usr/include/stdio.h" 3
extern "C" int fputs(const char *__restrict__, FILE *__restrict__);
# 688 "/usr/include/stdio.h" 3
extern "C" int puts(const char *);
# 695 "/usr/include/stdio.h" 3
extern "C" int ungetc(int, FILE *);
# 702 "/usr/include/stdio.h" 3
extern "C" size_t fread(void *__restrict__, size_t, size_t, FILE *__restrict__);
# 708 "/usr/include/stdio.h" 3
extern "C" size_t fwrite(const void *__restrict__, size_t, size_t, FILE *__restrict__);
# 719 "/usr/include/stdio.h" 3
extern "C" int fputs_unlocked(const char *__restrict__, FILE *__restrict__);
# 730 "/usr/include/stdio.h" 3
extern "C" size_t fread_unlocked(void *__restrict__, size_t, size_t, FILE *__restrict__);
# 732 "/usr/include/stdio.h" 3
extern "C" size_t fwrite_unlocked(const void *__restrict__, size_t, size_t, FILE *__restrict__);
# 742 "/usr/include/stdio.h" 3
extern "C" int fseek(FILE *, long, int);
# 747 "/usr/include/stdio.h" 3
extern "C" long ftell(FILE *);
# 752 "/usr/include/stdio.h" 3
extern "C" void rewind(FILE *);
# 766 "/usr/include/stdio.h" 3
extern "C" int fseeko(FILE *, __off_t, int);
# 771 "/usr/include/stdio.h" 3
extern "C" __off_t ftello(FILE *);
# 791 "/usr/include/stdio.h" 3
extern "C" int fgetpos(FILE *__restrict__, fpos_t *__restrict__);
# 796 "/usr/include/stdio.h" 3
extern "C" int fsetpos(FILE *, const fpos_t *);
# 811 "/usr/include/stdio.h" 3
extern "C" int fseeko64(FILE *, __off64_t, int);
# 812 "/usr/include/stdio.h" 3
extern "C" __off64_t ftello64(FILE *);
# 813 "/usr/include/stdio.h" 3
extern "C" int fgetpos64(FILE *__restrict__, fpos64_t *__restrict__);
# 814 "/usr/include/stdio.h" 3
extern "C" int fsetpos64(FILE *, const fpos64_t *);
# 819 "/usr/include/stdio.h" 3
extern "C" void clearerr(FILE *) throw();
# 821 "/usr/include/stdio.h" 3
extern "C" int feof(FILE *) throw();
# 823 "/usr/include/stdio.h" 3
extern "C" int ferror(FILE *) throw();
# 828 "/usr/include/stdio.h" 3
extern "C" void clearerr_unlocked(FILE *) throw();
# 829 "/usr/include/stdio.h" 3
extern "C" int feof_unlocked(FILE *) throw();
# 830 "/usr/include/stdio.h" 3
extern "C" int ferror_unlocked(FILE *) throw();
# 839 "/usr/include/stdio.h" 3
extern "C" void perror(const char *);
# 27 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int sys_nerr; }
# 28 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const sys_errlist[]; }
# 31 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int _sys_nerr; }
# 32 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const _sys_errlist[]; }
# 851 "/usr/include/stdio.h" 3
extern "C" int fileno(FILE *) throw();
# 856 "/usr/include/stdio.h" 3
extern "C" int fileno_unlocked(FILE *) throw();
# 866 "/usr/include/stdio.h" 3
extern "C" FILE *popen(const char *, const char *);
# 872 "/usr/include/stdio.h" 3
extern "C" int pclose(FILE *);
# 878 "/usr/include/stdio.h" 3
extern "C" char *ctermid(char *) throw();
# 884 "/usr/include/stdio.h" 3
extern "C" char *cuserid(char *);
# 889 "/usr/include/stdio.h" 3
struct obstack;
# 892 "/usr/include/stdio.h" 3
extern "C" int obstack_printf(obstack *__restrict__, const char *__restrict__, ...) throw();
# 895 "/usr/include/stdio.h" 3
extern "C" int obstack_vprintf(obstack *__restrict__, const char *__restrict__, __gnuc_va_list) throw();
# 906 "/usr/include/stdio.h" 3
extern "C" void flockfile(FILE *) throw();
# 910 "/usr/include/stdio.h" 3
extern "C" int ftrylockfile(FILE *) throw();
# 913 "/usr/include/stdio.h" 3
extern "C" void funlockfile(FILE *) throw();
# 130 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef unsigned CUdeviceptr; }
# 135 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef int CUdevice; }
# 136 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUctx_st *CUcontext; }
# 137 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUmod_st *CUmodule; }
# 138 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUfunc_st *CUfunction; }
# 139 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUarray_st *CUarray; }
# 140 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUtexref_st *CUtexref; }
# 141 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUsurfref_st *CUsurfref; }
# 142 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef CUevent_st *CUevent; }
# 143 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef CUstream_st *CUstream; }
# 144 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUgraphicsResource_st *CUgraphicsResource; }
# 148 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 146 "/usr/local/cuda/bin/../include/cuda.h"
struct CUuuid_st {
# 147 "/usr/local/cuda/bin/../include/cuda.h"
char bytes[16];
# 148 "/usr/local/cuda/bin/../include/cuda.h"
} CUuuid; }
# 162 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 153 "/usr/local/cuda/bin/../include/cuda.h"
enum CUctx_flags_enum {
# 154 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_AUTO,
# 155 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_SPIN,
# 156 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_YIELD,
# 157 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_MASK,
# 158 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_BLOCKING_SYNC,
# 159 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_MAP_HOST = 8,
# 160 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 161 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 162 "/usr/local/cuda/bin/../include/cuda.h"
} CUctx_flags; }
# 171 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 167 "/usr/local/cuda/bin/../include/cuda.h"
enum CUevent_flags_enum {
# 168 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_DEFAULT,
# 169 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_BLOCKING_SYNC,
# 170 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_DISABLE_TIMING
# 171 "/usr/local/cuda/bin/../include/cuda.h"
} CUevent_flags; }
# 185 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 176 "/usr/local/cuda/bin/../include/cuda.h"
enum CUarray_format_enum {
# 177 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 178 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 179 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 180 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 181 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 182 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 183 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 184 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 185 "/usr/local/cuda/bin/../include/cuda.h"
} CUarray_format; }
# 195 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 190 "/usr/local/cuda/bin/../include/cuda.h"
enum CUaddress_mode_enum {
# 191 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 192 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 193 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR,
# 194 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_BORDER
# 195 "/usr/local/cuda/bin/../include/cuda.h"
} CUaddress_mode; }
# 203 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 200 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfilter_mode_enum {
# 201 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 202 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 203 "/usr/local/cuda/bin/../include/cuda.h"
} CUfilter_mode; }
# 246 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 208 "/usr/local/cuda/bin/../include/cuda.h"
enum CUdevice_attribute_enum {
# 209 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 210 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 211 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 212 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 213 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 214 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 215 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 216 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 217 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 218 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 219 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 220 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 221 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 222 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 223 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 224 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 225 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 226 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 227 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 228 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 229 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 230 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 231 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 232 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 233 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 234 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 235 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 236 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 237 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH,
# 238 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 239 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 240 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 241 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 242 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 243 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 244 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 245 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER
# 246 "/usr/local/cuda/bin/../include/cuda.h"
} CUdevice_attribute; }
# 262 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 251 "/usr/local/cuda/bin/../include/cuda.h"
struct CUdevprop_st {
# 252 "/usr/local/cuda/bin/../include/cuda.h"
int maxThreadsPerBlock;
# 253 "/usr/local/cuda/bin/../include/cuda.h"
int maxThreadsDim[3];
# 254 "/usr/local/cuda/bin/../include/cuda.h"
int maxGridSize[3];
# 255 "/usr/local/cuda/bin/../include/cuda.h"
int sharedMemPerBlock;
# 256 "/usr/local/cuda/bin/../include/cuda.h"
int totalConstantMemory;
# 257 "/usr/local/cuda/bin/../include/cuda.h"
int SIMDWidth;
# 258 "/usr/local/cuda/bin/../include/cuda.h"
int memPitch;
# 259 "/usr/local/cuda/bin/../include/cuda.h"
int regsPerBlock;
# 260 "/usr/local/cuda/bin/../include/cuda.h"
int clockRate;
# 261 "/usr/local/cuda/bin/../include/cuda.h"
int textureAlign;
# 262 "/usr/local/cuda/bin/../include/cuda.h"
} CUdevprop; }
# 317 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 267 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfunction_attribute_enum {
# 273 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 280 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 286 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 291 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 296 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 305 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 314 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 316 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 317 "/usr/local/cuda/bin/../include/cuda.h"
} CUfunction_attribute; }
# 326 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 322 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfunc_cache_enum {
# 323 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 324 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 325 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_L1
# 326 "/usr/local/cuda/bin/../include/cuda.h"
} CUfunc_cache; }
# 335 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 331 "/usr/local/cuda/bin/../include/cuda.h"
enum CUmemorytype_enum {
# 332 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 333 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 334 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_ARRAY
# 335 "/usr/local/cuda/bin/../include/cuda.h"
} CUmemorytype; }
# 344 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 340 "/usr/local/cuda/bin/../include/cuda.h"
enum CUcomputemode_enum {
# 341 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 342 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE,
# 343 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_PROHIBITED
# 344 "/usr/local/cuda/bin/../include/cuda.h"
} CUcomputemode; }
# 436 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 349 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_option_enum {
# 355 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 368 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 375 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_WALL_TIME,
# 383 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 391 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 399 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 407 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 414 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 421 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 427 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_TARGET,
# 434 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_FALLBACK_STRATEGY
# 436 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_option; }
# 449 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 441 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_target_enum {
# 443 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_10,
# 444 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_11,
# 445 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_12,
# 446 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_13,
# 447 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_20,
# 448 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_21
# 449 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_target; }
# 460 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 454 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_fallback_enum {
# 456 "/usr/local/cuda/bin/../include/cuda.h"
CU_PREFER_PTX,
# 458 "/usr/local/cuda/bin/../include/cuda.h"
CU_PREFER_BINARY
# 460 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_fallback; }
# 467 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 465 "/usr/local/cuda/bin/../include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 466 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE
# 467 "/usr/local/cuda/bin/../include/cuda.h"
} CUgraphicsRegisterFlags; }
# 476 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 472 "/usr/local/cuda/bin/../include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 473 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 474 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 475 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 476 "/usr/local/cuda/bin/../include/cuda.h"
} CUgraphicsMapResourceFlags; }
# 488 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 481 "/usr/local/cuda/bin/../include/cuda.h"
enum CUarray_cubemap_face_enum {
# 482 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 483 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 484 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 485 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 486 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 487 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 488 "/usr/local/cuda/bin/../include/cuda.h"
} CUarray_cubemap_face; }
# 497 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 493 "/usr/local/cuda/bin/../include/cuda.h"
enum CUlimit_enum {
# 494 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 495 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE,
# 496 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE
# 497 "/usr/local/cuda/bin/../include/cuda.h"
} CUlimit; }
# 728 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 502 "/usr/local/cuda/bin/../include/cuda.h"
enum cudaError_enum {
# 508 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_SUCCESS,
# 514 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 520 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 526 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 531 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 538 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 544 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 551 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 561 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 570 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 575 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 580 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 586 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 591 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 599 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 604 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 609 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 615 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 621 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 627 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 633 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 639 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 644 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 649 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 654 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 659 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_OPERATING_SYSTEM,
# 666 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 673 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 682 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 693 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED = 700,
# 704 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 715 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 721 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 727 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 728 "/usr/local/cuda/bin/../include/cuda.h"
} CUresult; }
# 777 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 756 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 757 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcXInBytes;
# 758 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcY;
# 760 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 761 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 762 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 763 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 764 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcPitch;
# 766 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstXInBytes;
# 767 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstY;
# 769 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 770 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 771 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 772 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 773 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstPitch;
# 775 "/usr/local/cuda/bin/../include/cuda.h"
size_t WidthInBytes;
# 776 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 777 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY2D; }
# 810 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 782 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 783 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcXInBytes;
# 784 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcY;
# 785 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcZ;
# 786 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcLOD;
# 787 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 788 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 789 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 790 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 791 "/usr/local/cuda/bin/../include/cuda.h"
void *reserved0;
# 792 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcPitch;
# 793 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcHeight;
# 795 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstXInBytes;
# 796 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstY;
# 797 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstZ;
# 798 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstLOD;
# 799 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 800 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 801 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 802 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 803 "/usr/local/cuda/bin/../include/cuda.h"
void *reserved1;
# 804 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstPitch;
# 805 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstHeight;
# 807 "/usr/local/cuda/bin/../include/cuda.h"
size_t WidthInBytes;
# 808 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 809 "/usr/local/cuda/bin/../include/cuda.h"
size_t Depth;
# 810 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY3D; }
# 822 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 815 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st {
# 817 "/usr/local/cuda/bin/../include/cuda.h"
size_t Width;
# 818 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 820 "/usr/local/cuda/bin/../include/cuda.h"
CUarray_format Format;
# 821 "/usr/local/cuda/bin/../include/cuda.h"
unsigned NumChannels;
# 822 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR; }
# 836 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 827 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 829 "/usr/local/cuda/bin/../include/cuda.h"
size_t Width;
# 830 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 831 "/usr/local/cuda/bin/../include/cuda.h"
size_t Depth;
# 833 "/usr/local/cuda/bin/../include/cuda.h"
CUarray_format Format;
# 834 "/usr/local/cuda/bin/../include/cuda.h"
unsigned NumChannels;
# 835 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Flags;
# 836 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR; }
# 917 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuInit(unsigned);
# 944 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDriverGetVersion(int *);
# 982 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGet(CUdevice *, int);
# 1008 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetCount(int *);
# 1037 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetName(char *, int, CUdevice);
# 1066 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceComputeCapability(int *, int *, CUdevice);
# 1094 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceTotalMem_v2(size_t *, CUdevice);
# 1154 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetProperties(CUdevprop *, CUdevice);
# 1235 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetAttribute(int *, CUdevice_attribute, CUdevice);
# 1333 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxCreate_v2(CUcontext *, unsigned, CUdevice);
# 1367 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDestroy(CUcontext);
# 1403 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxAttach(CUcontext *, unsigned);
# 1435 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDetach(CUcontext);
# 1473 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxPushCurrent(CUcontext);
# 1515 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxPopCurrent(CUcontext *);
# 1545 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetDevice(CUdevice *);
# 1575 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSynchronize();
# 1638 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetLimit(CUlimit, size_t);
# 1673 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetLimit(size_t *, CUlimit);
# 1716 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetCacheConfig(CUfunc_cache *);
# 1766 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetCacheConfig(CUfunc_cache);
# 1803 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetApiVersion(CUcontext, unsigned *);
# 1851 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoad(CUmodule *, const char *);
# 1885 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadData(CUmodule *, const void *);
# 1963 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadDataEx(CUmodule *, const void *, unsigned, CUjit_option *, void **);
# 2000 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadFatBinary(CUmodule *, const void *);
# 2025 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleUnload(CUmodule);
# 2055 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetFunction(CUfunction *, CUmodule, const char *);
# 2089 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetGlobal_v2(CUdeviceptr *, size_t *, CUmodule, const char *);
# 2123 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetTexRef(CUtexref *, CUmodule, const char *);
# 2154 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetSurfRef(CUsurfref *, CUmodule, const char *);
# 2197 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemGetInfo_v2(size_t *, size_t *);
# 2230 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAlloc_v2(CUdeviceptr *, size_t);
# 2291 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAllocPitch_v2(CUdeviceptr *, size_t *, size_t, size_t, unsigned);
# 2320 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemFree_v2(CUdeviceptr);
# 2353 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemGetAddressRange_v2(CUdeviceptr *, size_t *, CUdeviceptr);
# 2392 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAllocHost_v2(void **, size_t);
# 2422 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemFreeHost(void *);
# 2494 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostAlloc(void **, size_t, unsigned);
# 2532 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr *, void *, unsigned);
# 2557 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostGetFlags(unsigned *, void *);
# 2591 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoD_v2(CUdeviceptr, const void *, size_t);
# 2624 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoH_v2(void *, CUdeviceptr, size_t);
# 2657 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoD_v2(CUdeviceptr, CUdeviceptr, size_t);
# 2691 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoA_v2(CUarray, size_t, CUdeviceptr, size_t);
# 2727 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoD_v2(CUdeviceptr, CUarray, size_t, size_t);
# 2761 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoA_v2(CUarray, size_t, const void *, size_t);
# 2795 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoH_v2(void *, CUarray, size_t, size_t);
# 2833 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoA_v2(CUarray, size_t, CUarray, size_t, size_t);
# 2978 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D *);
# 3121 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D *);
# 3273 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D *);
# 3313 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr, const void *, size_t, CUstream);
# 3353 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoHAsync_v2(void *, CUdeviceptr, size_t, CUstream);
# 3390 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr, CUdeviceptr, size_t, CUstream);
# 3432 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoAAsync_v2(CUarray, size_t, const void *, size_t, CUstream);
# 3474 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoHAsync_v2(void *, CUarray, size_t, size_t, CUstream);
# 3630 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D *, CUstream);
# 3790 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D *, CUstream);
# 3823 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD8_v2(CUdeviceptr, unsigned char, size_t);
# 3856 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD16_v2(CUdeviceptr, unsigned short, size_t);
# 3889 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD32_v2(CUdeviceptr, unsigned, size_t);
# 3927 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D8_v2(CUdeviceptr, size_t, unsigned char, size_t, size_t);
# 3965 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D16_v2(CUdeviceptr, size_t, unsigned short, size_t, size_t);
# 4003 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D32_v2(CUdeviceptr, size_t, unsigned, size_t, size_t);
# 4040 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD8Async(CUdeviceptr, unsigned char, size_t, CUstream);
# 4077 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD16Async(CUdeviceptr, unsigned short, size_t, CUstream);
# 4113 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD32Async(CUdeviceptr, unsigned, size_t, CUstream);
# 4155 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D8Async(CUdeviceptr, size_t, unsigned char, size_t, size_t, CUstream);
# 4197 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D16Async(CUdeviceptr, size_t, unsigned short, size_t, size_t, CUstream);
# 4239 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D32Async(CUdeviceptr, size_t, unsigned, size_t, size_t, CUstream);
# 4342 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayCreate_v2(CUarray *, const CUDA_ARRAY_DESCRIPTOR *);
# 4375 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR *, CUarray);
# 4406 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayDestroy(CUarray);
# 4508 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArray3DCreate_v2(CUarray *, const CUDA_ARRAY3D_DESCRIPTOR *);
# 4544 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR *, CUarray);
# 4582 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamCreate(CUstream *, unsigned);
# 4622 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamWaitEvent(CUstream, CUevent, unsigned);
# 4646 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamQuery(CUstream);
# 4671 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamSynchronize(CUstream);
# 4693 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamDestroy(CUstream);
# 4741 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventCreate(CUevent *, unsigned);
# 4777 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventRecord(CUevent, CUstream);
# 4809 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventQuery(CUevent);
# 4843 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventSynchronize(CUevent);
# 4866 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventDestroy(CUevent);
# 4909 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventElapsedTime(float *, CUevent, CUevent);
# 4954 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetBlockShape(CUfunction, int, int, int);
# 4985 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetSharedSize(CUfunction, unsigned);
# 5042 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncGetAttribute(int *, CUfunction_attribute, CUfunction);
# 5090 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetCacheConfig(CUfunction, CUfunc_cache);
# 5119 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetSize(CUfunction, unsigned);
# 5149 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSeti(CUfunction, int, unsigned);
# 5179 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetf(CUfunction, int, float);
# 5211 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetv(CUfunction, int, void *, unsigned);
# 5245 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunch(CUfunction);
# 5281 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchGrid(CUfunction, int, int);
# 5321 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchGridAsync(CUfunction, int, int, CUstream);
# 5354 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetTexRef(CUfunction, int, CUtexref);
# 5395 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetArray(CUtexref, CUarray, unsigned);
# 5433 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddress_v2(size_t *, CUtexref, CUdeviceptr, size_t);
# 5474 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddress2D_v2(CUtexref, const CUDA_ARRAY_DESCRIPTOR *, CUdeviceptr, size_t);
# 5503 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFormat(CUtexref, CUarray_format, int);
# 5541 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddressMode(CUtexref, int, CUaddress_mode);
# 5574 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFilterMode(CUtexref, CUfilter_mode);
# 5606 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFlags(CUtexref, unsigned);
# 5632 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetAddress_v2(CUdeviceptr *, CUtexref);
# 5658 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetArray(CUarray *, CUtexref);
# 5684 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetAddressMode(CUaddress_mode *, CUtexref, int);
# 5708 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFilterMode(CUfilter_mode *, CUtexref);
# 5734 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFormat(CUarray_format *, int *, CUtexref);
# 5757 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFlags(unsigned *, CUtexref);
# 5791 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefCreate(CUtexref *);
# 5811 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefDestroy(CUtexref);
# 5849 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuSurfRefSetArray(CUsurfref, CUarray, unsigned);
# 5870 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuSurfRefGetArray(CUarray *, CUsurfref);
# 5911 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsUnregisterResource(CUgraphicsResource);
# 5949 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsSubResourceGetMappedArray(CUarray *, CUgraphicsResource, unsigned, unsigned);
# 5983 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr *, size_t *, CUgraphicsResource);
# 6024 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource, unsigned);
# 6062 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsMapResources(unsigned, CUgraphicsResource *, CUstream);
# 6097 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsUnmapResources(unsigned, CUgraphicsResource *, CUstream);
# 6101 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGetExportTable(const void **, const CUuuid *);
# 64 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
enum CUTBoolean {
# 66 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
CUTFalse,
# 67 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
CUTTrue
# 68 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
};
# 76 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" void cutFree(void *);
# 94 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" void cutCheckBankAccess(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned, const char *, const int, const char *, const int);
# 107 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" char *cutFindFilePath(const char *, const char *);
# 122 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutReadFilef(const char *, float **, unsigned *, bool = false);
# 138 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutReadFiled(const char *, double **, unsigned *, bool = false);
# 154 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutReadFilei(const char *, int **, unsigned *, bool = false);
# 169 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutReadFileui(const char *, unsigned **, unsigned *, bool = false);
# 185 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutReadFileb(const char *, char **, unsigned *, bool = false);
# 201 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutReadFileub(const char *, unsigned char **, unsigned *, bool = false);
# 215 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutWriteFilef(const char *, const float *, unsigned, const float, bool = false);
# 229 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutWriteFiled(const char *, const float *, unsigned, const double, bool = false);
# 241 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutWriteFilei(const char *, const int *, unsigned, bool = false);
# 253 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileui(const char *, const unsigned *, unsigned, bool = false);
# 265 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileb(const char *, const char *, unsigned, bool = false);
# 277 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileub(const char *, const unsigned char *, unsigned, bool = false);
# 293 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMub(const char *, unsigned char **, unsigned *, unsigned *);
# 306 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutLoadPPMub(const char *, unsigned char **, unsigned *, unsigned *);
# 320 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutLoadPPM4ub(const char *, unsigned char **, unsigned *, unsigned *);
# 336 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMi(const char *, unsigned **, unsigned *, unsigned *);
# 352 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMs(const char *, unsigned short **, unsigned *, unsigned *);
# 367 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMf(const char *, float **, unsigned *, unsigned *);
# 379 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMub(const char *, unsigned char *, unsigned, unsigned);
# 391 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutSavePPMub(const char *, unsigned char *, unsigned, unsigned);
# 404 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutSavePPM4ub(const char *, unsigned char *, unsigned, unsigned);
# 416 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMi(const char *, unsigned *, unsigned, unsigned);
# 428 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMs(const char *, unsigned short *, unsigned, unsigned);
# 440 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMf(const char *, float *, unsigned, unsigned);
# 461 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutCheckCmdLineFlag(const int, const char **, const char *);
# 475 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumenti(const int, const char **, const char *, int *);
# 489 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentf(const int, const char **, const char *, float *);
# 503 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentstr(const int, const char **, const char *, char **);
# 518 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentListstr(const int, const char **, const char *, char **, unsigned *);
# 532 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutCheckCondition(int, const char *, const int);
# 544 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutComparef(const float *, const float *, const unsigned);
# 557 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutComparei(const int *, const int *, const unsigned);
# 571 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutCompareuit(const unsigned *, const unsigned *, const unsigned, const float, const float);
# 584 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutCompareub(const unsigned char *, const unsigned char *, const unsigned);
# 599 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutCompareubt(const unsigned char *, const unsigned char *, const unsigned, const float, const float);
# 613 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutCompareube(const unsigned char *, const unsigned char *, const unsigned, const float);
# 627 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutComparefe(const float *, const float *, const unsigned, const float);
# 642 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutComparefet(const float *, const float *, const unsigned, const float, const float);
# 657 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutCompareL2fe(const float *, const float *, const unsigned, const float);
# 672 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutComparePPM(const char *, const char *, const float, const float, bool = false);
# 685 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutCreateTimer(unsigned *);
# 694 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutDeleteTimer(unsigned);
# 702 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutStartTimer(const unsigned);
# 710 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutStopTimer(const unsigned);
# 718 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" CUTBoolean cutResetTimer(const unsigned);
# 727 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" float cutGetTimerValue(const unsigned);
# 738 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil.h"
extern "C" float cutGetAverageTimerValue(const unsigned);
# 19 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_bankchecker.h"
inline void __cutilBankChecker(unsigned tidx, unsigned tidy, unsigned tidz, unsigned
# 20 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_bankchecker.h"
bdimx, unsigned bdimy, unsigned bdimz, char *
# 21 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_bankchecker.h"
aname, int index, char *file, int line)
# 22 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_bankchecker.h"
{
# 23 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_bankchecker.h"
cutCheckBankAccess(tidx, tidy, tidz, bdimx, bdimy, bdimz, file, line, aname, index);
# 24 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_bankchecker.h"
}
# 46 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { typedef float2 cuFloatComplex; }
# 48 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline float cuCrealf(cuFloatComplex x)
# 49 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 50 "/usr/local/cuda/bin/../include/cuComplex.h"
return x.x;
# 51 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 53 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline float cuCimagf(cuFloatComplex x)
# 54 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 55 "/usr/local/cuda/bin/../include/cuComplex.h"
return x.y;
# 56 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 58 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex make_cuFloatComplex(float
# 59 "/usr/local/cuda/bin/../include/cuComplex.h"
r, float i)
# 60 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 61 "/usr/local/cuda/bin/../include/cuComplex.h"
cuFloatComplex res;
# 62 "/usr/local/cuda/bin/../include/cuComplex.h"
(res.x) = r;
# 63 "/usr/local/cuda/bin/../include/cuComplex.h"
(res.y) = i;
# 64 "/usr/local/cuda/bin/../include/cuComplex.h"
return res;
# 65 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 67 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuConjf(cuFloatComplex x)
# 68 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 69 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x), -cuCimagf(x));
# 70 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 71 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCaddf(cuFloatComplex x, cuFloatComplex
# 72 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 73 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 74 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) + cuCrealf(y), cuCimagf(x) + cuCimagf(y));
# 76 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 78 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCsubf(cuFloatComplex x, cuFloatComplex
# 79 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 80 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 81 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) - cuCrealf(y), cuCimagf(x) - cuCimagf(y));
# 83 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 90 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCmulf(cuFloatComplex x, cuFloatComplex
# 91 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 92 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 93 "/usr/local/cuda/bin/../include/cuComplex.h"
cuFloatComplex prod;
# 94 "/usr/local/cuda/bin/../include/cuComplex.h"
prod = make_cuFloatComplex((cuCrealf(x) * cuCrealf(y)) - (cuCimagf(x) * cuCimagf(y)), (cuCrealf(x) * cuCimagf(y)) + (cuCimagf(x) * cuCrealf(y)));
# 98 "/usr/local/cuda/bin/../include/cuComplex.h"
return prod;
# 99 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 106 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCdivf(cuFloatComplex x, cuFloatComplex
# 107 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 108 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 109 "/usr/local/cuda/bin/../include/cuComplex.h"
cuFloatComplex quot;
# 110 "/usr/local/cuda/bin/../include/cuComplex.h"
float s = (fabsf(cuCrealf(y)) + fabsf(cuCimagf(y)));
# 111 "/usr/local/cuda/bin/../include/cuComplex.h"
float oos = ((1.0F) / s);
# 112 "/usr/local/cuda/bin/../include/cuComplex.h"
float ars = (cuCrealf(x) * oos);
# 113 "/usr/local/cuda/bin/../include/cuComplex.h"
float ais = (cuCimagf(x) * oos);
# 114 "/usr/local/cuda/bin/../include/cuComplex.h"
float brs = (cuCrealf(y) * oos);
# 115 "/usr/local/cuda/bin/../include/cuComplex.h"
float bis = (cuCimagf(y) * oos);
# 116 "/usr/local/cuda/bin/../include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 117 "/usr/local/cuda/bin/../include/cuComplex.h"
oos = ((1.0F) / s);
# 118 "/usr/local/cuda/bin/../include/cuComplex.h"
quot = make_cuFloatComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 120 "/usr/local/cuda/bin/../include/cuComplex.h"
return quot;
# 121 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 131 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline float cuCabsf(cuFloatComplex x)
# 132 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 133 "/usr/local/cuda/bin/../include/cuComplex.h"
float a = cuCrealf(x);
# 134 "/usr/local/cuda/bin/../include/cuComplex.h"
float b = cuCimagf(x);
# 135 "/usr/local/cuda/bin/../include/cuComplex.h"
float v, w, t;
# 136 "/usr/local/cuda/bin/../include/cuComplex.h"
a = fabsf(a);
# 137 "/usr/local/cuda/bin/../include/cuComplex.h"
b = fabsf(b);
# 138 "/usr/local/cuda/bin/../include/cuComplex.h"
if (a > b) {
# 139 "/usr/local/cuda/bin/../include/cuComplex.h"
v = a;
# 140 "/usr/local/cuda/bin/../include/cuComplex.h"
w = b;
# 141 "/usr/local/cuda/bin/../include/cuComplex.h"
} else {
# 142 "/usr/local/cuda/bin/../include/cuComplex.h"
v = b;
# 143 "/usr/local/cuda/bin/../include/cuComplex.h"
w = a;
# 144 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 145 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (w / v);
# 146 "/usr/local/cuda/bin/../include/cuComplex.h"
t = ((1.0F) + (t * t));
# 147 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (v * sqrtf(t));
# 148 "/usr/local/cuda/bin/../include/cuComplex.h"
if (((v == (0.0F)) || (v > (3.402823466e+38F))) || (w > (3.402823466e+38F))) {
# 149 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (v + w);
# 150 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 151 "/usr/local/cuda/bin/../include/cuComplex.h"
return t;
# 152 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 155 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { typedef double2 cuDoubleComplex; }
# 157 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline double cuCreal(cuDoubleComplex x)
# 158 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 159 "/usr/local/cuda/bin/../include/cuComplex.h"
return x.x;
# 160 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 162 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline double cuCimag(cuDoubleComplex x)
# 163 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 164 "/usr/local/cuda/bin/../include/cuComplex.h"
return x.y;
# 165 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 167 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex make_cuDoubleComplex(double
# 168 "/usr/local/cuda/bin/../include/cuComplex.h"
r, double i)
# 169 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 170 "/usr/local/cuda/bin/../include/cuComplex.h"
cuDoubleComplex res;
# 171 "/usr/local/cuda/bin/../include/cuComplex.h"
(res.x) = r;
# 172 "/usr/local/cuda/bin/../include/cuComplex.h"
(res.y) = i;
# 173 "/usr/local/cuda/bin/../include/cuComplex.h"
return res;
# 174 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 176 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuConj(cuDoubleComplex x)
# 177 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 178 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x), -cuCimag(x));
# 179 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 181 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCadd(cuDoubleComplex x, cuDoubleComplex
# 182 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 183 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 184 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) + cuCreal(y), cuCimag(x) + cuCimag(y));
# 186 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 188 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCsub(cuDoubleComplex x, cuDoubleComplex
# 189 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 190 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 191 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) - cuCreal(y), cuCimag(x) - cuCimag(y));
# 193 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 200 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCmul(cuDoubleComplex x, cuDoubleComplex
# 201 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 202 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 203 "/usr/local/cuda/bin/../include/cuComplex.h"
cuDoubleComplex prod;
# 204 "/usr/local/cuda/bin/../include/cuComplex.h"
prod = make_cuDoubleComplex((cuCreal(x) * cuCreal(y)) - (cuCimag(x) * cuCimag(y)), (cuCreal(x) * cuCimag(y)) + (cuCimag(x) * cuCreal(y)));
# 208 "/usr/local/cuda/bin/../include/cuComplex.h"
return prod;
# 209 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 216 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCdiv(cuDoubleComplex x, cuDoubleComplex
# 217 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 218 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 219 "/usr/local/cuda/bin/../include/cuComplex.h"
cuDoubleComplex quot;
# 220 "/usr/local/cuda/bin/../include/cuComplex.h"
double s = (fabs(cuCreal(y)) + fabs(cuCimag(y)));
# 221 "/usr/local/cuda/bin/../include/cuComplex.h"
double oos = ((1.0) / s);
# 222 "/usr/local/cuda/bin/../include/cuComplex.h"
double ars = (cuCreal(x) * oos);
# 223 "/usr/local/cuda/bin/../include/cuComplex.h"
double ais = (cuCimag(x) * oos);
# 224 "/usr/local/cuda/bin/../include/cuComplex.h"
double brs = (cuCreal(y) * oos);
# 225 "/usr/local/cuda/bin/../include/cuComplex.h"
double bis = (cuCimag(y) * oos);
# 226 "/usr/local/cuda/bin/../include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 227 "/usr/local/cuda/bin/../include/cuComplex.h"
oos = ((1.0) / s);
# 228 "/usr/local/cuda/bin/../include/cuComplex.h"
quot = make_cuDoubleComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 230 "/usr/local/cuda/bin/../include/cuComplex.h"
return quot;
# 231 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 239 "/usr/local/cuda/bin/../include/cuComplex.h"
extern "C" { static inline double cuCabs(cuDoubleComplex x)
# 240 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 241 "/usr/local/cuda/bin/../include/cuComplex.h"
double a = cuCreal(x);
# 242 "/usr/local/cuda/bin/../include/cuComplex.h"
double b = cuCimag(x);
# 243 "/usr/local/cuda/bin/../include/cuComplex.h"
double v, w, t;
# 244 "/usr/local/cuda/bin/../include/cuComplex.h"
a = fabs(a);
# 245 "/usr/local/cuda/bin/../include/cuComplex.h"
b = fabs(b);
# 246 "/usr/local/cuda/bin/../include/cuComplex.h"
if (a > b) {
# 247 "/usr/local/cuda/bin/../include/cuComplex.h"
v = a;
# 248 "/usr/local/cuda/bin/../include/cuComplex.h"
w = b;
# 249 "/usr/local/cuda/bin/../include/cuComplex.h"
} else {
# 250 "/usr/local/cuda/bin/../include/cuComplex.h"
v = b;
# 251 "/usr/local/cuda/bin/../include/cuComplex.h"
w = a;
# 252 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 253 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (w / v);
# 254 "/usr/local/cuda/bin/../include/cuComplex.h"
t = ((1.0) + (t * t));
# 255 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (v * sqrt(t));
# 256 "/usr/local/cuda/bin/../include/cuComplex.h"
if (((v == (0.0)) || (v > (1.797693134862315708e+308))) || (w > (1.797693134862315708e+308)))
# 257 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 258 "/usr/local/cuda/bin/../include/cuComplex.h"
t = (v + w);
# 259 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 260 "/usr/local/cuda/bin/../include/cuComplex.h"
return t;
# 261 "/usr/local/cuda/bin/../include/cuComplex.h"
} }
# 268 "/usr/local/cuda/bin/../include/cuComplex.h"
typedef cuFloatComplex cuComplex;
# 269 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuComplex make_cuComplex(float x, float
# 270 "/usr/local/cuda/bin/../include/cuComplex.h"
y)
# 271 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 272 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex(x, y);
# 273 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 276 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuDoubleComplex cuComplexFloatToDouble(cuFloatComplex
# 277 "/usr/local/cuda/bin/../include/cuComplex.h"
c)
# 278 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 279 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex((double)cuCrealf(c), (double)cuCimagf(c));
# 280 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 282 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuFloatComplex cuComplexDoubleToFloat(cuDoubleComplex
# 283 "/usr/local/cuda/bin/../include/cuComplex.h"
c)
# 284 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 285 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuFloatComplex((float)cuCreal(c), (float)cuCimag(c));
# 286 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 289 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuComplex cuCfmaf(cuComplex x, cuComplex y, cuComplex d)
# 290 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 291 "/usr/local/cuda/bin/../include/cuComplex.h"
float real_res;
# 292 "/usr/local/cuda/bin/../include/cuComplex.h"
float imag_res;
# 294 "/usr/local/cuda/bin/../include/cuComplex.h"
real_res = ((cuCrealf(x) * cuCrealf(y)) + cuCrealf(d));
# 295 "/usr/local/cuda/bin/../include/cuComplex.h"
imag_res = ((cuCrealf(x) * cuCimagf(y)) + cuCimagf(d));
# 297 "/usr/local/cuda/bin/../include/cuComplex.h"
real_res = ((-(cuCimagf(x) * cuCimagf(y))) + real_res);
# 298 "/usr/local/cuda/bin/../include/cuComplex.h"
imag_res = ((cuCimagf(x) * cuCrealf(y)) + imag_res);
# 300 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuComplex(real_res, imag_res);
# 301 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 303 "/usr/local/cuda/bin/../include/cuComplex.h"
static inline cuDoubleComplex cuCfma(cuDoubleComplex x, cuDoubleComplex y, cuDoubleComplex d)
# 304 "/usr/local/cuda/bin/../include/cuComplex.h"
{
# 305 "/usr/local/cuda/bin/../include/cuComplex.h"
double real_res;
# 306 "/usr/local/cuda/bin/../include/cuComplex.h"
double imag_res;
# 308 "/usr/local/cuda/bin/../include/cuComplex.h"
real_res = ((cuCreal(x) * cuCreal(y)) + cuCreal(d));
# 309 "/usr/local/cuda/bin/../include/cuComplex.h"
imag_res = ((cuCreal(x) * cuCimag(y)) + cuCimag(d));
# 311 "/usr/local/cuda/bin/../include/cuComplex.h"
real_res = ((-(cuCimag(x) * cuCimag(y))) + real_res);
# 312 "/usr/local/cuda/bin/../include/cuComplex.h"
imag_res = ((cuCimag(x) * cuCreal(y)) + imag_res);
# 314 "/usr/local/cuda/bin/../include/cuComplex.h"
return make_cuDoubleComplex(real_res, imag_res);
# 315 "/usr/local/cuda/bin/../include/cuComplex.h"
}
# 72 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef
# 61 "/usr/local/cuda/bin/../include/cufft.h"
enum cufftResult_t {
# 62 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_SUCCESS,
# 63 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INVALID_PLAN,
# 64 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_ALLOC_FAILED,
# 65 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INVALID_TYPE,
# 66 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INVALID_VALUE,
# 67 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INTERNAL_ERROR,
# 68 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_EXEC_FAILED,
# 69 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_SETUP_FAILED,
# 70 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_INVALID_SIZE,
# 71 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_UNALIGNED_DATA
# 72 "/usr/local/cuda/bin/../include/cufft.h"
} cufftResult; }
# 77 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef unsigned cufftHandle; }
# 81 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef float cufftReal; }
# 82 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef double cufftDoubleReal; }
# 87 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef cuComplex cufftComplex; }
# 88 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef cuDoubleComplex cufftDoubleComplex; }
# 102 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef
# 95 "/usr/local/cuda/bin/../include/cufft.h"
enum cufftType_t {
# 96 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_R2C = 42,
# 97 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_C2R = 44,
# 98 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_C2C = 41,
# 99 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_D2Z = 106,
# 100 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_Z2D = 108,
# 101 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_Z2Z = 105
# 102 "/usr/local/cuda/bin/../include/cufft.h"
} cufftType; }
# 131 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" { typedef
# 126 "/usr/local/cuda/bin/../include/cufft.h"
enum cufftCompatibility_t {
# 127 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_COMPATIBILITY_NATIVE,
# 128 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_PADDING,
# 129 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_ASYMMETRIC,
# 130 "/usr/local/cuda/bin/../include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_ALL
# 131 "/usr/local/cuda/bin/../include/cufft.h"
} cufftCompatibility; }
# 135 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftPlan1d(cufftHandle *, int, cufftType, int);
# 140 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftPlan2d(cufftHandle *, int, int, cufftType);
# 144 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftPlan3d(cufftHandle *, int, int, int, cufftType);
# 148 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftPlanMany(cufftHandle *, int, int *, int *, int, int, int *, int, int, cufftType, int);
# 156 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftDestroy(cufftHandle);
# 158 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecC2C(cufftHandle, cufftComplex *, cufftComplex *, int);
# 163 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecR2C(cufftHandle, cufftReal *, cufftComplex *);
# 167 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecC2R(cufftHandle, cufftComplex *, cufftReal *);
# 171 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecZ2Z(cufftHandle, cufftDoubleComplex *, cufftDoubleComplex *, int);
# 176 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecD2Z(cufftHandle, cufftDoubleReal *, cufftDoubleComplex *);
# 180 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftExecZ2D(cufftHandle, cufftDoubleComplex *, cufftDoubleReal *);
# 184 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftSetStream(cufftHandle, cudaStream_t);
# 187 "/usr/local/cuda/bin/../include/cufft.h"
extern "C" cufftResult cufftSetCompatibilityMode(cufftHandle, cufftCompatibility);
# 22 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void __cutilCondition(int val, char *file, int line)
# 23 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 24 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((CUTFalse) == (cutCheckCondition(val, file, line))) {
# 25 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(1);
# 26 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 27 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 29 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void __cutilExit(int argc, char **argv)
# 30 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 31 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if (!(cutCheckCmdLineFlag(argc, (const char **)argv, "noprompt"))) {
# 32 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
printf("\nPress ENTER to exit...\n");
# 33 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fflush(stdout);
# 34 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fflush(stderr);
# 35 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
getchar();
# 36 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 37 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(0);
# 38 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 41 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline int cutGetMaxGflopsDeviceId()
# 42 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 43 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
int device_count = 0;
# 44 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
cudaGetDeviceCount(&device_count);
# 46 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
cudaDeviceProp device_properties;
# 47 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
int max_gflops_device = 0;
# 48 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
int max_gflops = 0;
# 50 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
int current_device = 0;
# 51 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
cudaGetDeviceProperties(&device_properties, current_device);
# 52 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
max_gflops = ((device_properties.multiProcessorCount) * (device_properties.clockRate));
# 53 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
++current_device;
# 55 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
while (current_device < device_count)
# 56 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 57 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
cudaGetDeviceProperties(&device_properties, current_device);
# 58 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
int gflops = ((device_properties.multiProcessorCount) * (device_properties.clockRate));
# 59 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if (gflops > max_gflops)
# 60 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 61 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
max_gflops = gflops;
# 62 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
max_gflops_device = current_device;
# 63 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 64 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
++current_device;
# 65 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 67 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
return max_gflops_device;
# 68 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 70 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void __cudaSafeCallNoSync(cudaError err, const char *file, const int line)
# 71 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 72 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 73 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "cudaSafeCallNoSync() Runtime API error in file <%s>, line %i : %s.\n", file, line, cudaGetErrorString(err));
# 75 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 76 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 77 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 79 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void __cudaSafeCall(cudaError err, const char *file, const int line)
# 80 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 81 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 82 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "cudaSafeCall() Runtime API error in file <%s>, line %i : %s.\n", file, line, cudaGetErrorString(err));
# 84 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 85 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 86 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 88 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void __cudaSafeThreadSync(const char *file, const int line)
# 89 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 90 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
cudaError err = cudaThreadSynchronize();
# 91 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 92 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "cudaThreadSynchronize() Driver API error in file \'%s\' in line %i : %s.\n", file, line, cudaGetErrorString(err));
# 94 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 95 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 96 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 98 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void __cufftSafeCall(cufftResult err, const char *file, const int line)
# 99 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 100 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((CUFFT_SUCCESS) != err) {
# 101 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "cufftSafeCall() CUFFT error in file <%s>, line %i.\n", file, line);
# 103 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 104 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 105 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 107 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void __cutilCheckError(CUTBoolean err, const char *file, const int line)
# 108 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 109 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((CUTTrue) != err) {
# 110 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "CUTIL CUDA error in file <%s>, line %i.\n", file, line);
# 112 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 113 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 114 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 116 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void __cutilCheckMsg(const char *errorMessage, const char *file, const int line)
# 117 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 118 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
cudaError_t err = cudaGetLastError();
# 119 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 120 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutilCheckMsg() CUTIL CUDA error: %s in file <%s>, line %i : %s.\n", errorMessage, file, line, cudaGetErrorString(err));
# 122 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 123 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 132 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 133 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void __cutilSafeMalloc(void *pointer, const char *file, const int line)
# 134 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 135 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if (!(pointer)) {
# 136 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutilSafeMalloc host malloc failure in file <%s>, line %i\n", file, line);
# 138 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 139 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 140 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 145 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void cutilDeviceInit(int ARGC, char **ARGV)
# 146 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 147 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
int deviceCount;
# 148 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceCount(&deviceCount), "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h", 148);
# 149 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if (deviceCount == 0) {
# 150 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "CUTIL CUDA error: no devices supporting CUDA.\n");
# 151 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 152 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 153 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
int dev = 0;
# 154 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
cutGetCmdLineArgumenti(ARGC, (const char **)ARGV, "device", &dev);
# 155 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if (dev < 0) { dev = 0; } if (dev > (deviceCount - 1)) { dev = (deviceCount - 1); }
# 157 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 158 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceProperties(&deviceProp, dev), "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h", 158);
# 159 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((deviceProp.major) < 1) {
# 160 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutil error: device does not support CUDA.\n");
# 161 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1); }
# 163 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((cutCheckCmdLineFlag(ARGC, (const char **)ARGV, "quiet")) == (CUTFalse)) {
# 164 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "Using device %d: %s\n", dev, deviceProp.name); }
# 165 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
__cudaSafeCall(cudaSetDevice(dev), "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h", 165);
# 166 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 171 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
inline void cutilCudaCheckCtxLost(const char *errorMessage, const char *file, const int line)
# 172 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
{
# 173 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
cudaError_t err = cudaGetLastError();
# 174 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 175 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "CUDA error: %s in file \'%s\' in line %i : %s.\n", errorMessage, file, line, cudaGetErrorString(err));
# 177 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 178 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 179 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
err = cudaThreadSynchronize();
# 180 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 181 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
fprintf(stderr, "CCUDA error: %s in file \'%s\' in line %i : %s.\n", errorMessage, file, line, cudaGetErrorString(err));
# 183 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
exit(-1);
# 184 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 185 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_runtime.h"
}
# 16 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
inline void __cuSafeCallNoSync(CUresult err, const char *file, const int line)
# 17 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
{
# 18 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 19 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cuSafeCallNoSync() Driver API error = %04d from file <%s>, line %i.\n", err, file, line);
# 21 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
exit(-1);
# 22 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 23 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 24 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
inline void __cuSafeCall(CUresult err, const char *file, const int line)
# 25 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
{
# 26 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(err, file, line);
# 27 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 29 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
inline void __cuCtxSync(const char *file, const int line)
# 30 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
{
# 31 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 32 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 33 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cuCtxSynchronize() API error = %04d in file <%s>, line %i.\n", err, file, line);
# 35 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
exit(-1);
# 36 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 37 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 39 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
inline void __cuCheckMsg(const char *msg, const char *file, const int line)
# 40 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
{
# 41 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 42 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 43 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDrvCheckMsg -> %s", msg);
# 44 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDrvCheckMsg -> cuCtxSynchronize API error = %04d in file <%s>, line %i.\n", err, file, line);
# 46 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
exit(-1);
# 47 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 48 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 54 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
inline void cutilDeviceInitDrv(int cuDevice, int ARGC, char **ARGV)
# 55 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
{
# 56 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
cuDevice = 0;
# 57 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
int deviceCount = 0;
# 58 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
CUresult err = cuInit(0);
# 59 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) == err) {
# 60 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGetCount(&deviceCount), "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h", 60); }
# 61 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if (deviceCount == 0) {
# 62 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
fprintf(stderr, "CUTIL DeviceInitDrv error: no devices supporting CUDA\n");
# 63 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
exit(-1);
# 64 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 65 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
int dev = 0;
# 66 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
cutGetCmdLineArgumenti(ARGC, (const char **)ARGV, "device", &dev);
# 67 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if (dev < 0) { dev = 0; }
# 68 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if (dev > (deviceCount - 1)) { dev = (deviceCount - 1); }
# 69 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGet(&cuDevice, dev), "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h", 69);
# 70 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
char name[100];
# 71 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
cuDeviceGetName(name, 100, cuDevice);
# 72 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if ((cutCheckCmdLineFlag(ARGC, (const char **)ARGV, "quiet")) == (CUTFalse)) {
# 73 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Using device %d: %s\n", dev, name); }
# 74 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 78 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
inline void cutilDrvCudaCheckCtxLost(const char *errorMessage, const char *file, const int line)
# 79 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
{
# 80 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 81 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if ((CUDA_ERROR_INVALID_CONTEXT) != err) {
# 82 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i\n", errorMessage, file, line);
# 84 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
exit(-1);
# 85 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 86 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
err = cuCtxSynchronize();
# 87 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 88 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i\n", errorMessage, file, line);
# 90 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
exit(-1);
# 91 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 92 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline_drvapi.h"
}
# 12 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline.h"
inline void print_NVCC_min_spec(const char *sSDKsample, const char *sNVCCReq, const char *sDriverReq)
# 13 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline.h"
{
# 14 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline.h"
printf("CUDA %d.%02d Toolkit built this project.\n", 3020 / 1000, 3020 % 100);
# 15 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline.h"
printf("  [ %s ] requirements:\n", sSDKsample);
# 16 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline.h"
printf(" -> CUDA %s Toolkit\n", sNVCCReq);
# 17 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline.h"
printf(" -> %s NVIDIA Display Driver.\n", sDriverReq);
# 18 "/home/normal/checkout/gpuocelot/tests/cuda2.2/sdk/cutil_inline.h"
}
# 52 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/realtype.h"
typedef double real;
# 52 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
typedef
# 46 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
struct {
# 47 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
float S;
# 48 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
float X;
# 49 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
float T;
# 50 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
float R;
# 51 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
float V;
# 52 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
} TOptionData;
# 61 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
typedef
# 58 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
struct __attribute__((__aligned__(8))) {
# 59 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
float Expected;
# 60 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
float Confidence;
# 61 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
} TOptionValue;
# 85 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
typedef
# 64 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
struct {
# 66 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
int device;
# 68 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
int optionCount;
# 71 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
TOptionData *optionData;
# 72 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
TOptionValue *callValue;
# 74 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
void *d_Buffer;
# 77 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
unsigned seed;
# 79 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
int pathN;
# 81 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
float *d_Samples;
# 84 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
float time;
# 85 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_common.h"
} TOptionPlan;
# 50 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_reduction.cuh"
template< class T, unsigned blockSize> __attribute__((unused)) void
# 51 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_reduction.cuh"
sumReduceSharedMem(T *sum, T *sum2, int tid)
# 52 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_reduction.cuh"
{int volatile ___ = 1;
# 64 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_reduction.cuh"
exit(___);}
# 74 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_reduction.cuh"
template< class T, int SUM_N, int blockSize> __attribute__((unused)) void
# 75 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_reduction.cuh"
sumReduce(T *sum, T *sum2)
# 76 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_reduction.cuh"
{int volatile ___ = 1;
# 91 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_reduction.cuh"
exit(___);}
# 73 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
typedef
# 68 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
struct {
# 69 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
real S;
# 70 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
real X;
# 71 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
real MuByT;
# 72 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
real VBySqrtT;
# 73 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
} __TOptionData;
# 74 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
static __TOptionData d_OptionData[2048];
# 80 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
typedef
# 77 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
struct {
# 78 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
real Expected;
# 79 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
real Confidence;
# 80 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
} __TOptionValue;
# 81 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
static __TOptionValue d_CallValue[2048];
# 94 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
__attribute__((unused)) inline double endCallValue(double S, double X, double r, double MuByT, double VBySqrtT) {int volatile ___ = 1;
# 97 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
exit(___);}
# 109 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
static void MonteCarloKernel(__TOptionValue *
# 110 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
d_Buffer, float *
# 111 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
d_Samples, int
# 112 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
pathN) ;
# 147 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
static void MonteCarloOneBlockPerOption(float *
# 148 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
d_Samples, int
# 149 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
pathN) ;
# 191 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
static void MonteCarloReduce(__TOptionValue *
# 192 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
d_Buffer, int
# 193 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
accumN) ;
# 228 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
static void initMonteCarloGPU(TOptionPlan *plan) {
# 229 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const int doMultiBlock = (((plan->pathN) / (plan->optionCount)) >= 8192);
# 230 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
if (doMultiBlock) {
# 231 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const int blocksPerOption = (((plan->optionCount) < 16) ? 64 : 16);
# 232 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const int accumN = (256 * blocksPerOption);
# 233 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
__cudaSafeCall(cudaMalloc((void **)(&(plan->d_Buffer)), (accumN * (plan->optionCount)) * sizeof(__TOptionValue)), "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh", 236);
# 237 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 238 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 241 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
static void closeMonteCarloGPU(TOptionPlan *plan) {
# 242 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const int doMultiBlock = (((plan->pathN) / (plan->optionCount)) >= 8192);
# 243 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
if (doMultiBlock) { __cudaSafeCall(cudaFree(plan->d_Buffer), "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh", 243); }
# 244 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 247 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
static void MonteCarloGPU(TOptionPlan *plan) {
# 248 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
__TOptionData h_OptionData[2048];
# 249 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
__TOptionValue h_CallValue[2048];
# 251 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
if (((plan->optionCount) <= 0) || ((plan->optionCount) > 2048)) {
# 252 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
printf("MonteCarloGPU(): bad option count.\n");
# 253 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
return;
# 254 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 256 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
for (int i = 0; i < (plan->optionCount); i++) {
# 257 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const double T = (((plan->optionData)[i]).T);
# 258 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const double R = (((plan->optionData)[i]).R);
# 259 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const double V = (((plan->optionData)[i]).V);
# 260 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const double MuByT = ((R - (((0.5) * V) * V)) * T);
# 261 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const double VBySqrtT = (V * sqrt(T));
# 262 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
(((h_OptionData)[i]).S) = ((real)(((plan->optionData)[i]).S));
# 263 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
(((h_OptionData)[i]).X) = ((real)(((plan->optionData)[i]).X));
# 264 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
(((h_OptionData)[i]).MuByT) = ((real)MuByT);
# 265 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
(((h_OptionData)[i]).VBySqrtT) = ((real)VBySqrtT);
# 266 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 268 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
__cudaSafeCall(cudaMemcpyToSymbol(d_OptionData, h_OptionData, (plan->optionCount) * sizeof(__TOptionData)), "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh", 272);
# 274 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const int doMultiBlock = (((plan->pathN) / (plan->optionCount)) >= 8192);
# 275 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
if (doMultiBlock) {
# 276 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const int blocksPerOption = (((plan->optionCount) < 16) ? 64 : 16);
# 277 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const int accumN = (256 * blocksPerOption);
# 278 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const dim3 gridMain(blocksPerOption, plan->optionCount);
# 279 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
cudaConfigureCall(gridMain, 256) ? ((void)0) : MonteCarloKernel((__TOptionValue *)(plan->d_Buffer), plan->d_Samples, plan->pathN);
# 284 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
__cutilCheckMsg("MonteCarloKernel() execution failed\n", "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh", 284);
# 285 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
cudaConfigureCall(plan->optionCount, 256) ? ((void)0) : MonteCarloReduce((__TOptionValue *)(plan->d_Buffer), accumN);
# 289 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
__cutilCheckMsg("MonteCarloReduce() execution failed\n", "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh", 289);
# 290 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
} else {
# 291 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
cudaConfigureCall(plan->optionCount, 256) ? ((void)0) : MonteCarloOneBlockPerOption(plan->d_Samples, plan->pathN);
# 295 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
__cutilCheckMsg("MonteCarloOneBlockPerOption() execution failed\n", "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh", 295);
# 296 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 297 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
__cudaSafeCall(cudaMemcpyFromSymbol(h_CallValue, d_CallValue, (plan->optionCount) * sizeof(__TOptionValue)), "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh", 301);
# 303 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
for (int i = 0; i < (plan->optionCount); i++) {
# 304 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const double RT = ((((plan->optionData)[i]).R) * (((plan->optionData)[i]).T));
# 305 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const double sum = (((h_CallValue)[i]).Expected);
# 306 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const double sum2 = (((h_CallValue)[i]).Confidence);
# 307 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
const double pathN = (plan->pathN);
# 309 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
(((plan->callValue)[i]).Expected) = ((float)((exp(-RT) * sum) / pathN));
# 311 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
double stdDev = sqrt(((pathN * sum2) - (sum * sum)) / (pathN * (pathN - (1))));
# 313 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
(((plan->callValue)[i]).Confidence) = ((float)(((exp(-RT) * (1.959999999999999964)) * stdDev) / sqrt(pathN)));
# 314 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 315 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 99 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
__attribute__((unused)) inline double MoroInvCNDgpu(double P) {int volatile ___ = 1;
# 137 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
exit(___);}
# 193 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
__attribute__((unused)) inline double AcklamInvCNDgpu(double P) {int volatile ___ = 1;
# 240 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
exit(___);}
# 248 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
static void inverseCNDKernel(float *
# 249 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
d_Output, float *
# 250 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
d_Input, unsigned
# 251 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
pathN) ;
# 274 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
static void inverseCNDgpu(float *d_Output, float *d_Input, unsigned N) {
# 275 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
cudaConfigureCall(128, 128) ? ((void)0) : inverseCNDKernel(d_Output, d_Input, N);
# 276 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
__cutilCheckMsg("inverseCNDKernel() execution failed.\n", "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh", 276);
# 277 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
}
# 44 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
extern "C" void initMonteCarlo_SM13(TOptionPlan *plan) {
# 45 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
initMonteCarloGPU(plan);
# 46 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
}
# 48 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
extern "C" void closeMonteCarlo_SM13(TOptionPlan *plan) {
# 49 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
closeMonteCarloGPU(plan);
# 50 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
}
# 52 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
extern "C" void MonteCarlo_SM13(TOptionPlan *plan) {
# 53 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
MonteCarloGPU(plan);
# 54 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
}
# 56 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
extern "C" void inverseCND_SM13(float *d_Output, float *d_Input, unsigned N) {
# 57 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
inverseCNDgpu(d_Output, d_Input, N);
# 58 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu"
}
# 1 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.stub.c"
# 1 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.stub.c" 1
# 1 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 1
# 91 "/usr/local/cuda/bin/../include/crt/host_runtime.h"
extern "C" {

extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);



extern int atexit(void(*)(void)) throw();







}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

# 1 "/usr/local/cuda/bin/../include/common_functions.h" 1
# 90 "/usr/local/cuda/bin/../include/common_functions.h"
# 1 "/usr/local/cuda/bin/../include/math_functions.h" 1 3
# 948 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_constants.h" 1 3
# 949 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 2973 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/crt/func_macro.h" 1 3
# 2974 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 4683 "/usr/local/cuda/bin/../include/math_functions.h" 3
extern __attribute__((__weak__)) double rsqrt(double a); double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

extern __attribute__((__weak__)) double rcbrt(double a); double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

extern __attribute__((__weak__)) double sinpi(double a); double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

extern __attribute__((__weak__)) double erfinv(double a); double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

extern __attribute__((__weak__)) double erfcinv(double a); double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

extern __attribute__((__weak__)) float rsqrtf(float a); float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

extern __attribute__((__weak__)) float rcbrtf(float a); float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

extern __attribute__((__weak__)) float sinpif(float a); float sinpif(float a)
{
  return (float)sinpi((double)a);
}

extern __attribute__((__weak__)) float erfinvf(float a); float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

extern __attribute__((__weak__)) float erfcinvf(float a); float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}







extern __attribute__((__weak__)) int min(int a, int b); int min(int a, int b)
{
  return a < b ? a : b;
}

extern __attribute__((__weak__)) unsigned int umin(unsigned int a, unsigned int b); unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

extern __attribute__((__weak__)) long long int llmin(long long int a, long long int b); long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

extern __attribute__((__weak__)) unsigned long long int ullmin(unsigned long long int a, unsigned long long int b); unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

extern __attribute__((__weak__)) int max(int a, int b); int max(int a, int b)
{
  return a > b ? a : b;
}

extern __attribute__((__weak__)) unsigned int umax(unsigned int a, unsigned int b); unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

extern __attribute__((__weak__)) long long int llmax(long long int a, long long int b); long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

extern __attribute__((__weak__)) unsigned long long int ullmax(unsigned long long int a, unsigned long long int b); unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}
# 5006 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_functions_dbl_ptx3.h" 1 3
# 5007 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 91 "/usr/local/cuda/bin/../include/common_functions.h" 2
# 164 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2







#pragma pack()
# 2 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.stub.c" 2
# 1 "/tmp/tmpxft_00006353_00000000-3_MonteCarlo_SM13.fatbin.c" 1
# 1 "/usr/local/cuda/bin/../include/__cudaFatFormat.h" 1
# 83 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
extern "C" {
# 97 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct {
    char* gpuProfileName;
    char* cubin;
} __cudaFatCubinEntry;
# 113 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct {
    char* gpuProfileName;
    char* ptx;
} __cudaFatPtxEntry;
# 125 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct __cudaFatDebugEntryRec {
    char* gpuProfileName;
    char* debug;
    struct __cudaFatDebugEntryRec *next;
    unsigned int size;
} __cudaFatDebugEntry;

typedef struct __cudaFatElfEntryRec {
    char* gpuProfileName;
    char* elf;
    struct __cudaFatElfEntryRec *next;
    unsigned int size;
} __cudaFatElfEntry;

typedef enum {
      __cudaFatDontSearchFlag = (1 << 0),
      __cudaFatDontCacheFlag = (1 << 1),
      __cudaFatSassDebugFlag = (1 << 2)
} __cudaFatCudaBinaryFlag;
# 152 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct {
    char* name;
} __cudaFatSymbol;
# 166 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
typedef struct __cudaFatCudaBinaryRec {
    unsigned long magic;
    unsigned long version;
    unsigned long gpuInfoVersion;
    char* key;
    char* ident;
    char* usageMode;
    __cudaFatPtxEntry *ptx;
    __cudaFatCubinEntry *cubin;
    __cudaFatDebugEntry *debug;
    void* debugInfo;
    unsigned int flags;
    __cudaFatSymbol *exported;
    __cudaFatSymbol *imported;
    struct __cudaFatCudaBinaryRec *dependends;
    unsigned int characteristic;
    __cudaFatElfEntry *elf;
} __cudaFatCudaBinary;
# 203 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
    typedef enum {
        __cudaFatAvoidPTX,
        __cudaFatPreferBestCode,
        __cudaFatForcePTX
    } __cudaFatCompilationPolicy;
# 227 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
void fatGetCubinForGpuWithPolicy( __cudaFatCudaBinary *binary, __cudaFatCompilationPolicy policy, char* gpuName, char* *cubin, char* *dbgInfoFile );
# 240 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
unsigned char fatCheckJitForGpuWithPolicy( __cudaFatCudaBinary *binary, __cudaFatCompilationPolicy policy, char* gpuName, char* *ptx );
# 250 "/usr/local/cuda/bin/../include/__cudaFatFormat.h"
void fatFreeCubin( char* cubin, char* dbgInfoFile );





void __cudaFatFreePTX( char* ptx );


}
# 2 "/tmp/tmpxft_00006353_00000000-3_MonteCarlo_SM13.fatbin.c" 2

asm(
".section .rodata\n"
".align 32\n"
"__deviceText_$compute_20$:\n"
".quad 0x6f69737265762e09,0x2e090a322e32206e,0x7320746567726174,0x2f2f090a30325f6d\n"
".quad 0x656c69706d6f6320,0x2f20687469772064,0x61636f6c2f727375,0x6f2f616475632f6c\n"
".quad 0x696c2f34366e6570,0x2f090a65622f2f62,0x6e65706f766e202f,0x6220322e33206363\n"
".quad 0x206e6f20746c6975,0x2d39302d30313032,0x69762e090a0a3930,0x662e20656c626973\n"
".quad 0x73395a5f20636e75,0x6563756465526d75,0x45363532694c6449,0x764545363532694c\n"
".quad 0x28205f31535f5450,0x2e206d617261702e,0x75635f5f20323375,0x31666d7261706164\n"
".quad 0x526d7573395a5f5f,0x4c64496563756465,0x32694c4536353269,0x5f54507645453635\n"
".quad 0x61702e202c5f3153,0x3233752e206d6172,0x70616475635f5f20,0x5a5f5f32666d7261\n"
".quad 0x756465526d757339,0x3532694c64496563,0x45363532694c4536,0x5f31535f54507645\n"
".quad 0x7369762e090a0a29,0x75662e20656c6269,0x7338315a5f20636e,0x6563756465526d75\n"
".quad 0x654d646572616853,0x3635326a4c64496d,0x31535f5450764545,0x7261702e2820695f\n"
".quad 0x203233752e206d61,0x6170616475635f5f,0x315a5f5f31666d72,0x756465526d757338\n"
".quad 0x6465726168536563,0x326a4c64496d654d,0x5f54507645453635,0x702e202c695f3153\n"
".quad 0x33752e206d617261,0x616475635f5f2032,0x5f5f32666d726170,0x65526d757338315a\n"
".quad 0x7261685365637564,0x4c64496d654d6465,0x507645453635326a,0x202c695f31535f54\n"
".quad 0x2e206d617261702e,0x75635f5f20323373,0x33666d7261706164,0x6d757338315a5f5f\n"
".quad 0x6853656375646552,0x496d654d64657261,0x45453635326a4c64,0x695f31535f545076\n"
".quad 0x7369762e090a0a29,0x75662e20656c6269,0x7261702e2820636e,0x203436662e206d61\n"
".quad 0x6572616475635f5f,0x4d33315a5f5f6674,0x4e43766e496f726f,0x5f20296475706744\n"
".quad 0x496f726f4d33315a,0x757067444e43766e,0x617261702e282064,0x5f203436662e206d\n"
".quad 0x726170616475635f,0x33315a5f5f31666d,0x43766e496f726f4d,0x0a2964757067444e\n"
".quad 0x2d2d2d2d2f2f090a,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x0a2d2d2d2d2d2d2d\n"
".quad 0x706d6f43202f2f09,0x742f20676e696c69,0x6678706d742f706d,0x3336303030305f74\n"
".quad 0x30303030305f3335,0x6f4d5f372d303030,0x6f6c72614365746e,0x70632e33314d535f\n"
".quad 0x742f2820692e3370,0x23494263632f706d,0x296f49775430702e,0x2d2d2d2d2f2f090a\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x0a2d2d2d2d2d2d2d,0x2d2d2d2d2f2f090a\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x0a2d2d2d2d2d2d2d,0x6974704f202f2f09\n"
".quad 0x2f2f090a3a736e6f,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x202f2f090a2d2d2d,0x3a74656772615420,0x415349202c787470,0x202c30325f6d733a\n"
".quad 0x6c3a6e6169646e45,0x50202c656c747469,0x53207265746e696f,0x090a32333a657a69\n"
".quad 0x09334f2d20202f2f,0x7a696d6974704f28,0x656c206e6f697461,0x2f2f090a296c6576\n"
".quad 0x44280930672d2020,0x76656c2067756265,0x202f2f090a296c65,0x65522809326d2d20\n"
".quad 0x7664612074726f70,0x29736569726f7369,0x2d2d2d2d2f2f090a,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d,0x2d2d2d2d2d2d2d2d\n"
".quad 0x2d2d2d2d2d2d2d2d,0x0a2d2d2d2d2d2d2d,0x09656c69662e090a,0x6d6d6f633c220931\n"
".quad 0x656e696c2d646e61,0x6c69662e090a223e,0x6d742f2209320965,0x746678706d742f70\n"
".quad 0x353336303030305f,0x3030303030305f33,0x6e6f4d5f362d3030,0x5f6f6c7261436574\n"
".quad 0x6475632e33314d53,0x7570672e32656661,0x656c69662e090a22,0x6d6f682f22093309\n"
".quad 0x6c616d726f6e2f65,0x756f6b636568632f,0x65636f7570672f74,0x747365742f746f6c\n"
".quad 0x2e32616475632f73,0x2f73747365742f32,0x72614365746e6f4d,0x4769746c754d6f6c\n"
".quad 0x65746e6f4d2f5550,0x656b5f6f6c726143,0x6875632e6c656e72,0x656c69662e090a22\n"
".quad 0x7273752f22093409,0x6363672f62696c2f,0x696c2d363836692f,0x2f756e672d78756e\n"
".quad 0x6e692f352e342e34,0x74732f6564756c63,0x0a22682e66656464,0x3509656c69662e09\n"
".quad 0x6c2f7273752f2209,0x6475632f6c61636f,0x2e2e2f6e69622f61,0x6564756c636e692f\n"
".quad 0x7665642f7472632f,0x746e75725f656369,0x090a22682e656d69,0x093609656c69662e\n"
".quad 0x6f6c2f7273752f22,0x616475632f6c6163,0x2f2e2e2f6e69622f,0x2f6564756c636e69\n"
".quad 0x6665645f74736f68,0x0a22682e73656e69,0x3709656c69662e09,0x6c2f7273752f2209\n"
".quad 0x6475632f6c61636f,0x2e2e2f6e69622f61,0x6564756c636e692f,0x6e69746c6975622f\n"
".quad 0x682e73657079745f,0x656c69662e090a22,0x7273752f22093809,0x632f6c61636f6c2f\n"
".quad 0x2f6e69622f616475,0x756c636e692f2e2e,0x63697665642f6564,0x2e73657079745f65\n"
".quad 0x6c69662e090a2268,0x73752f2209390965,0x2f6c61636f6c2f72,0x6e69622f61647563\n"
".quad 0x6c636e692f2e2e2f,0x766972642f656475,0x73657079745f7265,0x69662e090a22682e\n"
".quad 0x2f2209303109656c,0x61636f6c2f727375,0x622f616475632f6c,0x6e692f2e2e2f6e69\n"
".quad 0x75732f6564756c63,0x79745f6563616672,0x090a22682e736570,0x313109656c69662e\n"
".quad 0x6c2f7273752f2209,0x6475632f6c61636f,0x2e2e2f6e69622f61,0x6564756c636e692f\n"
".quad 0x657275747865742f,0x682e73657079745f,0x656c69662e090a22,0x73752f2209323109\n"
".quad 0x2f6c61636f6c2f72,0x6e69622f61647563,0x6c636e692f2e2e2f,0x746365762f656475\n"
".quad 0x73657079745f726f,0x69662e090a22682e,0x2f2209333109656c,0x61636f6c2f727375\n"
".quad 0x622f616475632f6c,0x6e692f2e2e2f6e69,0x65642f6564756c63,0x75616c5f65636976\n"
".quad 0x617261705f68636e,0x682e73726574656d,0x656c69662e090a22,0x73752f2209343109\n"
".quad 0x2f6c61636f6c2f72,0x6e69622f61647563,0x6c636e692f2e2e2f,0x2f7472632f656475\n"
".quad 0x5f656761726f7473,0x22682e7373616c63,0x09656c69662e090a,0x7273752f22093531\n"
".quad 0x6564756c636e692f,0x79742f737469622f,0x090a22682e736570,0x363109656c69662e\n"
".quad 0x692f7273752f2209,0x742f6564756c636e,0x090a22682e656d69,0x373109656c69662e\n"
".quad 0x2f656d6f682f2209,0x632f6c616d726f6e,0x2f74756f6b636568,0x6f6c65636f757067\n"
".quad 0x2f73747365742f74,0x2f322e3261647563,0x6f4d2f7374736574,0x6f6c72614365746e\n"
".quad 0x55504769746c754d,0x7079746c6165722f,0x662e090a22682e65,0x2209383109656c69\n"
".quad 0x6f6e2f656d6f682f,0x6568632f6c616d72,0x70672f74756f6b63,0x2f746f6c65636f75\n"
".quad 0x75632f7374736574,0x65742f322e326164,0x746e6f4d2f737473,0x754d6f6c72614365\n"
".quad 0x4d2f55504769746c,0x6c72614365746e6f,0x7463756465725f6f,0x226875632e6e6f69\n"
".quad 0x09656c69662e090a,0x6d6f682f22093931,0x6c616d726f6e2f65,0x756f6b636568632f\n"
".quad 0x65636f7570672f74,0x747365742f746f6c,0x2e32616475632f73,0x2f73747365742f32\n"
".quad 0x72614365746e6f4d,0x4769746c754d6f6c,0x69736175712f5550,0x65476d6f646e6172\n"
".quad 0x5f726f746172656e,0x632e6c656e72656b,0x69662e090a226875,0x2f2209303209656c\n"
".quad 0x61636f6c2f727375,0x622f616475632f6c,0x6e692f2e2e2f6e69,0x6f632f6564756c63\n"
".quad 0x6e75665f6e6f6d6d,0x682e736e6f697463,0x656c69662e090a22,0x73752f2209313209\n"
".quad 0x2f6c61636f6c2f72,0x6e69622f61647563,0x6c636e692f2e2e2f,0x6874616d2f656475\n"
".quad 0x6f6974636e75665f,0x2e090a22682e736e,0x09323209656c6966,0x6f6c2f7273752f22\n"
".quad 0x616475632f6c6163,0x2f2e2e2f6e69622f,0x2f6564756c636e69,0x6e6f635f6874616d\n"
".quad 0x682e73746e617473,0x656c69662e090a22,0x73752f2209333209,0x2f6c61636f6c2f72\n"
".quad 0x6e69622f61647563,0x6c636e692f2e2e2f,0x697665642f656475,0x74636e75665f6563\n"
".quad 0x0a22682e736e6f69,0x3209656c69662e09,0x2f7273752f220934,0x75632f6c61636f6c\n"
".quad 0x2e2f6e69622f6164,0x64756c636e692f2e,0x5f31315f6d732f65,0x665f63696d6f7461\n"
".quad 0x736e6f6974636e75,0x69662e090a22682e,0x2f2209353209656c,0x61636f6c2f727375\n"
".quad 0x622f616475632f6c,0x6e692f2e2e2f6e69,0x6d732f6564756c63,0x6d6f74615f32315f\n"
".quad 0x74636e75665f6369,0x0a22682e736e6f69,0x3209656c69662e09,0x2f7273752f220936\n"
".quad 0x75632f6c61636f6c,0x2e2f6e69622f6164,0x64756c636e692f2e,0x5f33315f6d732f65\n"
".quad 0x665f656c62756f64,0x736e6f6974636e75,0x69662e090a22682e,0x2f2209373209656c\n"
".quad 0x61636f6c2f727375,0x622f616475632f6c,0x6e692f2e2e2f6e69,0x6d732f6564756c63\n"
".quad 0x6d6f74615f30325f,0x74636e75665f6369,0x0a22682e736e6f69,0x3209656c69662e09\n"
".quad 0x2f7273752f220938,0x75632f6c61636f6c,0x2e2f6e69622f6164,0x64756c636e692f2e\n"
".quad 0x5f30325f6d732f65,0x69736e6972746e69,0x2e090a22682e7363,0x09393209656c6966\n"
".quad 0x6f6c2f7273752f22,0x616475632f6c6163,0x2f2e2e2f6e69622f,0x2f6564756c636e69\n"
".quad 0x5f65636166727573,0x6e6f6974636e7566,0x662e090a22682e73,0x2209303309656c69\n"
".quad 0x636f6c2f7273752f,0x2f616475632f6c61,0x692f2e2e2f6e6962,0x742f6564756c636e\n"
".quad 0x665f657275747865,0x6e75665f68637465,0x682e736e6f697463,0x656c69662e090a22\n"
".quad 0x73752f2209313309,0x2f6c61636f6c2f72,0x6e69622f61647563,0x6c636e692f2e2e2f\n"
".quad 0x6874616d2f656475,0x6f6974636e75665f,0x705f6c62645f736e,0x0a0a22682e337874\n"
".quad 0x62697369762e090a,0x636e75662e20656c,0x526d7573395a5f20,0x4c64496563756465\n"
".quad 0x32694c4536353269,0x5f54507645453635,0x61702e28205f3153,0x3233752e206d6172\n"
".quad 0x70616475635f5f20,0x5a5f5f31666d7261,0x756465526d757339,0x3532694c64496563\n"
".quad 0x45363532694c4536,0x5f31535f54507645,0x6d617261702e202c,0x5f5f203233752e20\n"
".quad 0x6d72617061647563,0x7573395a5f5f3266,0x496563756465526d,0x4c45363532694c64\n"
".quad 0x5076454536353269,0x090a295f31535f54,0x206765722e090a7b,0x3c7225203233752e\n"
".quad 0x722e090a3b3e3932,0x203436662e206765,0x3b3e30353c646625,0x2e206765722e090a\n"
".quad 0x3c70252064657270,0x6c2e090a3b3e3231,0x363709383109636f,0x6257444c240a3009\n"
".quad 0x395a5f5f6e696765,0x63756465526d7573,0x363532694c644965,0x4545363532694c45\n"
".quad 0x3a5f31535f545076,0x7261702e646c090a,0x09203233752e6d61,0x5f5f5b202c317225\n"
".quad 0x6d72617061647563,0x7573395a5f5f3166,0x496563756465526d,0x4c45363532694c64\n"
".quad 0x5076454536353269,0x0a3b5d5f31535f54,0x3233732e766f6d09,0x25202c3272250920\n"
".quad 0x2e646c090a3b3172,0x33752e6d61726170,0x202c337225092032,0x70616475635f5f5b\n"
".quad 0x5a5f5f32666d7261,0x756465526d757339,0x3532694c64496563,0x45363532694c4536\n"
".quad 0x5f31535f54507645,0x2e766f6d090a3b5d,0x3472250920323373,0x090a3b337225202c\n"
".quad 0x09383109636f6c2e,0x7663090a30093837,0x33752e3233732e74,0x202c357225092032\n"
".quad 0x0a3b782e64697425,0x3233732e766f6d09,0x25202c3672250920,0x766f6d090a3b3572\n"
".quad 0x722509203233752e,0x0a3b353532202c37,0x74672e7074657309,0x702509203233732e\n"
".quad 0x202c357225202c31,0x2540090a3b377225,0x0920617262203170,0x35315f305f744c24\n"
".quad 0x6f6d090a3b323633,0x2509203233732e76,0x3b313135202c3872,0x33732e627573090a\n"
".quad 0x202c397225092032,0x357225202c387225,0x732e726873090a3b,0x3031722509203233\n"
".quad 0x33202c397225202c,0x2e766f6d090a3b31,0x3172250920323373,0x0a3b353532202c31\n"
".quad 0x3233622e646e6109,0x202c323172250920,0x7225202c30317225,0x646461090a3b3131\n"
".quad 0x722509203233732e,0x32317225202c3331,0x090a3b397225202c,0x203233732e726873\n"
".quad 0x25202c3431722509,0x0a3b38202c333172,0x3233732e766f6d09,0x202c353172250920\n"
".quad 0x4c240a3b34317225,0x373835315f305f74,0x6c3c2f2f200a3a34,0x6f6f4c203e706f6f\n"
".quad 0x6c2079646f622070,0x202c383720656e69,0x20676e697473656e,0x31203a6874706564\n"
".quad 0x616d69747365202c,0x7265746920646574,0x203a736e6f697461,0x0a6e776f6e6b6e75\n"
".quad 0x383109636f6c2e09,0x6d090a3009303809,0x09203233752e766f,0x3231202c36317225\n"
".quad 0x70746573090a3b37,0x203233732e74672e,0x7225202c32702509,0x3b36317225202c36\n"
".quad 0x622032702540090a,0x5f744c2409206172,0x3b30333136315f30,0x6f6f6c3c2f2f200a\n"
".quad 0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62,0x6568202c38372065\n"
".quad 0x6c6562616c206461,0x305f744c24206465,0x090a34373835315f,0x09383109636f6c2e\n"
".quad 0x756d090a30093535,0x3233752e6f6c2e6c,0x202c373172250920,0x0a3b38202c367225\n"
".quad 0x3233752e64646109,0x202c383172250920,0x7225202c37317225,0x662e646c090a3b32\n"
".quad 0x3164662509203436,0x2b383172255b202c,0x2e646c090a3b5d30,0x6466250920343666\n"
".quad 0x383172255b202c32,0x0a3b5d343230312b,0x3436662e64646109,0x202c336466250920\n"
".quad 0x6625202c31646625,0x2e7473090a3b3264,0x72255b0920343666,0x25202c5d302b3831\n"
".quad 0x6461090a3b336466,0x2509203233752e64,0x317225202c393172,0x0a3b347225202c37\n"
".quad 0x203436662e646c09,0x5b202c3464662509,0x3b5d302b39317225,0x3436662e646c090a\n"
".quad 0x202c356466250920,0x30312b393172255b,0x6461090a3b5d3432,0x2509203436662e64\n"
".quad 0x646625202c366466,0x3b35646625202c34,0x3436662e7473090a,0x2b393172255b0920\n"
".quad 0x36646625202c5d30,0x5f305f744c240a3b,0x200a3a3033313631,0x3e706f6f6c3c2f2f\n"
".quad 0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964,0x64616568202c3837\n"
".quad 0x64656c6562616c20,0x315f305f744c2420,0x6162090a34373835,0x0920636e79732e72\n"
".quad 0x2e766f6d090a3b30,0x3272250920323375,0x090a3b3336202c30,0x2e74672e70746573\n"
".quad 0x3370250920323373,0x25202c367225202c,0x2540090a3b303272,0x0920617262203370\n"
".quad 0x36315f305f744c24,0x2f2f200a3b323436,0x50203e706f6f6c3c,0x6c20666f20747261\n"
".quad 0x79646f6220706f6f,0x383720656e696c20,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x3835315f305f744c,0x636f6c2e090a3437,0x3009363509383109,0x6f6c2e6c756d090a\n"
".quad 0x722509203233752e,0x2c367225202c3731,0x646461090a3b3820,0x722509203233752e\n"
".quad 0x37317225202c3831,0x090a3b327225202c,0x09203436662e646c,0x255b202c37646625\n"
".quad 0x0a3b5d302b383172,0x203436662e646c09,0x5b202c3864662509,0x3231352b38317225\n"
".quad 0x2e646461090a3b5d,0x6466250920343666,0x2c37646625202c39,0x090a3b3864662520\n"
".quad 0x09203436662e7473,0x5d302b383172255b,0x0a3b39646625202c,0x3233752e64646109\n"
".quad 0x202c393172250920,0x7225202c37317225,0x662e646c090a3b34,0x3164662509203436\n"
".quad 0x393172255b202c30,0x646c090a3b5d302b,0x662509203436662e,0x72255b202c313164\n"
".quad 0x3b5d3231352b3931,0x36662e646461090a,0x3231646625092034,0x2c3031646625202c\n"
".quad 0x0a3b313164662520,0x203436662e747309,0x302b393172255b09,0x3231646625202c5d\n"
".quad 0x5f305f744c240a3b,0x200a3a3234363631,0x3e706f6f6c3c2f2f,0x666f207472615020\n"
".quad 0x6f6220706f6f6c20,0x20656e696c207964,0x64616568202c3837,0x64656c6562616c20\n"
".quad 0x315f305f744c2420,0x6162090a34373835,0x0920636e79732e72,0x2e766f6d090a3b30\n"
".quad 0x3272250920323375,0x090a3b3133202c31,0x2e74672e70746573,0x3470250920323373\n"
".quad 0x25202c367225202c,0x2540090a3b313272,0x0920617262203470,0x37315f305f744c24\n"
".quad 0x2f2f200a3b343531,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x383720656e696c20,0x6c2064616568202c,0x242064656c656261,0x3835315f305f744c\n"
".quad 0x636f6c2e090a3437,0x3009383509383109,0x6f6c2e6c756d090a,0x722509203233752e\n"
".quad 0x2c367225202c3731,0x646461090a3b3820,0x722509203233752e,0x37317225202c3831\n"
".quad 0x090a3b327225202c,0x09203436662e646c,0x5b202c3331646625,0x3b5d302b38317225\n"
".quad 0x3436662e646c090a,0x2c34316466250920,0x322b383172255b20,0x6461090a3b5d3635\n"
".quad 0x2509203436662e64,0x6625202c35316466,0x646625202c333164,0x2e7473090a3b3431\n"
".quad 0x72255b0920343666,0x25202c5d302b3831,0x61090a3b35316466,0x09203233752e6464\n"
".quad 0x7225202c39317225,0x3b347225202c3731,0x3436662e646c090a,0x2c36316466250920\n"
".quad 0x302b393172255b20,0x662e646c090a3b5d,0x3164662509203436,0x393172255b202c37\n"
".quad 0x090a3b5d3635322b,0x203436662e646461,0x202c383164662509,0x25202c3631646625\n"
".quad 0x73090a3b37316466,0x5b09203436662e74,0x2c5d302b39317225,0x0a3b383164662520\n"
".quad 0x37315f305f744c24,0x2f2f200a3a343531,0x50203e706f6f6c3c,0x6c20666f20747261\n"
".quad 0x79646f6220706f6f,0x383720656e696c20,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x3835315f305f744c,0x2e726162090a3437,0x3b300920636e7973,0x33752e766f6d090a\n"
".quad 0x2c32327225092032,0x6573090a3b353120,0x33732e74672e7074,0x202c357025092032\n"
".quad 0x327225202c367225,0x35702540090a3b32,0x4c24092061726220,0x363637315f305f74\n"
".quad 0x6c3c2f2f200a3b36,0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070\n"
".quad 0x202c383720656e69,0x62616c2064616568,0x744c242064656c65,0x34373835315f305f\n"
".quad 0x3109636f6c2e090a,0x090a300939350938,0x752e6f6c2e6c756d,0x3731722509203233\n"
".quad 0x38202c367225202c,0x752e646461090a3b,0x3831722509203233,0x202c37317225202c\n"
".quad 0x646c090a3b327225,0x662509203436662e,0x72255b202c393164,0x090a3b5d302b3831\n"
".quad 0x09203436662e646c,0x5b202c3032646625,0x3832312b38317225,0x2e646461090a3b5d\n"
".quad 0x6466250920343666,0x31646625202c3132,0x3032646625202c39,0x36662e7473090a3b\n"
".quad 0x383172255b092034,0x646625202c5d302b,0x646461090a3b3132,0x722509203233752e\n"
".quad 0x37317225202c3931,0x090a3b347225202c,0x09203436662e646c,0x5b202c3232646625\n"
".quad 0x3b5d302b39317225,0x3436662e646c090a,0x2c33326466250920,0x312b393172255b20\n"
".quad 0x6461090a3b5d3832,0x2509203436662e64,0x6625202c34326466,0x646625202c323264\n"
".quad 0x2e7473090a3b3332,0x72255b0920343666,0x25202c5d302b3931,0x4c240a3b34326466\n"
".quad 0x363637315f305f74,0x6c3c2f2f200a3a36,0x726150203e706f6f,0x6f6f6c20666f2074\n"
".quad 0x6c2079646f622070,0x202c383720656e69,0x62616c2064616568,0x744c242064656c65\n"
".quad 0x34373835315f305f,0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d\n"
".quad 0x37202c3332722509,0x2e70746573090a3b,0x09203233732e7467,0x367225202c367025\n"
".quad 0x0a3b33327225202c,0x7262203670254009,0x305f744c24092061,0x0a3b38373138315f\n"
".quad 0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f\n"
".quad 0x616568202c383720,0x656c6562616c2064,0x5f305f744c242064,0x2e090a3437383531\n"
".quad 0x3609383109636f6c,0x6c756d090a300930,0x203233752e6f6c2e,0x25202c3731722509\n"
".quad 0x090a3b38202c3672,0x203233752e646461,0x25202c3831722509,0x327225202c373172\n"
".quad 0x36662e646c090a3b,0x3532646625092034,0x2b383172255b202c,0x2e646c090a3b5d30\n"
".quad 0x6466250920343666,0x3172255b202c3632,0x090a3b5d34362b38,0x203436662e646461\n"
".quad 0x202c373264662509,0x25202c3532646625,0x73090a3b36326466,0x5b09203436662e74\n"
".quad 0x2c5d302b38317225,0x0a3b373264662520,0x3233752e64646109,0x202c393172250920\n"
".quad 0x7225202c37317225,0x662e646c090a3b34,0x3264662509203436,0x393172255b202c38\n"
".quad 0x646c090a3b5d302b,0x662509203436662e,0x72255b202c393264,0x0a3b5d34362b3931\n"
".quad 0x3436662e64646109,0x2c30336466250920,0x202c383264662520,0x090a3b3932646625\n"
".quad 0x09203436662e7473,0x5d302b393172255b,0x3b3033646625202c,0x315f305f744c240a\n"
".quad 0x2f200a3a38373138,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3720656e696c2079,0x2064616568202c38,0x2064656c6562616c,0x35315f305f744c24\n"
".quad 0x726162090a343738,0x300920636e79732e,0x752e766f6d090a3b,0x3432722509203233\n"
".quad 0x6573090a3b33202c,0x33732e74672e7074,0x202c377025092032,0x327225202c367225\n"
".quad 0x37702540090a3b34,0x4c24092061726220,0x393638315f305f74,0x6c3c2f2f200a3b30\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x202c383720656e69\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34373835315f305f,0x3109636f6c2e090a\n"
".quad 0x090a300931360938,0x752e6f6c2e6c756d,0x3731722509203233,0x38202c367225202c\n"
".quad 0x752e646461090a3b,0x3831722509203233,0x202c37317225202c,0x646c090a3b327225\n"
".quad 0x662509203436662e,0x72255b202c313364,0x090a3b5d302b3831,0x09203436662e646c\n"
".quad 0x5b202c3233646625,0x5d32332b38317225,0x662e646461090a3b,0x3364662509203436\n"
".quad 0x3133646625202c33,0x3b3233646625202c,0x3436662e7473090a,0x2b383172255b0920\n"
".quad 0x33646625202c5d30,0x2e646461090a3b33,0x3172250920323375,0x2c37317225202c39\n"
".quad 0x6c090a3b34722520,0x2509203436662e64,0x255b202c34336466,0x0a3b5d302b393172\n"
".quad 0x203436662e646c09,0x202c353364662509,0x32332b393172255b,0x2e646461090a3b5d\n"
".quad 0x6466250920343666,0x33646625202c3633,0x3533646625202c34,0x36662e7473090a3b\n"
".quad 0x393172255b092034,0x646625202c5d302b,0x5f744c240a3b3633,0x3a30393638315f30\n"
".quad 0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62\n"
".quad 0x6568202c38372065,0x6c6562616c206461,0x305f744c24206465,0x090a34373835315f\n"
".quad 0x636e79732e726162,0x6f6d090a3b300920,0x2509203233752e76,0x0a3b31202c353272\n"
".quad 0x74672e7074657309,0x702509203233732e,0x202c367225202c38,0x40090a3b35327225\n"
".quad 0x2061726220387025,0x315f305f744c2409,0x2f200a3b32303239,0x203e706f6f6c3c2f\n"
".quad 0x20666f2074726150,0x646f6220706f6f6c,0x3720656e696c2079,0x2064616568202c38\n"
".quad 0x2064656c6562616c,0x35315f305f744c24,0x6f6c2e090a343738,0x0932360938310963\n"
".quad 0x6c2e6c756d090a30,0x2509203233752e6f,0x367225202c373172,0x6461090a3b38202c\n"
".quad 0x2509203233752e64,0x317225202c383172,0x0a3b327225202c37,0x203436662e646c09\n"
".quad 0x202c373364662509,0x5d302b383172255b,0x36662e646c090a3b,0x3833646625092034\n"
".quad 0x2b383172255b202c,0x6461090a3b5d3631,0x2509203436662e64,0x6625202c39336466\n"
".quad 0x646625202c373364,0x2e7473090a3b3833,0x72255b0920343666,0x25202c5d302b3831\n"
".quad 0x61090a3b39336466,0x09203233752e6464,0x7225202c39317225,0x3b347225202c3731\n"
".quad 0x3436662e646c090a,0x2c30346466250920,0x302b393172255b20,0x662e646c090a3b5d\n"
".quad 0x3464662509203436,0x393172255b202c31,0x61090a3b5d36312b,0x09203436662e6464\n"
".quad 0x25202c3234646625,0x6625202c30346466,0x7473090a3b313464,0x255b09203436662e\n"
".quad 0x202c5d302b393172,0x240a3b3234646625,0x3239315f305f744c,0x3c2f2f200a3a3230\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x2c383720656e696c\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x373835315f305f74,0x732e726162090a34\n"
".quad 0x0a3b300920636e79,0x3233752e766f6d09,0x202c363272250920,0x70746573090a3b30\n"
".quad 0x203233732e74672e,0x7225202c39702509,0x3b36327225202c36,0x622039702540090a\n"
".quad 0x5f744c2409206172,0x3b34313739315f30,0x6f6f6c3c2f2f200a,0x2074726150203e70\n"
".quad 0x20706f6f6c20666f,0x6e696c2079646f62,0x6568202c38372065,0x6c6562616c206461\n"
".quad 0x305f744c24206465,0x090a34373835315f,0x09383109636f6c2e,0x756d090a30093336\n"
".quad 0x3233752e6f6c2e6c,0x202c373172250920,0x0a3b38202c367225,0x3233752e64646109\n"
".quad 0x202c383172250920,0x7225202c37317225,0x662e646c090a3b32,0x3464662509203436\n"
".quad 0x383172255b202c33,0x646c090a3b5d302b,0x662509203436662e,0x72255b202c343464\n"
".quad 0x090a3b5d382b3831,0x203436662e646461,0x202c353464662509,0x25202c3334646625\n"
".quad 0x73090a3b34346466,0x5b09203436662e74,0x2c5d302b38317225,0x0a3b353464662520\n"
".quad 0x3233752e64646109,0x202c393172250920,0x7225202c37317225,0x662e646c090a3b34\n"
".quad 0x3464662509203436,0x393172255b202c36,0x646c090a3b5d302b,0x662509203436662e\n"
".quad 0x72255b202c373464,0x090a3b5d382b3931,0x203436662e646461,0x202c383464662509\n"
".quad 0x25202c3634646625,0x73090a3b37346466,0x5b09203436662e74,0x2c5d302b39317225\n"
".quad 0x0a3b383464662520,0x39315f305f744c24,0x2f2f200a3a343137,0x50203e706f6f6c3c\n"
".quad 0x6c20666f20747261,0x79646f6220706f6f,0x383720656e696c20,0x6c2064616568202c\n"
".quad 0x242064656c656261,0x3835315f305f744c,0x2e726162090a3437,0x3b300920636e7973\n"
".quad 0x3109636f6c2e090a,0x090a300930380938,0x203233732e646461,0x7225202c36722509\n"
".quad 0x0a3b363532202c36,0x3233752e766f6d09,0x202c373272250920,0x6573090a3b353532\n"
".quad 0x33732e656c2e7074,0x2c30317025092032,0x7225202c36722520,0x702540090a3b3732\n"
".quad 0x0920617262203031,0x35315f305f744c24,0x744c240a3b343738,0x32363335315f305f\n"
".quad 0x09636f6c2e090a3a,0x0a30093139093831,0x4c240a3b74657209,0x5a5f5f646e655744\n"
".quad 0x756465526d757339,0x3532694c64496563,0x45363532694c4536,0x5f31535f54507645\n"
".quad 0x202f2f207d090a3a,0x65526d7573395a5f,0x694c644965637564,0x3532694c45363532\n"
".quad 0x535f545076454536,0x69762e090a0a5f31,0x662e20656c626973,0x61702e2820636e75\n"
".quad 0x3436662e206d6172,0x72616475635f5f20,0x33315a5f5f667465,0x43766e496f726f4d\n"
".quad 0x202964757067444e,0x6f726f4d33315a5f,0x7067444e43766e49,0x7261702e28206475\n"
".quad 0x203436662e206d61,0x6170616475635f5f,0x315a5f5f31666d72,0x766e496f726f4d33\n"
".quad 0x2964757067444e43,0x65722e090a7b090a,0x25203233752e2067,0x090a3b3e39393c72\n"
".quad 0x33662e206765722e,0x3e30313c66252032,0x206765722e090a3b,0x646625203436662e\n"
".quad 0x090a3b3e3837323c,0x72702e206765722e,0x30333c7025206465,0x636f6c2e090a3b3e\n"
".quad 0x3009393909393109,0x67656257444c240a,0x4d33315a5f5f6e69,0x4e43766e496f726f\n"
".quad 0x090a3a6475706744,0x6d617261702e646c,0x662509203436662e,0x635f5f5b202c3164\n"
".quad 0x666d726170616475,0x6f4d33315a5f5f31,0x444e43766e496f72,0x090a3b5d64757067\n"
".quad 0x203436662e766f6d,0x25202c3264662509,0x6f6d090a3b316466,0x2509203436662e76\n"
".quad 0x336430202c336466,0x3030303030306666,0x3b30303030303030,0x73090a31202f2f09\n"
".quad 0x33752e65672e7465,0x2509203436662e32,0x32646625202c3172,0x0a3b33646625202c\n"
".quad 0x3233732e67656e09,0x25202c3272250920,0x766f6d090a3b3172,0x662509203436662e\n"
".quad 0x30306430202c3464,0x3030303030303030,0x093b303030303030,0x6573090a30202f2f\n"
".quad 0x3233752e656c2e74,0x722509203436662e,0x2c32646625202c33,0x090a3b3464662520\n"
".quad 0x203233732e67656e,0x7225202c34722509,0x622e726f090a3b33,0x2c35722509203233\n"
".quad 0x7225202c32722520,0x2e766f6d090a3b34,0x3672250920323375,0x6573090a3b30202c\n"
".quad 0x33732e71652e7074,0x202c317025092032,0x367225202c357225,0x2031702540090a3b\n"
".quad 0x744c240920617262,0x34313136325f315f,0x09636f6c2e090a3b,0x3009303231093931\n"
".quad 0x36662e766f6d090a,0x2c35646625092034,0x3038666666643020,0x3030303030303030\n"
".quad 0x202f2f093b303030,0x7262090a6e616e2d,0x240920696e752e61,0x5a5f5f363642424c\n"
".quad 0x6e496f726f4d3331,0x64757067444e4376,0x5f315f744c240a3b,0x090a3a3431313632\n"
".quad 0x203436662e766f6d,0x30202c3664662509,0x3030303065666264,0x3030303030303030\n"
".quad 0x302d202f2f093b30,0x2e646461090a352e,0x6466250920343666,0x2c32646625202c37\n"
".quad 0x090a3b3664662520,0x203436662e736261,0x25202c3864662509,0x6f6d090a3b376466\n"
".quad 0x2509203436662e76,0x336430202c396466,0x6137343165616466,0x3b31656137343165\n"
".quad 0x32342e30202f2f09,0x6c2e70746573090a,0x2509203436662e74,0x38646625202c3270\n"
".quad 0x0a3b39646625202c,0x6220327025214009,0x5f744c2409206172,0x3b32383836325f31\n"
".quad 0x3109636f6c2e090a,0x0a30093532310939,0x3436662e6c756d09,0x2c30316466250920\n"
".quad 0x25202c3764662520,0x6f6d090a3b376466,0x2509203436662e76,0x6430202c31316466\n"
".quad 0x3339643034303034,0x6430323638326231,0x352e32202f2f093b,0x6f6d090a33363630\n"
".quad 0x2509203436662e76,0x6430202c32316466,0x3037643932333063,0x6564336134356561\n"
".quad 0x38312d202f2f093b,0x6f6d090a3531362e,0x2509203436662e76,0x6430202c33316466\n"
".quad 0x3231326234343034,0x6366366333373463,0x2e3134202f2f093b,0x6f6d090a32313933\n"
".quad 0x2509203436662e76,0x6430202c34316466,0x3965303739333063,0x3837373737333735\n"
".quad 0x35322d202f2f093b,0x6d090a313134342e,0x36662e6e722e6461,0x3531646625092034\n"
".quad 0x2c3431646625202c,0x202c303164662520,0x090a3b3331646625,0x662e6e722e64616d\n"
".quad 0x3164662509203436,0x3031646625202c36,0x2c3531646625202c,0x0a3b323164662520\n"
".quad 0x2e6e722e64616d09,0x6466250920343666,0x31646625202c3731,0x3631646625202c30\n"
".quad 0x3b3131646625202c,0x36662e6c756d090a,0x3831646625092034,0x202c37646625202c\n"
".quad 0x090a3b3731646625,0x203436662e766f6d,0x202c393164662509,0x3030306666336430\n"
".quad 0x3030303030303030,0x31202f2f093b3030,0x36662e766f6d090a,0x3032646625092034\n"
".quad 0x303230636430202c,0x3535363030373266,0x2f2f093b64323730,0x353337342e382d20\n"
".quad 0x662e766f6d090a31,0x3264662509203436,0x3330346430202c31,0x3831393735353137\n"
".quad 0x2f093b6332303531,0x3338302e3332202f,0x662e766f6d090a34,0x3264662509203436\n"
".quad 0x3330636430202c32,0x3037306665663035,0x2f093b6437356531,0x36302e31322d202f\n"
".quad 0x2e766f6d090a3232,0x6466250920343666,0x30346430202c3332,0x3032306662303930\n"
".quad 0x093b373461383535,0x3033312e33202f2f,0x2e64616d090a3338,0x09203436662e6e72\n"
".quad 0x25202c3432646625,0x6625202c33326466,0x646625202c303164,0x64616d090a3b3232\n"
".quad 0x203436662e6e722e,0x202c353264662509,0x25202c3031646625,0x6625202c34326466\n"
".quad 0x616d090a3b313264,0x3436662e6e722e64,0x2c36326466250920,0x202c303164662520\n"
".quad 0x25202c3532646625,0x6d090a3b30326466,0x36662e6e722e6461,0x3732646625092034\n"
".quad 0x2c3031646625202c,0x202c363264662520,0x090a3b3931646625,0x662e6e722e766964\n"
".quad 0x3264662509203436,0x3831646625202c38,0x3b3732646625202c,0x6e752e617262090a\n"
".quad 0x315f744c24092069,0x0a3b36323636325f,0x36325f315f744c24,0x6f6d090a3a323838\n"
".quad 0x2509203436662e76,0x6430202c39326466,0x3030303030303030,0x3030303030303030\n"
".quad 0x090a30202f2f093b,0x2e74672e70746573,0x3370250920343666,0x202c37646625202c\n"
".quad 0x090a3b3932646625,0x7262203370252140,0x315f744c24092061,0x0a3b34393337325f\n"
".quad 0x313309636f6c2e09,0x090a300932393409,0x203436662e766f6d,0x202c303364662509\n"
".quad 0x3030306666336430,0x3030303030303030,0x31202f2f093b3030,0x36662e627573090a\n"
".quad 0x3133646625092034,0x2c3033646625202c,0x090a3b3264662520,0x203436622e766f6d\n"
".quad 0x72252c3772257b09,0x33646625202c7d38,0x2e766f6d090a3b31,0x3972250920323373\n"
".quad 0x090a3b387225202c,0x09313309636f6c2e,0x6d090a3009333934,0x09203436622e766f\n"
".quad 0x72252c303172257b,0x646625202c7d3131,0x6f6c2e090a3b3133,0x3539340931330963\n"
".quad 0x2e766f6d090a3009,0x6466250920343666,0x30306430202c3233,0x3030303030303030\n"
".quad 0x093b303030303030,0x6573090a30202f2f,0x3233752e74672e74,0x722509203436662e\n"
".quad 0x33646625202c3231,0x3233646625202c31,0x732e67656e090a3b,0x3331722509203233\n"
".quad 0x0a3b32317225202c,0x3436662e766f6d09,0x2c33336466250920,0x3030666637643020\n"
".quad 0x3030303030303030,0x202f2f093b303030,0x746573090a666e69,0x2e3233752e746c2e\n"
".quad 0x3172250920343666,0x3133646625202c34,0x3b3333646625202c,0x33732e67656e090a\n"
".quad 0x2c35317225092032,0x090a3b3431722520,0x203233622e646e61,0x25202c3631722509\n"
".quad 0x317225202c333172,0x2e766f6d090a3b35,0x3172250920323375,0x73090a3b30202c37\n"
".quad 0x732e71652e707465,0x2c34702509203233,0x25202c3631722520,0x2540090a3b373172\n"
".quad 0x0920617262203470,0x38315f315f744c24,0x6f6d090a3b303936,0x2509203233752e76\n"
".quad 0x343031202c383172,0x73090a3b35373538,0x752e74672e707465,0x2c35702509203233\n"
".quad 0x7225202c38722520,0x702540090a3b3831,0x2409206172622035,0x3937325f315f744c\n"
".quad 0x6f6c2e090a3b3630,0x3130350931330963,0x2e766f6d090a3009,0x6466250920343666\n"
".quad 0x33346430202c3433,0x3030303030303035,0x093b303030303030,0x3130382e31202f2f\n"
".quad 0x090a36312b653434,0x203436662e6c756d,0x202c353364662509,0x25202c3133646625\n"
".quad 0x6d090a3b34336466,0x09203436622e766f,0x72252c393172257b,0x33646625202c7d39\n"
".quad 0x636f6c2e090a3b35,0x0932303509313309,0x622e766f6d090a30,0x3172257b09203436\n"
".quad 0x2c7d303272252c30,0x0a3b353364662520,0x3233732e766f6d09,0x202c313272250920\n"
".quad 0x090a3b373730312d,0x20696e752e617262,0x325f315f744c2409,0x4c240a3b30353637\n"
".quad 0x303937325f315f74,0x2e766f6d090a3a36,0x3272250920323373,0x333230312d202c31\n"
".quad 0x5f315f744c240a3b,0x090a3a3035363732,0x09313309636f6c2e,0x73090a3009373035\n"
".quad 0x09203233732e7268,0x7225202c32327225,0x090a3b3032202c39,0x203233732e646461\n"
".quad 0x25202c3132722509,0x327225202c313272,0x636f6c2e090a3b32,0x0939303509313309\n"
".quad 0x622e646e61090a30,0x3332722509203233,0x2d202c397225202c,0x3035333436343132\n"
".quad 0x2e726f090a3b3337,0x3272250920323362,0x2c33327225202c34,0x3339363237303120\n"
".quad 0x6f6d090a3b383432,0x2509203436622e76,0x257b202c36336466,0x343272252c303172\n"
".quad 0x2e766f6d090a3b7d,0x3272250920323375,0x3133373031202c35,0x090a3b3238353732\n"
".quad 0x2e656c2e70746573,0x3670250920323375,0x202c34327225202c,0x40090a3b35327225\n"
".quad 0x2061726220367025,0x325f315f744c2409,0x2e090a3b32363138,0x3509313309636f6c\n"
".quad 0x6f6d090a30093131,0x7b09203436622e76,0x3272252c36327225,0x33646625202c7d37\n"
".quad 0x2e627573090a3b36,0x3272250920323373,0x2c37327225202c38,0x3637353834303120\n"
".quad 0x622e766f6d090a3b,0x3272257b09203436,0x2c7d303372252c39,0x0a3b363364662520\n"
".quad 0x3436622e766f6d09,0x2c36336466250920,0x252c393272257b20,0x2e090a3b7d383272\n"
".quad 0x3509313309636f6c,0x6461090a30093231,0x2509203233732e64,0x327225202c313272\n"
".quad 0x4c240a3b31202c31,0x363138325f315f74,0x636f6c2e090a3a32,0x0938313509313309\n"
".quad 0x662e766f6d090a30,0x3364662509203436,0x6666626430202c37,0x3030303030303030\n"
".quad 0x2f093b3030303030,0x6461090a312d202f,0x2509203436662e64,0x6625202c38336466\n"
".quad 0x646625202c363364,0x766f6d090a3b3733,0x662509203436662e,0x336430202c393364\n"
".quad 0x3030303030306666,0x3b30303030303030,0x61090a31202f2f09,0x09203436662e6464\n"
".quad 0x25202c3034646625,0x6625202c36336466,0x7663090a3b393364,0x3233662e6e722e74\n"
".quad 0x662509203436662e,0x3034646625202c31,0x722e706372090a3b,0x2509203233662e6e\n"
".quad 0x3b316625202c3266,0x36662e747663090a,0x2509203233662e34,0x6625202c31346466\n"
".quad 0x2e67656e090a3b32,0x6466250920343666,0x34646625202c3234,0x2e766f6d090a3b30\n"
".quad 0x6466250920343666,0x66336430202c3334,0x3030303030303066,0x093b303030303030\n"
".quad 0x616d090a31202f2f,0x3436662e6e722e64,0x2c34346466250920,0x202c323464662520\n"
".quad 0x25202c3134646625,0x6d090a3b33346466,0x36662e6e722e6461,0x3534646625092034\n"
".quad 0x2c3434646625202c,0x202c343464662520,0x090a3b3434646625,0x662e6e722e64616d\n"
".quad 0x3464662509203436,0x3534646625202c36,0x2c3134646625202c,0x0a3b313464662520\n"
".quad 0x3436662e6c756d09,0x2c37346466250920,0x202c383364662520,0x090a3b3634646625\n"
".quad 0x09313309636f6c2e,0x61090a3009383235,0x09203436662e6464,0x25202c3834646625\n"
".quad 0x6625202c37346466,0x756d090a3b373464,0x2509203436662e6c,0x6625202c39346466\n"
".quad 0x646625202c383464,0x766f6d090a3b3834,0x662509203436662e,0x336430202c303564\n"
".quad 0x3362303833316265,0x3b65316630386561,0x32302e31202f2f09,0x0a36302d65333336\n"
".quad 0x3436662e766f6d09,0x2c31356466250920,0x6530646533643020,0x3861376238353265\n"
".quad 0x202f2f093b343062,0x6539343633302e34,0x64616d090a36302d,0x203436662e6e722e\n"
".quad 0x202c323564662509,0x25202c3035646625,0x6625202c39346466,0x6f6d090a3b313564\n"
".quad 0x2509203436662e76,0x6430202c33356466,0x3636326233666533,0x6636373632306639\n"
".quad 0x382e31202f2f093b,0x35302d6534343837,0x6e722e64616d090a,0x662509203436662e\n"
".quad 0x646625202c343564,0x34646625202c3235,0x3335646625202c39,0x662e766f6d090a3b\n"
".quad 0x3564662509203436,0x3166336430202c35,0x6139616263353437,0x2f093b3635393062\n"
".quad 0x383737382e38202f,0x6d090a35302d6531,0x36662e6e722e6461,0x3635646625092034\n"
".quad 0x2c3435646625202c,0x202c393464662520,0x090a3b3535646625,0x203436662e766f6d\n"
".quad 0x202c373564662509,0x3137633366336430,0x3135623164323763,0x30202f2f093b3435\n"
".quad 0x303433343030302e,0x2e64616d090a3832,0x09203436662e6e72,0x25202c3835646625\n"
".quad 0x6625202c36356466,0x646625202c393464,0x766f6d090a3b3735,0x662509203436662e\n"
".quad 0x336430202c393564,0x3934323934323666,0x3b64323765623332,0x30302e30202f2f09\n"
".quad 0x090a343132333232,0x662e6e722e64616d,0x3664662509203436,0x3835646625202c30\n"
".quad 0x2c3934646625202c,0x0a3b393564662520,0x3436662e766f6d09,0x2c31366466250920\n"
".quad 0x3939386633643020,0x6139393939393939,0x202f2f093b346333,0x090a353231302e30\n"
".quad 0x662e6e722e64616d,0x3664662509203436,0x3036646625202c32,0x2c3934646625202c\n"
".quad 0x0a3b313664662520,0x313309636f6c2e09,0x090a300939323509,0x203436662e766f6d\n"
".quad 0x202c333664662509,0x3535356266336430,0x3535353535353535,0x30202f2f093b3435\n"
".quad 0x333333333338302e,0x6e722e64616d090a,0x662509203436662e,0x646625202c343664\n"
".quad 0x34646625202c3236,0x3336646625202c39,0x09636f6c2e090a3b,0x3009323335093133\n"
".quad 0x36662e627573090a,0x3536646625092034,0x2c3833646625202c,0x0a3b383464662520\n"
".quad 0x3436662e67656e09,0x2c36366466250920,0x0a3b383464662520,0x3436662e64646109\n"
".quad 0x2c37366466250920,0x202c353664662520,0x090a3b3536646625,0x662e6e722e64616d\n"
".quad 0x3664662509203436,0x3636646625202c38,0x2c3833646625202c,0x0a3b373664662520\n"
".quad 0x3436662e6c756d09,0x2c39366466250920,0x202c363464662520,0x090a3b3836646625\n"
".quad 0x09313309636f6c2e,0x6d090a3009353335,0x09203436662e6c75,0x25202c3037646625\n"
".quad 0x6625202c39346466,0x756d090a3b343664,0x2509203436662e6c,0x6625202c31376466\n"
".quad 0x646625202c383464,0x6f6c2e090a3b3037,0x3634350931330963,0x2e747663090a3009\n"
".quad 0x732e3436662e6e72,0x3764662509203233,0x3b31327225202c32,0x36662e766f6d090a\n"
".quad 0x3337646625092034,0x366566336430202c,0x6166656632346532,0x2f2f093b66653933\n"
".quad 0x34313339362e3020,0x722e64616d090a37,0x2509203436662e6e,0x6625202c34376466\n"
".quad 0x646625202c323764,0x34646625202c3337,0x2e766f6d090a3b38,0x6466250920343666\n"
".quad 0x63336430202c3537,0x6233653963626137,0x093b663330383933,0x3931332e32202f2f\n"
".quad 0x090a37312d653530,0x203436662e646461,0x202c363764662509,0x25202c3137646625\n"
".quad 0x6e090a3b39366466,0x09203233732e6765,0x7225202c31337225,0x747663090a3b3132\n"
".quad 0x2e3436662e6e722e,0x6466250920323373,0x31337225202c3737,0x662e766f6d090a3b\n"
".quad 0x3764662509203436,0x6566336430202c38,0x6665663234653236,0x2f093b6665393361\n"
".quad 0x313339362e30202f,0x2e64616d090a3734,0x09203436662e6e72,0x25202c3937646625\n"
".quad 0x6625202c37376466,0x646625202c383764,0x627573090a3b3437,0x662509203436662e\n"
".quad 0x646625202c303864,0x34646625202c3937,0x2e627573090a3b38,0x6466250920343666\n"
".quad 0x37646625202c3138,0x3038646625202c36,0x722e64616d090a3b,0x2509203436662e6e\n"
".quad 0x6625202c32386466,0x646625202c323764,0x38646625202c3537,0x2e646461090a3b31\n"
".quad 0x6466250920343666,0x37646625202c3338,0x3238646625202c34,0x752e617262090a3b\n"
".quad 0x57444c240920696e,0x695f5f5f69646e65,0x5f6c616e7265746e,0x3937315f666c6168\n"
".quad 0x5f744c240a3b355f,0x3a30393638315f31,0x3309636f6c2e090a,0x0a30093834350931\n"
".quad 0x3436662e73626109,0x2c34386466250920,0x0a3b313364662520,0x3436662e766f6d09\n"
".quad 0x2c35386466250920,0x3030666637643020,0x3030303030303030,0x202f2f093b303030\n"
".quad 0x746573090a666e69,0x3436662e656c2e70,0x25202c3770250920,0x6625202c34386466\n"
".quad 0x2540090a3b353864,0x0920617262203770,0x38325f315f744c24,0x6c2e090a3b343736\n"
".quad 0x343509313309636f,0x646461090a300939,0x662509203436662e,0x646625202c333864\n"
".quad 0x33646625202c3133,0x2e617262090a3b31,0x444c240920696e75,0x5f5f5f69646e6557\n"
".quad 0x6c616e7265746e69,0x37315f666c61685f,0x744c240a3b355f39,0x34373638325f315f\n"
".quad 0x662e766f6d090a3a,0x3864662509203436,0x3030306430202c36,0x3030303030303030\n"
".quad 0x2f093b3030303030,0x746573090a30202f,0x3436662e71652e70,0x25202c3870250920\n"
".quad 0x6625202c31336466,0x2140090a3b363864,0x2061726220387025,0x325f315f744c2409\n"
".quad 0x2e090a3b36383139,0x3509313309636f6c,0x6f6d090a30093335,0x2509203436662e76\n"
".quad 0x6430202c33386466,0x3030303030666666,0x3030303030303030,0x6e692d202f2f093b\n"
".quad 0x752e617262090a66,0x57444c240920696e,0x695f5f5f69646e65,0x5f6c616e7265746e\n"
".quad 0x3937315f666c6168,0x5f744c240a3b355f,0x3a36383139325f31,0x36662e766f6d090a\n"
".quad 0x3738646625092034,0x306666376430202c,0x3030303030303030,0x2f2f093b30303030\n"
".quad 0x6573090a666e6920,0x36662e71652e7074,0x202c397025092034,0x25202c3133646625\n"
".quad 0x40090a3b37386466,0x6172622039702521,0x5f315f744c240920,0x090a3b3839363932\n"
".quad 0x09313309636f6c2e,0x6d090a3009373535,0x09203436662e766f,0x25202c3338646625\n"
".quad 0x62090a3b31336466,0x0920696e752e6172,0x69646e6557444c24,0x7265746e695f5f5f\n"
".quad 0x666c61685f6c616e,0x0a3b355f3937315f,0x39325f315f744c24,0x6c2e090a3a383936\n"
".quad 0x363509313309636f,0x766f6d090a300930,0x662509203436662e,0x666430202c333864\n"
".quad 0x3030303030386666,0x3b30303030303030,0x6e616e2d202f2f09,0x646e6557444c240a\n"
".quad 0x65746e695f5f5f69,0x6c61685f6c616e72,0x3a355f3937315f66,0x3309636f6c2e090a\n"
".quad 0x0a30093239340931,0x3436662e67656e09,0x2c38386466250920,0x0a3b333864662520\n"
".quad 0x3436622e766f6d09,0x2c323372257b0920,0x25202c7d33337225,0x6d090a3b38386466\n"
".quad 0x09203233732e766f,0x337225202c397225,0x636f6c2e090a3b33,0x0933393409313309\n"
".quad 0x622e766f6d090a30,0x3172257b09203436,0x2c7d343372252c30,0x0a3b383864662520\n"
".quad 0x313309636f6c2e09,0x090a300935393409,0x203436662e766f6d,0x202c393864662509\n"
".quad 0x3030303030306430,0x3030303030303030,0x30202f2f093b3030,0x74672e746573090a\n"
".quad 0x3436662e3233752e,0x202c353372250920,0x25202c3838646625,0x6e090a3b39386466\n"
".quad 0x09203233732e6765,0x7225202c36337225,0x766f6d090a3b3533,0x662509203436662e\n"
".quad 0x376430202c303964,0x3030303030306666,0x3b30303030303030,0x0a666e69202f2f09\n"
".quad 0x2e746c2e74657309,0x203436662e323375,0x25202c3733722509,0x6625202c38386466\n"
".quad 0x656e090a3b303964,0x2509203233732e67,0x337225202c383372,0x2e646e61090a3b37\n"
".quad 0x3372250920323362,0x2c36337225202c39,0x090a3b3833722520,0x203233752e766f6d\n"
".quad 0x30202c3034722509,0x2e70746573090a3b,0x09203233732e7165,0x7225202c30317025\n"
".quad 0x30347225202c3933,0x3031702540090a3b,0x4c24092061726220,0x323230325f315f74\n"
".quad 0x2e766f6d090a3b36,0x3472250920323375,0x3538343031202c31,0x746573090a3b3537\n"
".quad 0x3233752e74672e70,0x202c313170250920,0x7225202c33337225,0x702540090a3b3134\n"
".quad 0x0920617262203131,0x30335f315f744c24,0x6c2e090a3b363634,0x303509313309636f\n"
".quad 0x766f6d090a300931,0x662509203436662e,0x346430202c313964,0x3030303030303533\n"
".quad 0x3b30303030303030,0x30382e31202f2f09,0x0a36312b65343431,0x3436662e6c756d09\n"
".quad 0x2c32396466250920,0x202c383864662520,0x090a3b3139646625,0x203436622e766f6d\n"
".quad 0x252c323472257b09,0x646625202c7d3972,0x6f6c2e090a3b3239,0x3230350931330963\n"
".quad 0x2e766f6d090a3009,0x72257b0920343662,0x7d333472252c3031,0x3b3239646625202c\n"
".quad 0x33732e766f6d090a,0x2c31327225092032,0x0a3b373730312d20,0x696e752e61726209\n"
".quad 0x5f315f744c240920,0x240a3b3031323033,0x3430335f315f744c,0x766f6d090a3a3636\n"
".quad 0x722509203233732e,0x3230312d202c3132,0x315f744c240a3b33,0x0a3a30313230335f\n"
".quad 0x313309636f6c2e09,0x090a300937303509,0x203233732e726873,0x25202c3434722509\n"
".quad 0x0a3b3032202c3972,0x3233732e64646109,0x202c313272250920,0x7225202c31327225\n"
".quad 0x6f6c2e090a3b3434,0x3930350931330963,0x2e646e61090a3009,0x3472250920323362\n"
".quad 0x202c397225202c35,0x353334363431322d,0x726f090a3b333730,0x722509203233622e\n"
".quad 0x35347225202c3634,0x393632373031202c,0x6d090a3b38343233,0x09203436622e766f\n"
".quad 0x7b202c3633646625,0x3472252c30317225,0x766f6d090a3b7d36,0x722509203233752e\n"
".quad 0x33373031202c3734,0x0a3b323835373231,0x656c2e7074657309,0x702509203233752e\n"
".quad 0x36347225202c3231,0x0a3b37347225202c,0x6220323170254009,0x5f744c2409206172\n"
".quad 0x3b32323730335f31,0x3309636f6c2e090a,0x0a30093131350931,0x3436622e766f6d09\n"
".quad 0x2c383472257b0920,0x25202c7d39347225,0x73090a3b36336466,0x09203233732e6275\n"
".quad 0x7225202c30357225,0x38343031202c3934,0x6f6d090a3b363735,0x7b09203436622e76\n"
".quad 0x3572252c31357225,0x33646625202c7d32,0x2e766f6d090a3b36,0x6466250920343662\n"
".quad 0x3572257b202c3633,0x3b7d303572252c31,0x3309636f6c2e090a,0x0a30093231350931\n"
".quad 0x3233732e64646109,0x202c313272250920,0x3b31202c31327225,0x335f315f744c240a\n"
".quad 0x2e090a3a32323730,0x3509313309636f6c,0x6f6d090a30093831,0x2509203436662e76\n"
".quad 0x6430202c33396466,0x3030303030666662,0x3030303030303030,0x0a312d202f2f093b\n"
".quad 0x3436662e64646109,0x2c34396466250920,0x202c363364662520,0x090a3b3339646625\n"
".quad 0x203436662e766f6d,0x202c353964662509,0x3030306666336430,0x3030303030303030\n"
".quad 0x31202f2f093b3030,0x36662e646461090a,0x3639646625092034,0x2c3633646625202c\n"
".quad 0x0a3b353964662520,0x2e6e722e74766309,0x203436662e323366,0x6625202c33662509\n"
".quad 0x6372090a3b363964,0x3233662e6e722e70,0x25202c3466250920,0x747663090a3b3366\n"
".quad 0x3233662e3436662e,0x2c37396466250920,0x6e090a3b34662520,0x09203436662e6765\n"
".quad 0x25202c3839646625,0x6d090a3b36396466,0x09203436662e766f,0x30202c3939646625\n"
".quad 0x3030303066663364,0x3030303030303030,0x0a31202f2f093b30,0x2e6e722e64616d09\n"
".quad 0x6466250920343666,0x646625202c303031,0x39646625202c3839,0x3939646625202c37\n"
".quad 0x722e64616d090a3b,0x2509203436662e6e,0x25202c3130316466,0x25202c3030316466\n"
".quad 0x25202c3030316466,0x090a3b3030316466,0x662e6e722e64616d,0x3164662509203436\n"
".quad 0x31646625202c3230,0x39646625202c3130,0x3739646625202c37,0x662e6c756d090a3b\n"
".quad 0x3164662509203436,0x39646625202c3330,0x3031646625202c34,0x636f6c2e090a3b32\n"
".quad 0x0938323509313309,0x662e646461090a30,0x3164662509203436,0x31646625202c3430\n"
".quad 0x31646625202c3330,0x6c756d090a3b3330,0x662509203436662e,0x6625202c35303164\n"
".quad 0x6625202c34303164,0x6d090a3b34303164,0x09203436662e766f,0x202c363031646625\n"
".quad 0x3833316265336430,0x6630386561336230,0x31202f2f093b6531,0x2d6533333632302e\n"
".quad 0x2e766f6d090a3630,0x6466250920343666,0x336430202c373031,0x3835326565306465\n"
".quad 0x3b34306238613762,0x33302e34202f2f09,0x0a36302d65393436,0x2e6e722e64616d09\n"
".quad 0x6466250920343666,0x646625202c383031,0x646625202c363031,0x646625202c353031\n"
".quad 0x6f6d090a3b373031,0x2509203436662e76,0x30202c3930316466,0x3632623366653364\n"
".quad 0x3637363230663936,0x2e31202f2f093b66,0x302d653434383738,0x722e64616d090a35\n"
".quad 0x2509203436662e6e,0x25202c3031316466,0x25202c3830316466,0x25202c3530316466\n"
".quad 0x090a3b3930316466,0x203436662e766f6d,0x2c31313164662509,0x3437316633643020\n"
".quad 0x3062613961626335,0x202f2f093b363539,0x6531383737382e38,0x64616d090a35302d\n"
".quad 0x203436662e6e722e,0x2c32313164662509,0x2c30313164662520,0x2c35303164662520\n"
".quad 0x3b31313164662520,0x36662e766f6d090a,0x3131646625092034,0x3366336430202c33\n"
".quad 0x3164323763313763,0x2f093b3435313562,0x343030302e30202f,0x6d090a3832303433\n"
".quad 0x36662e6e722e6461,0x3131646625092034,0x3131646625202c34,0x3031646625202c32\n"
".quad 0x3131646625202c35,0x2e766f6d090a3b33,0x6466250920343666,0x336430202c353131\n"
".quad 0x3934323934323666,0x3b64323765623332,0x30302e30202f2f09,0x090a343132333232\n"
".quad 0x662e6e722e64616d,0x3164662509203436,0x31646625202c3631,0x31646625202c3431\n"
".quad 0x31646625202c3530,0x766f6d090a3b3531,0x662509203436662e,0x6430202c37313164\n"
".quad 0x3939393939386633,0x3463336139393939,0x302e30202f2f093b,0x64616d090a353231\n"
".quad 0x203436662e6e722e,0x2c38313164662509,0x2c36313164662520,0x2c35303164662520\n"
".quad 0x3b37313164662520,0x3309636f6c2e090a,0x0a30093932350931,0x3436662e766f6d09\n"
".quad 0x3931316466250920,0x356266336430202c,0x3535353535353535,0x2f2f093b34353535\n"
".quad 0x33333338302e3020,0x2e64616d090a3333,0x09203436662e6e72,0x202c303231646625\n"
".quad 0x202c383131646625,0x202c353031646625,0x0a3b393131646625,0x313309636f6c2e09\n"
".quad 0x090a300932333509,0x203436662e627573,0x2c31323164662509,0x202c343964662520\n"
".quad 0x0a3b343031646625,0x3436662e67656e09,0x3232316466250920,0x343031646625202c\n"
".quad 0x662e646461090a3b,0x3164662509203436,0x31646625202c3332,0x31646625202c3132\n"
".quad 0x64616d090a3b3132,0x203436662e6e722e,0x2c34323164662509,0x2c32323164662520\n"
".quad 0x202c343964662520,0x0a3b333231646625,0x3436662e6c756d09,0x3532316466250920\n"
".quad 0x323031646625202c,0x343231646625202c,0x09636f6c2e090a3b,0x3009353335093133\n"
".quad 0x36662e6c756d090a,0x3231646625092034,0x3031646625202c36,0x3231646625202c35\n"
".quad 0x2e6c756d090a3b30,0x6466250920343666,0x646625202c373231,0x646625202c343031\n"
".quad 0x6c2e090a3b363231,0x343509313309636f,0x747663090a300936,0x2e3436662e6e722e\n"
".quad 0x6466250920323373,0x327225202c383231,0x2e766f6d090a3b31,0x6466250920343666\n"
".quad 0x336430202c393231,0x6632346532366566,0x3b66653933616665,0x39362e30202f2f09\n"
".quad 0x616d090a37343133,0x3436662e6e722e64,0x3033316466250920,0x383231646625202c\n"
".quad 0x393231646625202c,0x343031646625202c,0x662e766f6d090a3b,0x3164662509203436\n"
".quad 0x63336430202c3133,0x6233653963626137,0x093b663330383933,0x3931332e32202f2f\n"
".quad 0x090a37312d653530,0x203436662e646461,0x2c32333164662509,0x2c37323164662520\n"
".quad 0x3b35323164662520,0x33732e67656e090a,0x2c33357225092032,0x090a3b3132722520\n"
".quad 0x662e6e722e747663,0x09203233732e3436,0x202c333331646625,0x6d090a3b33357225\n"
".quad 0x09203436662e766f,0x202c343331646625,0x6532366566336430,0x3933616665663234\n"
".quad 0x30202f2f093b6665,0x0a3734313339362e,0x2e6e722e64616d09,0x6466250920343666\n"
".quad 0x646625202c353331,0x646625202c333331,0x646625202c343331,0x7573090a3b303331\n"
".quad 0x2509203436662e62,0x25202c3633316466,0x25202c3533316466,0x090a3b3430316466\n"
".quad 0x203436662e627573,0x2c37333164662509,0x2c32333164662520,0x3b36333164662520\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x6625202c38333164,0x6625202c38323164\n"
".quad 0x6625202c31333164,0x61090a3b37333164,0x09203436662e6464,0x202c393331646625\n"
".quad 0x202c303331646625,0x0a3b383331646625,0x696e752e61726209,0x6e6557444c240920\n"
".quad 0x746e695f5f5f6964,0x61685f6c616e7265,0x375f3937315f666c,0x5f315f744c240a3b\n"
".quad 0x090a3a3632323032,0x09313309636f6c2e,0x61090a3009383435,0x09203436662e7362\n"
".quad 0x202c303431646625,0x090a3b3338646625,0x203436662e766f6d,0x2c31343164662509\n"
".quad 0x3030666637643020,0x3030303030303030,0x202f2f093b303030,0x746573090a666e69\n"
".quad 0x3436662e656c2e70,0x202c333170250920,0x202c303431646625,0x0a3b313431646625\n"
".quad 0x6220333170254009,0x5f744c2409206172,0x3b34333231335f31,0x3309636f6c2e090a\n"
".quad 0x0a30093934350931,0x3436662e64646109,0x3234316466250920,0x2c3338646625202c\n"
".quad 0x0a3b333864662520,0x3436662e67656e09,0x3933316466250920,0x323431646625202c\n"
".quad 0x752e617262090a3b,0x57444c240920696e,0x695f5f5f69646e65,0x5f6c616e7265746e\n"
".quad 0x3937315f666c6168,0x5f744c240a3b375f,0x3a34333231335f31,0x36662e766f6d090a\n"
".quad 0x3431646625092034,0x3030306430202c33,0x3030303030303030,0x2f093b3030303030\n"
".quad 0x746573090a30202f,0x3436662e71652e70,0x202c343170250920,0x25202c3838646625\n"
".quad 0x090a3b3334316466,0x6220343170252140,0x5f744c2409206172,0x3b36343731335f31\n"
".quad 0x3309636f6c2e090a,0x0a30093335350931,0x3436662e766f6d09,0x3933316466250920\n"
".quad 0x306666666430202c,0x3030303030303030,0x2f2f093b30303030,0x62090a666e692d20\n"
".quad 0x0920696e752e6172,0x69646e6557444c24,0x7265746e695f5f5f,0x666c61685f6c616e\n"
".quad 0x0a3b375f3937315f,0x31335f315f744c24,0x6f6d090a3a363437,0x2509203436662e76\n"
".quad 0x30202c3434316466,0x3030303066663764,0x3030303030303030,0x6e69202f2f093b30\n"
".quad 0x2e70746573090a66,0x09203436662e7165,0x6625202c35317025,0x646625202c383864\n"
".quad 0x2140090a3b343431,0x6172622035317025,0x5f315f744c240920,0x090a3b3835323233\n"
".quad 0x09313309636f6c2e,0x6d090a3009373535,0x09203436662e766f,0x202c393331646625\n"
".quad 0x090a3b3838646625,0x20696e752e617262,0x646e6557444c2409,0x65746e695f5f5f69\n"
".quad 0x6c61685f6c616e72,0x3b375f3937315f66,0x335f315f744c240a,0x2e090a3a38353232\n"
".quad 0x3509313309636f6c,0x6f6d090a30093036,0x2509203436662e76,0x30202c3933316466\n"
".quad 0x3030303866666664,0x3030303030303030,0x6e2d202f2f093b30,0x6557444c240a6e61\n"
".quad 0x6e695f5f5f69646e,0x685f6c616e726574,0x5f3937315f666c61,0x636f6c2e090a3a37\n"
".quad 0x0938323109393109,0x662e766f6d090a30,0x3264662509203436,0x3331646625202c38\n"
".quad 0x2e617262090a3b39,0x744c240920696e75,0x38333137325f315f,0x5f315f744c240a3b\n"
".quad 0x090a3a3439333732,0x09313309636f6c2e,0x6d090a3009323934,0x09203436622e766f\n"
".quad 0x72252c343572257b,0x646625202c7d3535,0x2e766f6d090a3b32,0x3972250920323373\n"
".quad 0x0a3b35357225202c,0x313309636f6c2e09,0x090a300933393409,0x203436622e766f6d\n"
".quad 0x252c303172257b09,0x6625202c7d363572,0x6f6c2e090a3b3264,0x3539340931330963\n"
".quad 0x2e766f6d090a3009,0x6466250920343666,0x306430202c353431,0x3030303030303030\n"
".quad 0x3b30303030303030,0x73090a30202f2f09,0x33752e74672e7465,0x2509203436662e32\n"
".quad 0x646625202c373572,0x3431646625202c32,0x2e67656e090a3b35,0x3572250920323373\n"
".quad 0x3b37357225202c38,0x36662e766f6d090a,0x3431646625092034,0x6666376430202c36\n"
".quad 0x3030303030303030,0x2f093b3030303030,0x73090a666e69202f,0x33752e746c2e7465\n"
".quad 0x2509203436662e32,0x646625202c393572,0x3431646625202c32,0x2e67656e090a3b36\n"
".quad 0x3672250920323373,0x3b39357225202c30,0x33622e646e61090a,0x2c31367225092032\n"
".quad 0x25202c3835722520,0x6f6d090a3b303672,0x2509203233752e76,0x0a3b30202c323672\n"
".quad 0x71652e7074657309,0x702509203233732e,0x31367225202c3631,0x0a3b32367225202c\n"
".quad 0x6220363170254009,0x5f744c2409206172,0x3b32363731325f31,0x33752e766f6d090a\n"
".quad 0x2c33367225092032,0x3537353834303120,0x2e70746573090a3b,0x09203233752e7467\n"
".quad 0x7225202c37317025,0x33367225202c3535,0x3731702540090a3b,0x4c24092061726220\n"
".quad 0x323033335f315f74,0x636f6c2e090a3b36,0x0931303509313309,0x662e766f6d090a30\n"
".quad 0x3164662509203436,0x33346430202c3734,0x3030303030303035,0x093b303030303030\n"
".quad 0x3130382e31202f2f,0x090a36312b653434,0x203436662e6c756d,0x2c38343164662509\n"
".quad 0x25202c3264662520,0x090a3b3734316466,0x203436622e766f6d,0x252c343672257b09\n"
".quad 0x646625202c7d3972,0x6c2e090a3b383431,0x303509313309636f,0x766f6d090a300932\n"
".quad 0x257b09203436622e,0x353672252c303172,0x3431646625202c7d,0x2e766f6d090a3b38\n"
".quad 0x3272250920323373,0x373730312d202c31,0x752e617262090a3b,0x5f744c240920696e\n"
".quad 0x3b30373732335f31,0x335f315f744c240a,0x6d090a3a36323033,0x09203233732e766f\n"
".quad 0x312d202c31327225,0x744c240a3b333230,0x30373732335f315f,0x09636f6c2e090a3a\n"
".quad 0x3009373035093133,0x33732e726873090a,0x2c36367225092032,0x3032202c39722520\n"
".quad 0x732e646461090a3b,0x3132722509203233,0x202c31327225202c,0x2e090a3b36367225\n"
".quad 0x3509313309636f6c,0x6e61090a30093930,0x2509203233622e64,0x397225202c373672\n"
".quad 0x34363431322d202c,0x090a3b3337303533,0x09203233622e726f,0x7225202c38367225\n"
".quad 0x32373031202c3736,0x0a3b383432333936,0x3436622e766f6d09,0x2c36336466250920\n"
".quad 0x252c303172257b20,0x6d090a3b7d383672,0x09203233752e766f,0x3031202c39367225\n"
".quad 0x3238353732313337,0x2e70746573090a3b,0x09203233752e656c,0x7225202c38317025\n"
".quad 0x39367225202c3836,0x3831702540090a3b,0x4c24092061726220,0x383233335f315f74\n"
".quad 0x636f6c2e090a3b32,0x0931313509313309,0x622e766f6d090a30,0x3772257b09203436\n"
".quad 0x2c7d313772252c30,0x0a3b363364662520,0x3233732e62757309,0x202c323772250920\n"
".quad 0x3031202c31377225,0x090a3b3637353834,0x203436622e766f6d,0x252c333772257b09\n"
".quad 0x6625202c7d343772,0x6f6d090a3b363364,0x2509203436622e76,0x257b202c36336466\n"
".quad 0x323772252c333772,0x636f6c2e090a3b7d,0x0932313509313309,0x732e646461090a30\n"
".quad 0x3132722509203233,0x202c31327225202c,0x315f744c240a3b31,0x0a3a32383233335f\n"
".quad 0x313309636f6c2e09,0x090a300938313509,0x203436662e766f6d,0x2c39343164662509\n"
".quad 0x3030666662643020,0x3030303030303030,0x202f2f093b303030,0x2e646461090a312d\n"
".quad 0x6466250920343666,0x646625202c303531,0x31646625202c3633,0x766f6d090a3b3934\n"
".quad 0x662509203436662e,0x6430202c31353164,0x3030303030666633,0x3030303030303030\n"
".quad 0x090a31202f2f093b,0x203436662e646461,0x2c32353164662509,0x202c363364662520\n"
".quad 0x0a3b313531646625,0x2e6e722e74766309,0x203436662e323366,0x6625202c35662509\n"
".quad 0x72090a3b32353164,0x33662e6e722e7063,0x202c366625092032,0x7663090a3b356625\n"
".quad 0x33662e3436662e74,0x3531646625092032,0x0a3b366625202c33,0x3436662e67656e09\n"
".quad 0x3435316466250920,0x323531646625202c,0x662e766f6d090a3b,0x3164662509203436\n"
".quad 0x66336430202c3535,0x3030303030303066,0x093b303030303030,0x616d090a31202f2f\n"
".quad 0x3436662e6e722e64,0x3635316466250920,0x343531646625202c,0x333531646625202c\n"
".quad 0x353531646625202c,0x722e64616d090a3b,0x2509203436662e6e,0x25202c3735316466\n"
".quad 0x25202c3635316466,0x25202c3635316466,0x090a3b3635316466,0x662e6e722e64616d\n"
".quad 0x3164662509203436,0x31646625202c3835,0x31646625202c3735,0x31646625202c3335\n"
".quad 0x6c756d090a3b3335,0x662509203436662e,0x6625202c39353164,0x6625202c30353164\n"
".quad 0x2e090a3b38353164,0x3509313309636f6c,0x6461090a30093832,0x2509203436662e64\n"
".quad 0x25202c3036316466,0x25202c3935316466,0x090a3b3935316466,0x203436662e6c756d\n"
".quad 0x2c31363164662509,0x2c30363164662520,0x3b30363164662520,0x36662e766f6d090a\n"
".quad 0x3631646625092034,0x6265336430202c32,0x6561336230383331,0x2f093b6531663038\n"
".quad 0x333632302e31202f,0x6d090a36302d6533,0x09203436662e766f,0x202c333631646625\n"
".quad 0x6565306465336430,0x6238613762383532,0x34202f2f093b3430,0x2d6539343633302e\n"
".quad 0x2e64616d090a3630,0x09203436662e6e72,0x202c343631646625,0x202c323631646625\n"
".quad 0x202c313631646625,0x0a3b333631646625,0x3436662e766f6d09,0x3536316466250920\n"
".quad 0x336665336430202c,0x3230663936363262,0x2f2f093b66363736,0x34343837382e3120\n"
".quad 0x616d090a35302d65,0x3436662e6e722e64,0x3636316466250920,0x343631646625202c\n"
".quad 0x313631646625202c,0x353631646625202c,0x662e766f6d090a3b,0x3164662509203436\n"
".quad 0x66336430202c3736,0x3961626335343731,0x093b363539306261,0x3737382e38202f2f\n"
".quad 0x090a35302d653138,0x662e6e722e64616d,0x3164662509203436,0x31646625202c3836\n"
".quad 0x31646625202c3636,0x31646625202c3136,0x766f6d090a3b3736,0x662509203436662e\n"
".quad 0x6430202c39363164,0x3763313763336633,0x3435313562316432,0x302e30202f2f093b\n"
".quad 0x3832303433343030,0x6e722e64616d090a,0x662509203436662e,0x6625202c30373164\n"
".quad 0x6625202c38363164,0x6625202c31363164,0x6d090a3b39363164,0x09203436662e766f\n"
".quad 0x202c313731646625,0x3934323666336430,0x3765623332393432,0x30202f2f093b6432\n"
".quad 0x313233323230302e,0x722e64616d090a34,0x2509203436662e6e,0x25202c3237316466\n"
".quad 0x25202c3037316466,0x25202c3136316466,0x090a3b3137316466,0x203436662e766f6d\n"
".quad 0x2c33373164662509,0x3939386633643020,0x6139393939393939,0x202f2f093b346333\n"
".quad 0x090a353231302e30,0x662e6e722e64616d,0x3164662509203436,0x31646625202c3437\n"
".quad 0x31646625202c3237,0x31646625202c3136,0x6f6c2e090a3b3337,0x3932350931330963\n"
".quad 0x2e766f6d090a3009,0x6466250920343666,0x336430202c353731,0x3535353535356266\n"
".quad 0x3b34353535353535,0x38302e30202f2f09,0x6d090a3333333333,0x36662e6e722e6461\n"
".quad 0x3731646625092034,0x3731646625202c36,0x3631646625202c34,0x3731646625202c31\n"
".quad 0x636f6c2e090a3b35,0x0932333509313309,0x662e627573090a30,0x3164662509203436\n"
".quad 0x31646625202c3737,0x31646625202c3035,0x67656e090a3b3036,0x662509203436662e\n"
".quad 0x6625202c38373164,0x61090a3b30363164,0x09203436662e6464,0x202c393731646625\n"
".quad 0x202c373731646625,0x0a3b373731646625,0x2e6e722e64616d09,0x6466250920343666\n"
".quad 0x646625202c303831,0x646625202c383731,0x646625202c303531,0x756d090a3b393731\n"
".quad 0x2509203436662e6c,0x25202c3138316466,0x25202c3835316466,0x090a3b3038316466\n"
".quad 0x09313309636f6c2e,0x6d090a3009353335,0x09203436662e6c75,0x202c323831646625\n"
".quad 0x202c313631646625,0x0a3b363731646625,0x3436662e6c756d09,0x3338316466250920\n"
".quad 0x303631646625202c,0x323831646625202c,0x09636f6c2e090a3b,0x3009363435093133\n"
".quad 0x6e722e747663090a,0x3233732e3436662e,0x3438316466250920,0x0a3b31327225202c\n"
".quad 0x3436662e766f6d09,0x3538316466250920,0x366566336430202c,0x6166656632346532\n"
".quad 0x2f2f093b66653933,0x34313339362e3020,0x722e64616d090a37,0x2509203436662e6e\n"
".quad 0x25202c3638316466,0x25202c3438316466,0x25202c3538316466,0x090a3b3036316466\n"
".quad 0x203436662e766f6d,0x2c37383164662509,0x6261376333643020,0x3839336233653963\n"
".quad 0x202f2f093b663330,0x6535303931332e32,0x646461090a37312d,0x662509203436662e\n"
".quad 0x6625202c38383164,0x6625202c33383164,0x6e090a3b31383164,0x09203233732e6765\n"
".quad 0x7225202c35377225,0x747663090a3b3132,0x2e3436662e6e722e,0x6466250920323373\n"
".quad 0x377225202c393831,0x2e766f6d090a3b35,0x6466250920343666,0x336430202c303931\n"
".quad 0x6632346532366566,0x3b66653933616665,0x39362e30202f2f09,0x616d090a37343133\n"
".quad 0x3436662e6e722e64,0x3139316466250920,0x393831646625202c,0x303931646625202c\n"
".quad 0x363831646625202c,0x662e627573090a3b,0x3164662509203436,0x31646625202c3239\n"
".quad 0x31646625202c3139,0x627573090a3b3036,0x662509203436662e,0x6625202c33393164\n"
".quad 0x6625202c38383164,0x6d090a3b32393164,0x36662e6e722e6461,0x3931646625092034\n"
".quad 0x3831646625202c34,0x3831646625202c34,0x3931646625202c37,0x2e646461090a3b33\n"
".quad 0x6466250920343666,0x646625202c353931,0x646625202c363831,0x7262090a3b343931\n"
".quad 0x240920696e752e61,0x5f69646e6557444c,0x6e7265746e695f5f,0x5f666c61685f6c61\n"
".quad 0x240a3b315f393731,0x3731325f315f744c,0x6f6c2e090a3a3236,0x3834350931330963\n"
".quad 0x2e736261090a3009,0x6466250920343666,0x646625202c363931,0x2e766f6d090a3b32\n"
".quad 0x6466250920343666,0x376430202c373931,0x3030303030306666,0x3b30303030303030\n"
".quad 0x0a666e69202f2f09,0x656c2e7074657309,0x702509203436662e,0x31646625202c3931\n"
".quad 0x31646625202c3639,0x702540090a3b3739,0x0920617262203931,0x33335f315f744c24\n"
".quad 0x6c2e090a3b343937,0x343509313309636f,0x646461090a300939,0x662509203436662e\n"
".quad 0x6625202c35393164,0x32646625202c3264,0x752e617262090a3b,0x57444c240920696e\n"
".quad 0x695f5f5f69646e65,0x5f6c616e7265746e,0x3937315f666c6168,0x5f744c240a3b315f\n"
".quad 0x3a34393733335f31,0x36662e766f6d090a,0x3931646625092034,0x3030306430202c38\n"
".quad 0x3030303030303030,0x2f093b3030303030,0x746573090a30202f,0x3436662e71652e70\n"
".quad 0x202c303270250920,0x6625202c32646625,0x40090a3b38393164,0x7262203032702521\n"
".quad 0x315f744c24092061,0x0a3b36303334335f,0x313309636f6c2e09,0x090a300933353509\n"
".quad 0x203436662e766f6d,0x2c35393164662509,0x3030666666643020,0x3030303030303030\n"
".quad 0x202f2f093b303030,0x7262090a666e692d,0x240920696e752e61,0x5f69646e6557444c\n"
".quad 0x6e7265746e695f5f,0x5f666c61685f6c61,0x240a3b315f393731,0x3334335f315f744c\n"
".quad 0x766f6d090a3a3630,0x662509203436662e,0x6430202c39393164,0x3030303030666637\n"
".quad 0x3030303030303030,0x666e69202f2f093b,0x652e70746573090a,0x2509203436662e71\n"
".quad 0x646625202c313270,0x3931646625202c32,0x70252140090a3b39,0x0920617262203132\n"
".quad 0x34335f315f744c24,0x6c2e090a3b383138,0x353509313309636f,0x766f6d090a300937\n"
".quad 0x662509203436662e,0x6625202c35393164,0x617262090a3b3264,0x4c240920696e752e\n"
".quad 0x5f5f69646e655744,0x616e7265746e695f,0x315f666c61685f6c,0x4c240a3b315f3937\n"
".quad 0x313834335f315f74,0x636f6c2e090a3a38,0x0930363509313309,0x662e766f6d090a30\n"
".quad 0x3164662509203436,0x66666430202c3539,0x3030303030303866,0x093b303030303030\n"
".quad 0x0a6e616e2d202f2f,0x69646e6557444c24,0x7265746e695f5f5f,0x666c61685f6c616e\n"
".quad 0x0a3a315f3937315f,0x313309636f6c2e09,0x090a300932393409,0x203436662e67656e\n"
".quad 0x2c30303264662509,0x3b35393164662520,0x36622e766f6d090a,0x363772257b092034\n"
".quad 0x202c7d373772252c,0x0a3b303032646625,0x3233732e766f6d09,0x25202c3972250920\n"
".quad 0x6c2e090a3b373772,0x393409313309636f,0x766f6d090a300933,0x257b09203436622e\n"
".quad 0x383772252c303172,0x3032646625202c7d,0x636f6c2e090a3b30,0x0935393409313309\n"
".quad 0x662e766f6d090a30,0x3264662509203436,0x30306430202c3130,0x3030303030303030\n"
".quad 0x093b303030303030,0x6573090a30202f2f,0x3233752e74672e74,0x722509203436662e\n"
".quad 0x32646625202c3937,0x32646625202c3030,0x67656e090a3b3130,0x722509203233732e\n"
".quad 0x39377225202c3038,0x662e766f6d090a3b,0x3264662509203436,0x66376430202c3230\n"
".quad 0x3030303030303066,0x093b303030303030,0x090a666e69202f2f,0x752e746c2e746573\n"
".quad 0x09203436662e3233,0x6625202c31387225,0x6625202c30303264,0x6e090a3b32303264\n"
".quad 0x09203233732e6765,0x7225202c32387225,0x646e61090a3b3138,0x722509203233622e\n"
".quad 0x30387225202c3338,0x0a3b32387225202c,0x3233752e766f6d09,0x202c343872250920\n"
".quad 0x70746573090a3b30,0x203233732e71652e,0x25202c3232702509,0x387225202c333872\n"
".quad 0x32702540090a3b34,0x2409206172622032,0x3233325f315f744c,0x766f6d090a3b3839\n"
".quad 0x722509203233752e,0x38343031202c3538,0x6573090a3b353735,0x33752e74672e7074\n"
".quad 0x2c33327025092032,0x25202c3737722520,0x2540090a3b353872,0x2061726220333270\n"
".quad 0x335f315f744c2409,0x2e090a3b36383535,0x3509313309636f6c,0x6f6d090a30093130\n"
".quad 0x2509203436662e76,0x30202c3330326466,0x3030303035333464,0x3030303030303030\n"
".quad 0x2e31202f2f093b30,0x312b653434313038,0x662e6c756d090a36,0x3264662509203436\n"
".quad 0x32646625202c3430,0x32646625202c3030,0x766f6d090a3b3330,0x257b09203436622e\n"
".quad 0x7d3972252c363872,0x343032646625202c,0x09636f6c2e090a3b,0x3009323035093133\n"
".quad 0x36622e766f6d090a,0x303172257b092034,0x202c7d373872252c,0x0a3b343032646625\n"
".quad 0x3233732e766f6d09,0x202c313272250920,0x090a3b373730312d,0x20696e752e617262\n"
".quad 0x335f315f744c2409,0x4c240a3b30333335,0x383535335f315f74,0x2e766f6d090a3a36\n"
".quad 0x3272250920323373,0x333230312d202c31,0x5f315f744c240a3b,0x090a3a3033333533\n"
".quad 0x09313309636f6c2e,0x73090a3009373035,0x09203233732e7268,0x7225202c38387225\n"
".quad 0x090a3b3032202c39,0x203233732e646461,0x25202c3132722509,0x387225202c313272\n"
".quad 0x636f6c2e090a3b38,0x0939303509313309,0x622e646e61090a30,0x3938722509203233\n"
".quad 0x2d202c397225202c,0x3035333436343132,0x2e726f090a3b3337,0x3972250920323362\n"
".quad 0x2c39387225202c30,0x3339363237303120,0x6f6d090a3b383432,0x2509203436622e76\n"
".quad 0x257b202c36336466,0x303972252c303172,0x2e766f6d090a3b7d,0x3972250920323375\n"
".quad 0x3133373031202c31,0x090a3b3238353732,0x2e656c2e70746573,0x3270250920323375\n"
".quad 0x2c30397225202c34,0x090a3b3139722520,0x7262203432702540,0x315f744c24092061\n"
".quad 0x0a3b32343835335f,0x313309636f6c2e09,0x090a300931313509,0x203436622e766f6d\n"
".quad 0x252c323972257b09,0x6625202c7d333972,0x7573090a3b363364,0x2509203233732e62\n"
".quad 0x397225202c343972,0x3538343031202c33,0x766f6d090a3b3637,0x257b09203436622e\n"
".quad 0x363972252c353972,0x3633646625202c7d,0x622e766f6d090a3b,0x3364662509203436\n"
".quad 0x353972257b202c36,0x0a3b7d343972252c,0x313309636f6c2e09,0x090a300932313509\n"
".quad 0x203233732e646461,0x25202c3132722509,0x0a3b31202c313272,0x35335f315f744c24\n"
".quad 0x6c2e090a3a323438,0x313509313309636f,0x766f6d090a300938,0x662509203436662e\n"
".quad 0x6430202c35303264,0x3030303030666662,0x3030303030303030,0x0a312d202f2f093b\n"
".quad 0x3436662e64646109,0x3630326466250920,0x2c3633646625202c,0x3b35303264662520\n"
".quad 0x36662e766f6d090a,0x3032646625092034,0x6666336430202c37,0x3030303030303030\n"
".quad 0x2f093b3030303030,0x646461090a31202f,0x662509203436662e,0x6625202c38303264\n"
".quad 0x646625202c363364,0x7663090a3b373032,0x3233662e6e722e74,0x662509203436662e\n"
".quad 0x3032646625202c37,0x2e706372090a3b38,0x09203233662e6e72,0x376625202c386625\n"
".quad 0x662e747663090a3b,0x09203233662e3436,0x202c393032646625,0x656e090a3b386625\n"
".quad 0x2509203436662e67,0x25202c3031326466,0x090a3b3830326466,0x203436662e766f6d\n"
".quad 0x2c31313264662509,0x3030666633643020,0x3030303030303030,0x202f2f093b303030\n"
".quad 0x722e64616d090a31,0x2509203436662e6e,0x25202c3231326466,0x25202c3031326466\n"
".quad 0x25202c3930326466,0x090a3b3131326466,0x662e6e722e64616d,0x3264662509203436\n"
".quad 0x32646625202c3331,0x32646625202c3231,0x32646625202c3231,0x64616d090a3b3231\n"
".quad 0x203436662e6e722e,0x2c34313264662509,0x2c33313264662520,0x2c39303264662520\n"
".quad 0x3b39303264662520,0x36662e6c756d090a,0x3132646625092034,0x3032646625202c35\n"
".quad 0x3132646625202c36,0x636f6c2e090a3b34,0x0938323509313309,0x662e646461090a30\n"
".quad 0x3264662509203436,0x32646625202c3631,0x32646625202c3531,0x6c756d090a3b3531\n"
".quad 0x662509203436662e,0x6625202c37313264,0x6625202c36313264,0x6d090a3b36313264\n"
".quad 0x09203436662e766f,0x202c383132646625,0x3833316265336430,0x6630386561336230\n"
".quad 0x31202f2f093b6531,0x2d6533333632302e,0x2e766f6d090a3630,0x6466250920343666\n"
".quad 0x336430202c393132,0x3835326565306465,0x3b34306238613762,0x33302e34202f2f09\n"
".quad 0x0a36302d65393436,0x2e6e722e64616d09,0x6466250920343666,0x646625202c303232\n"
".quad 0x646625202c383132,0x646625202c373132,0x6f6d090a3b393132,0x2509203436662e76\n"
".quad 0x30202c3132326466,0x3632623366653364,0x3637363230663936,0x2e31202f2f093b66\n"
".quad 0x302d653434383738,0x722e64616d090a35,0x2509203436662e6e,0x25202c3232326466\n"
".quad 0x25202c3032326466,0x25202c3731326466,0x090a3b3132326466,0x203436662e766f6d\n"
".quad 0x2c33323264662509,0x3437316633643020,0x3062613961626335,0x202f2f093b363539\n"
".quad 0x6531383737382e38,0x64616d090a35302d,0x203436662e6e722e,0x2c34323264662509\n"
".quad 0x2c32323264662520,0x2c37313264662520,0x3b33323264662520,0x36662e766f6d090a\n"
".quad 0x3232646625092034,0x3366336430202c35,0x3164323763313763,0x2f093b3435313562\n"
".quad 0x343030302e30202f,0x6d090a3832303433,0x36662e6e722e6461,0x3232646625092034\n"
".quad 0x3232646625202c36,0x3132646625202c34,0x3232646625202c37,0x2e766f6d090a3b35\n"
".quad 0x6466250920343666,0x336430202c373232,0x3934323934323666,0x3b64323765623332\n"
".quad 0x30302e30202f2f09,0x090a343132333232,0x662e6e722e64616d,0x3264662509203436\n"
".quad 0x32646625202c3832,0x32646625202c3632,0x32646625202c3731,0x766f6d090a3b3732\n"
".quad 0x662509203436662e,0x6430202c39323264,0x3939393939386633,0x3463336139393939\n"
".quad 0x302e30202f2f093b,0x64616d090a353231,0x203436662e6e722e,0x2c30333264662509\n"
".quad 0x2c38323264662520,0x2c37313264662520,0x3b39323264662520,0x3309636f6c2e090a\n"
".quad 0x0a30093932350931,0x3436662e766f6d09,0x3133326466250920,0x356266336430202c\n"
".quad 0x3535353535353535,0x2f2f093b34353535,0x33333338302e3020,0x2e64616d090a3333\n"
".quad 0x09203436662e6e72,0x202c323332646625,0x202c303332646625,0x202c373132646625\n"
".quad 0x0a3b313332646625,0x313309636f6c2e09,0x090a300932333509,0x203436662e627573\n"
".quad 0x2c33333264662509,0x2c36303264662520,0x3b36313264662520,0x36662e67656e090a\n"
".quad 0x3332646625092034,0x3132646625202c34,0x2e646461090a3b36,0x6466250920343666\n"
".quad 0x646625202c353332,0x646625202c333332,0x616d090a3b333332,0x3436662e6e722e64\n"
".quad 0x3633326466250920,0x343332646625202c,0x363032646625202c,0x353332646625202c\n"
".quad 0x662e6c756d090a3b,0x3264662509203436,0x32646625202c3733,0x32646625202c3431\n"
".quad 0x6f6c2e090a3b3633,0x3533350931330963,0x2e6c756d090a3009,0x6466250920343666\n"
".quad 0x646625202c383332,0x646625202c373132,0x756d090a3b323332,0x2509203436662e6c\n"
".quad 0x25202c3933326466,0x25202c3631326466,0x090a3b3833326466,0x09313309636f6c2e\n"
".quad 0x63090a3009363435,0x36662e6e722e7476,0x2509203233732e34,0x25202c3034326466\n"
".quad 0x6f6d090a3b313272,0x2509203436662e76,0x30202c3134326466,0x3465323665663364\n"
".quad 0x6539336166656632,0x2e30202f2f093b66,0x090a373431333936,0x662e6e722e64616d\n"
".quad 0x3264662509203436,0x32646625202c3234,0x32646625202c3034,0x32646625202c3134\n"
".quad 0x766f6d090a3b3631,0x662509203436662e,0x6430202c33343264,0x6539636261376333\n"
".quad 0x6633303839336233,0x332e32202f2f093b,0x37312d6535303931,0x36662e646461090a\n"
".quad 0x3432646625092034,0x3332646625202c34,0x3332646625202c39,0x2e67656e090a3b37\n"
".quad 0x3972250920323373,0x3b31327225202c37,0x6e722e747663090a,0x3233732e3436662e\n"
".quad 0x3534326466250920,0x0a3b37397225202c,0x3436662e766f6d09,0x3634326466250920\n"
".quad 0x366566336430202c,0x6166656632346532,0x2f2f093b66653933,0x34313339362e3020\n"
".quad 0x722e64616d090a37,0x2509203436662e6e,0x25202c3734326466,0x25202c3534326466\n"
".quad 0x25202c3634326466,0x090a3b3234326466,0x203436662e627573,0x2c38343264662509\n"
".quad 0x2c37343264662520,0x3b36313264662520,0x36662e627573090a,0x3432646625092034\n"
".quad 0x3432646625202c39,0x3432646625202c34,0x2e64616d090a3b38,0x09203436662e6e72\n"
".quad 0x202c303532646625,0x202c303432646625,0x202c333432646625,0x0a3b393432646625\n"
".quad 0x3436662e64646109,0x3135326466250920,0x323432646625202c,0x303532646625202c\n"
".quad 0x752e617262090a3b,0x57444c240920696e,0x695f5f5f69646e65,0x5f6c616e7265746e\n"
".quad 0x3937315f666c6168,0x5f744c240a3b335f,0x3a38393233325f31,0x3309636f6c2e090a\n"
".quad 0x0a30093834350931,0x3436662e73626109,0x3235326466250920,0x353931646625202c\n"
".quad 0x662e766f6d090a3b,0x3264662509203436,0x66376430202c3335,0x3030303030303066\n"
".quad 0x093b303030303030,0x090a666e69202f2f,0x2e656c2e70746573,0x3270250920343666\n"
".quad 0x3532646625202c35,0x3532646625202c32,0x32702540090a3b33,0x2409206172622035\n"
".quad 0x3336335f315f744c,0x6f6c2e090a3b3435,0x3934350931330963,0x2e646461090a3009\n"
".quad 0x6466250920343666,0x646625202c343532,0x646625202c353931,0x656e090a3b353931\n"
".quad 0x2509203436662e67,0x25202c3135326466,0x090a3b3435326466,0x20696e752e617262\n"
".quad 0x646e6557444c2409,0x65746e695f5f5f69,0x6c61685f6c616e72,0x3b335f3937315f66\n"
".quad 0x335f315f744c240a,0x6d090a3a34353336,0x09203436662e766f,0x202c353532646625\n"
".quad 0x3030303030306430,0x3030303030303030,0x30202f2f093b3030,0x652e70746573090a\n"
".quad 0x2509203436662e71,0x646625202c363270,0x646625202c303032,0x2140090a3b353532\n"
".quad 0x6172622036327025,0x5f315f744c240920,0x090a3b3636383633,0x09313309636f6c2e\n"
".quad 0x6d090a3009333535,0x09203436662e766f,0x202c313532646625,0x3030306666666430\n"
".quad 0x3030303030303030,0x2d202f2f093b3030,0x617262090a666e69,0x4c240920696e752e\n"
".quad 0x5f5f69646e655744,0x616e7265746e695f,0x315f666c61685f6c,0x4c240a3b335f3937\n"
".quad 0x363836335f315f74,0x2e766f6d090a3a36,0x6466250920343666,0x376430202c363532\n"
".quad 0x3030303030306666,0x3b30303030303030,0x0a666e69202f2f09,0x71652e7074657309\n"
".quad 0x702509203436662e,0x32646625202c3732,0x32646625202c3030,0x252140090a3b3635\n"
".quad 0x2061726220373270,0x335f315f744c2409,0x2e090a3b38373337,0x3509313309636f6c\n"
".quad 0x6f6d090a30093735,0x2509203436662e76,0x25202c3135326466,0x090a3b3030326466\n"
".quad 0x20696e752e617262,0x646e6557444c2409,0x65746e695f5f5f69,0x6c61685f6c616e72\n"
".quad 0x3b335f3937315f66,0x335f315f744c240a,0x2e090a3a38373337,0x3509313309636f6c\n"
".quad 0x6f6d090a30093036,0x2509203436662e76,0x30202c3135326466,0x3030303866666664\n"
".quad 0x3030303030303030,0x6e2d202f2f093b30,0x6557444c240a6e61,0x6e695f5f5f69646e\n"
".quad 0x685f6c616e726574,0x5f3937315f666c61,0x636f6c2e090a3a33,0x0930333109393109\n"
".quad 0x662e766f6d090a30,0x3264662509203436,0x3532646625202c38,0x315f744c240a3b31\n"
".quad 0x0a3a38333137325f,0x393109636f6c2e09,0x090a300932333109,0x203436662e766f6d\n"
".quad 0x2c37353264662509,0x3935646633643020,0x3034653363323339,0x202f2f093b643633\n"
".quad 0x3537343733332e30,0x36662e766f6d090a,0x3532646625092034,0x6566336430202c38\n"
".quad 0x3866633663633366,0x2f093b3133316362,0x313637392e30202f,0x2e766f6d090a3936\n"
".quad 0x6466250920343666,0x336430202c393532,0x3237303539346366,0x3b36383630393636\n"
".quad 0x36312e30202f2f09,0x6f6d090a38393730,0x2509203436662e76,0x30202c3036326466\n"
".quad 0x6165346339663364,0x3332343465333764,0x2e30202f2f093b37,0x0a39333436373230\n"
".quad 0x3436662e766f6d09,0x3136326466250920,0x663666336430202c,0x6533356533343637\n"
".quad 0x2f2f093b35383736,0x34383330302e3020,0x766f6d090a373530,0x662509203436662e\n"
".quad 0x6430202c32363264,0x6532366539336633,0x3634383839613061,0x302e30202f2f093b\n"
".quad 0x0a39313539333030,0x3436662e766f6d09,0x3336326466250920,0x303066336430202c\n"
".quad 0x3566353032626564,0x2f2f093b38303238,0x38363731322e3320,0x6f6d090a35302d65\n"
".quad 0x2509203436662e76,0x30202c3436326466,0x6431363339653364,0x3562376239303735\n"
".quad 0x2e32202f2f093b36,0x302d653731383838,0x662e766f6d090a37,0x3264662509203436\n"
".quad 0x65336430202c3536,0x6130356333396139,0x093b646135643230,0x3036392e33202f2f\n"
".quad 0x090a37302d653233,0x662e6e722e64616d,0x3264662509203436,0x32646625202c3636\n"
".quad 0x32646625202c3536,0x3632646625202c38,0x2e64616d090a3b34,0x09203436662e6e72\n"
".quad 0x202c373632646625,0x25202c3832646625,0x25202c3636326466,0x090a3b3336326466\n"
".quad 0x662e6e722e64616d,0x3264662509203436,0x32646625202c3836,0x3632646625202c38\n"
".quad 0x3632646625202c37,0x2e64616d090a3b32,0x09203436662e6e72,0x202c393632646625\n"
".quad 0x25202c3832646625,0x25202c3836326466,0x090a3b3136326466,0x662e6e722e64616d\n"
".quad 0x3264662509203436,0x32646625202c3037,0x3632646625202c38,0x3632646625202c39\n"
".quad 0x2e64616d090a3b30,0x09203436662e6e72,0x202c313732646625,0x25202c3832646625\n"
".quad 0x25202c3037326466,0x090a3b3935326466,0x662e6e722e64616d,0x3264662509203436\n"
".quad 0x32646625202c3237,0x3732646625202c38,0x3532646625202c31,0x2e64616d090a3b38\n"
".quad 0x09203436662e6e72,0x202c333732646625,0x25202c3832646625,0x25202c3237326466\n"
".quad 0x090a3b3735326466,0x203436662e67656e,0x2c34373264662509,0x3b33373264662520\n"
".quad 0x36662e766f6d090a,0x3732646625092034,0x3030306430202c35,0x3030303030303030\n"
".quad 0x2f093b3030303030,0x746573090a30202f,0x3436662e746c2e70,0x202c383270250920\n"
".quad 0x6625202c37646625,0x73090a3b35373264,0x203436662e706c65,0x202c383264662509\n"
".quad 0x202c343732646625,0x202c333732646625,0x4c240a3b38327025,0x323636325f315f74\n"
".quad 0x636f6c2e090a3a36,0x0936333109393109,0x662e766f6d090a30,0x3564662509203436\n"
".quad 0x3b3832646625202c,0x5f363642424c240a,0x6f726f4d33315a5f,0x7067444e43766e49\n"
".quad 0x766f6d090a3a6475,0x662509203436662e,0x6625202c36373264,0x2e7473090a3b3564\n"
".quad 0x36662e6d61726170,0x75635f5f5b092034,0x5f5f667465726164,0x496f726f4d33315a\n"
".quad 0x757067444e43766e,0x32646625202c5d64,0x746572090a3b3637,0x6e6557444c240a3b\n"
".quad 0x6f4d33315a5f5f64,0x444e43766e496f72,0x7d090a3a64757067,0x33315a5f202f2f20\n"
".quad 0x43766e496f726f4d,0x0a0a64757067444e,0x6c62697369762e09,0x20636e75662e2065\n"
".quad 0x526d757338315a5f,0x6168536563756465,0x64496d654d646572,0x7645453635326a4c\n"
".quad 0x20695f31535f5450,0x206d617261702e28,0x635f5f203233752e,0x666d726170616475\n"
".quad 0x757338315a5f5f31,0x536563756465526d,0x6d654d6465726168,0x453635326a4c6449\n"
".quad 0x5f31535f54507645,0x617261702e202c69,0x5f203233752e206d,0x726170616475635f\n"
".quad 0x38315a5f5f32666d,0x63756465526d7573,0x4d64657261685365,0x35326a4c64496d65\n"
".quad 0x535f545076454536,0x61702e202c695f31,0x3233732e206d6172,0x70616475635f5f20\n"
".quad 0x5a5f5f33666d7261,0x6465526d75733831,0x6572616853656375,0x6a4c64496d654d64\n"
".quad 0x5450764545363532,0x090a29695f31535f,0x206765722e090a7b,0x3c7225203233752e\n"
".quad 0x722e090a3b3e3931,0x203436662e206765,0x3b3e30353c646625,0x2e206765722e090a\n"
".quad 0x3c70252064657270,0x6c2e090a3b3e3031,0x323509383109636f,0x6257444c240a3009\n"
".quad 0x315a5f5f6e696765,0x756465526d757338,0x6465726168536563,0x326a4c64496d654d\n"
".quad 0x5f54507645453635,0x6c090a3a695f3153,0x2e6d617261702e64,0x3172250920323375\n"
".quad 0x6475635f5f5b202c,0x5f31666d72617061,0x526d757338315a5f,0x6168536563756465\n"
".quad 0x64496d654d646572,0x7645453635326a4c,0x5d695f31535f5450,0x732e766f6d090a3b\n"
".quad 0x2c32722509203233,0x6c090a3b31722520,0x2e6d617261702e64,0x3372250920323375\n"
".quad 0x6475635f5f5b202c,0x5f32666d72617061,0x526d757338315a5f,0x6168536563756465\n"
".quad 0x64496d654d646572,0x7645453635326a4c,0x5d695f31535f5450,0x732e766f6d090a3b\n"
".quad 0x2c34722509203233,0x6c090a3b33722520,0x2e6d617261702e64,0x3572250920323375\n"
".quad 0x6475635f5f5b202c,0x5f33666d72617061,0x526d757338315a5f,0x6168536563756465\n"
".quad 0x64496d654d646572,0x7645453635326a4c,0x5d695f31535f5450,0x732e766f6d090a3b\n"
".quad 0x2c36722509203233,0x6d090a3b35722520,0x09203233752e766f,0x373231202c377225\n"
".quad 0x2e70746573090a3b,0x09203233732e7467,0x367225202c317025,0x090a3b377225202c\n"
".quad 0x6172622031702540,0x5f325f744c240920,0x090a3b3833333431,0x09383109636f6c2e\n"
".quad 0x756d090a30093535,0x3233752e6f6c2e6c,0x25202c3872250920,0x090a3b38202c3672\n"
".quad 0x203233752e646461,0x7225202c39722509,0x0a3b327225202c38,0x203436662e646c09\n"
".quad 0x5b202c3164662509,0x0a3b5d302b397225,0x203436662e646c09,0x5b202c3264662509\n"
".quad 0x343230312b397225,0x2e646461090a3b5d,0x6466250920343666,0x2c31646625202c33\n"
".quad 0x090a3b3264662520,0x09203436662e7473,0x2c5d302b3972255b,0x090a3b3364662520\n"
".quad 0x203233752e646461,0x25202c3031722509,0x3b347225202c3872,0x3436662e646c090a\n"
".quad 0x202c346466250920,0x5d302b303172255b,0x36662e646c090a3b,0x2c35646625092034\n"
".quad 0x312b303172255b20,0x61090a3b5d343230,0x09203436662e6464,0x6625202c36646625\n"
".quad 0x35646625202c3464,0x36662e7473090a3b,0x303172255b092034,0x646625202c5d302b\n"
".quad 0x325f744c240a3b36,0x0a3a38333334315f,0x6e79732e72616209,0x6d090a3b30092063\n"
".quad 0x09203233752e766f,0x3336202c31317225,0x2e70746573090a3b,0x09203233732e7467\n"
".quad 0x367225202c327025,0x0a3b31317225202c,0x7262203270254009,0x325f744c24092061\n"
".quad 0x0a3b30353834315f,0x383109636f6c2e09,0x6d090a3009363509,0x33752e6f6c2e6c75\n"
".quad 0x202c387225092032,0x0a3b38202c367225,0x3233752e64646109,0x25202c3972250920\n"
".quad 0x3b327225202c3872,0x3436662e646c090a,0x202c376466250920,0x3b5d302b3972255b\n"
".quad 0x3436662e646c090a,0x202c386466250920,0x3231352b3972255b,0x2e646461090a3b5d\n"
".quad 0x6466250920343666,0x2c37646625202c39,0x090a3b3864662520,0x09203436662e7473\n"
".quad 0x2c5d302b3972255b,0x090a3b3964662520,0x203233752e646461,0x25202c3031722509\n"
".quad 0x3b347225202c3872,0x3436662e646c090a,0x2c30316466250920,0x302b303172255b20\n"
".quad 0x662e646c090a3b5d,0x3164662509203436,0x303172255b202c31,0x090a3b5d3231352b\n"
".quad 0x203436662e646461,0x202c323164662509,0x25202c3031646625,0x73090a3b31316466\n"
".quad 0x5b09203436662e74,0x2c5d302b30317225,0x0a3b323164662520,0x34315f325f744c24\n"
".quad 0x6162090a3a303538,0x0920636e79732e72,0x2e766f6d090a3b30,0x3172250920323375\n"
".quad 0x090a3b3133202c32,0x2e74672e70746573,0x3370250920323373,0x25202c367225202c\n"
".quad 0x2540090a3b323172,0x0920617262203370,0x35315f325f744c24,0x6c2e090a3b323633\n"
".quad 0x383509383109636f,0x2e6c756d090a3009,0x09203233752e6f6c,0x367225202c387225\n"
".quad 0x6461090a3b38202c,0x2509203233752e64,0x2c387225202c3972,0x6c090a3b32722520\n"
".quad 0x2509203436662e64,0x255b202c33316466,0x090a3b5d302b3972,0x09203436662e646c\n"
".quad 0x5b202c3431646625,0x5d3635322b397225,0x662e646461090a3b,0x3164662509203436\n"
".quad 0x3331646625202c35,0x3b3431646625202c,0x3436662e7473090a,0x302b3972255b0920\n"
".quad 0x3531646625202c5d,0x752e646461090a3b,0x3031722509203233,0x25202c387225202c\n"
".quad 0x2e646c090a3b3472,0x6466250920343666,0x3172255b202c3631,0x6c090a3b5d302b30\n"
".quad 0x2509203436662e64,0x255b202c37316466,0x5d3635322b303172,0x662e646461090a3b\n"
".quad 0x3164662509203436,0x3631646625202c38,0x3b3731646625202c,0x3436662e7473090a\n"
".quad 0x2b303172255b0920,0x31646625202c5d30,0x325f744c240a3b38,0x0a3a32363335315f\n"
".quad 0x6e79732e72616209,0x6d090a3b30092063,0x09203233752e766f,0x3531202c33317225\n"
".quad 0x2e70746573090a3b,0x09203233732e7467,0x367225202c347025,0x0a3b33317225202c\n"
".quad 0x7262203470254009,0x325f744c24092061,0x0a3b34373835315f,0x383109636f6c2e09\n"
".quad 0x6d090a3009393509,0x33752e6f6c2e6c75,0x202c387225092032,0x0a3b38202c367225\n"
".quad 0x3233752e64646109,0x25202c3972250920,0x3b327225202c3872,0x3436662e646c090a\n"
".quad 0x2c39316466250920,0x5d302b3972255b20,0x36662e646c090a3b,0x3032646625092034\n"
".quad 0x312b3972255b202c,0x6461090a3b5d3832,0x2509203436662e64,0x6625202c31326466\n"
".quad 0x646625202c393164,0x2e7473090a3b3032,0x72255b0920343666,0x6625202c5d302b39\n"
".quad 0x6461090a3b313264,0x2509203233752e64,0x387225202c303172,0x090a3b347225202c\n"
".quad 0x09203436662e646c,0x5b202c3232646625,0x3b5d302b30317225,0x3436662e646c090a\n"
".quad 0x2c33326466250920,0x312b303172255b20,0x6461090a3b5d3832,0x2509203436662e64\n"
".quad 0x6625202c34326466,0x646625202c323264,0x2e7473090a3b3332,0x72255b0920343666\n"
".quad 0x25202c5d302b3031,0x4c240a3b34326466,0x373835315f325f74,0x2e726162090a3a34\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c34317225092032,0x746573090a3b3720\n"
".quad 0x3233732e74672e70,0x25202c3570250920,0x34317225202c3672,0x2035702540090a3b\n"
".quad 0x744c240920617262,0x36383336315f325f,0x09636f6c2e090a3b,0x0a30093036093831\n"
".quad 0x2e6f6c2e6c756d09,0x3872250920323375,0x38202c367225202c,0x752e646461090a3b\n"
".quad 0x2c39722509203233,0x7225202c38722520,0x662e646c090a3b32,0x3264662509203436\n"
".quad 0x2b3972255b202c35,0x2e646c090a3b5d30,0x6466250920343666,0x3972255b202c3632\n"
".quad 0x61090a3b5d34362b,0x09203436662e6464,0x25202c3732646625,0x6625202c35326466\n"
".quad 0x7473090a3b363264,0x255b09203436662e,0x25202c5d302b3972,0x61090a3b37326466\n"
".quad 0x09203233752e6464,0x7225202c30317225,0x0a3b347225202c38,0x203436662e646c09\n"
".quad 0x202c383264662509,0x5d302b303172255b,0x36662e646c090a3b,0x3932646625092034\n"
".quad 0x2b303172255b202c,0x6461090a3b5d3436,0x2509203436662e64,0x6625202c30336466\n"
".quad 0x646625202c383264,0x2e7473090a3b3932,0x72255b0920343666,0x25202c5d302b3031\n"
".quad 0x4c240a3b30336466,0x383336315f325f74,0x2e726162090a3a36,0x3b300920636e7973\n"
".quad 0x33752e766f6d090a,0x2c35317225092032,0x746573090a3b3320,0x3233732e74672e70\n"
".quad 0x25202c3670250920,0x35317225202c3672,0x2036702540090a3b,0x744c240920617262\n"
".quad 0x38393836315f325f,0x09636f6c2e090a3b,0x0a30093136093831,0x2e6f6c2e6c756d09\n"
".quad 0x3872250920323375,0x38202c367225202c,0x752e646461090a3b,0x2c39722509203233\n"
".quad 0x7225202c38722520,0x662e646c090a3b32,0x3364662509203436,0x2b3972255b202c31\n"
".quad 0x2e646c090a3b5d30,0x6466250920343666,0x3972255b202c3233,0x61090a3b5d32332b\n"
".quad 0x09203436662e6464,0x25202c3333646625,0x6625202c31336466,0x7473090a3b323364\n"
".quad 0x255b09203436662e,0x25202c5d302b3972,0x61090a3b33336466,0x09203233752e6464\n"
".quad 0x7225202c30317225,0x0a3b347225202c38,0x203436662e646c09,0x202c343364662509\n"
".quad 0x5d302b303172255b,0x36662e646c090a3b,0x3533646625092034,0x2b303172255b202c\n"
".quad 0x6461090a3b5d3233,0x2509203436662e64,0x6625202c36336466,0x646625202c343364\n"
".quad 0x2e7473090a3b3533,0x72255b0920343666,0x25202c5d302b3031,0x4c240a3b36336466\n"
".quad 0x393836315f325f74,0x2e726162090a3a38,0x3b300920636e7973,0x33752e766f6d090a\n"
".quad 0x2c36317225092032,0x746573090a3b3120,0x3233732e74672e70,0x25202c3770250920\n"
".quad 0x36317225202c3672,0x2037702540090a3b,0x744c240920617262,0x30313437315f325f\n"
".quad 0x09636f6c2e090a3b,0x0a30093236093831,0x2e6f6c2e6c756d09,0x3872250920323375\n"
".quad 0x38202c367225202c,0x752e646461090a3b,0x2c39722509203233,0x7225202c38722520\n"
".quad 0x662e646c090a3b32,0x3364662509203436,0x2b3972255b202c37,0x2e646c090a3b5d30\n"
".quad 0x6466250920343666,0x3972255b202c3833,0x61090a3b5d36312b,0x09203436662e6464\n"
".quad 0x25202c3933646625,0x6625202c37336466,0x7473090a3b383364,0x255b09203436662e\n"
".quad 0x25202c5d302b3972,0x61090a3b39336466,0x09203233752e6464,0x7225202c30317225\n"
".quad 0x0a3b347225202c38,0x203436662e646c09,0x202c303464662509,0x5d302b303172255b\n"
".quad 0x36662e646c090a3b,0x3134646625092034,0x2b303172255b202c,0x6461090a3b5d3631\n"
".quad 0x2509203436662e64,0x6625202c32346466,0x646625202c303464,0x2e7473090a3b3134\n"
".quad 0x72255b0920343666,0x25202c5d302b3031,0x4c240a3b32346466,0x313437315f325f74\n"
".quad 0x2e726162090a3a30,0x3b300920636e7973,0x33752e766f6d090a,0x2c37317225092032\n"
".quad 0x746573090a3b3020,0x3233732e74672e70,0x25202c3870250920,0x37317225202c3672\n"
".quad 0x2038702540090a3b,0x744c240920617262,0x32323937315f325f,0x09636f6c2e090a3b\n"
".quad 0x0a30093336093831,0x2e6f6c2e6c756d09,0x3872250920323375,0x38202c367225202c\n"
".quad 0x752e646461090a3b,0x2c39722509203233,0x7225202c38722520,0x662e646c090a3b32\n"
".quad 0x3464662509203436,0x2b3972255b202c33,0x2e646c090a3b5d30,0x6466250920343666\n"
".quad 0x3972255b202c3434,0x6461090a3b5d382b,0x2509203436662e64,0x6625202c35346466\n"
".quad 0x646625202c333464,0x2e7473090a3b3434,0x72255b0920343666,0x6625202c5d302b39\n"
".quad 0x6461090a3b353464,0x2509203233752e64,0x387225202c303172,0x090a3b347225202c\n"
".quad 0x09203436662e646c,0x5b202c3634646625,0x3b5d302b30317225,0x3436662e646c090a\n"
".quad 0x2c37346466250920,0x382b303172255b20,0x2e646461090a3b5d,0x6466250920343666\n"
".quad 0x34646625202c3834,0x3734646625202c36,0x36662e7473090a3b,0x303172255b092034\n"
".quad 0x646625202c5d302b,0x5f744c240a3b3834,0x3a32323937315f32,0x3109636f6c2e090a\n"
".quad 0x090a300934360938,0x444c240a3b746572,0x315a5f5f646e6557,0x756465526d757338\n"
".quad 0x6465726168536563,0x326a4c64496d654d,0x5f54507645453635,0x7d090a3a695f3153\n"
".quad 0x38315a5f202f2f20,0x63756465526d7573,0x4d64657261685365,0x35326a4c64496d65\n"
".quad 0x535f545076454536,0x6f632e090a695f31,0x696c612e2074736e,0x38622e2038206e67\n"
".quad 0x6f6974704f5f6420,0x35365b617461446e,0x090a0a3b5d363335,0x5f207972746e652e\n"
".quad 0x65746e6f4d36315a,0x72654b6f6c726143,0x5f5f3431506c656e,0x566e6f6974704f54\n"
".quad 0x2069665065756c61,0x7261702e09090a28,0x203233752e206d61,0x6170616475635f5f\n"
".quad 0x4d36315a5f5f6d72,0x6c72614365746e6f,0x506c656e72654b6f,0x74704f545f5f3431\n"
".quad 0x65756c61566e6f69,0x75425f645f696650,0x09090a2c72656666,0x2e206d617261702e\n"
".quad 0x75635f5f20323375,0x5f5f6d7261706164,0x65746e6f4d36315a,0x72654b6f6c726143\n"
".quad 0x5f5f3431506c656e,0x566e6f6974704f54,0x5f69665065756c61,0x656c706d61535f64\n"
".quad 0x61702e09090a2c73,0x3233732e206d6172,0x70616475635f5f20,0x36315a5f5f6d7261\n"
".quad 0x72614365746e6f4d,0x6c656e72654b6f6c,0x704f545f5f343150,0x756c61566e6f6974\n"
".quad 0x7461705f69665065,0x090a7b090a294e68,0x33752e206765722e,0x3e37343c72252032\n"
".quad 0x206765722e090a3b,0x3c6625203233662e,0x65722e090a3b3e33,0x25203436662e2067\n"
".quad 0x0a3b3e36353c6466,0x702e206765722e09,0x393c702520646572,0x636f6c2e090a3b3e\n"
".quad 0x3009323131093309,0x67656257444c240a,0x4d36315a5f5f6e69,0x6c72614365746e6f\n"
".quad 0x506c656e72654b6f,0x74704f545f5f3431,0x65756c61566e6f69,0x6c2e090a3a696650\n"
".quad 0x363131093309636f,0x2e747663090a3009,0x203233752e323373,0x6325202c31722509\n"
".quad 0x0a3b792e64696174,0x2e6f6c2e6c756d09,0x3272250920323375,0x33202c317225202c\n"
".quad 0x2e766f6d090a3b32,0x3372250920323375,0x6974704f5f64202c,0x0a3b617461446e6f\n"
".quad 0x3233752e64646109,0x25202c3472250920,0x3b337225202c3272,0x6e6f632e646c090a\n"
".quad 0x09203436662e7473,0x255b202c31646625,0x090a3b5d302b3472,0x31093309636f6c2e\n"
".quad 0x646c090a30093731,0x662e74736e6f632e,0x3264662509203436,0x382b3472255b202c\n"
".quad 0x636f6c2e090a3b5d,0x3009383131093309,0x6e6f632e646c090a,0x09203436662e7473\n"
".quad 0x255b202c33646625,0x0a3b5d36312b3472,0x093309636f6c2e09,0x6c090a3009393131\n"
".quad 0x2e74736e6f632e64,0x6466250920343666,0x2b3472255b202c34,0x6c2e090a3b5d3432\n"
".quad 0x393231093309636f,0x2e766f6d090a3009,0x3572250920323375,0x2e6469746e25202c\n"
".quad 0x2e766f6d090a3b78,0x3672250920323375,0x646961746325202c,0x6c756d090a3b782e\n"
".quad 0x203233752e6f6c2e,0x7225202c37722509,0x0a3b357225202c36,0x3233752e766f6d09\n"
".quad 0x25202c3872250920,0x090a3b782e646974,0x203233752e646461,0x7225202c39722509\n"
".quad 0x0a3b377225202c38,0x3233752e766f6d09,0x202c303172250920,0x2e64696174636e25\n"
".quad 0x702e646c090a3b78,0x3233732e6d617261,0x202c313172250920,0x70616475635f5f5b\n"
".quad 0x36315a5f5f6d7261,0x72614365746e6f4d,0x6c656e72654b6f6c,0x704f545f5f343150\n"
".quad 0x756c61566e6f6974,0x7461705f69665065,0x6573090a3b5d4e68,0x33732e656c2e7074\n"
".quad 0x202c317025092032,0x7225202c31317225,0x31702540090a3b39,0x4c24092061726220\n"
".quad 0x323639385f335f74,0x6c2e6c756d090a3b,0x2509203233752e6f,0x317225202c323172\n"
".quad 0x0a3b357225202c30,0x2e6f6c2e6c756d09,0x3172250920323375,0x202c397225202c33\n"
".quad 0x2e6c756d090a3b34,0x09203233752e6f6c,0x7225202c34317225,0x090a3b34202c3131\n"
".quad 0x752e6f6c2e6c756d,0x3531722509203233,0x202c32317225202c,0x702e646c090a3b34\n"
".quad 0x3233752e6d617261,0x202c363172250920,0x70616475635f5f5b,0x36315a5f5f6d7261\n"
".quad 0x72614365746e6f4d,0x6c656e72654b6f6c,0x704f545f5f343150,0x756c61566e6f6974\n"
".quad 0x535f645f69665065,0x3b5d73656c706d61,0x33752e646461090a,0x2c37317225092032\n"
".quad 0x25202c3331722520,0x6461090a3b363172,0x2509203233752e64,0x317225202c383172\n"
".quad 0x3b36317225202c34,0x36662e766f6d090a,0x2c35646625092034,0x3030303030643020\n"
".quad 0x3030303030303030,0x202f2f093b303030,0x662e766f6d090a30,0x3664662509203436\n"
".quad 0x303030306430202c,0x3030303030303030,0x2f2f093b30303030,0x335f744c240a3020\n"
".quad 0x200a3a343139365f,0x3e706f6f6c3c2f2f,0x6f6220706f6f4c20,0x20656e696c207964\n"
".quad 0x73656e202c393231,0x70656420676e6974,0x65202c31203a6874,0x646574616d697473\n"
".quad 0x6974617265746920,0x6b6e75203a736e6f,0x6c2e090a6e776f6e,0x303331093309636f\n"
".quad 0x672e646c090a3009,0x33662e6c61626f6c,0x202c316625092032,0x5d302b373172255b\n"
".quad 0x662e747663090a3b,0x09203233662e3436,0x6625202c37646625,0x636f6c2e090a3b31\n"
".quad 0x3009313331093309,0x6e722e64616d090a,0x662509203436662e,0x34646625202c3864\n"
".quad 0x202c37646625202c,0x6d090a3b33646625,0x09203436622e766f,0x72252c393172257b\n"
".quad 0x646625202c7d3032,0x2e766f6d090a3b38,0x3272250920323373,0x343630312d202c31\n"
".quad 0x0a3b393537353738,0x2e746c2e74657309,0x203233732e323375,0x25202c3232722509\n"
".quad 0x327225202c303272,0x2e67656e090a3b31,0x3272250920323373,0x3b32327225202c33\n"
".quad 0x33752e766f6d090a,0x2c34327225092032,0x3533353238303120,0x6573090a3b303934\n"
".quad 0x3233752e656c2e74,0x722509203233752e,0x30327225202c3532,0x0a3b34327225202c\n"
".quad 0x3233732e67656e09,0x202c363272250920,0x6f090a3b35327225,0x2509203233622e72\n"
".quad 0x327225202c373272,0x3b36327225202c33,0x33752e766f6d090a,0x2c38327225092032\n"
".quad 0x746573090a3b3020,0x3233732e71652e70,0x25202c3270250920,0x327225202c373272\n"
".quad 0x32702540090a3b38,0x4c24092061726220,0x303731375f335f74,0x6f6c3c2f2f200a3b\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c39323120656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x0a343139365f335f,0x313309636f6c2e09\n"
".quad 0x090a300937313309,0x203436662e766f6d,0x30202c3964662509,0x3435313766663364\n"
".quad 0x6632386232353637,0x2e31202f2f093b65,0x756d090a37323434,0x2509203436662e6c\n"
".quad 0x6625202c30316466,0x39646625202c3864,0x722e747663090a3b,0x662e3436662e696e\n"
".quad 0x3164662509203436,0x3031646625202c31,0x662e766f6d090a3b,0x3164662509203436\n"
".quad 0x6566626430202c32,0x6665663234653236,0x2f093b6665393361,0x3339362e302d202f\n"
".quad 0x64616d090a373431,0x203436662e6e722e,0x202c333164662509,0x25202c3131646625\n"
".quad 0x6625202c32316466,0x766f6d090a3b3864,0x662509203436662e,0x626430202c343164\n"
".quad 0x3365396362613763,0x3b66333038393362,0x332e322d202f2f09,0x37312d6535303931\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x646625202c353164,0x31646625202c3131\n"
".quad 0x3331646625202c34,0x662e766f6d090a3b,0x3164662509203436,0x3265336430202c36\n"
".quad 0x6663636637306631,0x2f093b6461623835,0x343838302e32202f,0x6d090a39302d6533\n"
".quad 0x09203436662e766f,0x30202c3731646625,0x3864666135653364,0x6162336336616431\n"
".quad 0x2e32202f2f093b66,0x302d653636333135,0x722e64616d090a38,0x2509203436662e6e\n"
".quad 0x6625202c38316466,0x646625202c363164,0x31646625202c3531,0x2e766f6d090a3b37\n"
".quad 0x6466250920343666,0x65336430202c3931,0x3666353565373239,0x093b366530386630\n"
".quad 0x3535372e32202f2f,0x090a37302d653537,0x662e6e722e64616d,0x3264662509203436\n"
".quad 0x3831646625202c30,0x2c3531646625202c,0x0a3b393164662520,0x3436662e766f6d09\n"
".quad 0x2c31326466250920,0x3137636533643020,0x6432306638616464,0x202f2f093b363636\n"
".quad 0x6532373535372e32,0x64616d090a36302d,0x203436662e6e722e,0x202c323264662509\n"
".quad 0x25202c3032646625,0x6625202c35316466,0x6c2e090a3b313264,0x313309313309636f\n"
".quad 0x766f6d090a300938,0x662509203436662e,0x336430202c333264,0x3130613130616665\n"
".quad 0x3b30653439386233,0x38342e32202f2f09,0x0a35302d65363130,0x2e6e722e64616d09\n"
".quad 0x6466250920343666,0x32646625202c3432,0x3531646625202c32,0x3b3332646625202c\n"
".quad 0x3309636f6c2e090a,0x0a30093931330931,0x3436662e766f6d09,0x2c35326466250920\n"
".quad 0x3061326633643020,0x6661336431306131,0x202f2f093b383837,0x3839313030302e30\n"
".quad 0x64616d090a333134,0x203436662e6e722e,0x202c363264662509,0x25202c3432646625\n"
".quad 0x6625202c35316466,0x6c2e090a3b353264,0x323309313309636f,0x766f6d090a300930\n"
".quad 0x662509203436662e,0x336430202c373264,0x3163363163363566,0x3b63653161336336\n"
".quad 0x30302e30202f2f09,0x090a393838383331,0x662e6e722e64616d,0x3264662509203436\n"
".quad 0x3632646625202c38,0x2c3531646625202c,0x0a3b373264662520,0x313309636f6c2e09\n"
".quad 0x090a300931323309,0x203436662e766f6d,0x202c393264662509,0x3131313866336430\n"
".quad 0x3139303131313131,0x30202f2f093b3136,0x333333333830302e,0x722e64616d090a33\n"
".quad 0x2509203436662e6e,0x6625202c30336466,0x646625202c383264,0x32646625202c3531\n"
".quad 0x636f6c2e090a3b39,0x0932323309313309,0x662e766f6d090a30,0x3364662509203436\n"
".quad 0x6166336430202c31,0x3535353535353535,0x2f093b3163343535,0x363134302e30202f\n"
".quad 0x64616d090a373636,0x203436662e6e722e,0x202c323364662509,0x25202c3033646625\n"
".quad 0x6625202c35316466,0x6c2e090a3b313364,0x323309313309636f,0x766f6d090a300933\n"
".quad 0x662509203436662e,0x336430202c333364,0x3535353535356366,0x3b66363535353535\n"
".quad 0x36312e30202f2f09,0x616d090a37363636,0x3436662e6e722e64,0x2c34336466250920\n"
".quad 0x202c323364662520,0x25202c3531646625,0x2e090a3b33336466,0x3309313309636f6c\n"
".quad 0x6f6d090a30093432,0x2509203436662e76,0x6430202c35336466,0x3030303030656633\n"
".quad 0x3030303030303030,0x352e30202f2f093b,0x6e722e64616d090a,0x662509203436662e\n"
".quad 0x646625202c363364,0x31646625202c3433,0x3533646625202c35,0x09636f6c2e090a3b\n"
".quad 0x3009363233093133,0x36662e6c756d090a,0x3733646625092034,0x2c3531646625202c\n"
".quad 0x0a3b363364662520,0x2e6e722e64616d09,0x6466250920343666,0x33646625202c3833\n"
".quad 0x3531646625202c37,0x3b3531646625202c,0x3309636f6c2e090a,0x0a30093830370931\n"
".quad 0x697a722e74766309,0x3436662e3233732e,0x202c393272250920,0x090a3b3131646625\n"
".quad 0x203233622e6c6873,0x25202c3033722509,0x3b3032202c393272,0x33732e646461090a\n"
".quad 0x2c31337225092032,0x31202c3033722520,0x3432333936323730,0x2e646461090a3b38\n"
".quad 0x3372250920323375,0x2c39327225202c32,0x090a3b3032303120,0x203233752e766f6d\n"
".quad 0x32202c3333722509,0x6573090a3b303430,0x33752e74672e7074,0x202c337025092032\n"
".quad 0x7225202c32337225,0x702540090a3b3333,0x2409206172622033,0x3339375f335f744c\n"
".quad 0x6c3c2f2f200a3b38,0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070\n"
".quad 0x2c39323120656e69,0x616c206461656820,0x4c242064656c6562,0x343139365f335f74\n"
".quad 0x3309636f6c2e090a,0x0a30093131370931,0x3233732e766f6d09,0x202c343372250920\n"
".quad 0x2e766f6d090a3b30,0x6466250920343662,0x3372257b202c3933,0x3b7d313372252c34\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x646625202c303464,0x33646625202c3833\n"
".quad 0x3933646625202c39,0x752e617262090a3b,0x5f744c240920696e,0x0a3b323836375f33\n"
".quad 0x39375f335f744c24,0x3c2f2f200a3a3833,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x39323120656e696c,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x3139365f335f744c,0x752e766f6d090a34,0x3533722509203233,0x6573090a3b30202c\n"
".quad 0x33732e65672e7074,0x202c347025092032,0x7225202c39327225,0x702540090a3b3533\n"
".quad 0x2409206172622034,0x3534385f335f744c,0x6c3c2f2f200a3b30,0x726150203e706f6f\n"
".quad 0x6f6f6c20666f2074,0x6c2079646f622070,0x2c39323120656e69,0x616c206461656820\n"
".quad 0x4c242064656c6562,0x343139365f335f74,0x3309636f6c2e090a,0x0a30093531370931\n"
".quad 0x3233732e64646109,0x202c313372250920,0x3735202c31337225,0x0a3b303836313736\n"
".quad 0x3233732e766f6d09,0x202c363372250920,0x3130373036313031,0x617262090a3b3434\n"
".quad 0x4c240920696e752e,0x343931385f335f74,0x5f335f744c240a3b,0x2f200a3a30353438\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3120656e696c2079\n"
".quad 0x64616568202c3932,0x64656c6562616c20,0x365f335f744c2420,0x766f6d090a343139\n"
".quad 0x722509203233732e,0x33373031202c3633,0x0a3b343238313437,0x31385f335f744c24\n"
".quad 0x3c2f2f200a3a3439,0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f\n"
".quad 0x39323120656e696c,0x6c2064616568202c,0x242064656c656261,0x3139365f335f744c\n"
".quad 0x09636f6c2e090a34,0x3009323237093133,0x33732e766f6d090a,0x2c37337225092032\n"
".quad 0x766f6d090a3b3020,0x662509203436622e,0x72257b202c313464,0x7d363372252c3733\n"
".quad 0x722e64616d090a3b,0x2509203436662e6e,0x6625202c32346466,0x646625202c383364\n"
".quad 0x34646625202c3134,0x2e627573090a3b31,0x3372250920323373,0x2c31337225202c38\n"
".quad 0x3637353834303120,0x732e766f6d090a3b,0x3933722509203233,0x6f6d090a3b30202c\n"
".quad 0x2509203436622e76,0x257b202c33346466,0x383372252c393372,0x2e6c756d090a3b7d\n"
".quad 0x6466250920343666,0x34646625202c3034,0x3334646625202c32,0x5f335f744c240a3b\n"
".quad 0x2f200a3a32383637,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3120656e696c2079,0x64616568202c3932,0x64656c6562616c20,0x365f335f744c2420\n"
".quad 0x6f6c2e090a343139,0x3433370931330963,0x2e766f6d090a3009,0x6466250920343666\n"
".quad 0x34646625202c3434,0x2e617262090a3b30,0x444c240920696e75,0x69725f69646e6557\n"
".quad 0x315f3038315f746e,0x5f335f744c240a3b,0x2f200a3a30373137,0x203e706f6f6c3c2f\n"
".quad 0x20666f2074726150,0x646f6220706f6f6c,0x3120656e696c2079,0x64616568202c3932\n"
".quad 0x64656c6562616c20,0x365f335f744c2420,0x6f6c2e090a343139,0x3034370931330963\n"
".quad 0x2e766f6d090a3009,0x6466250920343666,0x66376430202c3534,0x3030303030303066\n"
".quad 0x093b303030303030,0x090a666e69202f2f,0x203436662e766f6d,0x202c363464662509\n"
".quad 0x3030303030306430,0x3030303030303030,0x30202f2f093b3030,0x33732e766f6d090a\n"
".quad 0x2c30347225092032,0x746573090a3b3020,0x3233732e65672e70,0x25202c3570250920\n"
".quad 0x347225202c303272,0x706c6573090a3b30,0x662509203436662e,0x646625202c373464\n"
".quad 0x34646625202c3534,0x0a3b357025202c36,0x3436662e64646109,0x2c38346466250920\n"
".quad 0x25202c3864662520,0x6261090a3b386466,0x2509203436662e73,0x6625202c39346466\n"
".quad 0x766f6d090a3b3864,0x662509203436662e,0x376430202c303564,0x3030303030306666\n"
".quad 0x3b30303030303030,0x0a666e69202f2f09,0x656c2e7074657309,0x702509203436662e\n"
".quad 0x3934646625202c36,0x3b3035646625202c,0x662e706c6573090a,0x3464662509203436\n"
".quad 0x3734646625202c34,0x2c3834646625202c,0x4c240a3b36702520,0x725f69646e655744\n"
".quad 0x5f3038315f746e69,0x6c3c2f2f200a3a31,0x726150203e706f6f,0x6f6f6c20666f2074\n"
".quad 0x6c2079646f622070,0x2c39323120656e69,0x616c206461656820,0x4c242064656c6562\n"
".quad 0x343139365f335f74,0x3309636f6c2e090a,0x090a300932333109,0x203436662e6c756d\n"
".quad 0x202c313564662509,0x6625202c31646625,0x7573090a3b343464,0x2509203436662e62\n"
".quad 0x6625202c32356466,0x646625202c313564,0x2e766f6d090a3b32,0x6466250920343666\n"
".quad 0x30306430202c3335,0x3030303030303030,0x093b303030303030,0x616d090a30202f2f\n"
".quad 0x2509203436662e78,0x6625202c34356466,0x646625202c323564,0x646461090a3b3335\n"
".quad 0x662509203436662e,0x35646625202c3664,0x3b36646625202c34,0x3309636f6c2e090a\n"
".quad 0x090a300933333109,0x662e6e722e64616d,0x3564662509203436,0x2c3435646625202c\n"
".quad 0x202c343564662520,0x61090a3b35646625,0x09203233752e6464,0x7225202c37317225\n"
".quad 0x37317225202c3531,0x2e70746573090a3b,0x09203233752e746c,0x317225202c377025\n"
".quad 0x3b38317225202c37,0x622037702540090a,0x5f744c2409206172,0x0a3b343139365f33\n"
".quad 0x696e752e61726209,0x5f335f744c240920,0x4c240a3b32303436,0x323639385f335f74\n"
".quad 0x6c2e6c756d090a3a,0x2509203233752e6f,0x317225202c323172,0x0a3b357225202c30\n"
".quad 0x3436662e766f6d09,0x202c356466250920,0x3030303030306430,0x3030303030303030\n"
".quad 0x30202f2f093b3030,0x36662e766f6d090a,0x2c36646625092034,0x3030303030643020\n"
".quad 0x3030303030303030,0x202f2f093b303030,0x5f335f744c240a30,0x2e090a3a32303436\n"
".quad 0x3331093309636f6c,0x6c756d090a300935,0x203233732e6f6c2e,0x25202c3134722509\n"
".quad 0x32317225202c3172,0x732e646461090a3b,0x3234722509203233,0x202c31347225202c\n"
".quad 0x756d090a3b397225,0x3233752e6f6c2e6c,0x202c333472250920,0x3631202c32347225\n"
".quad 0x61702e646c090a3b,0x203233752e6d6172,0x5b202c3434722509,0x6170616475635f5f\n"
".quad 0x4d36315a5f5f6d72,0x6c72614365746e6f,0x506c656e72654b6f,0x74704f545f5f3431\n"
".quad 0x65756c61566e6f69,0x75425f645f696650,0x090a3b5d72656666,0x203233752e646461\n"
".quad 0x25202c3534722509,0x347225202c343472,0x672e7473090a3b33,0x36662e6c61626f6c\n"
".quad 0x353472255b092034,0x646625202c5d302b,0x672e7473090a3b36,0x36662e6c61626f6c\n"
".quad 0x353472255b092034,0x646625202c5d382b,0x636f6c2e090a3b35,0x3009363331093309\n"
".quad 0x0a3b74697865090a,0x5f646e6557444c24,0x746e6f4d36315a5f,0x654b6f6c72614365\n"
".quad 0x5f3431506c656e72,0x6e6f6974704f545f,0x69665065756c6156,0x202f2f207d090a3a\n"
".quad 0x746e6f4d36315a5f,0x654b6f6c72614365,0x5f3431506c656e72,0x6e6f6974704f545f\n"
".quad 0x69665065756c6156,0x61626f6c672e090a,0x6e67696c612e206c,0x642038622e203820\n"
".quad 0x6c61566c6c61435f,0x38363732335b6575,0x6e652e090a0a3b5d,0x37325a5f20797274\n"
".quad 0x72614365746e6f4d,0x6f6c42656e4f6f6c,0x74704f7265506b63,0x28206966506e6f69\n"
".quad 0x617261702e09090a,0x5f203233752e206d,0x726170616475635f,0x6f4d37325a5f5f6d\n"
".quad 0x6f6c72614365746e,0x6b636f6c42656e4f,0x6f6974704f726550,0x535f645f6966506e\n"
".quad 0x0a2c73656c706d61,0x6d617261702e0909,0x5f5f203233732e20,0x6d72617061647563\n"
".quad 0x6e6f4d37325a5f5f,0x4f6f6c7261436574,0x506b636f6c42656e,0x6e6f6974704f7265\n"
".quad 0x687461705f696650,0x2e090a7b090a294e,0x3233752e20676572,0x3b3e38373c722520\n"
".quad 0x2e206765722e090a,0x333c662520323366,0x6765722e090a3b3e,0x6625203436662e20\n"
".quad 0x0a3b3e3630313c64,0x702e206765722e09,0x323c702520646572,0x68732e090a3b3e31\n"
".quad 0x6c612e2064657261,0x622e2038206e6769,0x616475635f5f2038,0x5f616475635f5f5f\n"
".quad 0x61765f6c61636f6c,0x5f34333836335f72,0x635f6e6f6e5f3433,0x535f735f74736e6f\n"
".quad 0x38396c6c61436d75,0x383430325b383233,0x6168732e090a3b5d,0x696c612e20646572\n"
".quad 0x38622e2038206e67,0x5f616475635f5f20,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x335f35333836335f,0x6f635f6e6f6e5f34,0x75535f735f74736e,0x30316c6c6143326d\n"
".quad 0x3430325b36373330,0x6f6c2e090a3b5d38,0x0939343109330963,0x656257444c240a30\n"
".quad 0x37325a5f5f6e6967,0x72614365746e6f4d,0x6f6c42656e4f6f6c,0x74704f7265506b63\n"
".quad 0x0a3a6966506e6f69,0x093309636f6c2e09,0x63090a3009363531,0x752e3233732e7476\n"
".quad 0x2c31722509203233,0x2e64696174632520,0x2e6c756d090a3b78,0x09203233752e6f6c\n"
".quad 0x317225202c327225,0x6d090a3b3233202c,0x09203233752e766f,0x4f5f64202c337225\n"
".quad 0x7461446e6f697470,0x2e646461090a3b61,0x3472250920323375,0x25202c327225202c\n"
".quad 0x2e646c090a3b3372,0x36662e74736e6f63,0x2c31646625092034,0x5d302b3472255b20\n"
".quad 0x09636f6c2e090a3b,0x0a30093735310933,0x736e6f632e646c09,0x2509203436662e74\n"
".quad 0x72255b202c326466,0x2e090a3b5d382b34,0x3531093309636f6c,0x2e646c090a300938\n"
".quad 0x36662e74736e6f63,0x2c33646625092034,0x36312b3472255b20,0x636f6c2e090a3b5d\n"
".quad 0x3009393531093309,0x6e6f632e646c090a,0x09203436662e7473,0x255b202c34646625\n"
".quad 0x0a3b5d34322b3472,0x093309636f6c2e09,0x63090a3009343631,0x752e3233732e7476\n"
".quad 0x2c35722509203233,0x3b782e6469742520,0x33732e766f6d090a,0x202c367225092032\n"
".quad 0x6f6d090a3b357225,0x2509203233732e76,0x3b353532202c3772,0x6c2e70746573090a\n"
".quad 0x2509203233732e65,0x2c357225202c3170,0x40090a3b37722520,0x6172622031702521\n"
".quad 0x5f345f744c240920,0x090a3b3839323332,0x203233752e766f6d,0x5f5f202c38722509\n"
".quad 0x635f5f5f61647563,0x61636f6c5f616475,0x36335f7261765f6c,0x6e5f34335f343338\n"
".quad 0x74736e6f635f6e6f,0x61436d75535f735f,0x3b38323338396c6c,0x33752e766f6d090a\n"
".quad 0x202c397225092032,0x5f5f616475635f5f,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x34335f3533383633,0x6e6f635f6e6f6e5f,0x6d75535f735f7473,0x3030316c6c614332\n"
".quad 0x756d090a3b363733,0x3233752e6f6c2e6c,0x202c303172250920,0x0a3b38202c357225\n"
".quad 0x3233752e766f6d09,0x202c313172250920,0x3b782e6469746e25,0x6f6c2e6c756d090a\n"
".quad 0x722509203233752e,0x31317225202c3231,0x6461090a3b38202c,0x2509203233752e64\n"
".quad 0x317225202c333172,0x0a3b387225202c30,0x3233752e64646109,0x202c343172250920\n"
".quad 0x7225202c30317225,0x702e646c090a3b39,0x3233732e6d617261,0x202c353172250920\n"
".quad 0x70616475635f5f5b,0x37325a5f5f6d7261,0x72614365746e6f4d,0x6f6c42656e4f6f6c\n"
".quad 0x74704f7265506b63,0x705f6966506e6f69,0x240a3b5d4e687461,0x3833325f345f744c\n"
".quad 0x3c2f2f200a3a3031,0x6f4c203e706f6f6c,0x2079646f6220706f,0x34363120656e696c\n"
".quad 0x6e697473656e202c,0x3a68747065642067,0x69747365202c3120,0x746920646574616d\n"
".quad 0x736e6f6974617265,0x776f6e6b6e75203a,0x2e70746573090a6e,0x09203233732e6567\n"
".quad 0x367225202c327025,0x0a3b35317225202c,0x7262203270254009,0x345f744c24092061\n"
".quad 0x0a3b30373732335f,0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066\n"
".quad 0x656e696c2079646f,0x6568202c34363120,0x6c6562616c206461,0x345f744c24206465\n"
".quad 0x090a30313833325f,0x203233732e627573,0x25202c3631722509,0x367225202c353172\n"
".quad 0x732e646461090a3b,0x3731722509203233,0x202c36317225202c,0x6873090a3b353532\n"
".quad 0x2509203233732e72,0x317225202c383172,0x090a3b3133202c37,0x203233732e766f6d\n"
".quad 0x32202c3931722509,0x646e61090a3b3535,0x722509203233622e,0x38317225202c3032\n"
".quad 0x0a3b39317225202c,0x3233732e64646109,0x202c313272250920,0x7225202c30327225\n"
".quad 0x726873090a3b3731,0x722509203233732e,0x31327225202c3232,0x756d090a3b38202c\n"
".quad 0x3233752e6f6c2e6c,0x202c333272250920,0x0a3b34202c367225,0x2e6f6c2e6c756d09\n"
".quad 0x3272250920323375,0x2c35317225202c34,0x2e646c090a3b3420,0x33752e6d61726170\n"
".quad 0x2c35327225092032,0x616475635f5f5b20,0x325a5f5f6d726170,0x614365746e6f4d37\n"
".quad 0x6c42656e4f6f6c72,0x704f7265506b636f,0x5f6966506e6f6974,0x656c706d61535f64\n"
".quad 0x646461090a3b5d73,0x722509203233752e,0x33327225202c3632,0x0a3b35327225202c\n"
".quad 0x3233752e64646109,0x202c373272250920,0x7225202c34327225,0x766f6d090a3b3532\n"
".quad 0x662509203436662e,0x30306430202c3564,0x3030303030303030,0x093b303030303030\n"
".quad 0x6f6d090a30202f2f,0x2509203436662e76,0x306430202c366466,0x3030303030303030\n"
".quad 0x3b30303030303030,0x2f200a30202f2f09,0x203e706f6f6c3c2f,0x20666f2074726150\n"
".quad 0x646f6220706f6f6c,0x3120656e696c2079,0x64616568202c3436,0x64656c6562616c20\n"
".quad 0x325f345f744c2420,0x6f6d090a30313833,0x2509203233732e76,0x327225202c383272\n"
".quad 0x345f744c240a3b32,0x0a3a38373534325f,0x706f6f6c3c2f2f20,0x6220706f6f4c203e\n"
".quad 0x656e696c2079646f,0x656e202c34363120,0x656420676e697473,0x202c32203a687470\n"
".quad 0x6574616d69747365,0x7461726574692064,0x6e75203a736e6f69,0x2e090a6e776f6e6b\n"
".quad 0x3631093309636f6c,0x2e646c090a300937,0x662e6c61626f6c67,0x2c31662509203233\n"
".quad 0x302b363272255b20,0x2e747663090a3b5d,0x203233662e343666,0x25202c3764662509\n"
".quad 0x6f6c2e090a3b3166,0x0938363109330963,0x722e64616d090a30,0x2509203436662e6e\n"
".quad 0x646625202c386466,0x2c37646625202c34,0x090a3b3364662520,0x203436622e766f6d\n"
".quad 0x252c393272257b09,0x6625202c7d303372,0x766f6d090a3b3864,0x722509203233732e\n"
".quad 0x3630312d202c3133,0x3b39353735373834,0x746c2e746573090a,0x3233732e3233752e\n"
".quad 0x202c323372250920,0x7225202c30337225,0x67656e090a3b3133,0x722509203233732e\n"
".quad 0x32337225202c3333,0x752e766f6d090a3b,0x3433722509203233,0x333532383031202c\n"
".quad 0x73090a3b30393435,0x33752e656c2e7465,0x2509203233752e32,0x337225202c353372\n"
".quad 0x3b34337225202c30,0x33732e67656e090a,0x2c36337225092032,0x090a3b3533722520\n"
".quad 0x09203233622e726f,0x7225202c37337225,0x36337225202c3333,0x752e766f6d090a3b\n"
".quad 0x3833722509203233,0x6573090a3b30202c,0x33732e71652e7074,0x202c337025092032\n"
".quad 0x7225202c37337225,0x702540090a3b3833,0x2409206172622033,0x3834325f345f744c\n"
".quad 0x3c2f2f200a3b3433,0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f\n"
".quad 0x34363120656e696c,0x6c2064616568202c,0x242064656c656261,0x3534325f345f744c\n"
".quad 0x636f6c2e090a3837,0x0937313309313309,0x662e766f6d090a30,0x3964662509203436\n"
".quad 0x376666336430202c,0x6232353637343531,0x2f2f093b65663238,0x0a373234342e3120\n"
".quad 0x3436662e6c756d09,0x2c30316466250920,0x25202c3864662520,0x7663090a3b396466\n"
".quad 0x36662e696e722e74,0x2509203436662e34,0x6625202c31316466,0x6f6d090a3b303164\n"
".quad 0x2509203436662e76,0x6430202c32316466,0x3234653236656662,0x6665393361666566\n"
".quad 0x2e302d202f2f093b,0x090a373431333936,0x662e6e722e64616d,0x3164662509203436\n"
".quad 0x3131646625202c33,0x2c3231646625202c,0x090a3b3864662520,0x203436662e766f6d\n"
".quad 0x202c343164662509,0x6362613763626430,0x3038393362336539,0x2d202f2f093b6633\n"
".quad 0x6535303931332e32,0x64616d090a37312d,0x203436662e6e722e,0x202c353164662509\n"
".quad 0x25202c3131646625,0x6625202c34316466,0x6f6d090a3b333164,0x2509203436662e76\n"
".quad 0x6430202c36316466,0x6637306631326533,0x6461623835666363,0x302e32202f2f093b\n"
".quad 0x39302d6533343838,0x36662e766f6d090a,0x3731646625092034,0x613565336430202c\n"
".quad 0x6336616431386466,0x2f2f093b66616233,0x36363331352e3220,0x616d090a38302d65\n"
".quad 0x3436662e6e722e64,0x2c38316466250920,0x202c363164662520,0x25202c3531646625\n"
".quad 0x6d090a3b37316466,0x09203436662e766f,0x30202c3931646625,0x3565373239653364\n"
".quad 0x6530386630366635,0x2e32202f2f093b36,0x302d653537353537,0x722e64616d090a37\n"
".quad 0x2509203436662e6e,0x6625202c30326466,0x646625202c383164,0x31646625202c3531\n"
".quad 0x2e766f6d090a3b39,0x6466250920343666,0x65336430202c3132,0x6638616464313763\n"
".quad 0x093b363636643230,0x3535372e32202f2f,0x090a36302d653237,0x662e6e722e64616d\n"
".quad 0x3264662509203436,0x3032646625202c32,0x2c3531646625202c,0x0a3b313264662520\n"
".quad 0x313309636f6c2e09,0x090a300938313309,0x203436662e766f6d,0x202c333264662509\n"
".quad 0x3130616665336430,0x3439386233313061,0x32202f2f093b3065,0x2d6536313038342e\n"
".quad 0x2e64616d090a3530,0x09203436662e6e72,0x25202c3432646625,0x6625202c32326466\n"
".quad 0x646625202c353164,0x6f6c2e090a3b3332,0x3931330931330963,0x2e766f6d090a3009\n"
".quad 0x6466250920343666,0x66336430202c3532,0x6431306131306132,0x093b383837666133\n"
".quad 0x3030302e30202f2f,0x090a333134383931,0x662e6e722e64616d,0x3264662509203436\n"
".quad 0x3432646625202c36,0x2c3531646625202c,0x0a3b353264662520,0x313309636f6c2e09\n"
".quad 0x090a300930323309,0x203436662e766f6d,0x202c373264662509,0x3163363566336430\n"
".quad 0x3161336336316336,0x30202f2f093b6365,0x383838333130302e,0x722e64616d090a39\n"
".quad 0x2509203436662e6e,0x6625202c38326466,0x646625202c363264,0x32646625202c3531\n"
".quad 0x636f6c2e090a3b37,0x0931323309313309,0x662e766f6d090a30,0x3264662509203436\n"
".quad 0x3866336430202c39,0x3131313131313131,0x2f093b3136313930,0x333830302e30202f\n"
".quad 0x616d090a33333333,0x3436662e6e722e64,0x2c30336466250920,0x202c383264662520\n"
".quad 0x25202c3531646625,0x2e090a3b39326466,0x3309313309636f6c,0x6f6d090a30093232\n"
".quad 0x2509203436662e76,0x6430202c31336466,0x3535353535616633,0x3163343535353535\n"
".quad 0x302e30202f2f093b,0x090a373636363134,0x662e6e722e64616d,0x3364662509203436\n"
".quad 0x3033646625202c32,0x2c3531646625202c,0x0a3b313364662520,0x313309636f6c2e09\n"
".quad 0x090a300933323309,0x203436662e766f6d,0x202c333364662509,0x3535356366336430\n"
".quad 0x3535353535353535,0x30202f2f093b6636,0x0a3736363636312e,0x2e6e722e64616d09\n"
".quad 0x6466250920343666,0x33646625202c3433,0x3531646625202c32,0x3b3333646625202c\n"
".quad 0x3309636f6c2e090a,0x0a30093432330931,0x3436662e766f6d09,0x2c35336466250920\n"
".quad 0x3030656633643020,0x3030303030303030,0x202f2f093b303030,0x64616d090a352e30\n"
".quad 0x203436662e6e722e,0x202c363364662509,0x25202c3433646625,0x6625202c35316466\n"
".quad 0x6c2e090a3b353364,0x323309313309636f,0x6c756d090a300936,0x662509203436662e\n"
".quad 0x646625202c373364,0x33646625202c3531,0x2e64616d090a3b36,0x09203436662e6e72\n"
".quad 0x25202c3833646625,0x6625202c37336466,0x646625202c353164,0x6f6c2e090a3b3531\n"
".quad 0x3830370931330963,0x2e747663090a3009,0x2e3233732e697a72,0x3372250920343666\n"
".quad 0x3131646625202c39,0x622e6c6873090a3b,0x3034722509203233,0x202c39337225202c\n"
".quad 0x646461090a3b3032,0x722509203233732e,0x30347225202c3134,0x393632373031202c\n"
".quad 0x61090a3b38343233,0x09203233752e6464,0x7225202c32347225,0x30323031202c3933\n"
".quad 0x752e766f6d090a3b,0x3334722509203233,0x0a3b30343032202c,0x74672e7074657309\n"
".quad 0x702509203233752e,0x2c32347225202c34,0x090a3b3334722520,0x6172622034702540\n"
".quad 0x5f345f744c240920,0x200a3b3230363532,0x3e706f6f6c3c2f2f,0x666f207472615020\n"
".quad 0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c343631,0x656c6562616c2064\n"
".quad 0x5f345f744c242064,0x2e090a3837353432,0x3709313309636f6c,0x6f6d090a30093131\n"
".quad 0x2509203233732e76,0x0a3b30202c343472,0x3436622e766f6d09,0x2c39336466250920\n"
".quad 0x252c343472257b20,0x6d090a3b7d313472,0x36662e6e722e6461,0x3034646625092034\n"
".quad 0x2c3833646625202c,0x202c393364662520,0x090a3b3933646625,0x20696e752e617262\n"
".quad 0x325f345f744c2409,0x4c240a3b36343335,0x303635325f345f74,0x6c3c2f2f200a3a32\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x2c34363120656e69\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x373534325f345f74,0x752e766f6d090a38\n"
".quad 0x3534722509203233,0x6573090a3b30202c,0x33732e65672e7074,0x202c357025092032\n"
".quad 0x7225202c39337225,0x702540090a3b3534,0x2409206172622035,0x3136325f345f744c\n"
".quad 0x3c2f2f200a3b3431,0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f\n"
".quad 0x34363120656e696c,0x6c2064616568202c,0x242064656c656261,0x3534325f345f744c\n"
".quad 0x636f6c2e090a3837,0x0935313709313309,0x732e646461090a30,0x3134722509203233\n"
".quad 0x202c31347225202c,0x3038363137363735,0x732e766f6d090a3b,0x3634722509203233\n"
".quad 0x373036313031202c,0x62090a3b34343130,0x0920696e752e6172,0x35325f345f744c24\n"
".quad 0x744c240a3b383538,0x34313136325f345f,0x6f6c3c2f2f200a3a,0x74726150203e706f\n"
".quad 0x706f6f6c20666f20,0x696c2079646f6220,0x202c34363120656e,0x62616c2064616568\n"
".quad 0x744c242064656c65,0x38373534325f345f,0x33732e766f6d090a,0x2c36347225092032\n"
".quad 0x3134373337303120,0x744c240a3b343238,0x38353835325f345f,0x6f6c3c2f2f200a3a\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c34363120656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x38373534325f345f,0x3309636f6c2e090a\n"
".quad 0x0a30093232370931,0x3233732e766f6d09,0x202c373472250920,0x2e766f6d090a3b30\n"
".quad 0x6466250920343662,0x3472257b202c3134,0x3b7d363472252c37,0x6e722e64616d090a\n"
".quad 0x662509203436662e,0x646625202c323464,0x34646625202c3833,0x3134646625202c31\n"
".quad 0x732e627573090a3b,0x3834722509203233,0x202c31347225202c,0x3b36373538343031\n"
".quad 0x33732e766f6d090a,0x2c39347225092032,0x766f6d090a3b3020,0x662509203436622e\n"
".quad 0x72257b202c333464,0x7d383472252c3934,0x662e6c756d090a3b,0x3464662509203436\n"
".quad 0x3234646625202c30,0x3b3334646625202c,0x325f345f744c240a,0x2f200a3a36343335\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3120656e696c2079\n"
".quad 0x64616568202c3436,0x64656c6562616c20,0x325f345f744c2420,0x6c2e090a38373534\n"
".quad 0x333709313309636f,0x766f6d090a300934,0x662509203436662e,0x646625202c343464\n"
".quad 0x617262090a3b3034,0x4c240920696e752e,0x725f69646e655744,0x5f3138315f746e69\n"
".quad 0x345f744c240a3b31,0x0a3a34333834325f,0x706f6f6c3c2f2f20,0x6f2074726150203e\n"
".quad 0x6220706f6f6c2066,0x656e696c2079646f,0x6568202c34363120,0x6c6562616c206461\n"
".quad 0x345f744c24206465,0x090a38373534325f,0x09313309636f6c2e,0x6d090a3009303437\n"
".quad 0x09203436662e766f,0x30202c3534646625,0x3030303066663764,0x3030303030303030\n"
".quad 0x6e69202f2f093b30,0x662e766f6d090a66,0x3464662509203436,0x3030306430202c36\n"
".quad 0x3030303030303030,0x2f093b3030303030,0x766f6d090a30202f,0x722509203233732e\n"
".quad 0x090a3b30202c3035,0x2e65672e70746573,0x3670250920323373,0x202c30337225202c\n"
".quad 0x73090a3b30357225,0x203436662e706c65,0x202c373464662509,0x25202c3534646625\n"
".quad 0x7025202c36346466,0x2e646461090a3b36,0x6466250920343666,0x38646625202c3834\n"
".quad 0x0a3b38646625202c,0x3436662e73626109,0x2c39346466250920,0x090a3b3864662520\n"
".quad 0x203436662e766f6d,0x202c303564662509,0x3030306666376430,0x3030303030303030\n"
".quad 0x69202f2f093b3030,0x70746573090a666e,0x203436662e656c2e,0x6625202c37702509\n"
".quad 0x646625202c393464,0x6c6573090a3b3035,0x2509203436662e70,0x6625202c34346466\n"
".quad 0x646625202c373464,0x3b377025202c3834,0x646e6557444c240a,0x315f746e69725f69\n"
".quad 0x2f200a3a315f3138,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3120656e696c2079,0x64616568202c3436,0x64656c6562616c20,0x325f345f744c2420\n"
".quad 0x6c2e090a38373534,0x393631093309636f,0x2e6c756d090a3009,0x6466250920343666\n"
".quad 0x31646625202c3135,0x3b3434646625202c,0x36662e627573090a,0x3235646625092034\n"
".quad 0x2c3135646625202c,0x090a3b3264662520,0x203436662e766f6d,0x202c333564662509\n"
".quad 0x3030303030306430,0x3030303030303030,0x30202f2f093b3030,0x36662e78616d090a\n"
".quad 0x3435646625092034,0x2c3235646625202c,0x0a3b333564662520,0x3436662e64646109\n"
".quad 0x202c366466250920,0x25202c3435646625,0x6c2e090a3b366466,0x303731093309636f\n"
".quad 0x2e64616d090a3009,0x09203436662e6e72,0x6625202c35646625,0x646625202c343564\n"
".quad 0x35646625202c3435,0x752e646461090a3b,0x3632722509203233,0x202c36327225202c\n"
".quad 0x73090a3b34323031,0x752e746c2e707465,0x2c38702509203233,0x25202c3632722520\n"
".quad 0x2540090a3b373272,0x0920617262203870,0x34325f345f744c24,0x2f2f200a3b383735\n"
".quad 0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f,0x363120656e696c20\n"
".quad 0x2064616568202c34,0x2064656c6562616c,0x33325f345f744c24,0x617262090a303138\n"
".quad 0x4c240920696e752e,0x363034325f345f74,0x345f744c240a3b36,0x0a3a30373732335f\n"
".quad 0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f\n"
".quad 0x6568202c34363120,0x6c6562616c206461,0x345f744c24206465,0x090a30313833325f\n"
".quad 0x203436662e766f6d,0x30202c3564662509,0x3030303030303064,0x3030303030303030\n"
".quad 0x0a30202f2f093b30,0x3436662e766f6d09,0x202c366466250920,0x3030303030306430\n"
".quad 0x3030303030303030,0x30202f2f093b3030,0x325f345f744c240a,0x2f200a3a36363034\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3120656e696c2079\n"
".quad 0x64616568202c3436,0x64656c6562616c20,0x325f345f744c2420,0x6c2e090a30313833\n"
".quad 0x323731093309636f,0x732e7473090a3009,0x36662e6465726168,0x333172255b092034\n"
".quad 0x646625202c5d302b,0x636f6c2e090a3b36,0x3009333731093309,0x6168732e7473090a\n"
".quad 0x203436662e646572,0x302b343172255b09,0x3b35646625202c5d,0x33752e646461090a\n"
".quad 0x202c367225092032,0x317225202c367225,0x2e646461090a3b31,0x3172250920323375\n"
".quad 0x2c32317225202c34,0x090a3b3431722520,0x203233752e646461,0x25202c3331722509\n"
".quad 0x317225202c323172,0x2e766f6d090a3b33,0x3572250920323375,0x0a3b353532202c31\n"
".quad 0x656c2e7074657309,0x702509203233732e,0x202c367225202c39,0x40090a3b31357225\n"
".quad 0x2061726220397025,0x325f345f744c2409,0x4c240a3b30313833,0x393233325f345f74\n"
".quad 0x636f6c2e090a3a38,0x3009383731093309,0x33752e766f6d090a,0x202c387225092032\n"
".quad 0x5f5f616475635f5f,0x6f6c5f616475635f,0x5f7261765f6c6163,0x34335f3433383633\n"
".quad 0x6e6f635f6e6f6e5f,0x6d75535f735f7473,0x323338396c6c6143,0x2e766f6d090a3b38\n"
".quad 0x3972250920323375,0x616475635f5f202c,0x5f616475635f5f5f,0x61765f6c61636f6c\n"
".quad 0x5f35333836335f72,0x635f6e6f6e5f3433,0x535f735f74736e6f,0x316c6c6143326d75\n"
".quad 0x090a3b3637333030,0x09383109636f6c2e,0x6f6d090a30093837,0x2509203233732e76\n"
".quad 0x357225202c323572,0x3170252140090a3b,0x4c24092061726220,0x383836325f345f74\n"
".quad 0x2e766f6d090a3b32,0x3572250920323373,0x0a3b313135202c33,0x3233732e62757309\n"
".quad 0x202c343572250920,0x7225202c33357225,0x2e726873090a3b35,0x3572250920323373\n"
".quad 0x2c34357225202c35,0x6f6d090a3b313320,0x2509203233732e76,0x353532202c363572\n"
".quad 0x622e646e61090a3b,0x3735722509203233,0x202c35357225202c,0x61090a3b36357225\n"
".quad 0x09203233732e6464,0x7225202c38357225,0x34357225202c3735,0x732e726873090a3b\n"
".quad 0x3935722509203233,0x202c38357225202c,0x2e766f6d090a3b38,0x3672250920323373\n"
".quad 0x3b39357225202c30,0x325f345f744c240a,0x2f200a3a34393337,0x203e706f6f6c3c2f\n"
".quad 0x646f6220706f6f4c,0x3720656e696c2079,0x697473656e202c38,0x687470656420676e\n"
".quad 0x747365202c31203a,0x6920646574616d69,0x6e6f697461726574,0x6f6e6b6e75203a73\n"
".quad 0x636f6c2e090a6e77,0x3009393709383109,0x79732e726162090a,0x090a3b300920636e\n"
".quad 0x09383109636f6c2e,0x6f6d090a30093038,0x2509203233752e76,0x373231202c313672\n"
".quad 0x2e70746573090a3b,0x09203233732e7467,0x7225202c30317025,0x31367225202c3235\n"
".quad 0x3031702540090a3b,0x4c24092061726220,0x353637325f345f74,0x6c3c2f2f200a3b30\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x202c383720656e69\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34393337325f345f,0x3109636f6c2e090a\n"
".quad 0x090a300935350938,0x752e6f6c2e6c756d,0x3236722509203233,0x202c32357225202c\n"
".quad 0x2e646461090a3b38,0x3672250920323375,0x2c32367225202c33,0x6c090a3b38722520\n"
".quad 0x6465726168732e64,0x662509203436662e,0x72255b202c353564,0x090a3b5d302b3336\n"
".quad 0x65726168732e646c,0x2509203436662e64,0x255b202c36356466,0x343230312b333672\n"
".quad 0x2e646461090a3b5d,0x6466250920343666,0x35646625202c3735,0x3635646625202c35\n"
".quad 0x68732e7473090a3b,0x3436662e64657261,0x2b333672255b0920,0x35646625202c5d30\n"
".quad 0x2e646461090a3b37,0x3672250920323375,0x2c32367225202c34,0x6c090a3b39722520\n"
".quad 0x6465726168732e64,0x662509203436662e,0x72255b202c383564,0x090a3b5d302b3436\n"
".quad 0x65726168732e646c,0x2509203436662e64,0x255b202c39356466,0x343230312b343672\n"
".quad 0x2e646461090a3b5d,0x6466250920343666,0x35646625202c3036,0x3935646625202c38\n"
".quad 0x68732e7473090a3b,0x3436662e64657261,0x2b343672255b0920,0x36646625202c5d30\n"
".quad 0x345f744c240a3b30,0x0a3a30353637325f,0x706f6f6c3c2f2f20,0x6f2074726150203e\n"
".quad 0x6220706f6f6c2066,0x656e696c2079646f,0x616568202c383720,0x656c6562616c2064\n"
".quad 0x5f345f744c242064,0x62090a3439333732,0x20636e79732e7261,0x766f6d090a3b3009\n"
".quad 0x722509203233752e,0x0a3b3336202c3536,0x74672e7074657309,0x702509203233732e\n"
".quad 0x32357225202c3131,0x0a3b35367225202c,0x6220313170254009,0x5f744c2409206172\n"
".quad 0x3b32363138325f34,0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f\n"
".quad 0x6e696c2079646f62,0x6568202c38372065,0x6c6562616c206461,0x345f744c24206465\n"
".quad 0x090a34393337325f,0x09383109636f6c2e,0x756d090a30093635,0x3233752e6f6c2e6c\n"
".quad 0x202c323672250920,0x3b38202c32357225,0x33752e646461090a,0x2c33367225092032\n"
".quad 0x25202c3236722520,0x2e646c090a3b3872,0x662e646572616873,0x3664662509203436\n"
".quad 0x333672255b202c31,0x646c090a3b5d302b,0x2e6465726168732e,0x6466250920343666\n"
".quad 0x3672255b202c3236,0x0a3b5d3231352b33,0x3436662e64646109,0x2c33366466250920\n"
".quad 0x202c313664662520,0x090a3b3236646625,0x65726168732e7473,0x5b09203436662e64\n"
".quad 0x2c5d302b33367225,0x0a3b333664662520,0x3233752e64646109,0x202c343672250920\n"
".quad 0x7225202c32367225,0x732e646c090a3b39,0x36662e6465726168,0x3436646625092034\n"
".quad 0x2b343672255b202c,0x2e646c090a3b5d30,0x662e646572616873,0x3664662509203436\n"
".quad 0x343672255b202c35,0x090a3b5d3231352b,0x203436662e646461,0x202c363664662509\n"
".quad 0x25202c3436646625,0x73090a3b35366466,0x6465726168732e74,0x255b09203436662e\n"
".quad 0x202c5d302b343672,0x240a3b3636646625,0x3138325f345f744c,0x3c2f2f200a3a3236\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x2c383720656e696c\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x393337325f345f74,0x732e726162090a34\n"
".quad 0x0a3b300920636e79,0x3233752e766f6d09,0x202c363672250920,0x746573090a3b3133\n"
".quad 0x3233732e74672e70,0x202c323170250920,0x7225202c32357225,0x702540090a3b3636\n"
".quad 0x0920617262203231,0x38325f345f744c24,0x2f2f200a3b343736,0x50203e706f6f6c3c\n"
".quad 0x6c20666f20747261,0x79646f6220706f6f,0x383720656e696c20,0x6c2064616568202c\n"
".quad 0x242064656c656261,0x3337325f345f744c,0x636f6c2e090a3439,0x3009383509383109\n"
".quad 0x6f6c2e6c756d090a,0x722509203233752e,0x32357225202c3236,0x6461090a3b38202c\n"
".quad 0x2509203233752e64,0x367225202c333672,0x0a3b387225202c32,0x726168732e646c09\n"
".quad 0x09203436662e6465,0x5b202c3736646625,0x3b5d302b33367225,0x6168732e646c090a\n"
".quad 0x203436662e646572,0x202c383664662509,0x35322b333672255b,0x646461090a3b5d36\n"
".quad 0x662509203436662e,0x646625202c393664,0x36646625202c3736,0x732e7473090a3b38\n"
".quad 0x36662e6465726168,0x333672255b092034,0x646625202c5d302b,0x646461090a3b3936\n"
".quad 0x722509203233752e,0x32367225202c3436,0x090a3b397225202c,0x65726168732e646c\n"
".quad 0x2509203436662e64,0x255b202c30376466,0x0a3b5d302b343672,0x726168732e646c09\n"
".quad 0x09203436662e6465,0x5b202c3137646625,0x3635322b34367225,0x2e646461090a3b5d\n"
".quad 0x6466250920343666,0x37646625202c3237,0x3137646625202c30,0x68732e7473090a3b\n"
".quad 0x3436662e64657261,0x2b343672255b0920,0x37646625202c5d30,0x345f744c240a3b32\n"
".quad 0x0a3a34373638325f,0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066\n"
".quad 0x656e696c2079646f,0x616568202c383720,0x656c6562616c2064,0x5f345f744c242064\n"
".quad 0x62090a3439333732,0x20636e79732e7261,0x766f6d090a3b3009,0x722509203233752e\n"
".quad 0x0a3b3531202c3736,0x74672e7074657309,0x702509203233732e,0x32357225202c3331\n"
".quad 0x0a3b37367225202c,0x6220333170254009,0x5f744c2409206172,0x3b36383139325f34\n"
".quad 0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62\n"
".quad 0x6568202c38372065,0x6c6562616c206461,0x345f744c24206465,0x090a34393337325f\n"
".quad 0x09383109636f6c2e,0x756d090a30093935,0x3233752e6f6c2e6c,0x202c323672250920\n"
".quad 0x3b38202c32357225,0x33752e646461090a,0x2c33367225092032,0x25202c3236722520\n"
".quad 0x2e646c090a3b3872,0x662e646572616873,0x3764662509203436,0x333672255b202c33\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x6466250920343666,0x3672255b202c3437\n"
".quad 0x0a3b5d3832312b33,0x3436662e64646109,0x2c35376466250920,0x202c333764662520\n"
".quad 0x090a3b3437646625,0x65726168732e7473,0x5b09203436662e64,0x2c5d302b33367225\n"
".quad 0x0a3b353764662520,0x3233752e64646109,0x202c343672250920,0x7225202c32367225\n"
".quad 0x732e646c090a3b39,0x36662e6465726168,0x3637646625092034,0x2b343672255b202c\n"
".quad 0x2e646c090a3b5d30,0x662e646572616873,0x3764662509203436,0x343672255b202c37\n"
".quad 0x090a3b5d3832312b,0x203436662e646461,0x202c383764662509,0x25202c3637646625\n"
".quad 0x73090a3b37376466,0x6465726168732e74,0x255b09203436662e,0x202c5d302b343672\n"
".quad 0x240a3b3837646625,0x3139325f345f744c,0x3c2f2f200a3a3638,0x6150203e706f6f6c\n"
".quad 0x6f6c20666f207472,0x2079646f6220706f,0x2c383720656e696c,0x616c206461656820\n"
".quad 0x4c242064656c6562,0x393337325f345f74,0x732e726162090a34,0x0a3b300920636e79\n"
".quad 0x3233752e766f6d09,0x202c383672250920,0x70746573090a3b37,0x203233732e74672e\n"
".quad 0x25202c3431702509,0x367225202c323572,0x31702540090a3b38,0x2409206172622034\n"
".quad 0x3639325f345f744c,0x3c2f2f200a3b3839,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x2c383720656e696c,0x616c206461656820,0x4c242064656c6562\n"
".quad 0x393337325f345f74,0x09636f6c2e090a34,0x0a30093036093831,0x2e6f6c2e6c756d09\n"
".quad 0x3672250920323375,0x2c32357225202c32,0x646461090a3b3820,0x722509203233752e\n"
".quad 0x32367225202c3336,0x090a3b387225202c,0x65726168732e646c,0x2509203436662e64\n"
".quad 0x255b202c39376466,0x0a3b5d302b333672,0x726168732e646c09,0x09203436662e6465\n"
".quad 0x5b202c3038646625,0x5d34362b33367225,0x662e646461090a3b,0x3864662509203436\n"
".quad 0x3937646625202c31,0x3b3038646625202c,0x6168732e7473090a,0x203436662e646572\n"
".quad 0x302b333672255b09,0x3138646625202c5d,0x752e646461090a3b,0x3436722509203233\n"
".quad 0x202c32367225202c,0x646c090a3b397225,0x2e6465726168732e,0x6466250920343666\n"
".quad 0x3672255b202c3238,0x6c090a3b5d302b34,0x6465726168732e64,0x662509203436662e\n"
".quad 0x72255b202c333864,0x0a3b5d34362b3436,0x3436662e64646109,0x2c34386466250920\n"
".quad 0x202c323864662520,0x090a3b3338646625,0x65726168732e7473,0x5b09203436662e64\n"
".quad 0x2c5d302b34367225,0x0a3b343864662520,0x39325f345f744c24,0x2f2f200a3a383936\n"
".quad 0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f,0x383720656e696c20\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x3337325f345f744c,0x2e726162090a3439\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c39367225092032,0x746573090a3b3320\n"
".quad 0x3233732e74672e70,0x202c353170250920,0x7225202c32357225,0x702540090a3b3936\n"
".quad 0x0920617262203531,0x30335f345f744c24,0x2f2f200a3b303132,0x50203e706f6f6c3c\n"
".quad 0x6c20666f20747261,0x79646f6220706f6f,0x383720656e696c20,0x6c2064616568202c\n"
".quad 0x242064656c656261,0x3337325f345f744c,0x636f6c2e090a3439,0x3009313609383109\n"
".quad 0x6f6c2e6c756d090a,0x722509203233752e,0x32357225202c3236,0x6461090a3b38202c\n"
".quad 0x2509203233752e64,0x367225202c333672,0x0a3b387225202c32,0x726168732e646c09\n"
".quad 0x09203436662e6465,0x5b202c3538646625,0x3b5d302b33367225,0x6168732e646c090a\n"
".quad 0x203436662e646572,0x202c363864662509,0x32332b333672255b,0x2e646461090a3b5d\n"
".quad 0x6466250920343666,0x38646625202c3738,0x3638646625202c35,0x68732e7473090a3b\n"
".quad 0x3436662e64657261,0x2b333672255b0920,0x38646625202c5d30,0x2e646461090a3b37\n"
".quad 0x3672250920323375,0x2c32367225202c34,0x6c090a3b39722520,0x6465726168732e64\n"
".quad 0x662509203436662e,0x72255b202c383864,0x090a3b5d302b3436,0x65726168732e646c\n"
".quad 0x2509203436662e64,0x255b202c39386466,0x3b5d32332b343672,0x36662e646461090a\n"
".quad 0x3039646625092034,0x2c3838646625202c,0x0a3b393864662520,0x726168732e747309\n"
".quad 0x09203436662e6465,0x5d302b343672255b,0x3b3039646625202c,0x335f345f744c240a\n"
".quad 0x2f200a3a30313230,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3720656e696c2079,0x2064616568202c38,0x2064656c6562616c,0x37325f345f744c24\n"
".quad 0x726162090a343933,0x300920636e79732e,0x752e766f6d090a3b,0x3037722509203233\n"
".quad 0x6573090a3b31202c,0x33732e74672e7074,0x2c36317025092032,0x25202c3235722520\n"
".quad 0x2540090a3b303772,0x2061726220363170,0x335f345f744c2409,0x2f200a3b32323730\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3720656e696c2079\n"
".quad 0x2064616568202c38,0x2064656c6562616c,0x37325f345f744c24,0x6f6c2e090a343933\n"
".quad 0x0932360938310963,0x6c2e6c756d090a30,0x2509203233752e6f,0x357225202c323672\n"
".quad 0x61090a3b38202c32,0x09203233752e6464,0x7225202c33367225,0x3b387225202c3236\n"
".quad 0x6168732e646c090a,0x203436662e646572,0x202c313964662509,0x5d302b333672255b\n"
".quad 0x68732e646c090a3b,0x3436662e64657261,0x2c32396466250920,0x312b333672255b20\n"
".quad 0x646461090a3b5d36,0x662509203436662e,0x646625202c333964,0x39646625202c3139\n"
".quad 0x732e7473090a3b32,0x36662e6465726168,0x333672255b092034,0x646625202c5d302b\n"
".quad 0x646461090a3b3339,0x722509203233752e,0x32367225202c3436,0x090a3b397225202c\n"
".quad 0x65726168732e646c,0x2509203436662e64,0x255b202c34396466,0x0a3b5d302b343672\n"
".quad 0x726168732e646c09,0x09203436662e6465,0x5b202c3539646625,0x5d36312b34367225\n"
".quad 0x662e646461090a3b,0x3964662509203436,0x3439646625202c36,0x3b3539646625202c\n"
".quad 0x6168732e7473090a,0x203436662e646572,0x302b343672255b09,0x3639646625202c5d\n"
".quad 0x5f345f744c240a3b,0x200a3a3232373033,0x3e706f6f6c3c2f2f,0x666f207472615020\n"
".quad 0x6f6220706f6f6c20,0x20656e696c207964,0x64616568202c3837,0x64656c6562616c20\n"
".quad 0x325f345f744c2420,0x6162090a34393337,0x0920636e79732e72,0x2e766f6d090a3b30\n"
".quad 0x3772250920323375,0x73090a3b30202c31,0x732e74672e707465,0x3731702509203233\n"
".quad 0x202c32357225202c,0x40090a3b31377225,0x6172622037317025,0x5f345f744c240920\n"
".quad 0x200a3b3433323133,0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20\n"
".quad 0x20656e696c207964,0x64616568202c3837,0x64656c6562616c20,0x325f345f744c2420\n"
".quad 0x6c2e090a34393337,0x333609383109636f,0x2e6c756d090a3009,0x09203233752e6f6c\n"
".quad 0x7225202c32367225,0x090a3b38202c3235,0x203233752e646461,0x25202c3336722509\n"
".quad 0x387225202c323672,0x68732e646c090a3b,0x3436662e64657261,0x2c37396466250920\n"
".quad 0x302b333672255b20,0x732e646c090a3b5d,0x36662e6465726168,0x3839646625092034\n"
".quad 0x2b333672255b202c,0x646461090a3b5d38,0x662509203436662e,0x646625202c393964\n"
".quad 0x39646625202c3739,0x732e7473090a3b38,0x36662e6465726168,0x333672255b092034\n"
".quad 0x646625202c5d302b,0x646461090a3b3939,0x722509203233752e,0x32367225202c3436\n"
".quad 0x090a3b397225202c,0x65726168732e646c,0x2509203436662e64,0x5b202c3030316466\n"
".quad 0x3b5d302b34367225,0x6168732e646c090a,0x203436662e646572,0x2c31303164662509\n"
".quad 0x382b343672255b20,0x2e646461090a3b5d,0x6466250920343666,0x646625202c323031\n"
".quad 0x646625202c303031,0x7473090a3b313031,0x2e6465726168732e,0x72255b0920343666\n"
".quad 0x25202c5d302b3436,0x240a3b3230316466,0x3231335f345f744c,0x3c2f2f200a3a3433\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x2c383720656e696c\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x393337325f345f74,0x732e726162090a34\n"
".quad 0x0a3b300920636e79,0x383109636f6c2e09,0x61090a3009303809,0x09203233732e6464\n"
".quad 0x7225202c32357225,0x3b363532202c3235,0x33752e766f6d090a,0x2c32377225092032\n"
".quad 0x73090a3b35353220,0x732e656c2e707465,0x3831702509203233,0x202c32357225202c\n"
".quad 0x40090a3b32377225,0x6172622038317025,0x5f345f744c240920,0x240a3b3439333732\n"
".quad 0x3836325f345f744c,0x6f6c2e090a3a3238,0x0938373109330963,0x752e766f6d090a30\n"
".quad 0x3337722509203233,0x6573090a3b30202c,0x33752e656e2e7074,0x2c39317025092032\n"
".quad 0x7225202c35722520,0x702540090a3b3337,0x0920617262203931,0x32335f345f744c24\n"
".quad 0x6c2e090a3b323030,0x313831093309636f,0x2e6c756d090a3009,0x09203233752e6f6c\n"
".quad 0x7225202c34377225,0x090a3b3631202c31,0x203233752e766f6d,0x64202c3537722509\n"
".quad 0x6c61566c6c61435f,0x646461090a3b6575,0x722509203233752e,0x34377225202c3637\n"
".quad 0x0a3b35377225202c,0x726168732e646c09,0x09203436662e6465,0x202c333031646625\n"
".quad 0x5f616475635f5f5b,0x6c5f616475635f5f,0x7261765f6c61636f,0x335f34333836335f\n"
".quad 0x6f635f6e6f6e5f34,0x75535f735f74736e,0x3338396c6c61436d,0x090a3b5d302b3832\n"
".quad 0x61626f6c672e7473,0x5b09203436662e6c,0x2c5d302b36377225,0x3b33303164662520\n"
".quad 0x6168732e646c090a,0x203436662e646572,0x2c34303164662509,0x616475635f5f5b20\n"
".quad 0x5f616475635f5f5f,0x61765f6c61636f6c,0x5f35333836335f72,0x635f6e6f6e5f3433\n"
".quad 0x535f735f74736e6f,0x316c6c6143326d75,0x5d302b3637333030,0x6c672e7473090a3b\n"
".quad 0x3436662e6c61626f,0x2b363772255b0920,0x31646625202c5d38,0x5f744c240a3b3430\n"
".quad 0x3a32303032335f34,0x3309636f6c2e090a,0x090a300933383109,0x4c240a3b74697865\n"
".quad 0x5a5f5f646e655744,0x4365746e6f4d3732,0x42656e4f6f6c7261,0x4f7265506b636f6c\n"
".quad 0x6966506e6f697470,0x202f2f207d090a3a,0x746e6f4d37325a5f,0x6e4f6f6c72614365\n"
".quad 0x65506b636f6c4265,0x506e6f6974704f72,0x6e652e090a0a6966,0x36315a5f20797274\n"
".quad 0x72614365746e6f4d,0x6563756465526f6c,0x704f545f5f343150,0x756c61566e6f6974\n"
".quad 0x2e09090a28206965,0x752e206d61726170,0x6475635f5f203233,0x5a5f5f6d72617061\n"
".quad 0x4365746e6f4d3631,0x756465526f6c7261,0x545f5f3431506563,0x61566e6f6974704f\n"
".quad 0x425f645f6965756c,0x090a2c7265666675,0x206d617261702e09,0x635f5f203233732e\n"
".quad 0x5f6d726170616475,0x746e6f4d36315a5f,0x65526f6c72614365,0x5f34315065637564\n"
".quad 0x6e6f6974704f545f,0x615f6965756c6156,0x090a294e6d756363,0x206765722e090a7b\n"
".quad 0x3c7225203233752e,0x722e090a3b3e3735,0x203436662e206765,0x3b3e36353c646625\n"
".quad 0x2e206765722e090a,0x3c70252064657270,0x732e090a3b3e3631,0x612e206465726168\n"
".quad 0x2e2038206e67696c,0x6475635f5f203862,0x616475635f5f5f61,0x765f6c61636f6c5f\n"
".quad 0x38373836335f7261,0x5f6e6f6e5f34335f,0x5f735f74736e6f63,0x316c6c61436d7553\n"
".quad 0x30325b3233343230,0x732e090a3b5d3834,0x612e206465726168,0x2e2038206e67696c\n"
".quad 0x6475635f5f203862,0x616475635f5f5f61,0x765f6c61636f6c5f,0x39373836335f7261\n"
".quad 0x5f6e6f6e5f34335f,0x5f735f74736e6f63,0x6c6c6143326d7553,0x325b303834343031\n"
".quad 0x2e090a3b5d383430,0x3931093309636f6c,0x57444c240a300933,0x5a5f5f6e69676562\n"
".quad 0x4365746e6f4d3631,0x756465526f6c7261,0x545f5f3431506563,0x61566e6f6974704f\n"
".quad 0x2e090a3a6965756c,0x3032093309636f6c,0x747663090a300932,0x3233752e3233732e\n"
".quad 0x25202c3172250920,0x090a3b782e646974,0x203233732e766f6d,0x7225202c32722509\n"
".quad 0x2e766f6d090a3b31,0x3372250920323373,0x090a3b353532202c,0x2e656c2e70746573\n"
".quad 0x3170250920323373,0x25202c317225202c,0x252140090a3b3372,0x0920617262203170\n"
".quad 0x38315f355f744c24,0x6f6d090a3b383731,0x2509203233752e76,0x75635f5f202c3472\n"
".quad 0x6475635f5f5f6164,0x5f6c61636f6c5f61,0x373836335f726176,0x6e6f6e5f34335f38\n"
".quad 0x735f74736e6f635f,0x6c6c61436d75535f,0x0a3b323334323031,0x3233752e766f6d09\n"
".quad 0x5f202c3572250920,0x5f5f5f616475635f,0x636f6c5f61647563,0x335f7261765f6c61\n"
".quad 0x5f34335f39373836,0x736e6f635f6e6f6e,0x326d75535f735f74,0x343430316c6c6143\n"
".quad 0x2e646c090a3b3038,0x33752e6d61726170,0x202c367225092032,0x70616475635f5f5b\n"
".quad 0x36315a5f5f6d7261,0x72614365746e6f4d,0x6563756465526f6c,0x704f545f5f343150\n"
".quad 0x756c61566e6f6974,0x6d756363615f6965,0x766f6d090a3b5d4e,0x722509203233752e\n"
".quad 0x6961746325202c37,0x756d090a3b782e64,0x3233752e6f6c2e6c,0x25202c3872250920\n"
".quad 0x3b367225202c3772,0x6f6c2e6c756d090a,0x722509203233752e,0x202c387225202c39\n"
".quad 0x2e646c090a3b3631,0x33752e6d61726170,0x2c30317225092032,0x616475635f5f5b20\n"
".quad 0x315a5f5f6d726170,0x614365746e6f4d36,0x63756465526f6c72,0x4f545f5f34315065\n"
".quad 0x6c61566e6f697470,0x75425f645f696575,0x090a3b5d72656666,0x203233752e646461\n"
".quad 0x25202c3131722509,0x397225202c303172,0x6c2e6c756d090a3b,0x2509203233752e6f\n"
".quad 0x317225202c323172,0x6f6d090a3b38202c,0x2509203233752e76,0x746e25202c333172\n"
".quad 0x6d090a3b782e6469,0x33752e6f6c2e6c75,0x2c34317225092032,0x38202c3331722520\n"
".quad 0x752e646461090a3b,0x3531722509203233,0x202c32317225202c,0x6461090a3b347225\n"
".quad 0x2509203233752e64,0x317225202c363172,0x0a3b357225202c32,0x38315f355f744c24\n"
".quad 0x2f2f200a3a303936,0x4c203e706f6f6c3c,0x79646f6220706f6f,0x303220656e696c20\n"
".quad 0x697473656e202c32,0x687470656420676e,0x747365202c31203a,0x6920646574616d69\n"
".quad 0x6e6f697461726574,0x6f6e6b6e75203a73,0x70746573090a6e77,0x203233732e65672e\n"
".quad 0x7225202c32702509,0x0a3b367225202c32,0x7262203270254009,0x355f744c24092061\n"
".quad 0x0a3b34313136325f,0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066\n"
".quad 0x656e696c2079646f,0x6568202c32303220,0x6c6562616c206461,0x355f744c24206465\n"
".quad 0x090a30393638315f,0x203233732e627573,0x25202c3731722509,0x3b327225202c3672\n"
".quad 0x33732e646461090a,0x2c38317225092032,0x32202c3731722520,0x726873090a3b3535\n"
".quad 0x722509203233732e,0x38317225202c3931,0x6d090a3b3133202c,0x09203233732e766f\n"
".quad 0x3532202c30327225,0x2e646e61090a3b35,0x3272250920323362,0x2c39317225202c31\n"
".quad 0x090a3b3032722520,0x203233732e646461,0x25202c3232722509,0x317225202c313272\n"
".quad 0x2e726873090a3b38,0x3272250920323373,0x2c32327225202c33,0x6c756d090a3b3820\n"
".quad 0x203233752e6f6c2e,0x25202c3432722509,0x0a3b3631202c3272,0x2e6f6c2e6c756d09\n"
".quad 0x3272250920323375,0x202c367225202c35,0x646461090a3b3631,0x722509203233732e\n"
".quad 0x34327225202c3632,0x0a3b31317225202c,0x3233732e64646109,0x202c373272250920\n"
".quad 0x7225202c35327225,0x766f6d090a3b3131,0x662509203436662e,0x30306430202c3164\n"
".quad 0x3030303030303030,0x093b303030303030,0x6f6d090a30202f2f,0x2509203436662e76\n"
".quad 0x306430202c326466,0x3030303030303030,0x3b30303030303030,0x2f200a30202f2f09\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079\n"
".quad 0x64616568202c3230,0x64656c6562616c20,0x315f355f744c2420,0x6f6d090a30393638\n"
".quad 0x2509203233732e76,0x327225202c383272,0x355f744c240a3b33,0x0a3a38353439315f\n"
".quad 0x706f6f6c3c2f2f20,0x6220706f6f4c203e,0x656e696c2079646f,0x656e202c32303220\n"
".quad 0x656420676e697473,0x202c32203a687470,0x6574616d69747365,0x7461726574692064\n"
".quad 0x6e75203a736e6f69,0x2e090a6e776f6e6b,0x3032093309636f6c,0x2e646c090a300936\n"
".quad 0x662e6c61626f6c67,0x3364662509203436,0x2b363272255b202c,0x646461090a3b5d30\n"
".quad 0x662509203436662e,0x33646625202c3264,0x0a3b32646625202c,0x093309636f6c2e09\n"
".quad 0x6c090a3009373032,0x6c61626f6c672e64,0x662509203436662e,0x3272255b202c3464\n"
".quad 0x61090a3b5d382b36,0x09203436662e6464,0x6625202c31646625,0x31646625202c3464\n"
".quad 0x732e646461090a3b,0x3632722509203233,0x202c36327225202c,0x73090a3b36393034\n"
".quad 0x752e746c2e707465,0x2c33702509203233,0x25202c3632722520,0x2540090a3b373272\n"
".quad 0x0920617262203370,0x39315f355f744c24,0x2f2f200a3b383534,0x50203e706f6f6c3c\n"
".quad 0x6c20666f20747261,0x79646f6220706f6f,0x303220656e696c20,0x2064616568202c32\n"
".quad 0x2064656c6562616c,0x38315f355f744c24,0x617262090a303936,0x4c240920696e752e\n"
".quad 0x343938315f355f74,0x355f744c240a3b36,0x0a3a34313136325f,0x706f6f6c3c2f2f20\n"
".quad 0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f,0x6568202c32303220\n"
".quad 0x6c6562616c206461,0x355f744c24206465,0x090a30393638315f,0x203436662e766f6d\n"
".quad 0x30202c3164662509,0x3030303030303064,0x3030303030303030,0x0a30202f2f093b30\n"
".quad 0x3436662e766f6d09,0x202c326466250920,0x3030303030306430,0x3030303030303030\n"
".quad 0x30202f2f093b3030,0x315f355f744c240a,0x2f200a3a36343938,0x203e706f6f6c3c2f\n"
".quad 0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079,0x64616568202c3230\n"
".quad 0x64656c6562616c20,0x315f355f744c2420,0x6c2e090a30393638,0x393032093309636f\n"
".quad 0x732e7473090a3009,0x36662e6465726168,0x353172255b092034,0x646625202c5d302b\n"
".quad 0x636f6c2e090a3b32,0x3009303132093309,0x6168732e7473090a,0x203436662e646572\n"
".quad 0x302b363172255b09,0x3b31646625202c5d,0x33752e646461090a,0x202c327225092032\n"
".quad 0x317225202c327225,0x2e646461090a3b33,0x3172250920323375,0x2c34317225202c36\n"
".quad 0x090a3b3631722520,0x203233752e646461,0x25202c3531722509,0x317225202c343172\n"
".quad 0x2e766f6d090a3b35,0x3272250920323375,0x0a3b353532202c39,0x656c2e7074657309\n"
".quad 0x702509203233732e,0x202c327225202c34,0x40090a3b39327225,0x2061726220347025\n"
".quad 0x315f355f744c2409,0x4c240a3b30393638,0x373138315f355f74,0x636f6c2e090a3a38\n"
".quad 0x3009353132093309,0x33752e766f6d090a,0x202c347225092032,0x5f5f616475635f5f\n"
".quad 0x6f6c5f616475635f,0x5f7261765f6c6163,0x34335f3837383633,0x6e6f635f6e6f6e5f\n"
".quad 0x6d75535f735f7473,0x343230316c6c6143,0x766f6d090a3b3233,0x722509203233752e\n"
".quad 0x6475635f5f202c35,0x616475635f5f5f61,0x765f6c61636f6c5f,0x39373836335f7261\n"
".quad 0x5f6e6f6e5f34335f,0x5f735f74736e6f63,0x6c6c6143326d7553,0x0a3b303834343031\n"
".quad 0x383109636f6c2e09,0x6d090a3009383709,0x09203233732e766f,0x7225202c30337225\n"
".quad 0x70252140090a3b31,0x2409206172622031,0x3230325f355f744c,0x766f6d090a3b3632\n"
".quad 0x722509203233732e,0x3b313135202c3133,0x33732e627573090a,0x2c32337225092032\n"
".quad 0x25202c3133722520,0x726873090a3b3172,0x722509203233732e,0x32337225202c3333\n"
".quad 0x6d090a3b3133202c,0x09203233732e766f,0x3532202c34337225,0x2e646e61090a3b35\n"
".quad 0x3372250920323362,0x2c33337225202c35,0x090a3b3433722520,0x203233732e646461\n"
".quad 0x25202c3633722509,0x337225202c353372,0x2e726873090a3b32,0x3372250920323373\n"
".quad 0x2c36337225202c37,0x766f6d090a3b3820,0x722509203233732e,0x37337225202c3833\n"
".quad 0x5f355f744c240a3b,0x200a3a3833373032,0x3e706f6f6c3c2f2f,0x6f6220706f6f4c20\n"
".quad 0x20656e696c207964,0x7473656e202c3837,0x7470656420676e69,0x7365202c31203a68\n"
".quad 0x20646574616d6974,0x6f69746172657469,0x6e6b6e75203a736e,0x6f6c2e090a6e776f\n"
".quad 0x0939370938310963,0x732e726162090a30,0x0a3b300920636e79,0x383109636f6c2e09\n"
".quad 0x6d090a3009303809,0x09203233752e766f,0x3231202c39337225,0x70746573090a3b37\n"
".quad 0x203233732e74672e,0x7225202c35702509,0x39337225202c3033,0x2035702540090a3b\n"
".quad 0x744c240920617262,0x34393930325f355f,0x6f6c3c2f2f200a3b,0x74726150203e706f\n"
".quad 0x706f6f6c20666f20,0x696c2079646f6220,0x68202c383720656e,0x6562616c20646165\n"
".quad 0x5f744c242064656c,0x0a38333730325f35,0x383109636f6c2e09,0x6d090a3009353509\n"
".quad 0x33752e6f6c2e6c75,0x2c30347225092032,0x38202c3033722520,0x752e646461090a3b\n"
".quad 0x3134722509203233,0x202c30347225202c,0x646c090a3b347225,0x2e6465726168732e\n"
".quad 0x6466250920343666,0x313472255b202c35,0x646c090a3b5d302b,0x2e6465726168732e\n"
".quad 0x6466250920343666,0x313472255b202c36,0x0a3b5d343230312b,0x3436662e64646109\n"
".quad 0x202c376466250920,0x6625202c35646625,0x2e7473090a3b3664,0x662e646572616873\n"
".quad 0x3472255b09203436,0x6625202c5d302b31,0x646461090a3b3764,0x722509203233752e\n"
".quad 0x30347225202c3234,0x090a3b357225202c,0x65726168732e646c,0x2509203436662e64\n"
".quad 0x72255b202c386466,0x090a3b5d302b3234,0x65726168732e646c,0x2509203436662e64\n"
".quad 0x72255b202c396466,0x5d343230312b3234,0x662e646461090a3b,0x3164662509203436\n"
".quad 0x2c38646625202c30,0x090a3b3964662520,0x65726168732e7473,0x5b09203436662e64\n"
".quad 0x2c5d302b32347225,0x0a3b303164662520,0x30325f355f744c24,0x2f2f200a3a343939\n"
".quad 0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f,0x383720656e696c20\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x3730325f355f744c,0x2e726162090a3833\n"
".quad 0x3b300920636e7973,0x33752e766f6d090a,0x2c33347225092032,0x6573090a3b333620\n"
".quad 0x33732e74672e7074,0x202c367025092032,0x7225202c30337225,0x702540090a3b3334\n"
".quad 0x2409206172622036,0x3531325f355f744c,0x3c2f2f200a3b3630,0x6150203e706f6f6c\n"
".quad 0x6f6c20666f207472,0x2079646f6220706f,0x2c383720656e696c,0x616c206461656820\n"
".quad 0x4c242064656c6562,0x333730325f355f74,0x09636f6c2e090a38,0x0a30093635093831\n"
".quad 0x2e6f6c2e6c756d09,0x3472250920323375,0x2c30337225202c30,0x646461090a3b3820\n"
".quad 0x722509203233752e,0x30347225202c3134,0x090a3b347225202c,0x65726168732e646c\n"
".quad 0x2509203436662e64,0x255b202c31316466,0x0a3b5d302b313472,0x726168732e646c09\n"
".quad 0x09203436662e6465,0x5b202c3231646625,0x3231352b31347225,0x2e646461090a3b5d\n"
".quad 0x6466250920343666,0x31646625202c3331,0x3231646625202c31,0x68732e7473090a3b\n"
".quad 0x3436662e64657261,0x2b313472255b0920,0x31646625202c5d30,0x2e646461090a3b33\n"
".quad 0x3472250920323375,0x2c30347225202c32,0x6c090a3b35722520,0x6465726168732e64\n"
".quad 0x662509203436662e,0x72255b202c343164,0x090a3b5d302b3234,0x65726168732e646c\n"
".quad 0x2509203436662e64,0x255b202c35316466,0x5d3231352b323472,0x662e646461090a3b\n"
".quad 0x3164662509203436,0x3431646625202c36,0x3b3531646625202c,0x6168732e7473090a\n"
".quad 0x203436662e646572,0x302b323472255b09,0x3631646625202c5d,0x5f355f744c240a3b\n"
".quad 0x200a3a3630353132,0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20\n"
".quad 0x20656e696c207964,0x64616568202c3837,0x64656c6562616c20,0x325f355f744c2420\n"
".quad 0x6162090a38333730,0x0920636e79732e72,0x2e766f6d090a3b30,0x3472250920323375\n"
".quad 0x090a3b3133202c34,0x2e74672e70746573,0x3770250920323373,0x202c30337225202c\n"
".quad 0x40090a3b34347225,0x2061726220377025,0x325f355f744c2409,0x2f200a3b38313032\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3720656e696c2079\n"
".quad 0x2064616568202c38,0x2064656c6562616c,0x30325f355f744c24,0x6f6c2e090a383337\n"
".quad 0x0938350938310963,0x6c2e6c756d090a30,0x2509203233752e6f,0x337225202c303472\n"
".quad 0x61090a3b38202c30,0x09203233752e6464,0x7225202c31347225,0x3b347225202c3034\n"
".quad 0x6168732e646c090a,0x203436662e646572,0x202c373164662509,0x5d302b313472255b\n"
".quad 0x68732e646c090a3b,0x3436662e64657261,0x2c38316466250920,0x322b313472255b20\n"
".quad 0x6461090a3b5d3635,0x2509203436662e64,0x6625202c39316466,0x646625202c373164\n"
".quad 0x2e7473090a3b3831,0x662e646572616873,0x3472255b09203436,0x6625202c5d302b31\n"
".quad 0x6461090a3b393164,0x2509203233752e64,0x347225202c323472,0x0a3b357225202c30\n"
".quad 0x726168732e646c09,0x09203436662e6465,0x5b202c3032646625,0x3b5d302b32347225\n"
".quad 0x6168732e646c090a,0x203436662e646572,0x202c313264662509,0x35322b323472255b\n"
".quad 0x646461090a3b5d36,0x662509203436662e,0x646625202c323264,0x32646625202c3032\n"
".quad 0x732e7473090a3b31,0x36662e6465726168,0x323472255b092034,0x646625202c5d302b\n"
".quad 0x5f744c240a3b3232,0x3a38313032325f35,0x6f6f6c3c2f2f200a,0x2074726150203e70\n"
".quad 0x20706f6f6c20666f,0x6e696c2079646f62,0x6568202c38372065,0x6c6562616c206461\n"
".quad 0x355f744c24206465,0x090a38333730325f,0x636e79732e726162,0x6f6d090a3b300920\n"
".quad 0x2509203233752e76,0x3b3531202c353472,0x672e70746573090a,0x2509203233732e74\n"
".quad 0x30337225202c3870,0x0a3b35347225202c,0x7262203870254009,0x355f744c24092061\n"
".quad 0x0a3b30333532325f,0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066\n"
".quad 0x656e696c2079646f,0x616568202c383720,0x656c6562616c2064,0x5f355f744c242064\n"
".quad 0x2e090a3833373032,0x3509383109636f6c,0x6c756d090a300939,0x203233752e6f6c2e\n"
".quad 0x25202c3034722509,0x0a3b38202c303372,0x3233752e64646109,0x202c313472250920\n"
".quad 0x7225202c30347225,0x732e646c090a3b34,0x36662e6465726168,0x3332646625092034\n"
".quad 0x2b313472255b202c,0x2e646c090a3b5d30,0x662e646572616873,0x3264662509203436\n"
".quad 0x313472255b202c34,0x090a3b5d3832312b,0x203436662e646461,0x202c353264662509\n"
".quad 0x25202c3332646625,0x73090a3b34326466,0x6465726168732e74,0x255b09203436662e\n"
".quad 0x202c5d302b313472,0x090a3b3532646625,0x203233752e646461,0x25202c3234722509\n"
".quad 0x357225202c303472,0x68732e646c090a3b,0x3436662e64657261,0x2c36326466250920\n"
".quad 0x302b323472255b20,0x732e646c090a3b5d,0x36662e6465726168,0x3732646625092034\n"
".quad 0x2b323472255b202c,0x61090a3b5d383231,0x09203436662e6464,0x25202c3832646625\n"
".quad 0x6625202c36326466,0x7473090a3b373264,0x2e6465726168732e,0x72255b0920343666\n"
".quad 0x25202c5d302b3234,0x4c240a3b38326466,0x333532325f355f74,0x6c3c2f2f200a3a30\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x202c383720656e69\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x38333730325f355f,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x203233752e766f6d,0x37202c3634722509,0x2e70746573090a3b\n"
".quad 0x09203233732e7467,0x337225202c397025,0x3b36347225202c30,0x622039702540090a\n"
".quad 0x5f744c2409206172,0x3b32343033325f35,0x6f6f6c3c2f2f200a,0x2074726150203e70\n"
".quad 0x20706f6f6c20666f,0x6e696c2079646f62,0x6568202c38372065,0x6c6562616c206461\n"
".quad 0x355f744c24206465,0x090a38333730325f,0x09383109636f6c2e,0x756d090a30093036\n"
".quad 0x3233752e6f6c2e6c,0x202c303472250920,0x3b38202c30337225,0x33752e646461090a\n"
".quad 0x2c31347225092032,0x25202c3034722520,0x2e646c090a3b3472,0x662e646572616873\n"
".quad 0x3264662509203436,0x313472255b202c39,0x646c090a3b5d302b,0x2e6465726168732e\n"
".quad 0x6466250920343666,0x3472255b202c3033,0x090a3b5d34362b31,0x203436662e646461\n"
".quad 0x202c313364662509,0x25202c3932646625,0x73090a3b30336466,0x6465726168732e74\n"
".quad 0x255b09203436662e,0x202c5d302b313472,0x090a3b3133646625,0x203233752e646461\n"
".quad 0x25202c3234722509,0x357225202c303472,0x68732e646c090a3b,0x3436662e64657261\n"
".quad 0x2c32336466250920,0x302b323472255b20,0x732e646c090a3b5d,0x36662e6465726168\n"
".quad 0x3333646625092034,0x2b323472255b202c,0x6461090a3b5d3436,0x2509203436662e64\n"
".quad 0x6625202c34336466,0x646625202c323364,0x2e7473090a3b3333,0x662e646572616873\n"
".quad 0x3472255b09203436,0x6625202c5d302b32,0x744c240a3b343364,0x32343033325f355f\n"
".quad 0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220\n"
".quad 0x68202c383720656e,0x6562616c20646165,0x5f744c242064656c,0x0a38333730325f35\n"
".quad 0x6e79732e72616209,0x6d090a3b30092063,0x09203233752e766f,0x3b33202c37347225\n"
".quad 0x672e70746573090a,0x2509203233732e74,0x337225202c303170,0x3b37347225202c30\n"
".quad 0x203031702540090a,0x744c240920617262,0x34353533325f355f,0x6f6c3c2f2f200a3b\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x68202c383720656e\n"
".quad 0x6562616c20646165,0x5f744c242064656c,0x0a38333730325f35,0x383109636f6c2e09\n"
".quad 0x6d090a3009313609,0x33752e6f6c2e6c75,0x2c30347225092032,0x38202c3033722520\n"
".quad 0x752e646461090a3b,0x3134722509203233,0x202c30347225202c,0x646c090a3b347225\n"
".quad 0x2e6465726168732e,0x6466250920343666,0x3472255b202c3533,0x6c090a3b5d302b31\n"
".quad 0x6465726168732e64,0x662509203436662e,0x72255b202c363364,0x0a3b5d32332b3134\n"
".quad 0x3436662e64646109,0x2c37336466250920,0x202c353364662520,0x090a3b3633646625\n"
".quad 0x65726168732e7473,0x5b09203436662e64,0x2c5d302b31347225,0x0a3b373364662520\n"
".quad 0x3233752e64646109,0x202c323472250920,0x7225202c30347225,0x732e646c090a3b35\n"
".quad 0x36662e6465726168,0x3833646625092034,0x2b323472255b202c,0x2e646c090a3b5d30\n"
".quad 0x662e646572616873,0x3364662509203436,0x323472255b202c39,0x61090a3b5d32332b\n"
".quad 0x09203436662e6464,0x25202c3034646625,0x6625202c38336466,0x7473090a3b393364\n"
".quad 0x2e6465726168732e,0x72255b0920343666,0x25202c5d302b3234,0x4c240a3b30346466\n"
".quad 0x353533325f355f74,0x6c3c2f2f200a3a34,0x726150203e706f6f,0x6f6f6c20666f2074\n"
".quad 0x6c2079646f622070,0x202c383720656e69,0x62616c2064616568,0x744c242064656c65\n"
".quad 0x38333730325f355f,0x79732e726162090a,0x090a3b300920636e,0x203233752e766f6d\n"
".quad 0x31202c3834722509,0x2e70746573090a3b,0x09203233732e7467,0x7225202c31317025\n"
".quad 0x38347225202c3033,0x3131702540090a3b,0x4c24092061726220,0x363034325f355f74\n"
".quad 0x6c3c2f2f200a3b36,0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070\n"
".quad 0x202c383720656e69,0x62616c2064616568,0x744c242064656c65,0x38333730325f355f\n"
".quad 0x3109636f6c2e090a,0x090a300932360938,0x752e6f6c2e6c756d,0x3034722509203233\n"
".quad 0x202c30337225202c,0x2e646461090a3b38,0x3472250920323375,0x2c30347225202c31\n"
".quad 0x6c090a3b34722520,0x6465726168732e64,0x662509203436662e,0x72255b202c313464\n"
".quad 0x090a3b5d302b3134,0x65726168732e646c,0x2509203436662e64,0x255b202c32346466\n"
".quad 0x3b5d36312b313472,0x36662e646461090a,0x3334646625092034,0x2c3134646625202c\n"
".quad 0x0a3b323464662520,0x726168732e747309,0x09203436662e6465,0x5d302b313472255b\n"
".quad 0x3b3334646625202c,0x33752e646461090a,0x2c32347225092032,0x25202c3034722520\n"
".quad 0x2e646c090a3b3572,0x662e646572616873,0x3464662509203436,0x323472255b202c34\n"
".quad 0x646c090a3b5d302b,0x2e6465726168732e,0x6466250920343666,0x3472255b202c3534\n"
".quad 0x090a3b5d36312b32,0x203436662e646461,0x202c363464662509,0x25202c3434646625\n"
".quad 0x73090a3b35346466,0x6465726168732e74,0x255b09203436662e,0x202c5d302b323472\n"
".quad 0x240a3b3634646625,0x3034325f355f744c,0x3c2f2f200a3a3636,0x6150203e706f6f6c\n"
".quad 0x6f6c20666f207472,0x2079646f6220706f,0x2c383720656e696c,0x616c206461656820\n"
".quad 0x4c242064656c6562,0x333730325f355f74,0x732e726162090a38,0x0a3b300920636e79\n"
".quad 0x3233752e766f6d09,0x202c393472250920,0x70746573090a3b30,0x203233732e74672e\n"
".quad 0x25202c3231702509,0x347225202c303372,0x31702540090a3b39,0x2409206172622032\n"
".quad 0x3534325f355f744c,0x3c2f2f200a3b3837,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x2c383720656e696c,0x616c206461656820,0x4c242064656c6562\n"
".quad 0x333730325f355f74,0x09636f6c2e090a38,0x0a30093336093831,0x2e6f6c2e6c756d09\n"
".quad 0x3472250920323375,0x2c30337225202c30,0x646461090a3b3820,0x722509203233752e\n"
".quad 0x30347225202c3134,0x090a3b347225202c,0x65726168732e646c,0x2509203436662e64\n"
".quad 0x255b202c37346466,0x0a3b5d302b313472,0x726168732e646c09,0x09203436662e6465\n"
".quad 0x5b202c3834646625,0x3b5d382b31347225,0x36662e646461090a,0x3934646625092034\n"
".quad 0x2c3734646625202c,0x0a3b383464662520,0x726168732e747309,0x09203436662e6465\n"
".quad 0x5d302b313472255b,0x3b3934646625202c,0x33752e646461090a,0x2c32347225092032\n"
".quad 0x25202c3034722520,0x2e646c090a3b3572,0x662e646572616873,0x3564662509203436\n"
".quad 0x323472255b202c30,0x646c090a3b5d302b,0x2e6465726168732e,0x6466250920343666\n"
".quad 0x3472255b202c3135,0x61090a3b5d382b32,0x09203436662e6464,0x25202c3235646625\n"
".quad 0x6625202c30356466,0x7473090a3b313564,0x2e6465726168732e,0x72255b0920343666\n"
".quad 0x25202c5d302b3234,0x4c240a3b32356466,0x373534325f355f74,0x6c3c2f2f200a3a38\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x202c383720656e69\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x38333730325f355f,0x79732e726162090a\n"
".quad 0x090a3b300920636e,0x09383109636f6c2e,0x6461090a30093038,0x2509203233732e64\n"
".quad 0x337225202c303372,0x0a3b363532202c30,0x3233752e766f6d09,0x202c303572250920\n"
".quad 0x6573090a3b353532,0x33732e656c2e7074,0x2c33317025092032,0x25202c3033722520\n"
".quad 0x2540090a3b303572,0x2061726220333170,0x325f355f744c2409,0x4c240a3b38333730\n"
".quad 0x323230325f355f74,0x636f6c2e090a3a36,0x3009353132093309,0x33752e766f6d090a\n"
".quad 0x2c31357225092032,0x746573090a3b3020,0x3233752e656e2e70,0x202c343170250920\n"
".quad 0x357225202c317225,0x31702540090a3b31,0x2409206172622034,0x3335325f355f744c\n"
".quad 0x6f6c2e090a3b3634,0x0938313209330963,0x752e766f6d090a30,0x3235722509203233\n"
".quad 0x646961746325202c,0x6c756d090a3b782e,0x203233752e6f6c2e,0x25202c3335722509\n"
".quad 0x3b3631202c323572,0x33752e766f6d090a,0x2c34357225092032,0x566c6c61435f6420\n"
".quad 0x61090a3b65756c61,0x09203233752e6464,0x7225202c35357225,0x34357225202c3335\n"
".quad 0x68732e646c090a3b,0x3436662e64657261,0x2c33356466250920,0x616475635f5f5b20\n"
".quad 0x5f616475635f5f5f,0x61765f6c61636f6c,0x5f38373836335f72,0x635f6e6f6e5f3433\n"
".quad 0x535f735f74736e6f,0x30316c6c61436d75,0x3b5d302b32333432,0x6f6c672e7473090a\n"
".quad 0x203436662e6c6162,0x302b353572255b09,0x3335646625202c5d,0x68732e646c090a3b\n"
".quad 0x3436662e64657261,0x2c34356466250920,0x616475635f5f5b20,0x5f616475635f5f5f\n"
".quad 0x61765f6c61636f6c,0x5f39373836335f72,0x635f6e6f6e5f3433,0x535f735f74736e6f\n"
".quad 0x316c6c6143326d75,0x5d302b3038343430,0x6c672e7473090a3b,0x3436662e6c61626f\n"
".quad 0x2b353572255b0920,0x35646625202c5d38,0x355f744c240a3b34,0x0a3a36343335325f\n"
".quad 0x093309636f6c2e09,0x65090a3009303232,0x444c240a3b746978,0x315a5f5f646e6557\n"
".quad 0x614365746e6f4d36,0x63756465526f6c72,0x4f545f5f34315065,0x6c61566e6f697470\n"
".quad 0x207d090a3a696575,0x4d36315a5f202f2f,0x6c72614365746e6f,0x506563756465526f\n"
".quad 0x74704f545f5f3431,0x65756c61566e6f69,0x746e652e090a0a69,0x6936315a5f207972\n"
".quad 0x4e4365737265766e,0x506c656e72654b44,0x090a28206a5f5366,0x206d617261702e09\n"
".quad 0x635f5f203233752e,0x5f6d726170616475,0x65766e6936315a5f,0x654b444e43657372\n"
".quad 0x5f5366506c656e72,0x7074754f5f645f6a,0x702e09090a2c7475,0x33752e206d617261\n"
".quad 0x616475635f5f2032,0x315a5f5f6d726170,0x65737265766e6936,0x656e72654b444e43\n"
".quad 0x645f6a5f5366506c,0x0a2c7475706e495f,0x6d617261702e0909,0x5f5f203233752e20\n"
".quad 0x6d72617061647563,0x766e6936315a5f5f,0x4b444e4365737265,0x5366506c656e7265\n"
".quad 0x4e687461705f6a5f,0x722e090a7b090a29,0x203233752e206765,0x3b3e3930323c7225\n"
".quad 0x2e206765722e090a,0x313c662520323366,0x65722e090a3b3e34,0x25203436662e2067\n"
".quad 0x3b3e3934343c6466,0x2e206765722e090a,0x3c70252064657270,0x6c2e090a3b3e3336\n"
".quad 0x353209393109636f,0x57444c240a300931,0x5a5f5f6e69676562,0x737265766e693631\n"
".quad 0x6e72654b444e4365,0x3a6a5f5366506c65,0x7261702e646c090a,0x09203233752e6d61\n"
".quad 0x5f5f5b202c317225,0x6d72617061647563,0x766e6936315a5f5f,0x4b444e4365737265\n"
".quad 0x5366506c656e7265,0x4e687461705f6a5f,0x2e766f6d090a3b5d,0x3272250920323375\n"
".quad 0x782e64697425202c,0x752e766f6d090a3b,0x2c33722509203233,0x2e64696174632520\n"
".quad 0x2e766f6d090a3b78,0x3472250920323375,0x2e6469746e25202c,0x702e646c090a3b78\n"
".quad 0x3233752e6d617261,0x5b202c3572250920,0x6170616475635f5f,0x6936315a5f5f6d72\n"
".quad 0x4e4365737265766e,0x506c656e72654b44,0x495f645f6a5f5366,0x090a3b5d7475706e\n"
".quad 0x203233752e766f6d,0x3b30202c36722509,0x652e70746573090a,0x2509203233752e71\n"
".quad 0x2c357225202c3170,0x40090a3b36722520,0x2061726220317025,0x355f365f744c2409\n"
".quad 0x2e090a3b36363036,0x3209393109636f6c,0x756d090a30093935,0x752e6f6c2e34326c\n"
".quad 0x2c37722509203233,0x7225202c34722520,0x2e646461090a3b33,0x3872250920323375\n"
".quad 0x25202c377225202c,0x746573090a3b3272,0x3233752e65672e70,0x25202c3270250920\n"
".quad 0x3b317225202c3872,0x622032702540090a,0x5f744c2409206172,0x3b32323139365f36\n"
".quad 0x33752e766f6d090a,0x202c397225092032,0x2e64696174636e25,0x326c756d090a3b78\n"
".quad 0x3233752e6f6c2e34,0x202c303172250920,0x397225202c347225,0x6c2e6c756d090a3b\n"
".quad 0x2509203233752e6f,0x387225202c313172,0x756d090a3b34202c,0x3233752e6f6c2e6c\n"
".quad 0x202c323172250920,0x3b34202c30317225,0x6f6c2e6c756d090a,0x722509203233752e\n"
".quad 0x2c317225202c3331,0x646461090a3b3420,0x722509203233752e,0x31317225202c3431\n"
".quad 0x090a3b357225202c,0x203233752e646461,0x25202c3531722509,0x357225202c333172\n"
".quad 0x61702e646c090a3b,0x203233752e6d6172,0x5b202c3631722509,0x6170616475635f5f\n"
".quad 0x6936315a5f5f6d72,0x4e4365737265766e,0x506c656e72654b44,0x4f5f645f6a5f5366\n"
".quad 0x0a3b5d7475707475,0x3233752e64646109,0x202c373172250920,0x7225202c36317225\n"
".quad 0x5f744c240a3b3131,0x3a34333836355f36,0x6f6f6c3c2f2f200a,0x20706f6f4c203e70\n"
".quad 0x6e696c2079646f62,0x6e202c3935322065,0x6420676e69747365,0x2c31203a68747065\n"
".quad 0x74616d6974736520,0x6172657469206465,0x75203a736e6f6974,0x090a6e776f6e6b6e\n"
".quad 0x09393109636f6c2e,0x6c090a3009303632,0x6c61626f6c672e64,0x662509203233662e\n"
".quad 0x343172255b202c31,0x7663090a3b5d302b,0x33662e3436662e74,0x2c31646625092032\n"
".quad 0x2e090a3b31662520,0x3209393109636f6c,0x6f6d090a30093136,0x2509203436662e76\n"
".quad 0x336430202c326466,0x3030303030306666,0x3b30303030303030,0x73090a31202f2f09\n"
".quad 0x33752e65672e7465,0x2509203436662e32,0x646625202c383172,0x3b32646625202c31\n"
".quad 0x33732e67656e090a,0x2c39317225092032,0x090a3b3831722520,0x203436662e766f6d\n"
".quad 0x30202c3364662509,0x3030303030303064,0x3030303030303030,0x0a30202f2f093b30\n"
".quad 0x2e656c2e74657309,0x203436662e323375,0x25202c3032722509,0x646625202c316466\n"
".quad 0x2e67656e090a3b33,0x3272250920323373,0x3b30327225202c31,0x3233622e726f090a\n"
".quad 0x202c323272250920,0x7225202c39317225,0x766f6d090a3b3132,0x722509203233752e\n"
".quad 0x090a3b30202c3332,0x2e71652e70746573,0x3370250920323373,0x202c32327225202c\n"
".quad 0x40090a3b33327225,0x2061726220337025,0x355f365f744c2409,0x2f200a3b30393037\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079\n"
".quad 0x64616568202c3935,0x64656c6562616c20,0x355f365f744c2420,0x6c2e090a34333836\n"
".quad 0x323109393109636f,0x766f6d090a300930,0x662509203436662e,0x66666430202c3464\n"
".quad 0x3030303030303866,0x093b303030303030,0x0a6e616e2d202f2f,0x696e752e61726209\n"
".quad 0x6e6557444c240920,0x69766964665f6964,0x315f3338315f6564,0x365f744c240a3b31\n"
".quad 0x0a3a30393037355f,0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066\n"
".quad 0x656e696c2079646f,0x6568202c39353220,0x6c6562616c206461,0x365f744c24206465\n"
".quad 0x090a34333836355f,0x203436662e766f6d,0x30202c3564662509,0x3030303065666264\n"
".quad 0x3030303030303030,0x302d202f2f093b30,0x2e646461090a352e,0x6466250920343666\n"
".quad 0x2c31646625202c36,0x090a3b3564662520,0x203436662e736261,0x25202c3764662509\n"
".quad 0x6f6d090a3b366466,0x2509203436662e76,0x336430202c386466,0x6137343165616466\n"
".quad 0x3b31656137343165,0x32342e30202f2f09,0x6c2e70746573090a,0x2509203436662e74\n"
".quad 0x37646625202c3470,0x0a3b38646625202c,0x6220347025214009,0x5f744c2409206172\n"
".quad 0x3b38353837355f36,0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f\n"
".quad 0x6e696c2079646f62,0x68202c3935322065,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x0a34333836355f36,0x393109636f6c2e09,0x090a300935323109,0x203436662e6c756d\n"
".quad 0x25202c3964662509,0x646625202c366466,0x2e766f6d090a3b36,0x6466250920343666\n"
".quad 0x30346430202c3031,0x6231333964303430,0x093b643032363832,0x3630352e32202f2f\n"
".quad 0x2e766f6d090a3336,0x6466250920343666,0x30636430202c3131,0x6561303764393233\n"
".quad 0x093b656433613435,0x362e38312d202f2f,0x2e766f6d090a3531,0x6466250920343666\n"
".quad 0x30346430202c3231,0x3463323132623434,0x093b636636633337,0x39332e3134202f2f\n"
".quad 0x2e766f6d090a3231,0x6466250920343666,0x30636430202c3331,0x3735396530373933\n"
".quad 0x093b383737373733,0x342e35322d202f2f,0x64616d090a313134,0x203436662e6e722e\n"
".quad 0x202c343164662509,0x25202c3331646625,0x646625202c396466,0x64616d090a3b3231\n"
".quad 0x203436662e6e722e,0x202c353164662509,0x6625202c39646625,0x646625202c343164\n"
".quad 0x64616d090a3b3131,0x203436662e6e722e,0x202c363164662509,0x6625202c39646625\n"
".quad 0x646625202c353164,0x6c756d090a3b3031,0x662509203436662e,0x646625202c373164\n"
".quad 0x3631646625202c36,0x662e766f6d090a3b,0x3164662509203436,0x6666336430202c38\n"
".quad 0x3030303030303030,0x2f093b3030303030,0x766f6d090a31202f,0x662509203436662e\n"
".quad 0x636430202c393164,0x3030373266303230,0x3b64323730353536,0x342e382d202f2f09\n"
".quad 0x6f6d090a31353337,0x2509203436662e76,0x6430202c30326466,0x3735353137333034\n"
".quad 0x6332303531383139,0x2e3332202f2f093b,0x6f6d090a34333830,0x2509203436662e76\n"
".quad 0x6430202c31326466,0x6665663035333063,0x6437356531303730,0x31322d202f2f093b\n"
".quad 0x6d090a323236302e,0x09203436662e766f,0x30202c3232646625,0x6662303930303464\n"
".quad 0x3461383535303230,0x2e33202f2f093b37,0x6d090a3338303331,0x36662e6e722e6461\n"
".quad 0x3332646625092034,0x2c3232646625202c,0x25202c3964662520,0x6d090a3b31326466\n"
".quad 0x36662e6e722e6461,0x3432646625092034,0x202c39646625202c,0x25202c3332646625\n"
".quad 0x6d090a3b30326466,0x36662e6e722e6461,0x3532646625092034,0x202c39646625202c\n"
".quad 0x25202c3432646625,0x6d090a3b39316466,0x36662e6e722e6461,0x3632646625092034\n"
".quad 0x202c39646625202c,0x25202c3532646625,0x64090a3b38316466,0x36662e6e722e7669\n"
".quad 0x3732646625092034,0x2c3731646625202c,0x0a3b363264662520,0x696e752e61726209\n"
".quad 0x5f365f744c240920,0x240a3b3230363735,0x3837355f365f744c,0x3c2f2f200a3a3835\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x39353220656e696c\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x3836355f365f744c,0x2e766f6d090a3433\n"
".quad 0x6466250920343666,0x30306430202c3832,0x3030303030303030,0x093b303030303030\n"
".quad 0x6573090a30202f2f,0x36662e74672e7074,0x202c357025092034,0x6625202c36646625\n"
".quad 0x2140090a3b383264,0x2061726220357025,0x355f365f744c2409,0x2f200a3b30373338\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079\n"
".quad 0x64616568202c3935,0x64656c6562616c20,0x355f365f744c2420,0x6c2e090a34333836\n"
".quad 0x393409313309636f,0x766f6d090a300932,0x662509203436662e,0x336430202c393264\n"
".quad 0x3030303030306666,0x3b30303030303030,0x73090a31202f2f09,0x09203436662e6275\n"
".quad 0x25202c3033646625,0x6625202c39326466,0x766f6d090a3b3164,0x257b09203436622e\n"
".quad 0x353272252c343272,0x3033646625202c7d,0x732e766f6d090a3b,0x3632722509203233\n"
".quad 0x0a3b35327225202c,0x313309636f6c2e09,0x090a300933393409,0x203436622e766f6d\n"
".quad 0x252c373272257b09,0x6625202c7d383272,0x6c2e090a3b303364,0x393409313309636f\n"
".quad 0x766f6d090a300935,0x662509203436662e,0x306430202c313364,0x3030303030303030\n"
".quad 0x3b30303030303030,0x73090a30202f2f09,0x33752e74672e7465,0x2509203436662e32\n"
".quad 0x646625202c393272,0x33646625202c3033,0x2e67656e090a3b31,0x3372250920323373\n"
".quad 0x3b39327225202c30,0x36662e766f6d090a,0x3233646625092034,0x306666376430202c\n"
".quad 0x3030303030303030,0x2f2f093b30303030,0x6573090a666e6920,0x3233752e746c2e74\n"
".quad 0x722509203436662e,0x33646625202c3133,0x3233646625202c30,0x732e67656e090a3b\n"
".quad 0x3233722509203233,0x0a3b31337225202c,0x3233622e646e6109,0x202c333372250920\n"
".quad 0x7225202c30337225,0x766f6d090a3b3233,0x722509203233752e,0x090a3b30202c3433\n"
".quad 0x2e71652e70746573,0x3670250920323373,0x202c33337225202c,0x40090a3b34337225\n"
".quad 0x2061726220367025,0x335f365f744c2409,0x2f200a3b32383639,0x203e706f6f6c3c2f\n"
".quad 0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079,0x64616568202c3935\n"
".quad 0x64656c6562616c20,0x355f365f744c2420,0x6f6d090a34333836,0x2509203233752e76\n"
".quad 0x343031202c353372,0x73090a3b35373538,0x752e74672e707465,0x2c37702509203233\n"
".quad 0x25202c3532722520,0x2540090a3b353372,0x0920617262203770,0x38355f365f744c24\n"
".quad 0x2f2f200a3b323838,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x353220656e696c20,0x2064616568202c39,0x2064656c6562616c,0x36355f365f744c24\n"
".quad 0x6f6c2e090a343338,0x3130350931330963,0x2e766f6d090a3009,0x6466250920343666\n"
".quad 0x33346430202c3333,0x3030303030303035,0x093b303030303030,0x3130382e31202f2f\n"
".quad 0x090a36312b653434,0x203436662e6c756d,0x202c343364662509,0x25202c3033646625\n"
".quad 0x6d090a3b33336466,0x09203436622e766f,0x72252c363372257b,0x646625202c7d3632\n"
".quad 0x6f6c2e090a3b3433,0x3230350931330963,0x2e766f6d090a3009,0x72257b0920343662\n"
".quad 0x7d373372252c3732,0x3b3433646625202c,0x33732e766f6d090a,0x2c38337225092032\n"
".quad 0x0a3b373730312d20,0x696e752e61726209,0x5f365f744c240920,0x240a3b3632363835\n"
".quad 0x3838355f365f744c,0x3c2f2f200a3a3238,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x39353220656e696c,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x3836355f365f744c,0x2e766f6d090a3433,0x3372250920323373,0x333230312d202c38\n"
".quad 0x5f365f744c240a3b,0x200a3a3632363835,0x3e706f6f6c3c2f2f,0x666f207472615020\n"
".quad 0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c393532,0x656c6562616c2064\n"
".quad 0x5f365f744c242064,0x2e090a3433383635,0x3509313309636f6c,0x6873090a30093730\n"
".quad 0x2509203233732e72,0x327225202c393372,0x090a3b3032202c36,0x203233732e646461\n"
".quad 0x25202c3833722509,0x337225202c383372,0x636f6c2e090a3b39,0x0939303509313309\n"
".quad 0x622e646e61090a30,0x3034722509203233,0x202c36327225202c,0x353334363431322d\n"
".quad 0x726f090a3b333730,0x722509203233622e,0x30347225202c3134,0x393632373031202c\n"
".quad 0x6d090a3b38343233,0x09203436622e766f,0x7b202c3533646625,0x3472252c37327225\n"
".quad 0x766f6d090a3b7d31,0x722509203233752e,0x33373031202c3234,0x0a3b323835373231\n"
".quad 0x656c2e7074657309,0x702509203233752e,0x2c31347225202c38,0x090a3b3234722520\n"
".quad 0x6172622038702540,0x5f365f744c240920,0x200a3b3833313935,0x3e706f6f6c3c2f2f\n"
".quad 0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c393532\n"
".quad 0x656c6562616c2064,0x5f365f744c242064,0x2e090a3433383635,0x3509313309636f6c\n"
".quad 0x6f6d090a30093131,0x7b09203436622e76,0x3472252c33347225,0x33646625202c7d34\n"
".quad 0x2e627573090a3b35,0x3472250920323373,0x2c34347225202c35,0x3637353834303120\n"
".quad 0x622e766f6d090a3b,0x3472257b09203436,0x2c7d373472252c36,0x0a3b353364662520\n"
".quad 0x3436622e766f6d09,0x2c35336466250920,0x252c363472257b20,0x2e090a3b7d353472\n"
".quad 0x3509313309636f6c,0x6461090a30093231,0x2509203233732e64,0x337225202c383372\n"
".quad 0x4c240a3b31202c38,0x333139355f365f74,0x6c3c2f2f200a3a38,0x726150203e706f6f\n"
".quad 0x6f6f6c20666f2074,0x6c2079646f622070,0x2c39353220656e69,0x616c206461656820\n"
".quad 0x4c242064656c6562,0x333836355f365f74,0x09636f6c2e090a34,0x3009383135093133\n"
".quad 0x36662e766f6d090a,0x3633646625092034,0x306666626430202c,0x3030303030303030\n"
".quad 0x2f2f093b30303030,0x646461090a312d20,0x662509203436662e,0x646625202c373364\n"
".quad 0x33646625202c3533,0x2e766f6d090a3b36,0x6466250920343666,0x66336430202c3833\n"
".quad 0x3030303030303066,0x093b303030303030,0x6461090a31202f2f,0x2509203436662e64\n"
".quad 0x6625202c39336466,0x646625202c353364,0x747663090a3b3833,0x2e3233662e6e722e\n"
".quad 0x3266250920343666,0x3b3933646625202c,0x6e722e706372090a,0x662509203233662e\n"
".quad 0x0a3b326625202c33,0x3436662e74766309,0x662509203233662e,0x336625202c303464\n"
".quad 0x662e67656e090a3b,0x3464662509203436,0x3933646625202c31,0x662e766f6d090a3b\n"
".quad 0x3464662509203436,0x6666336430202c32,0x3030303030303030,0x2f093b3030303030\n"
".quad 0x64616d090a31202f,0x203436662e6e722e,0x202c333464662509,0x25202c3134646625\n"
".quad 0x6625202c30346466,0x616d090a3b323464,0x3436662e6e722e64,0x2c34346466250920\n"
".quad 0x202c333464662520,0x25202c3334646625,0x6d090a3b33346466,0x36662e6e722e6461\n"
".quad 0x3534646625092034,0x2c3434646625202c,0x202c303464662520,0x090a3b3034646625\n"
".quad 0x203436662e6c756d,0x202c363464662509,0x25202c3733646625,0x2e090a3b35346466\n"
".quad 0x3509313309636f6c,0x6461090a30093832,0x2509203436662e64,0x6625202c37346466\n"
".quad 0x646625202c363464,0x6c756d090a3b3634,0x662509203436662e,0x646625202c383464\n"
".quad 0x34646625202c3734,0x2e766f6d090a3b37,0x6466250920343666,0x65336430202c3934\n"
".quad 0x6133623038333162,0x093b653166303865,0x3632302e31202f2f,0x090a36302d653333\n"
".quad 0x203436662e766f6d,0x202c303564662509,0x6565306465336430,0x6238613762383532\n"
".quad 0x34202f2f093b3430,0x2d6539343633302e,0x2e64616d090a3630,0x09203436662e6e72\n"
".quad 0x25202c3135646625,0x6625202c39346466,0x646625202c383464,0x766f6d090a3b3035\n"
".quad 0x662509203436662e,0x336430202c323564,0x3936363262336665,0x3b66363736323066\n"
".quad 0x37382e31202f2f09,0x0a35302d65343438,0x2e6e722e64616d09,0x6466250920343666\n"
".quad 0x35646625202c3335,0x3834646625202c31,0x3b3235646625202c,0x36662e766f6d090a\n"
".quad 0x3435646625092034,0x373166336430202c,0x6261396162633534,0x2f2f093b36353930\n"
".quad 0x31383737382e3820,0x616d090a35302d65,0x3436662e6e722e64,0x2c35356466250920\n"
".quad 0x202c333564662520,0x25202c3834646625,0x6d090a3b34356466,0x09203436662e766f\n"
".quad 0x30202c3635646625,0x6331376333663364,0x3531356231643237,0x2e30202f2f093b34\n"
".quad 0x3230343334303030,0x722e64616d090a38,0x2509203436662e6e,0x6625202c37356466\n"
".quad 0x646625202c353564,0x35646625202c3834,0x2e766f6d090a3b36,0x6466250920343666\n"
".quad 0x66336430202c3835,0x3239343239343236,0x093b643237656233,0x3230302e30202f2f\n"
".quad 0x6d090a3431323332,0x36662e6e722e6461,0x3935646625092034,0x2c3735646625202c\n"
".quad 0x202c383464662520,0x090a3b3835646625,0x203436662e766f6d,0x202c303664662509\n"
".quad 0x3939393866336430,0x3361393939393939,0x30202f2f093b3463,0x6d090a353231302e\n"
".quad 0x36662e6e722e6461,0x3136646625092034,0x2c3935646625202c,0x202c383464662520\n"
".quad 0x090a3b3036646625,0x09313309636f6c2e,0x6d090a3009393235,0x09203436662e766f\n"
".quad 0x30202c3236646625,0x3535353562663364,0x3535353535353535,0x2e30202f2f093b34\n"
".quad 0x0a33333333333830,0x2e6e722e64616d09,0x6466250920343666,0x36646625202c3336\n"
".quad 0x3834646625202c31,0x3b3236646625202c,0x3309636f6c2e090a,0x0a30093233350931\n"
".quad 0x3436662e62757309,0x2c34366466250920,0x202c373364662520,0x090a3b3734646625\n"
".quad 0x203436662e67656e,0x202c353664662509,0x090a3b3734646625,0x203436662e646461\n"
".quad 0x202c363664662509,0x25202c3436646625,0x6d090a3b34366466,0x36662e6e722e6461\n"
".quad 0x3736646625092034,0x2c3536646625202c,0x202c373364662520,0x090a3b3636646625\n"
".quad 0x203436662e6c756d,0x202c383664662509,0x25202c3534646625,0x2e090a3b37366466\n"
".quad 0x3509313309636f6c,0x756d090a30093533,0x2509203436662e6c,0x6625202c39366466\n"
".quad 0x646625202c383464,0x6c756d090a3b3336,0x662509203436662e,0x646625202c303764\n"
".quad 0x36646625202c3734,0x636f6c2e090a3b39,0x0936343509313309,0x722e747663090a30\n"
".quad 0x33732e3436662e6e,0x3137646625092032,0x0a3b38337225202c,0x3436662e766f6d09\n"
".quad 0x2c32376466250920,0x3236656633643020,0x3361666566323465,0x202f2f093b666539\n"
".quad 0x3734313339362e30,0x6e722e64616d090a,0x662509203436662e,0x646625202c333764\n"
".quad 0x37646625202c3137,0x3734646625202c32,0x662e766f6d090a3b,0x3764662509203436\n"
".quad 0x3763336430202c34,0x3362336539636261,0x2f093b6633303839,0x303931332e32202f\n"
".quad 0x61090a37312d6535,0x09203436662e6464,0x25202c3537646625,0x6625202c30376466\n"
".quad 0x656e090a3b383664,0x2509203233732e67,0x337225202c383472,0x2e747663090a3b38\n"
".quad 0x732e3436662e6e72,0x3764662509203233,0x3b38347225202c36,0x36662e766f6d090a\n"
".quad 0x3737646625092034,0x366566336430202c,0x6166656632346532,0x2f2f093b66653933\n"
".quad 0x34313339362e3020,0x722e64616d090a37,0x2509203436662e6e,0x6625202c38376466\n"
".quad 0x646625202c363764,0x37646625202c3737,0x2e627573090a3b33,0x6466250920343666\n"
".quad 0x37646625202c3937,0x3734646625202c38,0x662e627573090a3b,0x3864662509203436\n"
".quad 0x3537646625202c30,0x3b3937646625202c,0x6e722e64616d090a,0x662509203436662e\n"
".quad 0x646625202c313864,0x37646625202c3137,0x3038646625202c34,0x662e646461090a3b\n"
".quad 0x3864662509203436,0x3337646625202c32,0x3b3138646625202c,0x6e752e617262090a\n"
".quad 0x6557444c24092069,0x6e695f5f5f69646e,0x685f6c616e726574,0x5f3338315f666c61\n"
".quad 0x5f744c240a3b3631,0x3a32383639335f36,0x6f6f6c3c2f2f200a,0x2074726150203e70\n"
".quad 0x20706f6f6c20666f,0x6e696c2079646f62,0x68202c3935322065,0x6562616c20646165\n"
".quad 0x5f744c242064656c,0x0a34333836355f36,0x313309636f6c2e09,0x090a300938343509\n"
".quad 0x203436662e736261,0x202c333864662509,0x090a3b3033646625,0x203436662e766f6d\n"
".quad 0x202c343864662509,0x3030306666376430,0x3030303030303030,0x69202f2f093b3030\n"
".quad 0x70746573090a666e,0x203436662e656c2e,0x6625202c39702509,0x646625202c333864\n"
".quad 0x702540090a3b3438,0x2409206172622039,0x3639355f365f744c,0x3c2f2f200a3b3035\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x39353220656e696c\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x3836355f365f744c,0x636f6c2e090a3433\n"
".quad 0x0939343509313309,0x662e646461090a30,0x3864662509203436,0x3033646625202c32\n"
".quad 0x3b3033646625202c,0x6e752e617262090a,0x6557444c24092069,0x6e695f5f5f69646e\n"
".quad 0x685f6c616e726574,0x5f3338315f666c61,0x5f744c240a3b3631,0x3a30353639355f36\n"
".quad 0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62\n"
".quad 0x68202c3935322065,0x6562616c20646165,0x5f744c242064656c,0x0a34333836355f36\n"
".quad 0x3436662e766f6d09,0x2c35386466250920,0x3030303030643020,0x3030303030303030\n"
".quad 0x202f2f093b303030,0x2e70746573090a30,0x09203436662e7165,0x6625202c30317025\n"
".quad 0x646625202c303364,0x252140090a3b3538,0x2061726220303170,0x365f365f744c2409\n"
".quad 0x2f200a3b32363130,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3220656e696c2079,0x64616568202c3935,0x64656c6562616c20,0x355f365f744c2420\n"
".quad 0x6c2e090a34333836,0x353509313309636f,0x766f6d090a300933,0x662509203436662e\n"
".quad 0x666430202c323864,0x3030303030306666,0x3b30303030303030,0x666e692d202f2f09\n"
".quad 0x6e752e617262090a,0x6557444c24092069,0x6e695f5f5f69646e,0x685f6c616e726574\n"
".quad 0x5f3338315f666c61,0x5f744c240a3b3631,0x3a32363130365f36,0x6f6f6c3c2f2f200a\n"
".quad 0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62,0x68202c3935322065\n"
".quad 0x6562616c20646165,0x5f744c242064656c,0x0a34333836355f36,0x3436662e766f6d09\n"
".quad 0x2c36386466250920,0x3030666637643020,0x3030303030303030,0x202f2f093b303030\n"
".quad 0x746573090a666e69,0x3436662e71652e70,0x202c313170250920,0x25202c3033646625\n"
".quad 0x40090a3b36386466,0x7262203131702521,0x365f744c24092061,0x0a3b34373630365f\n"
".quad 0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f\n"
".quad 0x6568202c39353220,0x6c6562616c206461,0x365f744c24206465,0x090a34333836355f\n"
".quad 0x09313309636f6c2e,0x6d090a3009373535,0x09203436662e766f,0x25202c3238646625\n"
".quad 0x62090a3b30336466,0x0920696e752e6172,0x69646e6557444c24,0x7265746e695f5f5f\n"
".quad 0x666c61685f6c616e,0x3b36315f3338315f,0x365f365f744c240a,0x2f200a3a34373630\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079\n"
".quad 0x64616568202c3935,0x64656c6562616c20,0x355f365f744c2420,0x6c2e090a34333836\n"
".quad 0x363509313309636f,0x766f6d090a300930,0x662509203436662e,0x666430202c323864\n"
".quad 0x3030303030386666,0x3b30303030303030,0x6e616e2d202f2f09,0x646e6557444c240a\n"
".quad 0x65746e695f5f5f69,0x6c61685f6c616e72,0x36315f3338315f66,0x6f6c3c2f2f200a3a\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c39353220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333836355f365f,0x3309636f6c2e090a\n"
".quad 0x0a30093239340931,0x3436662e67656e09,0x2c37386466250920,0x0a3b323864662520\n"
".quad 0x3436622e766f6d09,0x2c393472257b0920,0x25202c7d30357225,0x6d090a3b37386466\n"
".quad 0x09203233732e766f,0x7225202c36327225,0x6f6c2e090a3b3035,0x3339340931330963\n"
".quad 0x2e766f6d090a3009,0x72257b0920343662,0x7d313572252c3732,0x3b3738646625202c\n"
".quad 0x3309636f6c2e090a,0x0a30093539340931,0x3436662e766f6d09,0x2c38386466250920\n"
".quad 0x3030303030643020,0x3030303030303030,0x202f2f093b303030,0x672e746573090a30\n"
".quad 0x36662e3233752e74,0x2c32357225092034,0x202c373864662520,0x090a3b3838646625\n"
".quad 0x203233732e67656e,0x25202c3335722509,0x6f6d090a3b323572,0x2509203436662e76\n"
".quad 0x6430202c39386466,0x3030303030666637,0x3030303030303030,0x666e69202f2f093b\n"
".quad 0x746c2e746573090a,0x3436662e3233752e,0x202c343572250920,0x25202c3738646625\n"
".quad 0x6e090a3b39386466,0x09203233732e6765,0x7225202c35357225,0x646e61090a3b3435\n"
".quad 0x722509203233622e,0x33357225202c3635,0x0a3b35357225202c,0x3233752e766f6d09\n"
".quad 0x202c373572250920,0x70746573090a3b30,0x203233732e71652e,0x25202c3231702509\n"
".quad 0x357225202c363572,0x31702540090a3b37,0x2409206172622032,0x3231345f365f744c\n"
".quad 0x3c2f2f200a3b3831,0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f\n"
".quad 0x39353220656e696c,0x6c2064616568202c,0x242064656c656261,0x3836355f365f744c\n"
".quad 0x2e766f6d090a3433,0x3572250920323375,0x3538343031202c38,0x746573090a3b3537\n"
".quad 0x3233752e74672e70,0x202c333170250920,0x7225202c30357225,0x702540090a3b3835\n"
".quad 0x0920617262203331,0x31365f365f744c24,0x2f2f200a3b323434,0x50203e706f6f6c3c\n"
".quad 0x6c20666f20747261,0x79646f6220706f6f,0x353220656e696c20,0x2064616568202c39\n"
".quad 0x2064656c6562616c,0x36355f365f744c24,0x6f6c2e090a343338,0x3130350931330963\n"
".quad 0x2e766f6d090a3009,0x6466250920343666,0x33346430202c3039,0x3030303030303035\n"
".quad 0x093b303030303030,0x3130382e31202f2f,0x090a36312b653434,0x203436662e6c756d\n"
".quad 0x202c313964662509,0x25202c3738646625,0x6d090a3b30396466,0x09203436622e766f\n"
".quad 0x72252c393572257b,0x646625202c7d3632,0x6f6c2e090a3b3139,0x3230350931330963\n"
".quad 0x2e766f6d090a3009,0x72257b0920343662,0x7d303672252c3732,0x3b3139646625202c\n"
".quad 0x33732e766f6d090a,0x2c38337225092032,0x0a3b373730312d20,0x696e752e61726209\n"
".quad 0x5f365f744c240920,0x240a3b3638313136,0x3431365f365f744c,0x3c2f2f200a3a3234\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x39353220656e696c\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x3836355f365f744c,0x2e766f6d090a3433\n"
".quad 0x3372250920323373,0x333230312d202c38,0x5f365f744c240a3b,0x200a3a3638313136\n"
".quad 0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964\n"
".quad 0x616568202c393532,0x656c6562616c2064,0x5f365f744c242064,0x2e090a3433383635\n"
".quad 0x3509313309636f6c,0x6873090a30093730,0x2509203233732e72,0x327225202c313672\n"
".quad 0x090a3b3032202c36,0x203233732e646461,0x25202c3833722509,0x367225202c383372\n"
".quad 0x636f6c2e090a3b31,0x0939303509313309,0x622e646e61090a30,0x3034722509203233\n"
".quad 0x202c36327225202c,0x353334363431322d,0x726f090a3b333730,0x722509203233622e\n"
".quad 0x30347225202c3134,0x393632373031202c,0x6d090a3b38343233,0x09203436622e766f\n"
".quad 0x7b202c3533646625,0x3472252c37327225,0x766f6d090a3b7d31,0x722509203233752e\n"
".quad 0x33373031202c3236,0x0a3b323835373231,0x656c2e7074657309,0x702509203233752e\n"
".quad 0x31347225202c3431,0x0a3b32367225202c,0x6220343170254009,0x5f744c2409206172\n"
".quad 0x3b38393631365f36,0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f\n"
".quad 0x6e696c2079646f62,0x68202c3935322065,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x0a34333836355f36,0x313309636f6c2e09,0x090a300931313509,0x203436622e766f6d\n"
".quad 0x252c333672257b09,0x6625202c7d343672,0x7573090a3b353364,0x2509203233732e62\n"
".quad 0x367225202c353672,0x3538343031202c34,0x766f6d090a3b3637,0x257b09203436622e\n"
".quad 0x373672252c363672,0x3533646625202c7d,0x622e766f6d090a3b,0x3364662509203436\n"
".quad 0x363672257b202c35,0x0a3b7d353672252c,0x313309636f6c2e09,0x090a300932313509\n"
".quad 0x203233732e646461,0x25202c3833722509,0x0a3b31202c383372,0x31365f365f744c24\n"
".quad 0x2f2f200a3a383936,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x353220656e696c20,0x2064616568202c39,0x2064656c6562616c,0x36355f365f744c24\n"
".quad 0x6f6c2e090a343338,0x3831350931330963,0x2e766f6d090a3009,0x6466250920343666\n"
".quad 0x66626430202c3239,0x3030303030303066,0x093b303030303030,0x61090a312d202f2f\n"
".quad 0x09203436662e6464,0x25202c3733646625,0x6625202c35336466,0x6f6d090a3b323964\n"
".quad 0x2509203436662e76,0x6430202c33396466,0x3030303030666633,0x3030303030303030\n"
".quad 0x090a31202f2f093b,0x203436662e646461,0x202c393364662509,0x25202c3533646625\n"
".quad 0x63090a3b33396466,0x33662e6e722e7476,0x2509203436662e32,0x33646625202c3266\n"
".quad 0x2e706372090a3b39,0x09203233662e6e72,0x326625202c346625,0x662e747663090a3b\n"
".quad 0x09203233662e3436,0x25202c3034646625,0x67656e090a3b3466,0x662509203436662e\n"
".quad 0x646625202c343964,0x766f6d090a3b3933,0x662509203436662e,0x336430202c353964\n"
".quad 0x3030303030306666,0x3b30303030303030,0x6d090a31202f2f09,0x36662e6e722e6461\n"
".quad 0x3334646625092034,0x2c3439646625202c,0x202c303464662520,0x090a3b3539646625\n"
".quad 0x662e6e722e64616d,0x3464662509203436,0x3334646625202c34,0x2c3334646625202c\n"
".quad 0x0a3b333464662520,0x2e6e722e64616d09,0x6466250920343666,0x34646625202c3534\n"
".quad 0x3034646625202c34,0x3b3034646625202c,0x36662e6c756d090a,0x3634646625092034\n"
".quad 0x2c3733646625202c,0x0a3b353464662520,0x313309636f6c2e09,0x090a300938323509\n"
".quad 0x203436662e646461,0x202c373464662509,0x25202c3634646625,0x6d090a3b36346466\n"
".quad 0x09203436662e6c75,0x25202c3834646625,0x6625202c37346466,0x6f6d090a3b373464\n"
".quad 0x2509203436662e76,0x6430202c36396466,0x6230383331626533,0x6531663038656133\n"
".quad 0x302e31202f2f093b,0x36302d6533333632,0x36662e766f6d090a,0x3739646625092034\n"
".quad 0x306465336430202c,0x6137623835326565,0x2f2f093b34306238,0x39343633302e3420\n"
".quad 0x616d090a36302d65,0x3436662e6e722e64,0x2c38396466250920,0x202c363964662520\n"
".quad 0x25202c3834646625,0x6d090a3b37396466,0x09203436662e766f,0x30202c3939646625\n"
".quad 0x3632623366653364,0x3637363230663936,0x2e31202f2f093b66,0x302d653434383738\n"
".quad 0x722e64616d090a35,0x2509203436662e6e,0x25202c3030316466,0x6625202c38396466\n"
".quad 0x646625202c383464,0x766f6d090a3b3939,0x662509203436662e,0x6430202c31303164\n"
".quad 0x6263353437316633,0x3635393062613961,0x382e38202f2f093b,0x35302d6531383737\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x6625202c32303164,0x6625202c30303164\n"
".quad 0x646625202c383464,0x6f6d090a3b313031,0x2509203436662e76,0x30202c3330316466\n"
".quad 0x6331376333663364,0x3531356231643237,0x2e30202f2f093b34,0x3230343334303030\n"
".quad 0x722e64616d090a38,0x2509203436662e6e,0x25202c3430316466,0x25202c3230316466\n"
".quad 0x6625202c38346466,0x6d090a3b33303164,0x09203436662e766f,0x202c353031646625\n"
".quad 0x3934323666336430,0x3765623332393432,0x30202f2f093b6432,0x313233323230302e\n"
".quad 0x722e64616d090a34,0x2509203436662e6e,0x25202c3630316466,0x25202c3430316466\n"
".quad 0x6625202c38346466,0x6d090a3b35303164,0x09203436662e766f,0x202c373031646625\n"
".quad 0x3939393866336430,0x3361393939393939,0x30202f2f093b3463,0x6d090a353231302e\n"
".quad 0x36662e6e722e6461,0x3031646625092034,0x3031646625202c38,0x3834646625202c36\n"
".quad 0x373031646625202c,0x09636f6c2e090a3b,0x3009393235093133,0x36662e766f6d090a\n"
".quad 0x3031646625092034,0x6266336430202c39,0x3535353535353535,0x2f093b3435353535\n"
".quad 0x333338302e30202f,0x64616d090a333333,0x203436662e6e722e,0x2c30313164662509\n"
".quad 0x2c38303164662520,0x202c383464662520,0x0a3b393031646625,0x313309636f6c2e09\n"
".quad 0x090a300932333509,0x203436662e627573,0x202c343664662509,0x25202c3733646625\n"
".quad 0x6e090a3b37346466,0x09203436662e6765,0x202c313131646625,0x090a3b3734646625\n"
".quad 0x203436662e646461,0x2c32313164662509,0x202c343664662520,0x090a3b3436646625\n"
".quad 0x662e6e722e64616d,0x3164662509203436,0x31646625202c3331,0x33646625202c3131\n"
".quad 0x3131646625202c37,0x2e6c756d090a3b32,0x6466250920343666,0x34646625202c3836\n"
".quad 0x3131646625202c35,0x636f6c2e090a3b33,0x0935333509313309,0x662e6c756d090a30\n"
".quad 0x3164662509203436,0x34646625202c3431,0x3131646625202c38,0x2e6c756d090a3b30\n"
".quad 0x6466250920343666,0x34646625202c3037,0x3131646625202c37,0x636f6c2e090a3b34\n"
".quad 0x0936343509313309,0x722e747663090a30,0x33732e3436662e6e,0x3137646625092032\n"
".quad 0x0a3b38337225202c,0x3436662e766f6d09,0x3531316466250920,0x366566336430202c\n"
".quad 0x6166656632346532,0x2f2f093b66653933,0x34313339362e3020,0x722e64616d090a37\n"
".quad 0x2509203436662e6e,0x6625202c33376466,0x646625202c313764,0x646625202c353131\n"
".quad 0x766f6d090a3b3734,0x662509203436662e,0x6430202c36313164,0x6539636261376333\n"
".quad 0x6633303839336233,0x332e32202f2f093b,0x37312d6535303931,0x36662e646461090a\n"
".quad 0x3131646625092034,0x3037646625202c37,0x3b3836646625202c,0x33732e67656e090a\n"
".quad 0x2c38367225092032,0x090a3b3833722520,0x662e6e722e747663,0x09203233732e3436\n"
".quad 0x202c383131646625,0x6d090a3b38367225,0x09203436662e766f,0x202c393131646625\n"
".quad 0x6532366566336430,0x3933616665663234,0x30202f2f093b6665,0x0a3734313339362e\n"
".quad 0x2e6e722e64616d09,0x6466250920343666,0x646625202c303231,0x646625202c383131\n"
".quad 0x646625202c393131,0x627573090a3b3337,0x662509203436662e,0x6625202c31323164\n"
".quad 0x6625202c30323164,0x7573090a3b373464,0x2509203436662e62,0x25202c3232316466\n"
".quad 0x25202c3731316466,0x090a3b3132316466,0x662e6e722e64616d,0x3164662509203436\n"
".quad 0x37646625202c3332,0x3131646625202c31,0x3231646625202c36,0x2e646461090a3b32\n"
".quad 0x6466250920343666,0x646625202c343231,0x31646625202c3337,0x617262090a3b3332\n"
".quad 0x4c240920696e752e,0x5f5f69646e655744,0x616e7265746e695f,0x315f666c61685f6c\n"
".quad 0x240a3b38315f3338,0x3231345f365f744c,0x3c2f2f200a3a3831,0x6150203e706f6f6c\n"
".quad 0x6f6c20666f207472,0x2079646f6220706f,0x39353220656e696c,0x6c2064616568202c\n"
".quad 0x242064656c656261,0x3836355f365f744c,0x636f6c2e090a3433,0x0938343509313309\n"
".quad 0x662e736261090a30,0x3164662509203436,0x38646625202c3532,0x2e766f6d090a3b32\n"
".quad 0x6466250920343666,0x376430202c363231,0x3030303030306666,0x3b30303030303030\n"
".quad 0x0a666e69202f2f09,0x656c2e7074657309,0x702509203436662e,0x31646625202c3531\n"
".quad 0x31646625202c3532,0x702540090a3b3632,0x0920617262203531,0x32365f365f744c24\n"
".quad 0x2f2f200a3b303132,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x353220656e696c20,0x2064616568202c39,0x2064656c6562616c,0x36355f365f744c24\n"
".quad 0x6f6c2e090a343338,0x3934350931330963,0x2e646461090a3009,0x6466250920343666\n"
".quad 0x646625202c373231,0x38646625202c3238,0x2e67656e090a3b32,0x6466250920343666\n"
".quad 0x646625202c343231,0x7262090a3b373231,0x240920696e752e61,0x5f69646e6557444c\n"
".quad 0x6e7265746e695f5f,0x5f666c61685f6c61,0x0a3b38315f333831,0x32365f365f744c24\n"
".quad 0x2f2f200a3a303132,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x353220656e696c20,0x2064616568202c39,0x2064656c6562616c,0x36355f365f744c24\n"
".quad 0x766f6d090a343338,0x662509203436662e,0x6430202c38323164,0x3030303030303030\n"
".quad 0x3030303030303030,0x090a30202f2f093b,0x2e71652e70746573,0x3170250920343666\n"
".quad 0x3738646625202c36,0x383231646625202c,0x3170252140090a3b,0x2409206172622036\n"
".quad 0x3732365f365f744c,0x3c2f2f200a3b3232,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x39353220656e696c,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x3836355f365f744c,0x636f6c2e090a3433,0x0933353509313309,0x662e766f6d090a30\n"
".quad 0x3164662509203436,0x66666430202c3432,0x3030303030303066,0x093b303030303030\n"
".quad 0x0a666e692d202f2f,0x696e752e61726209,0x6e6557444c240920,0x746e695f5f5f6964\n"
".quad 0x61685f6c616e7265,0x315f3338315f666c,0x365f744c240a3b38,0x0a3a32323732365f\n"
".quad 0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f\n"
".quad 0x6568202c39353220,0x6c6562616c206461,0x365f744c24206465,0x090a34333836355f\n"
".quad 0x203436662e766f6d,0x2c39323164662509,0x3030666637643020,0x3030303030303030\n"
".quad 0x202f2f093b303030,0x746573090a666e69,0x3436662e71652e70,0x202c373170250920\n"
".quad 0x25202c3738646625,0x090a3b3932316466,0x6220373170252140,0x5f744c2409206172\n"
".quad 0x3b34333233365f36,0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f\n"
".quad 0x6e696c2079646f62,0x68202c3935322065,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x0a34333836355f36,0x313309636f6c2e09,0x090a300937353509,0x203436662e766f6d\n"
".quad 0x2c34323164662509,0x0a3b373864662520,0x696e752e61726209,0x6e6557444c240920\n"
".quad 0x746e695f5f5f6964,0x61685f6c616e7265,0x315f3338315f666c,0x365f744c240a3b38\n"
".quad 0x0a3a34333233365f,0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066\n"
".quad 0x656e696c2079646f,0x6568202c39353220,0x6c6562616c206461,0x365f744c24206465\n"
".quad 0x090a34333836355f,0x09313309636f6c2e,0x6d090a3009303635,0x09203436662e766f\n"
".quad 0x202c343231646625,0x3030386666666430,0x3030303030303030,0x2d202f2f093b3030\n"
".quad 0x57444c240a6e616e,0x695f5f5f69646e65,0x5f6c616e7265746e,0x3338315f666c6168\n"
".quad 0x2f2f200a3a38315f,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x353220656e696c20,0x2064616568202c39,0x2064656c6562616c,0x36355f365f744c24\n"
".quad 0x6f6c2e090a343338,0x3832310939310963,0x2e766f6d090a3009,0x6466250920343666\n"
".quad 0x31646625202c3732,0x617262090a3b3432,0x4c240920696e752e,0x313138355f365f74\n"
".quad 0x365f744c240a3b34,0x0a3a30373338355f,0x706f6f6c3c2f2f20,0x6f2074726150203e\n"
".quad 0x6220706f6f6c2066,0x656e696c2079646f,0x6568202c39353220,0x6c6562616c206461\n"
".quad 0x365f744c24206465,0x090a34333836355f,0x09313309636f6c2e,0x6d090a3009323934\n"
".quad 0x09203436622e766f,0x72252c393672257b,0x646625202c7d3037,0x2e766f6d090a3b31\n"
".quad 0x3272250920323373,0x3b30377225202c36,0x3309636f6c2e090a,0x0a30093339340931\n"
".quad 0x3436622e766f6d09,0x2c373272257b0920,0x25202c7d31377225,0x6c2e090a3b316466\n"
".quad 0x393409313309636f,0x766f6d090a300935,0x662509203436662e,0x6430202c30333164\n"
".quad 0x3030303030303030,0x3030303030303030,0x090a30202f2f093b,0x752e74672e746573\n"
".quad 0x09203436662e3233,0x6625202c32377225,0x31646625202c3164,0x67656e090a3b3033\n"
".quad 0x722509203233732e,0x32377225202c3337,0x662e766f6d090a3b,0x3164662509203436\n"
".quad 0x66376430202c3133,0x3030303030303066,0x093b303030303030,0x090a666e69202f2f\n"
".quad 0x752e746c2e746573,0x09203436662e3233,0x6625202c34377225,0x31646625202c3164\n"
".quad 0x67656e090a3b3133,0x722509203233732e,0x34377225202c3537,0x622e646e61090a3b\n"
".quad 0x3637722509203233,0x202c33377225202c,0x6d090a3b35377225,0x09203233752e766f\n"
".quad 0x3b30202c37377225,0x652e70746573090a,0x2509203233732e71,0x377225202c383170\n"
".quad 0x3b37377225202c36,0x203831702540090a,0x744c240920617262,0x34353732345f365f\n"
".quad 0x6f6c3c2f2f200a3b,0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220\n"
".quad 0x202c39353220656e,0x62616c2064616568,0x744c242064656c65,0x34333836355f365f\n"
".quad 0x33752e766f6d090a,0x2c38377225092032,0x3537353834303120,0x2e70746573090a3b\n"
".quad 0x09203233752e7467,0x7225202c39317025,0x38377225202c3037,0x3931702540090a3b\n"
".quad 0x4c24092061726220,0x303034365f365f74,0x6c3c2f2f200a3b32,0x726150203e706f6f\n"
".quad 0x6f6f6c20666f2074,0x6c2079646f622070,0x2c39353220656e69,0x616c206461656820\n"
".quad 0x4c242064656c6562,0x333836355f365f74,0x09636f6c2e090a34,0x3009313035093133\n"
".quad 0x36662e766f6d090a,0x3331646625092034,0x3533346430202c32,0x3030303030303030\n"
".quad 0x2f093b3030303030,0x343130382e31202f,0x6d090a36312b6534,0x09203436662e6c75\n"
".quad 0x202c333331646625,0x6625202c31646625,0x6d090a3b32333164,0x09203436622e766f\n"
".quad 0x72252c393772257b,0x646625202c7d3632,0x6c2e090a3b333331,0x303509313309636f\n"
".quad 0x766f6d090a300932,0x257b09203436622e,0x303872252c373272,0x3331646625202c7d\n"
".quad 0x2e766f6d090a3b33,0x3372250920323373,0x373730312d202c38,0x752e617262090a3b\n"
".quad 0x5f744c240920696e,0x3b36343733365f36,0x365f365f744c240a,0x2f200a3a32303034\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079\n"
".quad 0x64616568202c3935,0x64656c6562616c20,0x355f365f744c2420,0x6f6d090a34333836\n"
".quad 0x2509203233732e76,0x30312d202c383372,0x5f744c240a3b3332,0x3a36343733365f36\n"
".quad 0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62\n"
".quad 0x68202c3935322065,0x6562616c20646165,0x5f744c242064656c,0x0a34333836355f36\n"
".quad 0x313309636f6c2e09,0x090a300937303509,0x203233732e726873,0x25202c3138722509\n"
".quad 0x3b3032202c363272,0x33732e646461090a,0x2c38337225092032,0x25202c3833722520\n"
".quad 0x6c2e090a3b313872,0x303509313309636f,0x646e61090a300939,0x722509203233622e\n"
".quad 0x36327225202c3034,0x34363431322d202c,0x090a3b3337303533,0x09203233622e726f\n"
".quad 0x7225202c31347225,0x32373031202c3034,0x0a3b383432333936,0x3436622e766f6d09\n"
".quad 0x2c35336466250920,0x252c373272257b20,0x6d090a3b7d313472,0x09203233752e766f\n"
".quad 0x3031202c32387225,0x3238353732313337,0x2e70746573090a3b,0x09203233752e656c\n"
".quad 0x7225202c30327025,0x32387225202c3134,0x3032702540090a3b,0x4c24092061726220\n"
".quad 0x353234365f365f74,0x6c3c2f2f200a3b38,0x726150203e706f6f,0x6f6f6c20666f2074\n"
".quad 0x6c2079646f622070,0x2c39353220656e69,0x616c206461656820,0x4c242064656c6562\n"
".quad 0x333836355f365f74,0x09636f6c2e090a34,0x3009313135093133,0x36622e766f6d090a\n"
".quad 0x333872257b092034,0x202c7d343872252c,0x090a3b3533646625,0x203233732e627573\n"
".quad 0x25202c3538722509,0x343031202c343872,0x6d090a3b36373538,0x09203436622e766f\n"
".quad 0x72252c363872257b,0x646625202c7d3738,0x766f6d090a3b3533,0x662509203436622e\n"
".quad 0x72257b202c353364,0x7d353872252c3638,0x09636f6c2e090a3b,0x3009323135093133\n"
".quad 0x33732e646461090a,0x2c38337225092032,0x31202c3833722520,0x5f365f744c240a3b\n"
".quad 0x200a3a3835323436,0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20\n"
".quad 0x20656e696c207964,0x616568202c393532,0x656c6562616c2064,0x5f365f744c242064\n"
".quad 0x2e090a3433383635,0x3509313309636f6c,0x6f6d090a30093831,0x2509203436662e76\n"
".quad 0x30202c3433316466,0x3030303066666264,0x3030303030303030,0x312d202f2f093b30\n"
".quad 0x36662e646461090a,0x3733646625092034,0x2c3533646625202c,0x3b34333164662520\n"
".quad 0x36662e766f6d090a,0x3331646625092034,0x6666336430202c35,0x3030303030303030\n"
".quad 0x2f093b3030303030,0x646461090a31202f,0x662509203436662e,0x646625202c393364\n"
".quad 0x31646625202c3533,0x747663090a3b3533,0x2e3233662e6e722e,0x3266250920343666\n"
".quad 0x3b3933646625202c,0x6e722e706372090a,0x662509203233662e,0x0a3b326625202c35\n"
".quad 0x3436662e74766309,0x662509203233662e,0x356625202c303464,0x662e67656e090a3b\n"
".quad 0x3164662509203436,0x33646625202c3633,0x2e766f6d090a3b39,0x6466250920343666\n"
".quad 0x336430202c373331,0x3030303030306666,0x3b30303030303030,0x6d090a31202f2f09\n"
".quad 0x36662e6e722e6461,0x3334646625092034,0x363331646625202c,0x2c3034646625202c\n"
".quad 0x3b37333164662520,0x6e722e64616d090a,0x662509203436662e,0x646625202c343464\n"
".quad 0x34646625202c3334,0x3334646625202c33,0x722e64616d090a3b,0x2509203436662e6e\n"
".quad 0x6625202c35346466,0x646625202c343464,0x34646625202c3034,0x2e6c756d090a3b30\n"
".quad 0x6466250920343666,0x33646625202c3634,0x3534646625202c37,0x09636f6c2e090a3b\n"
".quad 0x3009383235093133,0x36662e646461090a,0x3734646625092034,0x2c3634646625202c\n"
".quad 0x0a3b363464662520,0x3436662e6c756d09,0x2c38346466250920,0x202c373464662520\n"
".quad 0x090a3b3734646625,0x203436662e766f6d,0x2c38333164662509,0x3331626533643020\n"
".quad 0x3038656133623038,0x202f2f093b653166,0x6533333632302e31,0x766f6d090a36302d\n"
".quad 0x662509203436662e,0x6430202c39333164,0x3532656530646533,0x3430623861376238\n"
".quad 0x302e34202f2f093b,0x36302d6539343633,0x6e722e64616d090a,0x662509203436662e\n"
".quad 0x6625202c30343164,0x6625202c38333164,0x646625202c383464,0x6f6d090a3b393331\n"
".quad 0x2509203436662e76,0x30202c3134316466,0x3632623366653364,0x3637363230663936\n"
".quad 0x2e31202f2f093b66,0x302d653434383738,0x722e64616d090a35,0x2509203436662e6e\n"
".quad 0x25202c3234316466,0x25202c3034316466,0x6625202c38346466,0x6d090a3b31343164\n"
".quad 0x09203436662e766f,0x202c333431646625,0x3534373166336430,0x3930626139616263\n"
".quad 0x38202f2f093b3635,0x2d6531383737382e,0x2e64616d090a3530,0x09203436662e6e72\n"
".quad 0x202c343431646625,0x202c323431646625,0x25202c3834646625,0x090a3b3334316466\n"
".quad 0x203436662e766f6d,0x2c35343164662509,0x3763336633643020,0x3562316432376331\n"
".quad 0x202f2f093b343531,0x3433343030302e30,0x64616d090a383230,0x203436662e6e722e\n"
".quad 0x2c36343164662509,0x2c34343164662520,0x202c383464662520,0x0a3b353431646625\n"
".quad 0x3436662e766f6d09,0x3734316466250920,0x323666336430202c,0x6233323934323934\n"
".quad 0x2f2f093b64323765,0x33323230302e3020,0x64616d090a343132,0x203436662e6e722e\n"
".quad 0x2c38343164662509,0x2c36343164662520,0x202c383464662520,0x0a3b373431646625\n"
".quad 0x3436662e766f6d09,0x3934316466250920,0x393866336430202c,0x3939393939393939\n"
".quad 0x2f2f093b34633361,0x0a353231302e3020,0x2e6e722e64616d09,0x6466250920343666\n"
".quad 0x646625202c303531,0x646625202c383431,0x31646625202c3834,0x6f6c2e090a3b3934\n"
".quad 0x3932350931330963,0x2e766f6d090a3009,0x6466250920343666,0x336430202c313531\n"
".quad 0x3535353535356266,0x3b34353535353535,0x38302e30202f2f09,0x6d090a3333333333\n"
".quad 0x36662e6e722e6461,0x3531646625092034,0x3531646625202c32,0x3834646625202c30\n"
".quad 0x313531646625202c,0x09636f6c2e090a3b,0x3009323335093133,0x36662e627573090a\n"
".quad 0x3436646625092034,0x2c3733646625202c,0x0a3b373464662520,0x3436662e67656e09\n"
".quad 0x3335316466250920,0x3b3734646625202c,0x36662e646461090a,0x3531646625092034\n"
".quad 0x3436646625202c34,0x3b3436646625202c,0x6e722e64616d090a,0x662509203436662e\n"
".quad 0x6625202c35353164,0x6625202c33353164,0x646625202c373364,0x756d090a3b343531\n"
".quad 0x2509203436662e6c,0x6625202c38366466,0x646625202c353464,0x6c2e090a3b353531\n"
".quad 0x333509313309636f,0x6c756d090a300935,0x662509203436662e,0x6625202c36353164\n"
".quad 0x646625202c383464,0x756d090a3b323531,0x2509203436662e6c,0x6625202c30376466\n"
".quad 0x646625202c373464,0x6c2e090a3b363531,0x343509313309636f,0x747663090a300936\n"
".quad 0x2e3436662e6e722e,0x6466250920323373,0x38337225202c3137,0x662e766f6d090a3b\n"
".quad 0x3164662509203436,0x66336430202c3735,0x6566323465323665,0x093b666539336166\n"
".quad 0x3339362e30202f2f,0x64616d090a373431,0x203436662e6e722e,0x202c333764662509\n"
".quad 0x25202c3137646625,0x25202c3735316466,0x6d090a3b37346466,0x09203436662e766f\n"
".quad 0x202c383531646625,0x6362613763336430,0x3038393362336539,0x32202f2f093b6633\n"
".quad 0x2d6535303931332e,0x2e646461090a3731,0x6466250920343666,0x646625202c393531\n"
".quad 0x36646625202c3037,0x2e67656e090a3b38,0x3872250920323373,0x3b38337225202c38\n"
".quad 0x6e722e747663090a,0x3233732e3436662e,0x3036316466250920,0x0a3b38387225202c\n"
".quad 0x3436662e766f6d09,0x3136316466250920,0x366566336430202c,0x6166656632346532\n"
".quad 0x2f2f093b66653933,0x34313339362e3020,0x722e64616d090a37,0x2509203436662e6e\n"
".quad 0x25202c3236316466,0x25202c3036316466,0x25202c3136316466,0x73090a3b33376466\n"
".quad 0x09203436662e6275,0x202c333631646625,0x202c323631646625,0x090a3b3734646625\n"
".quad 0x203436662e627573,0x2c34363164662509,0x2c39353164662520,0x3b33363164662520\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x6625202c35363164,0x646625202c313764\n"
".quad 0x646625202c383531,0x6461090a3b343631,0x2509203436662e64,0x25202c3636316466\n"
".quad 0x6625202c33376466,0x62090a3b35363164,0x0920696e752e6172,0x69646e6557444c24\n"
".quad 0x7265746e695f5f5f,0x666c61685f6c616e,0x3b32315f3338315f,0x345f365f744c240a\n"
".quad 0x2f200a3a34353732,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3220656e696c2079,0x64616568202c3935,0x64656c6562616c20,0x355f365f744c2420\n"
".quad 0x6c2e090a34333836,0x343509313309636f,0x736261090a300938,0x662509203436662e\n"
".quad 0x6625202c37363164,0x766f6d090a3b3164,0x662509203436662e,0x6430202c38363164\n"
".quad 0x3030303030666637,0x3030303030303030,0x666e69202f2f093b,0x6c2e70746573090a\n"
".quad 0x2509203436662e65,0x646625202c313270,0x646625202c373631,0x2540090a3b383631\n"
".quad 0x2061726220313270,0x365f365f744c2409,0x2f200a3b30373734,0x203e706f6f6c3c2f\n"
".quad 0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079,0x64616568202c3935\n"
".quad 0x64656c6562616c20,0x355f365f744c2420,0x6c2e090a34333836,0x343509313309636f\n"
".quad 0x646461090a300939,0x662509203436662e,0x6625202c36363164,0x31646625202c3164\n"
".quad 0x752e617262090a3b,0x57444c240920696e,0x695f5f5f69646e65,0x5f6c616e7265746e\n"
".quad 0x3338315f666c6168,0x744c240a3b32315f,0x30373734365f365f,0x6f6c3c2f2f200a3a\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c39353220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333836355f365f,0x36662e766f6d090a\n"
".quad 0x3631646625092034,0x3030306430202c39,0x3030303030303030,0x2f093b3030303030\n"
".quad 0x746573090a30202f,0x3436662e71652e70,0x202c323270250920,0x6625202c31646625\n"
".quad 0x40090a3b39363164,0x7262203232702521,0x365f744c24092061,0x0a3b32383235365f\n"
".quad 0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f\n"
".quad 0x6568202c39353220,0x6c6562616c206461,0x365f744c24206465,0x090a34333836355f\n"
".quad 0x09313309636f6c2e,0x6d090a3009333535,0x09203436662e766f,0x202c363631646625\n"
".quad 0x3030306666666430,0x3030303030303030,0x2d202f2f093b3030,0x617262090a666e69\n"
".quad 0x4c240920696e752e,0x5f5f69646e655744,0x616e7265746e695f,0x315f666c61685f6c\n"
".quad 0x240a3b32315f3338,0x3235365f365f744c,0x3c2f2f200a3a3238,0x6150203e706f6f6c\n"
".quad 0x6f6c20666f207472,0x2079646f6220706f,0x39353220656e696c,0x6c2064616568202c\n"
".quad 0x242064656c656261,0x3836355f365f744c,0x2e766f6d090a3433,0x6466250920343666\n"
".quad 0x376430202c303731,0x3030303030306666,0x3b30303030303030,0x0a666e69202f2f09\n"
".quad 0x71652e7074657309,0x702509203436662e,0x31646625202c3332,0x303731646625202c\n"
".quad 0x3270252140090a3b,0x2409206172622033,0x3735365f365f744c,0x3c2f2f200a3b3439\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x39353220656e696c\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x3836355f365f744c,0x636f6c2e090a3433\n"
".quad 0x0937353509313309,0x662e766f6d090a30,0x3164662509203436,0x31646625202c3636\n"
".quad 0x752e617262090a3b,0x57444c240920696e,0x695f5f5f69646e65,0x5f6c616e7265746e\n"
".quad 0x3338315f666c6168,0x744c240a3b32315f,0x34393735365f365f,0x6f6c3c2f2f200a3a\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c39353220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333836355f365f,0x3309636f6c2e090a\n"
".quad 0x0a30093036350931,0x3436662e766f6d09,0x3636316466250920,0x386666666430202c\n"
".quad 0x3030303030303030,0x2f2f093b30303030,0x4c240a6e616e2d20,0x5f5f69646e655744\n"
".quad 0x616e7265746e695f,0x315f666c61685f6c,0x200a3a32315f3338,0x3e706f6f6c3c2f2f\n"
".quad 0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c393532\n"
".quad 0x656c6562616c2064,0x5f365f744c242064,0x2e090a3433383635,0x3409313309636f6c\n"
".quad 0x656e090a30093239,0x2509203436662e67,0x25202c3137316466,0x090a3b3636316466\n"
".quad 0x203436622e766f6d,0x252c393872257b09,0x6625202c7d303972,0x6d090a3b31373164\n"
".quad 0x09203233732e766f,0x7225202c36327225,0x6f6c2e090a3b3039,0x3339340931330963\n"
".quad 0x2e766f6d090a3009,0x72257b0920343662,0x7d313972252c3732,0x313731646625202c\n"
".quad 0x09636f6c2e090a3b,0x3009353934093133,0x36662e766f6d090a,0x3731646625092034\n"
".quad 0x3030306430202c32,0x3030303030303030,0x2f093b3030303030,0x746573090a30202f\n"
".quad 0x2e3233752e74672e,0x3972250920343666,0x3731646625202c32,0x3731646625202c31\n"
".quad 0x2e67656e090a3b32,0x3972250920323373,0x3b32397225202c33,0x36662e766f6d090a\n"
".quad 0x3731646625092034,0x6666376430202c33,0x3030303030303030,0x2f093b3030303030\n"
".quad 0x73090a666e69202f,0x33752e746c2e7465,0x2509203436662e32,0x646625202c343972\n"
".quad 0x646625202c313731,0x656e090a3b333731,0x2509203233732e67,0x397225202c353972\n"
".quad 0x2e646e61090a3b34,0x3972250920323362,0x2c33397225202c36,0x090a3b3539722520\n"
".quad 0x203233752e766f6d,0x30202c3739722509,0x2e70746573090a3b,0x09203233732e7165\n"
".quad 0x7225202c34327025,0x37397225202c3639,0x3432702540090a3b,0x4c24092061726220\n"
".quad 0x393234345f365f74,0x6c3c2f2f200a3b30,0x726150203e706f6f,0x6f6f6c20666f2074\n"
".quad 0x6c2079646f622070,0x2c39353220656e69,0x616c206461656820,0x4c242064656c6562\n"
".quad 0x333836355f365f74,0x752e766f6d090a34,0x3839722509203233,0x373538343031202c\n"
".quad 0x70746573090a3b35,0x203233752e74672e,0x25202c3532702509,0x397225202c303972\n"
".quad 0x32702540090a3b38,0x2409206172622035,0x3536365f365f744c,0x3c2f2f200a3b3236\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x39353220656e696c\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x3836355f365f744c,0x636f6c2e090a3433\n"
".quad 0x0931303509313309,0x662e766f6d090a30,0x3164662509203436,0x33346430202c3437\n"
".quad 0x3030303030303035,0x093b303030303030,0x3130382e31202f2f,0x090a36312b653434\n"
".quad 0x203436662e6c756d,0x2c35373164662509,0x2c31373164662520,0x3b34373164662520\n"
".quad 0x36622e766f6d090a,0x393972257b092034,0x202c7d363272252c,0x0a3b353731646625\n"
".quad 0x313309636f6c2e09,0x090a300932303509,0x203436622e766f6d,0x252c373272257b09\n"
".quad 0x25202c7d30303172,0x090a3b3537316466,0x203233732e766f6d,0x2d202c3833722509\n"
".quad 0x62090a3b37373031,0x0920696e752e6172,0x36365f365f744c24,0x744c240a3b363033\n"
".quad 0x32363536365f365f,0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20\n"
".quad 0x696c2079646f6220,0x202c39353220656e,0x62616c2064616568,0x744c242064656c65\n"
".quad 0x34333836355f365f,0x33732e766f6d090a,0x2c38337225092032,0x0a3b333230312d20\n"
".quad 0x36365f365f744c24,0x2f2f200a3a363033,0x50203e706f6f6c3c,0x6c20666f20747261\n"
".quad 0x79646f6220706f6f,0x353220656e696c20,0x2064616568202c39,0x2064656c6562616c\n"
".quad 0x36355f365f744c24,0x6f6c2e090a343338,0x3730350931330963,0x2e726873090a3009\n"
".quad 0x3172250920323373,0x36327225202c3130,0x61090a3b3032202c,0x09203233732e6464\n"
".quad 0x7225202c38337225,0x30317225202c3833,0x636f6c2e090a3b31,0x0939303509313309\n"
".quad 0x622e646e61090a30,0x3034722509203233,0x202c36327225202c,0x353334363431322d\n"
".quad 0x726f090a3b333730,0x722509203233622e,0x30347225202c3134,0x393632373031202c\n"
".quad 0x6d090a3b38343233,0x09203436622e766f,0x7b202c3533646625,0x3472252c37327225\n"
".quad 0x766f6d090a3b7d31,0x722509203233752e,0x373031202c323031,0x3b32383537323133\n"
".quad 0x6c2e70746573090a,0x2509203233752e65,0x347225202c363270,0x3230317225202c31\n"
".quad 0x3632702540090a3b,0x4c24092061726220,0x313836365f365f74,0x6c3c2f2f200a3b38\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x2c39353220656e69\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x333836355f365f74,0x09636f6c2e090a34\n"
".quad 0x3009313135093133,0x36622e766f6d090a,0x303172257b092034,0x7d34303172252c33\n"
".quad 0x3b3533646625202c,0x33732e627573090a,0x3530317225092032,0x2c3430317225202c\n"
".quad 0x3637353834303120,0x622e766f6d090a3b,0x3172257b09203436,0x37303172252c3630\n"
".quad 0x3533646625202c7d,0x622e766f6d090a3b,0x3364662509203436,0x303172257b202c35\n"
".quad 0x7d35303172252c36,0x09636f6c2e090a3b,0x3009323135093133,0x33732e646461090a\n"
".quad 0x2c38337225092032,0x31202c3833722520,0x5f365f744c240a3b,0x200a3a3831383636\n"
".quad 0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964\n"
".quad 0x616568202c393532,0x656c6562616c2064,0x5f365f744c242064,0x2e090a3433383635\n"
".quad 0x3509313309636f6c,0x6f6d090a30093831,0x2509203436662e76,0x30202c3637316466\n"
".quad 0x3030303066666264,0x3030303030303030,0x312d202f2f093b30,0x36662e646461090a\n"
".quad 0x3733646625092034,0x2c3533646625202c,0x3b36373164662520,0x36662e766f6d090a\n"
".quad 0x3731646625092034,0x6666336430202c37,0x3030303030303030,0x2f093b3030303030\n"
".quad 0x646461090a31202f,0x662509203436662e,0x646625202c393364,0x31646625202c3533\n"
".quad 0x747663090a3b3737,0x2e3233662e6e722e,0x3266250920343666,0x3b3933646625202c\n"
".quad 0x6e722e706372090a,0x662509203233662e,0x0a3b326625202c36,0x3436662e74766309\n"
".quad 0x662509203233662e,0x366625202c303464,0x662e67656e090a3b,0x3164662509203436\n"
".quad 0x33646625202c3837,0x2e766f6d090a3b39,0x6466250920343666,0x336430202c393731\n"
".quad 0x3030303030306666,0x3b30303030303030,0x6d090a31202f2f09,0x36662e6e722e6461\n"
".quad 0x3334646625092034,0x383731646625202c,0x2c3034646625202c,0x3b39373164662520\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x646625202c343464,0x34646625202c3334\n"
".quad 0x3334646625202c33,0x722e64616d090a3b,0x2509203436662e6e,0x6625202c35346466\n"
".quad 0x646625202c343464,0x34646625202c3034,0x2e6c756d090a3b30,0x6466250920343666\n"
".quad 0x33646625202c3634,0x3534646625202c37,0x09636f6c2e090a3b,0x3009383235093133\n"
".quad 0x36662e646461090a,0x3734646625092034,0x2c3634646625202c,0x0a3b363464662520\n"
".quad 0x3436662e6c756d09,0x2c38346466250920,0x202c373464662520,0x090a3b3734646625\n"
".quad 0x203436662e766f6d,0x2c30383164662509,0x3331626533643020,0x3038656133623038\n"
".quad 0x202f2f093b653166,0x6533333632302e31,0x766f6d090a36302d,0x662509203436662e\n"
".quad 0x6430202c31383164,0x3532656530646533,0x3430623861376238,0x302e34202f2f093b\n"
".quad 0x36302d6539343633,0x6e722e64616d090a,0x662509203436662e,0x6625202c32383164\n"
".quad 0x6625202c30383164,0x646625202c383464,0x6f6d090a3b313831,0x2509203436662e76\n"
".quad 0x30202c3338316466,0x3632623366653364,0x3637363230663936,0x2e31202f2f093b66\n"
".quad 0x302d653434383738,0x722e64616d090a35,0x2509203436662e6e,0x25202c3438316466\n"
".quad 0x25202c3238316466,0x6625202c38346466,0x6d090a3b33383164,0x09203436662e766f\n"
".quad 0x202c353831646625,0x3534373166336430,0x3930626139616263,0x38202f2f093b3635\n"
".quad 0x2d6531383737382e,0x2e64616d090a3530,0x09203436662e6e72,0x202c363831646625\n"
".quad 0x202c343831646625,0x25202c3834646625,0x090a3b3538316466,0x203436662e766f6d\n"
".quad 0x2c37383164662509,0x3763336633643020,0x3562316432376331,0x202f2f093b343531\n"
".quad 0x3433343030302e30,0x64616d090a383230,0x203436662e6e722e,0x2c38383164662509\n"
".quad 0x2c36383164662520,0x202c383464662520,0x0a3b373831646625,0x3436662e766f6d09\n"
".quad 0x3938316466250920,0x323666336430202c,0x6233323934323934,0x2f2f093b64323765\n"
".quad 0x33323230302e3020,0x64616d090a343132,0x203436662e6e722e,0x2c30393164662509\n"
".quad 0x2c38383164662520,0x202c383464662520,0x0a3b393831646625,0x3436662e766f6d09\n"
".quad 0x3139316466250920,0x393866336430202c,0x3939393939393939,0x2f2f093b34633361\n"
".quad 0x0a353231302e3020,0x2e6e722e64616d09,0x6466250920343666,0x646625202c323931\n"
".quad 0x646625202c303931,0x31646625202c3834,0x6f6c2e090a3b3139,0x3932350931330963\n"
".quad 0x2e766f6d090a3009,0x6466250920343666,0x336430202c333931,0x3535353535356266\n"
".quad 0x3b34353535353535,0x38302e30202f2f09,0x6d090a3333333333,0x36662e6e722e6461\n"
".quad 0x3931646625092034,0x3931646625202c34,0x3834646625202c32,0x333931646625202c\n"
".quad 0x09636f6c2e090a3b,0x3009323335093133,0x36662e627573090a,0x3436646625092034\n"
".quad 0x2c3733646625202c,0x0a3b373464662520,0x3436662e67656e09,0x3539316466250920\n"
".quad 0x3b3734646625202c,0x36662e646461090a,0x3931646625092034,0x3436646625202c36\n"
".quad 0x3b3436646625202c,0x6e722e64616d090a,0x662509203436662e,0x6625202c37393164\n"
".quad 0x6625202c35393164,0x646625202c373364,0x756d090a3b363931,0x2509203436662e6c\n"
".quad 0x6625202c38366466,0x646625202c353464,0x6c2e090a3b373931,0x333509313309636f\n"
".quad 0x6c756d090a300935,0x662509203436662e,0x6625202c38393164,0x646625202c383464\n"
".quad 0x756d090a3b343931,0x2509203436662e6c,0x6625202c30376466,0x646625202c373464\n"
".quad 0x6c2e090a3b383931,0x343509313309636f,0x747663090a300936,0x2e3436662e6e722e\n"
".quad 0x6466250920323373,0x38337225202c3137,0x662e766f6d090a3b,0x3164662509203436\n"
".quad 0x66336430202c3939,0x6566323465323665,0x093b666539336166,0x3339362e30202f2f\n"
".quad 0x64616d090a373431,0x203436662e6e722e,0x202c333764662509,0x25202c3137646625\n"
".quad 0x25202c3939316466,0x6d090a3b37346466,0x09203436662e766f,0x202c303032646625\n"
".quad 0x6362613763336430,0x3038393362336539,0x32202f2f093b6633,0x2d6535303931332e\n"
".quad 0x2e646461090a3731,0x6466250920343666,0x646625202c313032,0x36646625202c3037\n"
".quad 0x2e67656e090a3b38,0x3172250920323373,0x38337225202c3830,0x722e747663090a3b\n"
".quad 0x33732e3436662e6e,0x3032646625092032,0x3830317225202c32,0x662e766f6d090a3b\n"
".quad 0x3264662509203436,0x66336430202c3330,0x6566323465323665,0x093b666539336166\n"
".quad 0x3339362e30202f2f,0x64616d090a373431,0x203436662e6e722e,0x2c34303264662509\n"
".quad 0x2c32303264662520,0x2c33303264662520,0x0a3b333764662520,0x3436662e62757309\n"
".quad 0x3530326466250920,0x343032646625202c,0x3b3734646625202c,0x36662e627573090a\n"
".quad 0x3032646625092034,0x3032646625202c36,0x3032646625202c31,0x2e64616d090a3b35\n"
".quad 0x09203436662e6e72,0x202c373032646625,0x25202c3137646625,0x25202c3030326466\n"
".quad 0x090a3b3630326466,0x203436662e646461,0x2c38303264662509,0x202c333764662520\n"
".quad 0x0a3b373032646625,0x696e752e61726209,0x6e6557444c240920,0x746e695f5f5f6964\n"
".quad 0x61685f6c616e7265,0x315f3338315f666c,0x365f744c240a3b34,0x0a3a30393234345f\n"
".quad 0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f\n"
".quad 0x6568202c39353220,0x6c6562616c206461,0x365f744c24206465,0x090a34333836355f\n"
".quad 0x09313309636f6c2e,0x61090a3009383435,0x09203436662e7362,0x202c393032646625\n"
".quad 0x0a3b363631646625,0x3436662e766f6d09,0x3031326466250920,0x306666376430202c\n"
".quad 0x3030303030303030,0x2f2f093b30303030,0x6573090a666e6920,0x36662e656c2e7074\n"
".quad 0x2c37327025092034,0x2c39303264662520,0x3b30313264662520,0x203732702540090a\n"
".quad 0x744c240920617262,0x30333337365f365f,0x6f6c3c2f2f200a3b,0x74726150203e706f\n"
".quad 0x706f6f6c20666f20,0x696c2079646f6220,0x202c39353220656e,0x62616c2064616568\n"
".quad 0x744c242064656c65,0x34333836355f365f,0x3309636f6c2e090a,0x0a30093934350931\n"
".quad 0x3436662e64646109,0x3131326466250920,0x363631646625202c,0x363631646625202c\n"
".quad 0x662e67656e090a3b,0x3264662509203436,0x32646625202c3830,0x617262090a3b3131\n"
".quad 0x4c240920696e752e,0x5f5f69646e655744,0x616e7265746e695f,0x315f666c61685f6c\n"
".quad 0x240a3b34315f3338,0x3337365f365f744c,0x3c2f2f200a3a3033,0x6150203e706f6f6c\n"
".quad 0x6f6c20666f207472,0x2079646f6220706f,0x39353220656e696c,0x6c2064616568202c\n"
".quad 0x242064656c656261,0x3836355f365f744c,0x2e766f6d090a3433,0x6466250920343666\n"
".quad 0x306430202c323132,0x3030303030303030,0x3b30303030303030,0x73090a30202f2f09\n"
".quad 0x662e71652e707465,0x3832702509203436,0x313731646625202c,0x323132646625202c\n"
".quad 0x3270252140090a3b,0x2409206172622038,0x3837365f365f744c,0x3c2f2f200a3b3234\n"
".quad 0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f,0x39353220656e696c\n"
".quad 0x6c2064616568202c,0x242064656c656261,0x3836355f365f744c,0x636f6c2e090a3433\n"
".quad 0x0933353509313309,0x662e766f6d090a30,0x3264662509203436,0x66666430202c3830\n"
".quad 0x3030303030303066,0x093b303030303030,0x0a666e692d202f2f,0x696e752e61726209\n"
".quad 0x6e6557444c240920,0x746e695f5f5f6964,0x61685f6c616e7265,0x315f3338315f666c\n"
".quad 0x365f744c240a3b34,0x0a3a32343837365f,0x706f6f6c3c2f2f20,0x6f2074726150203e\n"
".quad 0x6220706f6f6c2066,0x656e696c2079646f,0x6568202c39353220,0x6c6562616c206461\n"
".quad 0x365f744c24206465,0x090a34333836355f,0x203436662e766f6d,0x2c33313264662509\n"
".quad 0x3030666637643020,0x3030303030303030,0x202f2f093b303030,0x746573090a666e69\n"
".quad 0x3436662e71652e70,0x202c393270250920,0x202c313731646625,0x0a3b333132646625\n"
".quad 0x2039327025214009,0x744c240920617262,0x34353338365f365f,0x6f6c3c2f2f200a3b\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c39353220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333836355f365f,0x3309636f6c2e090a\n"
".quad 0x0a30093735350931,0x3436662e766f6d09,0x3830326466250920,0x313731646625202c\n"
".quad 0x752e617262090a3b,0x57444c240920696e,0x695f5f5f69646e65,0x5f6c616e7265746e\n"
".quad 0x3338315f666c6168,0x744c240a3b34315f,0x34353338365f365f,0x6f6c3c2f2f200a3a\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c39353220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333836355f365f,0x3309636f6c2e090a\n"
".quad 0x0a30093036350931,0x3436662e766f6d09,0x3830326466250920,0x386666666430202c\n"
".quad 0x3030303030303030,0x2f2f093b30303030,0x4c240a6e616e2d20,0x5f5f69646e655744\n"
".quad 0x616e7265746e695f,0x315f666c61685f6c,0x200a3a34315f3338,0x3e706f6f6c3c2f2f\n"
".quad 0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c393532\n"
".quad 0x656c6562616c2064,0x5f365f744c242064,0x2e090a3433383635,0x3109393109636f6c\n"
".quad 0x6f6d090a30093033,0x2509203436662e76,0x6625202c37326466,0x4c240a3b38303264\n"
".quad 0x313138355f365f74,0x6c3c2f2f200a3a34,0x726150203e706f6f,0x6f6f6c20666f2074\n"
".quad 0x6c2079646f622070,0x2c39353220656e69,0x616c206461656820,0x4c242064656c6562\n"
".quad 0x333836355f365f74,0x09636f6c2e090a34,0x3009323331093931,0x36662e766f6d090a\n"
".quad 0x3132646625092034,0x6466336430202c34,0x6533633233393935,0x2f093b6436333034\n"
".quad 0x343733332e30202f,0x2e766f6d090a3537,0x6466250920343666,0x336430202c353132\n"
".quad 0x6336636333666566,0x3b31333163623866,0x37392e30202f2f09,0x6f6d090a39363136\n"
".quad 0x2509203436662e76,0x30202c3631326466,0x3035393463663364,0x3836303936363237\n"
".quad 0x2e30202f2f093b36,0x090a383937303631,0x203436662e766f6d,0x2c37313264662509\n"
".quad 0x3463396633643020,0x3434653337646165,0x202f2f093b373332,0x3334363732302e30\n"
".quad 0x662e766f6d090a39,0x3264662509203436,0x66336430202c3831,0x3565333436376636\n"
".quad 0x093b353837366533,0x3330302e30202f2f,0x6d090a3735303438,0x09203436662e766f\n"
".quad 0x202c393132646625,0x3665393366336430,0x3838396130616532,0x30202f2f093b3634\n"
".quad 0x313539333030302e,0x662e766f6d090a39,0x3264662509203436,0x66336430202c3032\n"
".quad 0x3530326265643030,0x093b383032383566,0x3731322e33202f2f,0x090a35302d653836\n"
".quad 0x203436662e766f6d,0x2c31323264662509,0x3633396533643020,0x3762393037356431\n"
".quad 0x202f2f093b363562,0x6537313838382e32,0x766f6d090a37302d,0x662509203436662e\n"
".quad 0x6430202c32323264,0x3563333961396533,0x6461356432306130,0x392e33202f2f093b\n"
".quad 0x37302d6532333036,0x6e722e64616d090a,0x662509203436662e,0x6625202c33323264\n"
".quad 0x6625202c32323264,0x646625202c373264,0x616d090a3b313232,0x3436662e6e722e64\n"
".quad 0x3432326466250920,0x2c3732646625202c,0x2c33323264662520,0x3b30323264662520\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x6625202c35323264,0x646625202c373264\n"
".quad 0x646625202c343232,0x616d090a3b393132,0x3436662e6e722e64,0x3632326466250920\n"
".quad 0x2c3732646625202c,0x2c35323264662520,0x3b38313264662520,0x6e722e64616d090a\n"
".quad 0x662509203436662e,0x6625202c37323264,0x646625202c373264,0x646625202c363232\n"
".quad 0x616d090a3b373132,0x3436662e6e722e64,0x3832326466250920,0x2c3732646625202c\n"
".quad 0x2c37323264662520,0x3b36313264662520,0x6e722e64616d090a,0x662509203436662e\n"
".quad 0x6625202c39323264,0x646625202c373264,0x646625202c383232,0x616d090a3b353132\n"
".quad 0x3436662e6e722e64,0x3033326466250920,0x2c3732646625202c,0x2c39323264662520\n"
".quad 0x3b34313264662520,0x36662e67656e090a,0x3332646625092034,0x3332646625202c31\n"
".quad 0x2e766f6d090a3b30,0x6466250920343666,0x306430202c323332,0x3030303030303030\n"
".quad 0x3b30303030303030,0x73090a30202f2f09,0x662e746c2e707465,0x3033702509203436\n"
".quad 0x202c36646625202c,0x0a3b323332646625,0x36662e706c657309,0x3732646625092034\n"
".quad 0x313332646625202c,0x303332646625202c,0x0a3b30337025202c,0x37355f365f744c24\n"
".quad 0x2f2f200a3a323036,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x353220656e696c20,0x2064616568202c39,0x2064656c6562616c,0x36355f365f744c24\n"
".quad 0x6f6c2e090a343338,0x3633310939310963,0x2e766f6d090a3009,0x6466250920343666\n"
".quad 0x3732646625202c34,0x6e6557444c240a3b,0x69766964665f6964,0x315f3338315f6564\n"
".quad 0x6c3c2f2f200a3a31,0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070\n"
".quad 0x2c39353220656e69,0x616c206461656820,0x4c242064656c6562,0x333836355f365f74\n"
".quad 0x09636f6c2e090a34,0x3009313632093931,0x6e722e747663090a,0x3436662e3233662e\n"
".quad 0x25202c3766250920,0x7473090a3b346466,0x2e6c61626f6c672e,0x72255b0920323366\n"
".quad 0x25202c5d302b3731,0x646461090a3b3766,0x722509203233752e,0x37317225202c3731\n"
".quad 0x0a3b32317225202c,0x3233752e64646109,0x202c343172250920,0x7225202c34317225\n"
".quad 0x746573090a3b3231,0x3233752e746c2e70,0x202c313370250920,0x7225202c34317225\n"
".quad 0x702540090a3b3531,0x0920617262203133,0x36355f365f744c24,0x7262090a3b343338\n"
".quad 0x240920696e752e61,0x3139365f365f744c,0x5f744c240a3b3232,0x3a36363036355f36\n"
".quad 0x3109636f6c2e090a,0x0a30093736320939,0x6c2e34326c756d09,0x2509203233752e6f\n"
".quad 0x7225202c39303172,0x0a3b337225202c34,0x3233752e64646109,0x2c30313172250920\n"
".quad 0x202c393031722520,0x6f6d090a3b327225,0x2509203233732e76,0x7225202c31313172\n"
".quad 0x6573090a3b303131,0x33752e65672e7074,0x2c32337025092032,0x202c303131722520\n"
".quad 0x2540090a3b317225,0x2061726220323370,0x365f365f744c2409,0x6d090a3b32323139\n"
".quad 0x33752e6f6c2e6c75,0x3231317225092032,0x2c3031317225202c,0x6c756d090a3b3420\n"
".quad 0x203233752e6f6c2e,0x202c333131722509,0x0a3b34202c317225,0x3233752e766f6d09\n"
".quad 0x2c34313172250920,0x64696174636e2520,0x6c756d090a3b782e,0x33752e6f6c2e3432\n"
".quad 0x3531317225092032,0x25202c347225202c,0x6c090a3b34313172,0x2e6d617261702e64\n"
".quad 0x3172250920323375,0x635f5f5b202c3631,0x5f6d726170616475,0x65766e6936315a5f\n"
".quad 0x654b444e43657372,0x5f5366506c656e72,0x7074754f5f645f6a,0x6461090a3b5d7475\n"
".quad 0x2509203233752e64,0x7225202c37313172,0x317225202c323131,0x646461090a3b3631\n"
".quad 0x722509203233752e,0x317225202c383131,0x31317225202c3331,0x2e6c756d090a3b36\n"
".quad 0x09203233752e6f6c,0x25202c3931317225,0x3b34202c35313172,0x33752e646461090a\n"
".quad 0x3032317225092032,0x31202c317225202c,0x722e747663090a3b,0x33752e3436662e6e\n"
".quad 0x3332646625092032,0x3032317225202c33,0x722e706372090a3b,0x2509203436662e6e\n"
".quad 0x25202c3433326466,0x240a3b3333326466,0x3639365f365f744c,0x3c2f2f200a3a3433\n"
".quad 0x6f4c203e706f6f6c,0x2079646f6220706f,0x37363220656e696c,0x6e697473656e202c\n"
".quad 0x3a68747065642067,0x69747365202c3120,0x746920646574616d,0x736e6f6974617265\n"
".quad 0x776f6e6b6e75203a,0x09636f6c2e090a6e,0x3009393632093931,0x33752e646461090a\n"
".quad 0x3132317225092032,0x2c3131317225202c,0x747663090a3b3120,0x2e3436662e6e722e\n"
".quad 0x6466250920323375,0x317225202c353332,0x6c756d090a3b3132,0x662509203436662e\n"
".quad 0x6625202c36333264,0x6625202c35333264,0x6d090a3b34333264,0x09203436662e766f\n"
".quad 0x202c373332646625,0x3030306666336430,0x3030303030303030,0x31202f2f093b3030\n"
".quad 0x65672e746573090a,0x3436662e3233752e,0x2c32323172250920,0x2c36333264662520\n"
".quad 0x3b37333264662520,0x33732e67656e090a,0x3332317225092032,0x3b3232317225202c\n"
".quad 0x36662e766f6d090a,0x3332646625092034,0x3030306430202c38,0x3030303030303030\n"
".quad 0x2f093b3030303030,0x746573090a30202f,0x2e3233752e656c2e,0x3172250920343666\n"
".quad 0x32646625202c3432,0x32646625202c3633,0x67656e090a3b3833,0x722509203233732e\n"
".quad 0x317225202c353231,0x2e726f090a3b3432,0x3172250920323362,0x32317225202c3632\n"
".quad 0x3532317225202c33,0x752e766f6d090a3b,0x3231722509203233,0x73090a3b30202c37\n"
".quad 0x732e71652e707465,0x3333702509203233,0x2c3632317225202c,0x0a3b373231722520\n"
".quad 0x6220333370254009,0x5f744c2409206172,0x3b30393839365f36,0x6f6f6c3c2f2f200a\n"
".quad 0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62,0x68202c3736322065\n"
".quad 0x6562616c20646165,0x5f744c242064656c,0x0a34333639365f36,0x393109636f6c2e09\n"
".quad 0x090a300930323109,0x203436662e766f6d,0x2c39333264662509,0x3038666666643020\n"
".quad 0x3030303030303030,0x202f2f093b303030,0x7262090a6e616e2d,0x240920696e752e61\n"
".quad 0x5f69646e6557444c,0x5f65646976696466,0x240a3b315f333831,0x3839365f365f744c\n"
".quad 0x3c2f2f200a3a3039,0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f\n"
".quad 0x37363220656e696c,0x6c2064616568202c,0x242064656c656261,0x3639365f365f744c\n"
".quad 0x2e766f6d090a3433,0x6466250920343666,0x626430202c303432,0x3030303030306566\n"
".quad 0x3b30303030303030,0x352e302d202f2f09,0x36662e646461090a,0x3432646625092034\n"
".quad 0x3332646625202c31,0x3432646625202c36,0x2e736261090a3b30,0x6466250920343666\n"
".quad 0x646625202c323432,0x6f6d090a3b313432,0x2509203436662e76,0x30202c3334326466\n"
".quad 0x3431656164663364,0x6561373431656137,0x2e30202f2f093b31,0x70746573090a3234\n"
".quad 0x203436662e746c2e,0x25202c3433702509,0x25202c3234326466,0x090a3b3334326466\n"
".quad 0x6220343370252140,0x5f744c2409206172,0x3b38353630375f36,0x6f6f6c3c2f2f200a\n"
".quad 0x2074726150203e70,0x20706f6f6c20666f,0x6e696c2079646f62,0x68202c3736322065\n"
".quad 0x6562616c20646165,0x5f744c242064656c,0x0a34333639365f36,0x393109636f6c2e09\n"
".quad 0x090a300935323109,0x203436662e6c756d,0x2c34343264662509,0x2c31343264662520\n"
".quad 0x3b31343264662520,0x36662e766f6d090a,0x3432646625092034,0x3030346430202c35\n"
".quad 0x3262313339643034,0x2f093b6430323638,0x363630352e32202f,0x662e766f6d090a33\n"
".quad 0x3264662509203436,0x30636430202c3634,0x6561303764393233,0x093b656433613435\n"
".quad 0x362e38312d202f2f,0x2e766f6d090a3531,0x6466250920343666,0x346430202c373432\n"
".quad 0x6332313262343430,0x3b63663663333734,0x332e3134202f2f09,0x766f6d090a323139\n"
".quad 0x662509203436662e,0x6430202c38343264,0x3965303739333063,0x3837373737333735\n"
".quad 0x35322d202f2f093b,0x6d090a313134342e,0x36662e6e722e6461,0x3432646625092034\n"
".quad 0x3432646625202c39,0x3432646625202c38,0x3432646625202c34,0x2e64616d090a3b37\n"
".quad 0x09203436662e6e72,0x202c303532646625,0x202c343432646625,0x202c393432646625\n"
".quad 0x0a3b363432646625,0x2e6e722e64616d09,0x6466250920343666,0x646625202c313532\n"
".quad 0x646625202c343432,0x646625202c303532,0x756d090a3b353432,0x2509203436662e6c\n"
".quad 0x25202c3235326466,0x25202c3134326466,0x090a3b3135326466,0x203436662e766f6d\n"
".quad 0x2c33353264662509,0x3030666633643020,0x3030303030303030,0x202f2f093b303030\n"
".quad 0x662e766f6d090a31,0x3264662509203436,0x30636430202c3435,0x3630303732663032\n"
".quad 0x093b643237303535,0x37342e382d202f2f,0x766f6d090a313533,0x662509203436662e\n"
".quad 0x6430202c35353264,0x3735353137333034,0x6332303531383139,0x2e3332202f2f093b\n"
".quad 0x6f6d090a34333830,0x2509203436662e76,0x30202c3635326466,0x6566303533306364\n"
".quad 0x3735653130373066,0x322d202f2f093b64,0x090a323236302e31,0x203436662e766f6d\n"
".quad 0x2c37353264662509,0x3039303034643020,0x3835353032306662,0x202f2f093b373461\n"
".quad 0x0a33383033312e33,0x2e6e722e64616d09,0x6466250920343666,0x646625202c383532\n"
".quad 0x646625202c373532,0x646625202c343432,0x616d090a3b363532,0x3436662e6e722e64\n"
".quad 0x3935326466250920,0x343432646625202c,0x383532646625202c,0x353532646625202c\n"
".quad 0x722e64616d090a3b,0x2509203436662e6e,0x25202c3036326466,0x25202c3434326466\n"
".quad 0x25202c3935326466,0x090a3b3435326466,0x662e6e722e64616d,0x3264662509203436\n"
".quad 0x32646625202c3136,0x32646625202c3434,0x32646625202c3036,0x766964090a3b3335\n"
".quad 0x203436662e6e722e,0x202c373264662509,0x202c323532646625,0x0a3b313632646625\n"
".quad 0x696e752e61726209,0x5f365f744c240920,0x240a3b3230343037,0x3630375f365f744c\n"
".quad 0x3c2f2f200a3a3835,0x6150203e706f6f6c,0x6f6c20666f207472,0x2079646f6220706f\n"
".quad 0x37363220656e696c,0x6c2064616568202c,0x242064656c656261,0x3639365f365f744c\n"
".quad 0x2e766f6d090a3433,0x6466250920343666,0x306430202c323632,0x3030303030303030\n"
".quad 0x3b30303030303030,0x73090a30202f2f09,0x662e74672e707465,0x3533702509203436\n"
".quad 0x313432646625202c,0x323632646625202c,0x3370252140090a3b,0x2409206172622035\n"
".quad 0x3131375f365f744c,0x3c2f2f200a3b3037,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x37363220656e696c,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x3639365f365f744c,0x636f6c2e090a3433,0x0932393409313309,0x662e766f6d090a30\n"
".quad 0x3264662509203436,0x66336430202c3336,0x3030303030303066,0x093b303030303030\n"
".quad 0x7573090a31202f2f,0x2509203436662e62,0x25202c3436326466,0x25202c3336326466\n"
".quad 0x090a3b3633326466,0x203436622e766f6d,0x2c38323172257b09,0x202c7d3932317225\n"
".quad 0x0a3b343632646625,0x3233732e766f6d09,0x202c363272250920,0x090a3b3932317225\n"
".quad 0x09313309636f6c2e,0x6d090a3009333934,0x09203436622e766f,0x72252c373272257b\n"
".quad 0x6625202c7d303331,0x2e090a3b34363264,0x3409313309636f6c,0x6f6d090a30093539\n"
".quad 0x2509203436662e76,0x30202c3536326466,0x3030303030303064,0x3030303030303030\n"
".quad 0x0a30202f2f093b30,0x2e74672e74657309,0x203436662e323375,0x202c313331722509\n"
".quad 0x202c343632646625,0x0a3b353632646625,0x3233732e67656e09,0x2c32333172250920\n"
".quad 0x0a3b313331722520,0x3436662e766f6d09,0x3636326466250920,0x306666376430202c\n"
".quad 0x3030303030303030,0x2f2f093b30303030,0x6573090a666e6920,0x3233752e746c2e74\n"
".quad 0x722509203436662e,0x646625202c333331,0x646625202c343632,0x656e090a3b363632\n"
".quad 0x2509203233732e67,0x7225202c34333172,0x6e61090a3b333331,0x2509203233622e64\n"
".quad 0x7225202c35333172,0x317225202c323331,0x766f6d090a3b3433,0x722509203233752e\n"
".quad 0x0a3b30202c363331,0x71652e7074657309,0x702509203233732e,0x33317225202c3633\n"
".quad 0x3633317225202c35,0x3633702540090a3b,0x4c24092061726220,0x363337345f365f74\n"
".quad 0x6c3c2f2f200a3b32,0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070\n"
".quad 0x2c37363220656e69,0x616c206461656820,0x4c242064656c6562,0x333639365f365f74\n"
".quad 0x752e766f6d090a34,0x3331722509203233,0x3538343031202c37,0x746573090a3b3537\n"
".quad 0x3233752e74672e70,0x202c373370250920,0x25202c3932317225,0x40090a3b37333172\n"
".quad 0x6172622037337025,0x5f365f744c240920,0x200a3b3238363137,0x3e706f6f6c3c2f2f\n"
".quad 0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c373632\n"
".quad 0x656c6562616c2064,0x5f365f744c242064,0x2e090a3433363936,0x3509313309636f6c\n"
".quad 0x6f6d090a30093130,0x2509203436662e76,0x30202c3736326466,0x3030303035333464\n"
".quad 0x3030303030303030,0x2e31202f2f093b30,0x312b653434313038,0x662e6c756d090a36\n"
".quad 0x3264662509203436,0x32646625202c3836,0x32646625202c3436,0x766f6d090a3b3736\n"
".quad 0x257b09203436622e,0x3272252c38333172,0x32646625202c7d36,0x6f6c2e090a3b3836\n"
".quad 0x3230350931330963,0x2e766f6d090a3009,0x72257b0920343662,0x39333172252c3732\n"
".quad 0x3632646625202c7d,0x2e766f6d090a3b38,0x3372250920323373,0x373730312d202c38\n"
".quad 0x752e617262090a3b,0x5f744c240920696e,0x3b36323431375f36,0x375f365f744c240a\n"
".quad 0x2f200a3a32383631,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3220656e696c2079,0x64616568202c3736,0x64656c6562616c20,0x365f365f744c2420\n"
".quad 0x6f6d090a34333639,0x2509203233732e76,0x30312d202c383372,0x5f744c240a3b3332\n"
".quad 0x3a36323431375f36,0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f\n"
".quad 0x6e696c2079646f62,0x68202c3736322065,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x0a34333639365f36,0x313309636f6c2e09,0x090a300937303509,0x203233732e726873\n"
".quad 0x202c303431722509,0x3032202c36327225,0x732e646461090a3b,0x3833722509203233\n"
".quad 0x202c38337225202c,0x090a3b3034317225,0x09313309636f6c2e,0x61090a3009393035\n"
".quad 0x09203233622e646e,0x7225202c30347225,0x3431322d202c3632,0x3b33373035333436\n"
".quad 0x3233622e726f090a,0x202c313472250920,0x3031202c30347225,0x3834323339363237\n"
".quad 0x622e766f6d090a3b,0x3364662509203436,0x373272257b202c35,0x0a3b7d313472252c\n"
".quad 0x3233752e766f6d09,0x2c31343172250920,0x3732313337303120,0x6573090a3b323835\n"
".quad 0x33752e656c2e7074,0x2c38337025092032,0x25202c3134722520,0x40090a3b31343172\n"
".quad 0x6172622038337025,0x5f365f744c240920,0x200a3b3833393137,0x3e706f6f6c3c2f2f\n"
".quad 0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c373632\n"
".quad 0x656c6562616c2064,0x5f365f744c242064,0x2e090a3433363936,0x3509313309636f6c\n"
".quad 0x6f6d090a30093131,0x7b09203436622e76,0x72252c3234317225,0x6625202c7d333431\n"
".quad 0x7573090a3b353364,0x2509203233732e62,0x7225202c34343172,0x343031202c333431\n"
".quad 0x6d090a3b36373538,0x09203436622e766f,0x252c35343172257b,0x25202c7d36343172\n"
".quad 0x6d090a3b35336466,0x09203436622e766f,0x7b202c3533646625,0x72252c3534317225\n"
".quad 0x2e090a3b7d343431,0x3509313309636f6c,0x6461090a30093231,0x2509203233732e64\n"
".quad 0x337225202c383372,0x4c240a3b31202c38,0x333931375f365f74,0x6c3c2f2f200a3a38\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x2c37363220656e69\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x333639365f365f74,0x09636f6c2e090a34\n"
".quad 0x3009383135093133,0x36662e766f6d090a,0x3632646625092034,0x6666626430202c39\n"
".quad 0x3030303030303030,0x2f093b3030303030,0x6461090a312d202f,0x2509203436662e64\n"
".quad 0x6625202c37336466,0x646625202c353364,0x6f6d090a3b393632,0x2509203436662e76\n"
".quad 0x30202c3037326466,0x3030303066663364,0x3030303030303030,0x0a31202f2f093b30\n"
".quad 0x3436662e64646109,0x2c39336466250920,0x202c353364662520,0x0a3b303732646625\n"
".quad 0x2e6e722e74766309,0x203436662e323366,0x6625202c32662509,0x6372090a3b393364\n"
".quad 0x3233662e6e722e70,0x25202c3866250920,0x747663090a3b3266,0x3233662e3436662e\n"
".quad 0x2c30346466250920,0x6e090a3b38662520,0x09203436662e6765,0x202c313732646625\n"
".quad 0x090a3b3933646625,0x203436662e766f6d,0x2c32373264662509,0x3030666633643020\n"
".quad 0x3030303030303030,0x202f2f093b303030,0x722e64616d090a31,0x2509203436662e6e\n"
".quad 0x6625202c33346466,0x6625202c31373264,0x646625202c303464,0x616d090a3b323732\n"
".quad 0x3436662e6e722e64,0x2c34346466250920,0x202c333464662520,0x25202c3334646625\n"
".quad 0x6d090a3b33346466,0x36662e6e722e6461,0x3534646625092034,0x2c3434646625202c\n"
".quad 0x202c303464662520,0x090a3b3034646625,0x203436662e6c756d,0x202c363464662509\n"
".quad 0x25202c3733646625,0x2e090a3b35346466,0x3509313309636f6c,0x6461090a30093832\n"
".quad 0x2509203436662e64,0x6625202c37346466,0x646625202c363464,0x6c756d090a3b3634\n"
".quad 0x662509203436662e,0x646625202c383464,0x34646625202c3734,0x2e766f6d090a3b37\n"
".quad 0x6466250920343666,0x336430202c333732,0x3362303833316265,0x3b65316630386561\n"
".quad 0x32302e31202f2f09,0x0a36302d65333336,0x3436662e766f6d09,0x3437326466250920\n"
".quad 0x306465336430202c,0x6137623835326565,0x2f2f093b34306238,0x39343633302e3420\n"
".quad 0x616d090a36302d65,0x3436662e6e722e64,0x3537326466250920,0x333732646625202c\n"
".quad 0x2c3834646625202c,0x3b34373264662520,0x36662e766f6d090a,0x3732646625092034\n"
".quad 0x6665336430202c36,0x3066393636326233,0x2f093b6636373632,0x343837382e31202f\n"
".quad 0x6d090a35302d6534,0x36662e6e722e6461,0x3732646625092034,0x3732646625202c37\n"
".quad 0x3834646625202c35,0x363732646625202c,0x662e766f6d090a3b,0x3264662509203436\n"
".quad 0x66336430202c3837,0x3961626335343731,0x093b363539306261,0x3737382e38202f2f\n"
".quad 0x090a35302d653138,0x662e6e722e64616d,0x3264662509203436,0x32646625202c3937\n"
".quad 0x34646625202c3737,0x3732646625202c38,0x2e766f6d090a3b38,0x6466250920343666\n"
".quad 0x336430202c303832,0x3237633137633366,0x3b34353135623164,0x30302e30202f2f09\n"
".quad 0x0a38323034333430,0x2e6e722e64616d09,0x6466250920343666,0x646625202c313832\n"
".quad 0x646625202c393732,0x32646625202c3834,0x766f6d090a3b3038,0x662509203436662e\n"
".quad 0x6430202c32383264,0x3432393432366633,0x6432376562333239,0x302e30202f2f093b\n"
".quad 0x0a34313233323230,0x2e6e722e64616d09,0x6466250920343666,0x646625202c333832\n"
".quad 0x646625202c313832,0x32646625202c3834,0x766f6d090a3b3238,0x662509203436662e\n"
".quad 0x6430202c34383264,0x3939393939386633,0x3463336139393939,0x302e30202f2f093b\n"
".quad 0x64616d090a353231,0x203436662e6e722e,0x2c35383264662509,0x2c33383264662520\n"
".quad 0x202c383464662520,0x0a3b343832646625,0x313309636f6c2e09,0x090a300939323509\n"
".quad 0x203436662e766f6d,0x2c36383264662509,0x3535626633643020,0x3535353535353535\n"
".quad 0x202f2f093b343535,0x3333333338302e30,0x722e64616d090a33,0x2509203436662e6e\n"
".quad 0x25202c3738326466,0x25202c3538326466,0x6625202c38346466,0x2e090a3b36383264\n"
".quad 0x3509313309636f6c,0x7573090a30093233,0x2509203436662e62,0x6625202c34366466\n"
".quad 0x646625202c373364,0x67656e090a3b3734,0x662509203436662e,0x6625202c38383264\n"
".quad 0x6461090a3b373464,0x2509203436662e64,0x25202c3938326466,0x6625202c34366466\n"
".quad 0x616d090a3b343664,0x3436662e6e722e64,0x3039326466250920,0x383832646625202c\n"
".quad 0x2c3733646625202c,0x3b39383264662520,0x36662e6c756d090a,0x3836646625092034\n"
".quad 0x2c3534646625202c,0x3b30393264662520,0x3309636f6c2e090a,0x0a30093533350931\n"
".quad 0x3436662e6c756d09,0x3139326466250920,0x2c3834646625202c,0x3b37383264662520\n"
".quad 0x36662e6c756d090a,0x3037646625092034,0x2c3734646625202c,0x3b31393264662520\n"
".quad 0x3309636f6c2e090a,0x0a30093634350931,0x2e6e722e74766309,0x203233732e343666\n"
".quad 0x202c313764662509,0x6d090a3b38337225,0x09203436662e766f,0x202c323932646625\n"
".quad 0x6532366566336430,0x3933616665663234,0x30202f2f093b6665,0x0a3734313339362e\n"
".quad 0x2e6e722e64616d09,0x6466250920343666,0x37646625202c3337,0x3932646625202c31\n"
".quad 0x3734646625202c32,0x662e766f6d090a3b,0x3264662509203436,0x63336430202c3339\n"
".quad 0x6233653963626137,0x093b663330383933,0x3931332e32202f2f,0x090a37312d653530\n"
".quad 0x203436662e646461,0x2c34393264662509,0x202c303764662520,0x090a3b3836646625\n"
".quad 0x203233732e67656e,0x202c373431722509,0x63090a3b38337225,0x36662e6e722e7476\n"
".quad 0x2509203233732e34,0x25202c3539326466,0x6d090a3b37343172,0x09203436662e766f\n"
".quad 0x202c363932646625,0x6532366566336430,0x3933616665663234,0x30202f2f093b6665\n"
".quad 0x0a3734313339362e,0x2e6e722e64616d09,0x6466250920343666,0x646625202c373932\n"
".quad 0x646625202c353932,0x646625202c363932,0x627573090a3b3337,0x662509203436662e\n"
".quad 0x6625202c38393264,0x6625202c37393264,0x7573090a3b373464,0x2509203436662e62\n"
".quad 0x25202c3939326466,0x25202c3439326466,0x090a3b3839326466,0x662e6e722e64616d\n"
".quad 0x3364662509203436,0x37646625202c3030,0x3932646625202c31,0x3932646625202c33\n"
".quad 0x2e646461090a3b39,0x6466250920343666,0x37646625202c3238,0x3033646625202c33\n"
".quad 0x2e617262090a3b30,0x444c240920696e75,0x5f5f5f69646e6557,0x6c616e7265746e69\n"
".quad 0x38315f666c61685f,0x744c240a3b365f33,0x32363337345f365f,0x6f6c3c2f2f200a3a\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333639365f365f,0x3309636f6c2e090a\n"
".quad 0x0a30093834350931,0x3436662e73626109,0x3130336466250920,0x343632646625202c\n"
".quad 0x662e766f6d090a3b,0x3364662509203436,0x66376430202c3230,0x3030303030303066\n"
".quad 0x093b303030303030,0x090a666e69202f2f,0x2e656c2e70746573,0x3370250920343666\n"
".quad 0x3033646625202c39,0x3033646625202c31,0x33702540090a3b32,0x2409206172622039\n"
".quad 0x3432375f365f744c,0x3c2f2f200a3b3035,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x37363220656e696c,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x3639365f365f744c,0x636f6c2e090a3433,0x0939343509313309,0x662e646461090a30\n"
".quad 0x3864662509203436,0x3632646625202c32,0x3632646625202c34,0x2e617262090a3b34\n"
".quad 0x444c240920696e75,0x5f5f5f69646e6557,0x6c616e7265746e69,0x38315f666c61685f\n"
".quad 0x744c240a3b365f33,0x30353432375f365f,0x6f6c3c2f2f200a3a,0x74726150203e706f\n"
".quad 0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e,0x62616c2064616568\n"
".quad 0x744c242064656c65,0x34333639365f365f,0x36662e766f6d090a,0x3033646625092034\n"
".quad 0x3030306430202c33,0x3030303030303030,0x2f093b3030303030,0x746573090a30202f\n"
".quad 0x3436662e71652e70,0x202c303470250920,0x202c343632646625,0x0a3b333033646625\n"
".quad 0x2030347025214009,0x744c240920617262,0x32363932375f365f,0x6f6c3c2f2f200a3b\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333639365f365f,0x3309636f6c2e090a\n"
".quad 0x0a30093335350931,0x3436662e766f6d09,0x2c32386466250920,0x3030666666643020\n"
".quad 0x3030303030303030,0x202f2f093b303030,0x7262090a666e692d,0x240920696e752e61\n"
".quad 0x5f69646e6557444c,0x6e7265746e695f5f,0x5f666c61685f6c61,0x240a3b365f333831\n"
".quad 0x3932375f365f744c,0x3c2f2f200a3a3236,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x37363220656e696c,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x3639365f365f744c,0x2e766f6d090a3433,0x6466250920343666,0x376430202c343033\n"
".quad 0x3030303030306666,0x3b30303030303030,0x0a666e69202f2f09,0x71652e7074657309\n"
".quad 0x702509203436662e,0x32646625202c3134,0x33646625202c3436,0x252140090a3b3430\n"
".quad 0x2061726220313470,0x375f365f744c2409,0x2f200a3b34373433,0x203e706f6f6c3c2f\n"
".quad 0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079,0x64616568202c3736\n"
".quad 0x64656c6562616c20,0x365f365f744c2420,0x6c2e090a34333639,0x353509313309636f\n"
".quad 0x766f6d090a300937,0x662509203436662e,0x646625202c323864,0x7262090a3b343632\n"
".quad 0x240920696e752e61,0x5f69646e6557444c,0x6e7265746e695f5f,0x5f666c61685f6c61\n"
".quad 0x240a3b365f333831,0x3433375f365f744c,0x3c2f2f200a3a3437,0x6150203e706f6f6c\n"
".quad 0x6f6c20666f207472,0x2079646f6220706f,0x37363220656e696c,0x6c2064616568202c\n"
".quad 0x242064656c656261,0x3639365f365f744c,0x636f6c2e090a3433,0x0930363509313309\n"
".quad 0x662e766f6d090a30,0x3864662509203436,0x6666666430202c32,0x3030303030303038\n"
".quad 0x2f093b3030303030,0x240a6e616e2d202f,0x5f69646e6557444c,0x6e7265746e695f5f\n"
".quad 0x5f666c61685f6c61,0x200a3a365f333831,0x3e706f6f6c3c2f2f,0x666f207472615020\n"
".quad 0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c373632,0x656c6562616c2064\n"
".quad 0x5f365f744c242064,0x2e090a3433363936,0x3409313309636f6c,0x656e090a30093239\n"
".quad 0x2509203436662e67,0x25202c3530336466,0x6d090a3b32386466,0x09203436622e766f\n"
".quad 0x252c38343172257b,0x25202c7d39343172,0x090a3b3530336466,0x203233732e766f6d\n"
".quad 0x25202c3632722509,0x2e090a3b39343172,0x3409313309636f6c,0x6f6d090a30093339\n"
".quad 0x7b09203436622e76,0x3172252c37327225,0x646625202c7d3035,0x6c2e090a3b353033\n"
".quad 0x393409313309636f,0x766f6d090a300935,0x662509203436662e,0x6430202c36303364\n"
".quad 0x3030303030303030,0x3030303030303030,0x090a30202f2f093b,0x752e74672e746573\n"
".quad 0x09203436662e3233,0x25202c3135317225,0x25202c3530336466,0x090a3b3630336466\n"
".quad 0x203233732e67656e,0x202c323531722509,0x090a3b3135317225,0x203436662e766f6d\n"
".quad 0x2c37303364662509,0x3030666637643020,0x3030303030303030,0x202f2f093b303030\n"
".quad 0x746573090a666e69,0x2e3233752e746c2e,0x3172250920343666,0x33646625202c3335\n"
".quad 0x33646625202c3530,0x67656e090a3b3730,0x722509203233732e,0x317225202c343531\n"
".quad 0x646e61090a3b3335,0x722509203233622e,0x317225202c353531,0x35317225202c3235\n"
".quad 0x2e766f6d090a3b34,0x3172250920323375,0x090a3b30202c3635,0x2e71652e70746573\n"
".quad 0x3470250920323373,0x3535317225202c32,0x3b3635317225202c,0x203234702540090a\n"
".quad 0x744c240920617262,0x38393838345f365f,0x6f6c3c2f2f200a3b,0x74726150203e706f\n"
".quad 0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e,0x62616c2064616568\n"
".quad 0x744c242064656c65,0x34333639365f365f,0x33752e766f6d090a,0x3735317225092032\n"
".quad 0x373538343031202c,0x70746573090a3b35,0x203233752e74672e,0x25202c3334702509\n"
".quad 0x7225202c39343172,0x2540090a3b373531,0x2061726220333470,0x375f365f744c2409\n"
".quad 0x2f200a3b32343234,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3220656e696c2079,0x64616568202c3736,0x64656c6562616c20,0x365f365f744c2420\n"
".quad 0x6c2e090a34333639,0x303509313309636f,0x766f6d090a300931,0x662509203436662e\n"
".quad 0x6430202c38303364,0x3030303030353334,0x3030303030303030,0x382e31202f2f093b\n"
".quad 0x36312b6534343130,0x36662e6c756d090a,0x3033646625092034,0x3033646625202c39\n"
".quad 0x3033646625202c35,0x2e766f6d090a3b38,0x72257b0920343662,0x363272252c383531\n"
".quad 0x3033646625202c7d,0x636f6c2e090a3b39,0x0932303509313309,0x622e766f6d090a30\n"
".quad 0x3272257b09203436,0x7d39353172252c37,0x393033646625202c,0x732e766f6d090a3b\n"
".quad 0x3833722509203233,0x3b373730312d202c,0x6e752e617262090a,0x365f744c24092069\n"
".quad 0x0a3b36383933375f,0x34375f365f744c24,0x2f2f200a3a323432,0x50203e706f6f6c3c\n"
".quad 0x6c20666f20747261,0x79646f6220706f6f,0x363220656e696c20,0x2064616568202c37\n"
".quad 0x2064656c6562616c,0x39365f365f744c24,0x766f6d090a343336,0x722509203233732e\n"
".quad 0x3230312d202c3833,0x365f744c240a3b33,0x0a3a36383933375f,0x706f6f6c3c2f2f20\n"
".quad 0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f,0x6568202c37363220\n"
".quad 0x6c6562616c206461,0x365f744c24206465,0x090a34333639365f,0x09313309636f6c2e\n"
".quad 0x73090a3009373035,0x09203233732e7268,0x25202c3036317225,0x3b3032202c363272\n"
".quad 0x33732e646461090a,0x2c38337225092032,0x25202c3833722520,0x2e090a3b30363172\n"
".quad 0x3509313309636f6c,0x6e61090a30093930,0x2509203233622e64,0x327225202c303472\n"
".quad 0x363431322d202c36,0x0a3b333730353334,0x203233622e726f09,0x25202c3134722509\n"
".quad 0x373031202c303472,0x3b38343233393632,0x36622e766f6d090a,0x3533646625092034\n"
".quad 0x2c373272257b202c,0x090a3b7d31347225,0x203233752e766f6d,0x202c313631722509\n"
".quad 0x3537323133373031,0x746573090a3b3238,0x3233752e656c2e70,0x202c343470250920\n"
".quad 0x7225202c31347225,0x2540090a3b313631,0x2061726220343470,0x375f365f744c2409\n"
".quad 0x2f200a3b38393434,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3220656e696c2079,0x64616568202c3736,0x64656c6562616c20,0x365f365f744c2420\n"
".quad 0x6c2e090a34333639,0x313509313309636f,0x766f6d090a300931,0x257b09203436622e\n"
".quad 0x3172252c32363172,0x646625202c7d3336,0x627573090a3b3533,0x722509203233732e\n"
".quad 0x317225202c343631,0x38343031202c3336,0x6f6d090a3b363735,0x7b09203436622e76\n"
".quad 0x72252c3536317225,0x6625202c7d363631,0x6f6d090a3b353364,0x2509203436622e76\n"
".quad 0x257b202c35336466,0x3172252c35363172,0x6c2e090a3b7d3436,0x313509313309636f\n"
".quad 0x646461090a300932,0x722509203233732e,0x38337225202c3833,0x744c240a3b31202c\n"
".quad 0x38393434375f365f,0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20\n"
".quad 0x696c2079646f6220,0x202c37363220656e,0x62616c2064616568,0x744c242064656c65\n"
".quad 0x34333639365f365f,0x3309636f6c2e090a,0x0a30093831350931,0x3436662e766f6d09\n"
".quad 0x3031336466250920,0x306666626430202c,0x3030303030303030,0x2f2f093b30303030\n"
".quad 0x646461090a312d20,0x662509203436662e,0x646625202c373364,0x33646625202c3533\n"
".quad 0x766f6d090a3b3031,0x662509203436662e,0x6430202c31313364,0x3030303030666633\n"
".quad 0x3030303030303030,0x090a31202f2f093b,0x203436662e646461,0x202c393364662509\n"
".quad 0x25202c3533646625,0x090a3b3131336466,0x662e6e722e747663,0x09203436662e3233\n"
".quad 0x646625202c326625,0x706372090a3b3933,0x203233662e6e722e,0x6625202c39662509\n"
".quad 0x2e747663090a3b32,0x203233662e343666,0x202c303464662509,0x656e090a3b396625\n"
".quad 0x2509203436662e67,0x25202c3231336466,0x6d090a3b39336466,0x09203436662e766f\n"
".quad 0x202c333133646625,0x3030306666336430,0x3030303030303030,0x31202f2f093b3030\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x646625202c333464,0x646625202c323133\n"
".quad 0x33646625202c3034,0x64616d090a3b3331,0x203436662e6e722e,0x202c343464662509\n"
".quad 0x25202c3334646625,0x6625202c33346466,0x616d090a3b333464,0x3436662e6e722e64\n"
".quad 0x2c35346466250920,0x202c343464662520,0x25202c3034646625,0x6d090a3b30346466\n"
".quad 0x09203436662e6c75,0x25202c3634646625,0x6625202c37336466,0x6c2e090a3b353464\n"
".quad 0x323509313309636f,0x646461090a300938,0x662509203436662e,0x646625202c373464\n"
".quad 0x34646625202c3634,0x2e6c756d090a3b36,0x6466250920343666,0x34646625202c3834\n"
".quad 0x3734646625202c37,0x662e766f6d090a3b,0x3364662509203436,0x65336430202c3431\n"
".quad 0x6133623038333162,0x093b653166303865,0x3632302e31202f2f,0x090a36302d653333\n"
".quad 0x203436662e766f6d,0x2c35313364662509,0x6530646533643020,0x3861376238353265\n"
".quad 0x202f2f093b343062,0x6539343633302e34,0x64616d090a36302d,0x203436662e6e722e\n"
".quad 0x2c36313364662509,0x2c34313364662520,0x202c383464662520,0x0a3b353133646625\n"
".quad 0x3436662e766f6d09,0x3731336466250920,0x336665336430202c,0x3230663936363262\n"
".quad 0x2f2f093b66363736,0x34343837382e3120,0x616d090a35302d65,0x3436662e6e722e64\n"
".quad 0x3831336466250920,0x363133646625202c,0x2c3834646625202c,0x3b37313364662520\n"
".quad 0x36662e766f6d090a,0x3133646625092034,0x3166336430202c39,0x6139616263353437\n"
".quad 0x2f093b3635393062,0x383737382e38202f,0x6d090a35302d6531,0x36662e6e722e6461\n"
".quad 0x3233646625092034,0x3133646625202c30,0x3834646625202c38,0x393133646625202c\n"
".quad 0x662e766f6d090a3b,0x3364662509203436,0x66336430202c3132,0x6432376331376333\n"
".quad 0x093b343531356231,0x3030302e30202f2f,0x090a383230343334,0x662e6e722e64616d\n"
".quad 0x3364662509203436,0x33646625202c3232,0x34646625202c3032,0x3233646625202c38\n"
".quad 0x2e766f6d090a3b31,0x6466250920343666,0x336430202c333233,0x3934323934323666\n"
".quad 0x3b64323765623332,0x30302e30202f2f09,0x090a343132333232,0x662e6e722e64616d\n"
".quad 0x3364662509203436,0x33646625202c3432,0x34646625202c3232,0x3233646625202c38\n"
".quad 0x2e766f6d090a3b33,0x6466250920343666,0x336430202c353233,0x3939393939393866\n"
".quad 0x3b34633361393939,0x31302e30202f2f09,0x2e64616d090a3532,0x09203436662e6e72\n"
".quad 0x202c363233646625,0x202c343233646625,0x25202c3834646625,0x090a3b3532336466\n"
".quad 0x09313309636f6c2e,0x6d090a3009393235,0x09203436662e766f,0x202c373233646625\n"
".quad 0x3535356266336430,0x3535353535353535,0x30202f2f093b3435,0x333333333338302e\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x6625202c38323364,0x6625202c36323364\n"
".quad 0x646625202c383464,0x6c2e090a3b373233,0x333509313309636f,0x627573090a300932\n"
".quad 0x662509203436662e,0x646625202c343664,0x34646625202c3733,0x2e67656e090a3b37\n"
".quad 0x6466250920343666,0x646625202c393233,0x646461090a3b3734,0x662509203436662e\n"
".quad 0x6625202c30333364,0x646625202c343664,0x64616d090a3b3436,0x203436662e6e722e\n"
".quad 0x2c31333364662509,0x2c39323364662520,0x202c373364662520,0x0a3b303333646625\n"
".quad 0x3436662e6c756d09,0x2c38366466250920,0x202c353464662520,0x0a3b313333646625\n"
".quad 0x313309636f6c2e09,0x090a300935333509,0x203436662e6c756d,0x2c32333364662509\n"
".quad 0x202c383464662520,0x0a3b383233646625,0x3436662e6c756d09,0x2c30376466250920\n"
".quad 0x202c373464662520,0x0a3b323333646625,0x313309636f6c2e09,0x090a300936343509\n"
".quad 0x662e6e722e747663,0x09203233732e3436,0x25202c3137646625,0x6f6d090a3b383372\n"
".quad 0x2509203436662e76,0x30202c3333336466,0x3465323665663364,0x6539336166656632\n"
".quad 0x2e30202f2f093b66,0x090a373431333936,0x662e6e722e64616d,0x3764662509203436\n"
".quad 0x3137646625202c33,0x333333646625202c,0x3b3734646625202c,0x36662e766f6d090a\n"
".quad 0x3333646625092034,0x3763336430202c34,0x3362336539636261,0x2f093b6633303839\n"
".quad 0x303931332e32202f,0x61090a37312d6535,0x09203436662e6464,0x202c353333646625\n"
".quad 0x25202c3037646625,0x6e090a3b38366466,0x09203233732e6765,0x25202c3736317225\n"
".quad 0x7663090a3b383372,0x3436662e6e722e74,0x662509203233732e,0x7225202c36333364\n"
".quad 0x6f6d090a3b373631,0x2509203436662e76,0x30202c3733336466,0x3465323665663364\n"
".quad 0x6539336166656632,0x2e30202f2f093b66,0x090a373431333936,0x662e6e722e64616d\n"
".quad 0x3364662509203436,0x33646625202c3833,0x33646625202c3633,0x37646625202c3733\n"
".quad 0x2e627573090a3b33,0x6466250920343666,0x646625202c393333,0x646625202c383333\n"
".quad 0x627573090a3b3734,0x662509203436662e,0x6625202c30343364,0x6625202c35333364\n"
".quad 0x6d090a3b39333364,0x36662e6e722e6461,0x3433646625092034,0x3137646625202c31\n"
".quad 0x343333646625202c,0x303433646625202c,0x662e646461090a3b,0x3164662509203436\n"
".quad 0x37646625202c3432,0x3433646625202c33,0x2e617262090a3b31,0x444c240920696e75\n"
".quad 0x5f5f5f69646e6557,0x6c616e7265746e69,0x38315f666c61685f,0x744c240a3b385f33\n"
".quad 0x38393838345f365f,0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20\n"
".quad 0x696c2079646f6220,0x202c37363220656e,0x62616c2064616568,0x744c242064656c65\n"
".quad 0x34333639365f365f,0x3309636f6c2e090a,0x0a30093834350931,0x3436662e73626109\n"
".quad 0x3234336466250920,0x3b3238646625202c,0x36662e766f6d090a,0x3433646625092034\n"
".quad 0x6666376430202c33,0x3030303030303030,0x2f093b3030303030,0x73090a666e69202f\n"
".quad 0x662e656c2e707465,0x3534702509203436,0x323433646625202c,0x333433646625202c\n"
".quad 0x3534702540090a3b,0x4c24092061726220,0x313035375f365f74,0x6c3c2f2f200a3b30\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x2c37363220656e69\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x333639365f365f74,0x09636f6c2e090a34\n"
".quad 0x3009393435093133,0x36662e646461090a,0x3433646625092034,0x3238646625202c34\n"
".quad 0x3b3238646625202c,0x36662e67656e090a,0x3231646625092034,0x3433646625202c34\n"
".quad 0x2e617262090a3b34,0x444c240920696e75,0x5f5f5f69646e6557,0x6c616e7265746e69\n"
".quad 0x38315f666c61685f,0x744c240a3b385f33,0x30313035375f365f,0x6f6c3c2f2f200a3a\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333639365f365f,0x36662e766f6d090a\n"
".quad 0x3433646625092034,0x3030306430202c35,0x3030303030303030,0x2f093b3030303030\n"
".quad 0x746573090a30202f,0x3436662e71652e70,0x202c363470250920,0x202c353033646625\n"
".quad 0x0a3b353433646625,0x2036347025214009,0x744c240920617262,0x32323535375f365f\n"
".quad 0x6f6c3c2f2f200a3b,0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220\n"
".quad 0x202c37363220656e,0x62616c2064616568,0x744c242064656c65,0x34333639365f365f\n"
".quad 0x3309636f6c2e090a,0x0a30093335350931,0x3436662e766f6d09,0x3432316466250920\n"
".quad 0x306666666430202c,0x3030303030303030,0x2f2f093b30303030,0x62090a666e692d20\n"
".quad 0x0920696e752e6172,0x69646e6557444c24,0x7265746e695f5f5f,0x666c61685f6c616e\n"
".quad 0x0a3b385f3338315f,0x35375f365f744c24,0x2f2f200a3a323235,0x50203e706f6f6c3c\n"
".quad 0x6c20666f20747261,0x79646f6220706f6f,0x363220656e696c20,0x2064616568202c37\n"
".quad 0x2064656c6562616c,0x39365f365f744c24,0x766f6d090a343336,0x662509203436662e\n"
".quad 0x6430202c36343364,0x3030303030666637,0x3030303030303030,0x666e69202f2f093b\n"
".quad 0x652e70746573090a,0x2509203436662e71,0x646625202c373470,0x646625202c353033\n"
".quad 0x2140090a3b363433,0x6172622037347025,0x5f365f744c240920,0x200a3b3433303637\n"
".quad 0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964\n"
".quad 0x616568202c373632,0x656c6562616c2064,0x5f365f744c242064,0x2e090a3433363936\n"
".quad 0x3509313309636f6c,0x6f6d090a30093735,0x2509203436662e76,0x25202c3432316466\n"
".quad 0x090a3b3530336466,0x20696e752e617262,0x646e6557444c2409,0x65746e695f5f5f69\n"
".quad 0x6c61685f6c616e72,0x3b385f3338315f66,0x375f365f744c240a,0x2f200a3a34333036\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079\n"
".quad 0x64616568202c3736,0x64656c6562616c20,0x365f365f744c2420,0x6c2e090a34333639\n"
".quad 0x363509313309636f,0x766f6d090a300930,0x662509203436662e,0x6430202c34323164\n"
".quad 0x3030303038666666,0x3030303030303030,0x616e2d202f2f093b,0x6e6557444c240a6e\n"
".quad 0x746e695f5f5f6964,0x61685f6c616e7265,0x385f3338315f666c,0x6f6c3c2f2f200a3a\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333639365f365f,0x3109636f6c2e090a\n"
".quad 0x0a30093832310939,0x3436662e766f6d09,0x2c37326466250920,0x3b34323164662520\n"
".quad 0x6e752e617262090a,0x365f744c24092069,0x0a3b34313930375f,0x31375f365f744c24\n"
".quad 0x2f2f200a3a303731,0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f\n"
".quad 0x363220656e696c20,0x2064616568202c37,0x2064656c6562616c,0x39365f365f744c24\n"
".quad 0x6f6c2e090a343336,0x3239340931330963,0x2e766f6d090a3009,0x72257b0920343662\n"
".quad 0x363172252c383631,0x32646625202c7d39,0x766f6d090a3b3633,0x722509203233732e\n"
".quad 0x36317225202c3632,0x636f6c2e090a3b39,0x0933393409313309,0x622e766f6d090a30\n"
".quad 0x3272257b09203436,0x7d30373172252c37,0x363332646625202c,0x09636f6c2e090a3b\n"
".quad 0x3009353934093133,0x36662e766f6d090a,0x3433646625092034,0x3030306430202c37\n"
".quad 0x3030303030303030,0x2f093b3030303030,0x746573090a30202f,0x2e3233752e74672e\n"
".quad 0x3172250920343666,0x32646625202c3137,0x33646625202c3633,0x67656e090a3b3734\n"
".quad 0x722509203233732e,0x317225202c323731,0x766f6d090a3b3137,0x662509203436662e\n"
".quad 0x6430202c38343364,0x3030303030666637,0x3030303030303030,0x666e69202f2f093b\n"
".quad 0x746c2e746573090a,0x3436662e3233752e,0x2c33373172250920,0x2c36333264662520\n"
".quad 0x3b38343364662520,0x33732e67656e090a,0x3437317225092032,0x3b3337317225202c\n"
".quad 0x33622e646e61090a,0x3537317225092032,0x2c3237317225202c,0x0a3b343731722520\n"
".quad 0x3233752e766f6d09,0x2c36373172250920,0x746573090a3b3020,0x3233732e71652e70\n"
".quad 0x202c383470250920,0x25202c3537317225,0x40090a3b36373172,0x6172622038347025\n"
".quad 0x5f365f744c240920,0x200a3b3433343035,0x3e706f6f6c3c2f2f,0x666f207472615020\n"
".quad 0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c373632,0x656c6562616c2064\n"
".quad 0x5f365f744c242064,0x6d090a3433363936,0x09203233752e766f,0x31202c3737317225\n"
".quad 0x0a3b353735383430,0x74672e7074657309,0x702509203233752e,0x36317225202c3934\n"
".quad 0x3737317225202c39,0x3934702540090a3b,0x4c24092061726220,0x303836375f365f74\n"
".quad 0x6c3c2f2f200a3b32,0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070\n"
".quad 0x2c37363220656e69,0x616c206461656820,0x4c242064656c6562,0x333639365f365f74\n"
".quad 0x09636f6c2e090a34,0x3009313035093133,0x36662e766f6d090a,0x3433646625092034\n"
".quad 0x3533346430202c39,0x3030303030303030,0x2f093b3030303030,0x343130382e31202f\n"
".quad 0x6d090a36312b6534,0x09203436662e6c75,0x202c303533646625,0x202c363332646625\n"
".quad 0x0a3b393433646625,0x3436622e766f6d09,0x38373172257b0920,0x202c7d363272252c\n"
".quad 0x0a3b303533646625,0x313309636f6c2e09,0x090a300932303509,0x203436622e766f6d\n"
".quad 0x252c373272257b09,0x25202c7d39373172,0x090a3b3035336466,0x203233732e766f6d\n"
".quad 0x2d202c3833722509,0x62090a3b37373031,0x0920696e752e6172,0x36375f365f744c24\n"
".quad 0x744c240a3b363435,0x32303836375f365f,0x6f6c3c2f2f200a3a,0x74726150203e706f\n"
".quad 0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e,0x62616c2064616568\n"
".quad 0x744c242064656c65,0x34333639365f365f,0x33732e766f6d090a,0x2c38337225092032\n"
".quad 0x0a3b333230312d20,0x36375f365f744c24,0x2f2f200a3a363435,0x50203e706f6f6c3c\n"
".quad 0x6c20666f20747261,0x79646f6220706f6f,0x363220656e696c20,0x2064616568202c37\n"
".quad 0x2064656c6562616c,0x39365f365f744c24,0x6f6c2e090a343336,0x3730350931330963\n"
".quad 0x2e726873090a3009,0x3172250920323373,0x36327225202c3038,0x61090a3b3032202c\n"
".quad 0x09203233732e6464,0x7225202c38337225,0x38317225202c3833,0x636f6c2e090a3b30\n"
".quad 0x0939303509313309,0x622e646e61090a30,0x3034722509203233,0x202c36327225202c\n"
".quad 0x353334363431322d,0x726f090a3b333730,0x722509203233622e,0x30347225202c3134\n"
".quad 0x393632373031202c,0x6d090a3b38343233,0x09203436622e766f,0x7b202c3533646625\n"
".quad 0x3472252c37327225,0x766f6d090a3b7d31,0x722509203233752e,0x373031202c313831\n"
".quad 0x3b32383537323133,0x6c2e70746573090a,0x2509203233752e65,0x347225202c303570\n"
".quad 0x3138317225202c31,0x3035702540090a3b,0x4c24092061726220,0x353037375f365f74\n"
".quad 0x6c3c2f2f200a3b38,0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070\n"
".quad 0x2c37363220656e69,0x616c206461656820,0x4c242064656c6562,0x333639365f365f74\n"
".quad 0x09636f6c2e090a34,0x3009313135093133,0x36622e766f6d090a,0x383172257b092034\n"
".quad 0x7d33383172252c32,0x3b3533646625202c,0x33732e627573090a,0x3438317225092032\n"
".quad 0x2c3338317225202c,0x3637353834303120,0x622e766f6d090a3b,0x3172257b09203436\n"
".quad 0x36383172252c3538,0x3533646625202c7d,0x622e766f6d090a3b,0x3364662509203436\n"
".quad 0x383172257b202c35,0x7d34383172252c35,0x09636f6c2e090a3b,0x3009323135093133\n"
".quad 0x33732e646461090a,0x2c38337225092032,0x31202c3833722520,0x5f365f744c240a3b\n"
".quad 0x200a3a3835303737,0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20\n"
".quad 0x20656e696c207964,0x616568202c373632,0x656c6562616c2064,0x5f365f744c242064\n"
".quad 0x2e090a3433363936,0x3509313309636f6c,0x6f6d090a30093831,0x2509203436662e76\n"
".quad 0x30202c3135336466,0x3030303066666264,0x3030303030303030,0x312d202f2f093b30\n"
".quad 0x36662e646461090a,0x3733646625092034,0x2c3533646625202c,0x3b31353364662520\n"
".quad 0x36662e766f6d090a,0x3533646625092034,0x6666336430202c32,0x3030303030303030\n"
".quad 0x2f093b3030303030,0x646461090a31202f,0x662509203436662e,0x646625202c393364\n"
".quad 0x33646625202c3533,0x747663090a3b3235,0x2e3233662e6e722e,0x3266250920343666\n"
".quad 0x3b3933646625202c,0x6e722e706372090a,0x662509203233662e,0x3b326625202c3031\n"
".quad 0x36662e747663090a,0x2509203233662e34,0x6625202c30346466,0x67656e090a3b3031\n"
".quad 0x662509203436662e,0x6625202c33353364,0x6f6d090a3b393364,0x2509203436662e76\n"
".quad 0x30202c3435336466,0x3030303066663364,0x3030303030303030,0x0a31202f2f093b30\n"
".quad 0x2e6e722e64616d09,0x6466250920343666,0x33646625202c3334,0x34646625202c3335\n"
".quad 0x3533646625202c30,0x2e64616d090a3b34,0x09203436662e6e72,0x25202c3434646625\n"
".quad 0x6625202c33346466,0x646625202c333464,0x64616d090a3b3334,0x203436662e6e722e\n"
".quad 0x202c353464662509,0x25202c3434646625,0x6625202c30346466,0x756d090a3b303464\n"
".quad 0x2509203436662e6c,0x6625202c36346466,0x646625202c373364,0x6f6c2e090a3b3534\n"
".quad 0x3832350931330963,0x2e646461090a3009,0x6466250920343666,0x34646625202c3734\n"
".quad 0x3634646625202c36,0x662e6c756d090a3b,0x3464662509203436,0x3734646625202c38\n"
".quad 0x3b3734646625202c,0x36662e766f6d090a,0x3533646625092034,0x6265336430202c35\n"
".quad 0x6561336230383331,0x2f093b6531663038,0x333632302e31202f,0x6d090a36302d6533\n"
".quad 0x09203436662e766f,0x202c363533646625,0x6565306465336430,0x6238613762383532\n"
".quad 0x34202f2f093b3430,0x2d6539343633302e,0x2e64616d090a3630,0x09203436662e6e72\n"
".quad 0x202c373533646625,0x202c353533646625,0x25202c3834646625,0x090a3b3635336466\n"
".quad 0x203436662e766f6d,0x2c38353364662509,0x6233666533643020,0x3632306639363632\n"
".quad 0x202f2f093b663637,0x6534343837382e31,0x64616d090a35302d,0x203436662e6e722e\n"
".quad 0x2c39353364662509,0x2c37353364662520,0x202c383464662520,0x0a3b383533646625\n"
".quad 0x3436662e766f6d09,0x3036336466250920,0x373166336430202c,0x6261396162633534\n"
".quad 0x2f2f093b36353930,0x31383737382e3820,0x616d090a35302d65,0x3436662e6e722e64\n"
".quad 0x3136336466250920,0x393533646625202c,0x2c3834646625202c,0x3b30363364662520\n"
".quad 0x36662e766f6d090a,0x3633646625092034,0x3366336430202c32,0x3164323763313763\n"
".quad 0x2f093b3435313562,0x343030302e30202f,0x6d090a3832303433,0x36662e6e722e6461\n"
".quad 0x3633646625092034,0x3633646625202c33,0x3834646625202c31,0x323633646625202c\n"
".quad 0x662e766f6d090a3b,0x3364662509203436,0x66336430202c3436,0x3239343239343236\n"
".quad 0x093b643237656233,0x3230302e30202f2f,0x6d090a3431323332,0x36662e6e722e6461\n"
".quad 0x3633646625092034,0x3633646625202c35,0x3834646625202c33,0x343633646625202c\n"
".quad 0x662e766f6d090a3b,0x3364662509203436,0x66336430202c3636,0x3939393939393938\n"
".quad 0x093b346333613939,0x3231302e30202f2f,0x722e64616d090a35,0x2509203436662e6e\n"
".quad 0x25202c3736336466,0x25202c3536336466,0x6625202c38346466,0x2e090a3b36363364\n"
".quad 0x3509313309636f6c,0x6f6d090a30093932,0x2509203436662e76,0x30202c3836336466\n"
".quad 0x3535353562663364,0x3535353535353535,0x2e30202f2f093b34,0x0a33333333333830\n"
".quad 0x2e6e722e64616d09,0x6466250920343666,0x646625202c393633,0x646625202c373633\n"
".quad 0x33646625202c3834,0x6f6c2e090a3b3836,0x3233350931330963,0x2e627573090a3009\n"
".quad 0x6466250920343666,0x33646625202c3436,0x3734646625202c37,0x662e67656e090a3b\n"
".quad 0x3364662509203436,0x34646625202c3037,0x2e646461090a3b37,0x6466250920343666\n"
".quad 0x646625202c313733,0x36646625202c3436,0x2e64616d090a3b34,0x09203436662e6e72\n"
".quad 0x202c323733646625,0x202c303733646625,0x25202c3733646625,0x090a3b3137336466\n"
".quad 0x203436662e6c756d,0x202c383664662509,0x25202c3534646625,0x090a3b3237336466\n"
".quad 0x09313309636f6c2e,0x6d090a3009353335,0x09203436662e6c75,0x202c333733646625\n"
".quad 0x25202c3834646625,0x090a3b3936336466,0x203436662e6c756d,0x202c303764662509\n"
".quad 0x25202c3734646625,0x090a3b3337336466,0x09313309636f6c2e,0x63090a3009363435\n"
".quad 0x36662e6e722e7476,0x2509203233732e34,0x7225202c31376466,0x766f6d090a3b3833\n"
".quad 0x662509203436662e,0x6430202c34373364,0x3234653236656633,0x6665393361666566\n"
".quad 0x362e30202f2f093b,0x6d090a3734313339,0x36662e6e722e6461,0x3337646625092034\n"
".quad 0x2c3137646625202c,0x2c34373364662520,0x0a3b373464662520,0x3436662e766f6d09\n"
".quad 0x3537336466250920,0x613763336430202c,0x3933623365396362,0x2f2f093b66333038\n"
".quad 0x35303931332e3220,0x6461090a37312d65,0x2509203436662e64,0x25202c3637336466\n"
".quad 0x6625202c30376466,0x656e090a3b383664,0x2509203233732e67,0x7225202c37383172\n"
".quad 0x747663090a3b3833,0x2e3436662e6e722e,0x6466250920323373,0x317225202c373733\n"
".quad 0x766f6d090a3b3738,0x662509203436662e,0x6430202c38373364,0x3234653236656633\n"
".quad 0x6665393361666566,0x362e30202f2f093b,0x6d090a3734313339,0x36662e6e722e6461\n"
".quad 0x3733646625092034,0x3733646625202c39,0x3733646625202c37,0x3337646625202c38\n"
".quad 0x662e627573090a3b,0x3364662509203436,0x33646625202c3038,0x34646625202c3937\n"
".quad 0x2e627573090a3b37,0x6466250920343666,0x646625202c313833,0x646625202c363733\n"
".quad 0x616d090a3b303833,0x3436662e6e722e64,0x3238336466250920,0x2c3137646625202c\n"
".quad 0x2c35373364662520,0x3b31383364662520,0x36662e646461090a,0x3631646625092034\n"
".quad 0x3337646625202c36,0x323833646625202c,0x752e617262090a3b,0x57444c240920696e\n"
".quad 0x695f5f5f69646e65,0x5f6c616e7265746e,0x3338315f666c6168,0x5f744c240a3b325f\n"
".quad 0x3a34333430355f36,0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f\n"
".quad 0x6e696c2079646f62,0x68202c3736322065,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x0a34333639365f36,0x313309636f6c2e09,0x090a300938343509,0x203436662e736261\n"
".quad 0x2c33383364662509,0x3b36333264662520,0x36662e766f6d090a,0x3833646625092034\n"
".quad 0x6666376430202c34,0x3030303030303030,0x2f093b3030303030,0x73090a666e69202f\n"
".quad 0x662e656c2e707465,0x3135702509203436,0x333833646625202c,0x343833646625202c\n"
".quad 0x3135702540090a3b,0x4c24092061726220,0x373537375f365f74,0x6c3c2f2f200a3b30\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x2c37363220656e69\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x333639365f365f74,0x09636f6c2e090a34\n"
".quad 0x3009393435093133,0x36662e646461090a,0x3631646625092034,0x3332646625202c36\n"
".quad 0x3332646625202c36,0x2e617262090a3b36,0x444c240920696e75,0x5f5f5f69646e6557\n"
".quad 0x6c616e7265746e69,0x38315f666c61685f,0x744c240a3b325f33,0x30373537375f365f\n"
".quad 0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220\n"
".quad 0x202c37363220656e,0x62616c2064616568,0x744c242064656c65,0x34333639365f365f\n"
".quad 0x36662e766f6d090a,0x3833646625092034,0x3030306430202c35,0x3030303030303030\n"
".quad 0x2f093b3030303030,0x746573090a30202f,0x3436662e71652e70,0x202c323570250920\n"
".quad 0x202c363332646625,0x0a3b353833646625,0x2032357025214009,0x744c240920617262\n"
".quad 0x32383038375f365f,0x6f6c3c2f2f200a3b,0x74726150203e706f,0x706f6f6c20666f20\n"
".quad 0x696c2079646f6220,0x202c37363220656e,0x62616c2064616568,0x744c242064656c65\n"
".quad 0x34333639365f365f,0x3309636f6c2e090a,0x0a30093335350931,0x3436662e766f6d09\n"
".quad 0x3636316466250920,0x306666666430202c,0x3030303030303030,0x2f2f093b30303030\n"
".quad 0x62090a666e692d20,0x0920696e752e6172,0x69646e6557444c24,0x7265746e695f5f5f\n"
".quad 0x666c61685f6c616e,0x0a3b325f3338315f,0x38375f365f744c24,0x2f2f200a3a323830\n"
".quad 0x50203e706f6f6c3c,0x6c20666f20747261,0x79646f6220706f6f,0x363220656e696c20\n"
".quad 0x2064616568202c37,0x2064656c6562616c,0x39365f365f744c24,0x766f6d090a343336\n"
".quad 0x662509203436662e,0x6430202c36383364,0x3030303030666637,0x3030303030303030\n"
".quad 0x666e69202f2f093b,0x652e70746573090a,0x2509203436662e71,0x646625202c333570\n"
".quad 0x646625202c363332,0x2140090a3b363833,0x6172622033357025,0x5f365f744c240920\n"
".quad 0x200a3b3439353837,0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20\n"
".quad 0x20656e696c207964,0x616568202c373632,0x656c6562616c2064,0x5f365f744c242064\n"
".quad 0x2e090a3433363936,0x3509313309636f6c,0x6f6d090a30093735,0x2509203436662e76\n"
".quad 0x25202c3636316466,0x090a3b3633326466,0x20696e752e617262,0x646e6557444c2409\n"
".quad 0x65746e695f5f5f69,0x6c61685f6c616e72,0x3b325f3338315f66,0x375f365f744c240a\n"
".quad 0x2f200a3a34393538,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3220656e696c2079,0x64616568202c3736,0x64656c6562616c20,0x365f365f744c2420\n"
".quad 0x6c2e090a34333639,0x363509313309636f,0x766f6d090a300930,0x662509203436662e\n"
".quad 0x6430202c36363164,0x3030303038666666,0x3030303030303030,0x616e2d202f2f093b\n"
".quad 0x6e6557444c240a6e,0x746e695f5f5f6964,0x61685f6c616e7265,0x325f3338315f666c\n"
".quad 0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220\n"
".quad 0x202c37363220656e,0x62616c2064616568,0x744c242064656c65,0x34333639365f365f\n"
".quad 0x3309636f6c2e090a,0x0a30093239340931,0x3436662e67656e09,0x3738336466250920\n"
".quad 0x363631646625202c,0x622e766f6d090a3b,0x3172257b09203436,0x39383172252c3838\n"
".quad 0x3833646625202c7d,0x2e766f6d090a3b37,0x3272250920323373,0x3938317225202c36\n"
".quad 0x09636f6c2e090a3b,0x3009333934093133,0x36622e766f6d090a,0x373272257b092034\n"
".quad 0x2c7d30393172252c,0x3b37383364662520,0x3309636f6c2e090a,0x0a30093539340931\n"
".quad 0x3436662e766f6d09,0x3838336466250920,0x303030306430202c,0x3030303030303030\n"
".quad 0x2f2f093b30303030,0x2e746573090a3020,0x662e3233752e7467,0x3931722509203436\n"
".quad 0x3833646625202c31,0x3833646625202c37,0x2e67656e090a3b38,0x3172250920323373\n"
".quad 0x39317225202c3239,0x2e766f6d090a3b31,0x6466250920343666,0x376430202c393833\n"
".quad 0x3030303030306666,0x3b30303030303030,0x0a666e69202f2f09,0x2e746c2e74657309\n"
".quad 0x203436662e323375,0x202c333931722509,0x202c373833646625,0x0a3b393833646625\n"
".quad 0x3233732e67656e09,0x2c34393172250920,0x0a3b333931722520,0x3233622e646e6109\n"
".quad 0x2c35393172250920,0x202c323931722520,0x090a3b3439317225,0x203233752e766f6d\n"
".quad 0x202c363931722509,0x70746573090a3b30,0x203233732e71652e,0x25202c3435702509\n"
".quad 0x7225202c35393172,0x2540090a3b363931,0x2061726220343570,0x355f365f744c2409\n"
".quad 0x2f200a3b30373931,0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c\n"
".quad 0x3220656e696c2079,0x64616568202c3736,0x64656c6562616c20,0x365f365f744c2420\n"
".quad 0x6f6d090a34333639,0x2509203233752e76,0x3031202c37393172,0x090a3b3537353834\n"
".quad 0x2e74672e70746573,0x3570250920323375,0x3938317225202c35,0x3b3739317225202c\n"
".quad 0x203535702540090a,0x744c240920617262,0x32363339375f365f,0x6f6c3c2f2f200a3b\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333639365f365f,0x3309636f6c2e090a\n"
".quad 0x0a30093130350931,0x3436662e766f6d09,0x3039336466250920,0x303533346430202c\n"
".quad 0x3030303030303030,0x2f2f093b30303030,0x34343130382e3120,0x756d090a36312b65\n"
".quad 0x2509203436662e6c,0x25202c3139336466,0x25202c3738336466,0x090a3b3039336466\n"
".quad 0x203436622e766f6d,0x2c38393172257b09,0x25202c7d36327225,0x090a3b3139336466\n"
".quad 0x09313309636f6c2e,0x6d090a3009323035,0x09203436622e766f,0x72252c373272257b\n"
".quad 0x6625202c7d393931,0x6d090a3b31393364,0x09203233732e766f,0x312d202c38337225\n"
".quad 0x7262090a3b373730,0x240920696e752e61,0x3139375f365f744c,0x5f744c240a3b3630\n"
".quad 0x3a32363339375f36,0x6f6f6c3c2f2f200a,0x2074726150203e70,0x20706f6f6c20666f\n"
".quad 0x6e696c2079646f62,0x68202c3736322065,0x6562616c20646165,0x5f744c242064656c\n"
".quad 0x0a34333639365f36,0x3233732e766f6d09,0x202c383372250920,0x240a3b333230312d\n"
".quad 0x3139375f365f744c,0x3c2f2f200a3a3630,0x6150203e706f6f6c,0x6f6c20666f207472\n"
".quad 0x2079646f6220706f,0x37363220656e696c,0x6c2064616568202c,0x242064656c656261\n"
".quad 0x3639365f365f744c,0x636f6c2e090a3433,0x0937303509313309,0x732e726873090a30\n"
".quad 0x3032722509203233,0x2c36327225202c30,0x6461090a3b303220,0x2509203233732e64\n"
".quad 0x337225202c383372,0x3030327225202c38,0x09636f6c2e090a3b,0x3009393035093133\n"
".quad 0x33622e646e61090a,0x2c30347225092032,0x2d202c3632722520,0x3035333436343132\n"
".quad 0x2e726f090a3b3337,0x3472250920323362,0x2c30347225202c31,0x3339363237303120\n"
".quad 0x6f6d090a3b383432,0x2509203436622e76,0x257b202c35336466,0x313472252c373272\n"
".quad 0x2e766f6d090a3b7d,0x3272250920323375,0x33373031202c3130,0x0a3b323835373231\n"
".quad 0x656c2e7074657309,0x702509203233752e,0x31347225202c3635,0x3b3130327225202c\n"
".quad 0x203635702540090a,0x744c240920617262,0x38313639375f365f,0x6f6c3c2f2f200a3b\n"
".quad 0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e\n"
".quad 0x62616c2064616568,0x744c242064656c65,0x34333639365f365f,0x3309636f6c2e090a\n"
".quad 0x0a30093131350931,0x3436622e766f6d09,0x32303272257b0920,0x2c7d33303272252c\n"
".quad 0x0a3b353364662520,0x3233732e62757309,0x2c34303272250920,0x202c333032722520\n"
".quad 0x3b36373538343031,0x36622e766f6d090a,0x303272257b092034,0x7d36303272252c35\n"
".quad 0x3b3533646625202c,0x36622e766f6d090a,0x3533646625092034,0x35303272257b202c\n"
".quad 0x3b7d34303272252c,0x3309636f6c2e090a,0x0a30093231350931,0x3233732e64646109\n"
".quad 0x202c383372250920,0x3b31202c38337225,0x375f365f744c240a,0x2f200a3a38313639\n"
".quad 0x203e706f6f6c3c2f,0x20666f2074726150,0x646f6220706f6f6c,0x3220656e696c2079\n"
".quad 0x64616568202c3736,0x64656c6562616c20,0x365f365f744c2420,0x6c2e090a34333639\n"
".quad 0x313509313309636f,0x766f6d090a300938,0x662509203436662e,0x6430202c32393364\n"
".quad 0x3030303030666662,0x3030303030303030,0x0a312d202f2f093b,0x3436662e64646109\n"
".quad 0x2c37336466250920,0x202c353364662520,0x0a3b323933646625,0x3436662e766f6d09\n"
".quad 0x3339336466250920,0x306666336430202c,0x3030303030303030,0x2f2f093b30303030\n"
".quad 0x2e646461090a3120,0x6466250920343666,0x33646625202c3933,0x3933646625202c35\n"
".quad 0x2e747663090a3b33,0x662e3233662e6e72,0x2c32662509203436,0x0a3b393364662520\n"
".quad 0x2e6e722e70637209,0x3166250920323366,0x0a3b326625202c31,0x3436662e74766309\n"
".quad 0x662509203233662e,0x316625202c303464,0x2e67656e090a3b31,0x6466250920343666\n"
".quad 0x646625202c343933,0x766f6d090a3b3933,0x662509203436662e,0x6430202c35393364\n"
".quad 0x3030303030666633,0x3030303030303030,0x090a31202f2f093b,0x662e6e722e64616d\n"
".quad 0x3464662509203436,0x3933646625202c33,0x3034646625202c34,0x353933646625202c\n"
".quad 0x722e64616d090a3b,0x2509203436662e6e,0x6625202c34346466,0x646625202c333464\n"
".quad 0x34646625202c3334,0x2e64616d090a3b33,0x09203436662e6e72,0x25202c3534646625\n"
".quad 0x6625202c34346466,0x646625202c303464,0x6c756d090a3b3034,0x662509203436662e\n"
".quad 0x646625202c363464,0x34646625202c3733,0x636f6c2e090a3b35,0x0938323509313309\n"
".quad 0x662e646461090a30,0x3464662509203436,0x3634646625202c37,0x3b3634646625202c\n"
".quad 0x36662e6c756d090a,0x3834646625092034,0x2c3734646625202c,0x0a3b373464662520\n"
".quad 0x3436662e766f6d09,0x3639336466250920,0x316265336430202c,0x3865613362303833\n"
".quad 0x2f2f093b65316630,0x33333632302e3120,0x6f6d090a36302d65,0x2509203436662e76\n"
".quad 0x30202c3739336466,0x3265653064653364,0x3062386137623835,0x2e34202f2f093b34\n"
".quad 0x302d653934363330,0x722e64616d090a36,0x2509203436662e6e,0x25202c3839336466\n"
".quad 0x25202c3639336466,0x6625202c38346466,0x6d090a3b37393364,0x09203436662e766f\n"
".quad 0x202c393933646625,0x3262336665336430,0x3736323066393636,0x31202f2f093b6636\n"
".quad 0x2d6534343837382e,0x2e64616d090a3530,0x09203436662e6e72,0x202c303034646625\n"
".quad 0x202c383933646625,0x25202c3834646625,0x090a3b3939336466,0x203436662e766f6d\n"
".quad 0x2c31303464662509,0x3437316633643020,0x3062613961626335,0x202f2f093b363539\n"
".quad 0x6531383737382e38,0x64616d090a35302d,0x203436662e6e722e,0x2c32303464662509\n"
".quad 0x2c30303464662520,0x202c383464662520,0x0a3b313034646625,0x3436662e766f6d09\n"
".quad 0x3330346466250920,0x633366336430202c,0x6231643237633137,0x2f2f093b34353135\n"
".quad 0x33343030302e3020,0x616d090a38323034,0x3436662e6e722e64,0x3430346466250920\n"
".quad 0x323034646625202c,0x2c3834646625202c,0x3b33303464662520,0x36662e766f6d090a\n"
".quad 0x3034646625092034,0x3666336430202c35,0x3332393432393432,0x2f093b6432376562\n"
".quad 0x323230302e30202f,0x616d090a34313233,0x3436662e6e722e64,0x3630346466250920\n"
".quad 0x343034646625202c,0x2c3834646625202c,0x3b35303464662520,0x36662e766f6d090a\n"
".quad 0x3034646625092034,0x3866336430202c37,0x3939393939393939,0x2f093b3463336139\n"
".quad 0x353231302e30202f,0x6e722e64616d090a,0x662509203436662e,0x6625202c38303464\n"
".quad 0x6625202c36303464,0x646625202c383464,0x6c2e090a3b373034,0x323509313309636f\n"
".quad 0x766f6d090a300939,0x662509203436662e,0x6430202c39303464,0x3535353535626633\n"
".quad 0x3435353535353535,0x302e30202f2f093b,0x090a333333333338,0x662e6e722e64616d\n"
".quad 0x3464662509203436,0x34646625202c3031,0x34646625202c3830,0x3034646625202c38\n"
".quad 0x636f6c2e090a3b39,0x0932333509313309,0x662e627573090a30,0x3664662509203436\n"
".quad 0x3733646625202c34,0x3b3734646625202c,0x36662e67656e090a,0x3134646625092034\n"
".quad 0x3734646625202c31,0x662e646461090a3b,0x3464662509203436,0x36646625202c3231\n"
".quad 0x3436646625202c34,0x722e64616d090a3b,0x2509203436662e6e,0x25202c3331346466\n"
".quad 0x25202c3131346466,0x6625202c37336466,0x6d090a3b32313464,0x09203436662e6c75\n"
".quad 0x25202c3836646625,0x6625202c35346466,0x2e090a3b33313464,0x3509313309636f6c\n"
".quad 0x756d090a30093533,0x2509203436662e6c,0x25202c3431346466,0x6625202c38346466\n"
".quad 0x6d090a3b30313464,0x09203436662e6c75,0x25202c3037646625,0x6625202c37346466\n"
".quad 0x2e090a3b34313464,0x3509313309636f6c,0x7663090a30093634,0x3436662e6e722e74\n"
".quad 0x662509203233732e,0x337225202c313764,0x2e766f6d090a3b38,0x6466250920343666\n"
".quad 0x336430202c353134,0x6632346532366566,0x3b66653933616665,0x39362e30202f2f09\n"
".quad 0x616d090a37343133,0x3436662e6e722e64,0x2c33376466250920,0x202c313764662520\n"
".quad 0x202c353134646625,0x090a3b3734646625,0x203436662e766f6d,0x2c36313464662509\n"
".quad 0x6261376333643020,0x3839336233653963,0x202f2f093b663330,0x6535303931332e32\n"
".quad 0x646461090a37312d,0x662509203436662e,0x6625202c37313464,0x646625202c303764\n"
".quad 0x67656e090a3b3836,0x722509203233732e,0x337225202c373032,0x2e747663090a3b38\n"
".quad 0x732e3436662e6e72,0x3464662509203233,0x30327225202c3831,0x2e766f6d090a3b37\n"
".quad 0x6466250920343666,0x336430202c393134,0x6632346532366566,0x3b66653933616665\n"
".quad 0x39362e30202f2f09,0x616d090a37343133,0x3436662e6e722e64,0x3032346466250920\n"
".quad 0x383134646625202c,0x393134646625202c,0x3b3337646625202c,0x36662e627573090a\n"
".quad 0x3234646625092034,0x3234646625202c31,0x3734646625202c30,0x662e627573090a3b\n"
".quad 0x3464662509203436,0x34646625202c3232,0x34646625202c3731,0x64616d090a3b3132\n"
".quad 0x203436662e6e722e,0x2c33323464662509,0x202c313764662520,0x202c363134646625\n"
".quad 0x0a3b323234646625,0x3436662e64646109,0x3830326466250920,0x2c3337646625202c\n"
".quad 0x3b33323464662520,0x6e752e617262090a,0x6557444c24092069,0x6e695f5f5f69646e\n"
".quad 0x685f6c616e726574,0x5f3338315f666c61,0x365f744c240a3b34,0x0a3a30373931355f\n"
".quad 0x706f6f6c3c2f2f20,0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f\n"
".quad 0x6568202c37363220,0x6c6562616c206461,0x365f744c24206465,0x090a34333639365f\n"
".quad 0x09313309636f6c2e,0x61090a3009383435,0x09203436662e7362,0x202c343234646625\n"
".quad 0x0a3b363631646625,0x3436662e766f6d09,0x3532346466250920,0x306666376430202c\n"
".quad 0x3030303030303030,0x2f2f093b30303030,0x6573090a666e6920,0x36662e656c2e7074\n"
".quad 0x2c37357025092034,0x2c34323464662520,0x3b35323464662520,0x203735702540090a\n"
".quad 0x744c240920617262,0x30333130385f365f,0x6f6c3c2f2f200a3b,0x74726150203e706f\n"
".quad 0x706f6f6c20666f20,0x696c2079646f6220,0x202c37363220656e,0x62616c2064616568\n"
".quad 0x744c242064656c65,0x34333639365f365f,0x3309636f6c2e090a,0x0a30093934350931\n"
".quad 0x3436662e64646109,0x3632346466250920,0x363631646625202c,0x363631646625202c\n"
".quad 0x662e67656e090a3b,0x3264662509203436,0x34646625202c3830,0x617262090a3b3632\n"
".quad 0x4c240920696e752e,0x5f5f69646e655744,0x616e7265746e695f,0x315f666c61685f6c\n"
".quad 0x4c240a3b345f3338,0x333130385f365f74,0x6c3c2f2f200a3a30,0x726150203e706f6f\n"
".quad 0x6f6f6c20666f2074,0x6c2079646f622070,0x2c37363220656e69,0x616c206461656820\n"
".quad 0x4c242064656c6562,0x333639365f365f74,0x662e766f6d090a34,0x3464662509203436\n"
".quad 0x30306430202c3732,0x3030303030303030,0x093b303030303030,0x6573090a30202f2f\n"
".quad 0x36662e71652e7074,0x2c38357025092034,0x2c37383364662520,0x3b37323464662520\n"
".quad 0x383570252140090a,0x4c24092061726220,0x343630385f365f74,0x6c3c2f2f200a3b32\n"
".quad 0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070,0x2c37363220656e69\n"
".quad 0x616c206461656820,0x4c242064656c6562,0x333639365f365f74,0x09636f6c2e090a34\n"
".quad 0x3009333535093133,0x36662e766f6d090a,0x3032646625092034,0x6666666430202c38\n"
".quad 0x3030303030303030,0x2f093b3030303030,0x090a666e692d202f,0x20696e752e617262\n"
".quad 0x646e6557444c2409,0x65746e695f5f5f69,0x6c61685f6c616e72,0x3b345f3338315f66\n"
".quad 0x385f365f744c240a,0x2f200a3a32343630,0x203e706f6f6c3c2f,0x20666f2074726150\n"
".quad 0x646f6220706f6f6c,0x3220656e696c2079,0x64616568202c3736,0x64656c6562616c20\n"
".quad 0x365f365f744c2420,0x6f6d090a34333639,0x2509203436662e76,0x30202c3832346466\n"
".quad 0x3030303066663764,0x3030303030303030,0x6e69202f2f093b30,0x2e70746573090a66\n"
".quad 0x09203436662e7165,0x6625202c39357025,0x6625202c37383364,0x40090a3b38323464\n"
".quad 0x7262203935702521,0x365f744c24092061,0x0a3b34353131385f,0x706f6f6c3c2f2f20\n"
".quad 0x6f2074726150203e,0x6220706f6f6c2066,0x656e696c2079646f,0x6568202c37363220\n"
".quad 0x6c6562616c206461,0x365f744c24206465,0x090a34333639365f,0x09313309636f6c2e\n"
".quad 0x6d090a3009373535,0x09203436662e766f,0x202c383032646625,0x0a3b373833646625\n"
".quad 0x696e752e61726209,0x6e6557444c240920,0x746e695f5f5f6964,0x61685f6c616e7265\n"
".quad 0x345f3338315f666c,0x5f365f744c240a3b,0x200a3a3435313138,0x3e706f6f6c3c2f2f\n"
".quad 0x666f207472615020,0x6f6220706f6f6c20,0x20656e696c207964,0x616568202c373632\n"
".quad 0x656c6562616c2064,0x5f365f744c242064,0x2e090a3433363936,0x3509313309636f6c\n"
".quad 0x6f6d090a30093036,0x2509203436662e76,0x30202c3830326466,0x3030303866666664\n"
".quad 0x3030303030303030,0x6e2d202f2f093b30,0x6557444c240a6e61,0x6e695f5f5f69646e\n"
".quad 0x685f6c616e726574,0x5f3338315f666c61,0x6c3c2f2f200a3a34,0x726150203e706f6f\n"
".quad 0x6f6f6c20666f2074,0x6c2079646f622070,0x2c37363220656e69,0x616c206461656820\n"
".quad 0x4c242064656c6562,0x333639365f365f74,0x09636f6c2e090a34,0x3009303331093931\n"
".quad 0x36662e766f6d090a,0x3732646625092034,0x383032646625202c,0x5f365f744c240a3b\n"
".quad 0x200a3a3431393037,0x3e706f6f6c3c2f2f,0x666f207472615020,0x6f6220706f6f6c20\n"
".quad 0x20656e696c207964,0x616568202c373632,0x656c6562616c2064,0x5f365f744c242064\n"
".quad 0x2e090a3433363936,0x3109393109636f6c,0x6f6d090a30093233,0x2509203436662e76\n"
".quad 0x30202c3932346466,0x3339393564663364,0x3633303465336332,0x2e30202f2f093b64\n"
".quad 0x090a353734373333,0x203436662e766f6d,0x2c30333464662509,0x3366656633643020\n"
".quad 0x6362386663366363,0x202f2f093b313331,0x3936313637392e30,0x36662e766f6d090a\n"
".quad 0x3334646625092034,0x6366336430202c31,0x3636323730353934,0x2f093b3638363039\n"
".quad 0x373036312e30202f,0x2e766f6d090a3839,0x6466250920343666,0x336430202c323334\n"
".quad 0x3764616534633966,0x3b37333234346533,0x32302e30202f2f09,0x6d090a3933343637\n"
".quad 0x09203436662e766f,0x202c333334646625,0x3637663666336430,0x3736653335653334\n"
".quad 0x30202f2f093b3538,0x353034383330302e,0x662e766f6d090a37,0x3464662509203436\n"
".quad 0x66336430202c3433,0x3061653236653933,0x093b363438383961,0x3030302e30202f2f\n"
".quad 0x6d090a3931353933,0x09203436662e766f,0x202c353334646625,0x6564303066336430\n"
".quad 0x3238356635303262,0x33202f2f093b3830,0x2d6538363731322e,0x2e766f6d090a3530\n"
".quad 0x6466250920343666,0x336430202c363334,0x3735643136333965,0x3b36356237623930\n"
".quad 0x38382e32202f2f09,0x0a37302d65373138,0x3436662e766f6d09,0x3733346466250920\n"
".quad 0x613965336430202c,0x3230613035633339,0x2f2f093b64613564,0x32333036392e3320\n"
".quad 0x616d090a37302d65,0x3436662e6e722e64,0x3833346466250920,0x373334646625202c\n"
".quad 0x2c3732646625202c,0x3b36333464662520,0x6e722e64616d090a,0x662509203436662e\n"
".quad 0x6625202c39333464,0x646625202c373264,0x646625202c383334,0x616d090a3b353334\n"
".quad 0x3436662e6e722e64,0x3034346466250920,0x2c3732646625202c,0x2c39333464662520\n"
".quad 0x3b34333464662520,0x6e722e64616d090a,0x662509203436662e,0x6625202c31343464\n"
".quad 0x646625202c373264,0x646625202c303434,0x616d090a3b333334,0x3436662e6e722e64\n"
".quad 0x3234346466250920,0x2c3732646625202c,0x2c31343464662520,0x3b32333464662520\n"
".quad 0x6e722e64616d090a,0x662509203436662e,0x6625202c33343464,0x646625202c373264\n"
".quad 0x646625202c323434,0x616d090a3b313334,0x3436662e6e722e64,0x3434346466250920\n"
".quad 0x2c3732646625202c,0x2c33343464662520,0x3b30333464662520,0x6e722e64616d090a\n"
".quad 0x662509203436662e,0x6625202c35343464,0x646625202c373264,0x646625202c343434\n"
".quad 0x656e090a3b393234,0x2509203436662e67,0x25202c3634346466,0x090a3b3534346466\n"
".quad 0x203436662e766f6d,0x2c37343464662509,0x3030303030643020,0x3030303030303030\n"
".quad 0x202f2f093b303030,0x2e70746573090a30,0x09203436662e746c,0x6625202c30367025\n"
".quad 0x6625202c31343264,0x73090a3b37343464,0x203436662e706c65,0x202c373264662509\n"
".quad 0x202c363434646625,0x202c353434646625,0x4c240a3b30367025,0x303430375f365f74\n"
".quad 0x6c3c2f2f200a3a32,0x726150203e706f6f,0x6f6f6c20666f2074,0x6c2079646f622070\n"
".quad 0x2c37363220656e69,0x616c206461656820,0x4c242064656c6562,0x333639365f365f74\n"
".quad 0x09636f6c2e090a34,0x3009363331093931,0x36662e766f6d090a,0x3332646625092034\n"
".quad 0x3732646625202c39,0x6e6557444c240a3b,0x69766964665f6964,0x315f3338315f6564\n"
".quad 0x6f6c3c2f2f200a3a,0x74726150203e706f,0x706f6f6c20666f20,0x696c2079646f6220\n"
".quad 0x202c37363220656e,0x62616c2064616568,0x744c242064656c65,0x34333639365f365f\n"
".quad 0x3109636f6c2e090a,0x0a30093936320939,0x2e6e722e74766309,0x203436662e323366\n"
".quad 0x25202c3231662509,0x090a3b3933326466,0x61626f6c672e7473,0x5b09203233662e6c\n"
".quad 0x5d302b3731317225,0x0a3b32316625202c,0x3233752e64646109,0x2c31313172250920\n"
".quad 0x202c353131722520,0x090a3b3131317225,0x203233752e646461,0x202c373131722509\n"
".quad 0x25202c3731317225,0x73090a3b39313172,0x752e746c2e707465,0x3136702509203233\n"
".quad 0x2c3731317225202c,0x0a3b383131722520,0x6220313670254009,0x5f744c2409206172\n"
".quad 0x3b34333639365f36,0x365f365f744c240a,0x4c240a3a32323139,0x313835355f365f74\n"
".quad 0x636f6c2e090a3a30,0x0932373209393109,0x3b74697865090a30,0x646e6557444c240a\n"
".quad 0x766e6936315a5f5f,0x4b444e4365737265,0x5366506c656e7265,0x2f207d090a3a6a5f\n"
".quad 0x6e6936315a5f202f,0x444e436573726576,0x66506c656e72654b,0x0000000a0a6a5f53\n"
".text");

extern "C" {

extern const unsigned long long __deviceText_$compute_20$[13720];

}

asm(
".section .rodata\n"
".align 32\n"
"__deviceText_$sm_20$:\n"
".quad 0x33010101464c457f,0x0000000000000004,0x0000000100be0002,0x000144b800000000\n"
".quad 0x0014011400000034,0x0028000900200034,0x000000000001001a,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000100000000\n"
".quad 0x0000000000000003,0x0000044400000000,0x000000000000037d,0x0000000400000000\n"
".quad 0x0000000b00000000,0x0000000000000003,0x000007c100000000,0x0000000000000105\n"
".quad 0x0000000100000000,0x0000001300000000,0x0000000000000002,0x000008c600000000\n"
".quad 0x0000000200000250,0x000000010000001b,0x0000013400000010,0x0000000600000001\n"
".quad 0x00000b1600000000,0x0000000300000380,0x000000041c00000d,0x000001cd00000000\n"
".quad 0x0000000200000001,0x00000e9600000000,0x000000000000002c,0x0000000400000004\n"
".quad 0x0000019500000000,0x0000000200000001,0x00000ec200000000,0x000000000000000c\n"
".quad 0x0000000400000004,0x0000016300000000,0x0000000200000001,0x00000ece00000000\n"
".quad 0x000000000000005c,0x0000000100000004,0x000000df00000000,0x0010000600000001\n"
".quad 0x00000f2a00000000,0x0000000300000758,0x000000041e00000b,0x0000031c00000000\n"
".quad 0x0000000200000001,0x0000168200000000,0x0000000000000028,0x0000000400000008\n"
".quad 0x000002ea00000000,0x0000000200000001,0x000016aa00000000,0x000000000000000c\n"
".quad 0x0000000400000008,0x0000010800000000,0x0000000200000001,0x000016b600000000\n"
".quad 0x0000000000000048,0x0000000100000008,0x000002bc00000000,0x0000000300000008\n"
".quad 0x000016fe00000000,0x0000000000001000,0x0000000400000008,0x0000008200000000\n"
".quad 0x0010000600000001,0x000016fe00000000,0x0000000300000568,0x0000000414000009\n"
".quad 0x0000023600000000,0x0000000200000001,0x00001c6600000000,0x0000000000000028\n"
".quad 0x000000040000000d,0x000000af00000000,0x0000000200000001,0x00001c8e00000000\n"
".quad 0x0000000000000048,0x000000010000000d,0x0000020400000000,0x0000000300000008\n"
".quad 0x00001cd600000000,0x0000000000001000,0x000000040000000d,0x0000003600000000\n"
".quad 0x0000000600000001,0x00001cd600000000,0x0000000300002670,0x0000000422000006\n"
".quad 0x0000029400000000,0x0000000200000001,0x0000434600000000,0x000000000000002c\n"
".quad 0x0000000400000011,0x0000026b00000000,0x0000000200000001,0x0000437200000000\n"
".quad 0x000000000000001c,0x0000000400000011,0x0000005600000000,0x0000000200000001\n"
".quad 0x0000438e00000000,0x000000000000005c,0x0000000100000011,0x0000036f00000000\n"
".quad 0x0000000200000001,0x000043ea00000000,0x0000000000010000,0x0000000400000000\n"
".quad 0x0000034d00000000,0x0000000200000001,0x000143ea00000000,0x0000000000000004\n"
".quad 0x0000000800000000,0x0000035c00000000,0x0000000000000009,0x000143ee00000000\n"
".quad 0x0000000300000008,0x0000000400000016,0x0000002b00000008,0x0000000300000008\n"
".quad 0x000143f600000000,0x0000000000008000,0x0000000400000000,0x0000007900000000\n"
".quad 0x0000000200000001,0x000143f600000000,0x00000000000000c0,0x0000000100000000\n"
".quad 0x68732e0000000000,0x2e00626174727473,0x2e00626174727473,0x2e006261746d7973\n"
".quad 0x61626f6c672e766e,0x2e0074696e692e6c,0x61626f6c672e766e,0x2e747865742e006c\n"
".quad 0x65766e6936315a5f,0x654b444e43657372,0x5f5366506c656e72,0x6e692e766e2e006a\n"
".quad 0x6936315a5f2e6f66,0x4e4365737265766e,0x506c656e72654b44,0x766e2e006a5f5366\n"
".quad 0x742e006f666e692e,0x36315a5f2e747865,0x72614365746e6f4d,0x6563756465526f6c\n"
".quad 0x704f545f5f343150,0x756c61566e6f6974,0x692e766e2e006965,0x36315a5f2e6f666e\n"
".quad 0x72614365746e6f4d,0x6563756465526f6c,0x704f545f5f343150,0x756c61566e6f6974\n"
".quad 0x747865742e006965,0x6e6f4d37325a5f2e,0x4f6f6c7261436574,0x506b636f6c42656e\n"
".quad 0x6e6f6974704f7265,0x2e766e2e00696650,0x325a5f2e6f666e69,0x614365746e6f4d37\n"
".quad 0x6c42656e4f6f6c72,0x704f7265506b636f,0x006966506e6f6974,0x5a5f2e747865742e\n"
".quad 0x4365746e6f4d3631,0x6e72654b6f6c7261,0x545f5f3431506c65,0x61566e6f6974704f\n"
".quad 0x2e0069665065756c,0x2e6f666e692e766e,0x746e6f4d36315a5f,0x654b6f6c72614365\n"
".quad 0x5f3431506c656e72,0x6e6f6974704f545f,0x69665065756c6156,0x6e6f632e766e2e00\n"
".quad 0x2e3631746e617473,0x746e6f4d36315a5f,0x654b6f6c72614365,0x5f3431506c656e72\n"
".quad 0x6e6f6974704f545f,0x69665065756c6156,0x6e6f632e766e2e00,0x5f2e30746e617473\n"
".quad 0x65746e6f4d36315a,0x72654b6f6c726143,0x5f5f3431506c656e,0x566e6f6974704f54\n"
".quad 0x0069665065756c61,0x726168732e766e2e,0x4d36315a5f2e6465,0x6c72614365746e6f\n"
".quad 0x506563756465526f,0x74704f545f5f3431,0x65756c61566e6f69,0x6f632e766e2e0069\n"
".quad 0x2e30746e6174736e,0x746e6f4d36315a5f,0x65526f6c72614365,0x5f34315065637564\n"
".quad 0x6e6f6974704f545f,0x2e006965756c6156,0x74736e6f632e766e,0x5a5f2e3631746e61\n"
".quad 0x737265766e693631,0x6e72654b444e4365,0x006a5f5366506c65,0x736e6f632e766e2e\n"
".quad 0x5a5f2e30746e6174,0x737265766e693631,0x6e72654b444e4365,0x006a5f5366506c65\n"
".quad 0x726168732e766e2e,0x4d37325a5f2e6465,0x6c72614365746e6f,0x636f6c42656e4f6f\n"
".quad 0x6974704f7265506b,0x6e2e006966506e6f,0x6174736e6f632e76,0x325a5f2e3631746e\n"
".quad 0x614365746e6f4d37,0x6c42656e4f6f6c72,0x704f7265506b636f,0x006966506e6f6974\n"
".quad 0x736e6f632e766e2e,0x5a5f2e30746e6174,0x4365746e6f4d3732,0x42656e4f6f6c7261\n"
".quad 0x4f7265506b636f6c,0x6966506e6f697470,0x6e6f632e766e2e00,0x003431746e617473\n"
".quad 0x2e766e2e6c65722e,0x746e6174736e6f63,0x632e766e2e003431,0x32746e6174736e6f\n"
".quad 0x6e6936315a5f0000,0x444e436573726576,0x66506c656e72654b,0x75635f5f006a5f53\n"
".quad 0x5f30326d735f6164,0x003436665f766964,0x735f616475635f5f,0x5f7063725f30326d\n"
".quad 0x5f003233665f6e72,0x6d735f616475635f,0x63726c62645f3032,0x6f6c735f6e725f70\n"
".quad 0x5f5f006874617077,0x326d735f61647563,0x36665f7063725f30,0x6f4d36315a5f0034\n"
".quad 0x6f6c72614365746e,0x3150656375646552,0x6974704f545f5f34,0x6965756c61566e6f\n"
".quad 0x6e6f4d37325a5f00,0x4f6f6c7261436574,0x506b636f6c42656e,0x6e6f6974704f7265\n"
".quad 0x36315a5f00696650,0x72614365746e6f4d,0x6c656e72654b6f6c,0x704f545f5f343150\n"
".quad 0x756c61566e6f6974,0x435f640069665065,0x65756c61566c6c61,0x6f6974704f5f6400\n"
".quad 0x000000617461446e,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000100030000,0x0000000000000000,0x0000000200030000,0x0000000000000000\n"
".quad 0x0000000300030000,0x0000000000000000,0x0000000000030000,0x0000000000000000\n"
".quad 0x0000001800030000,0x2670000000000000,0x0000001100030000,0x0000000000000000\n"
".quad 0x0000001400030000,0x0000000000000000,0x0000001900030000,0x0568000000000000\n"
".quad 0x0000000d00030000,0x0000000000000000,0x0000000f00030000,0x0758000000000000\n"
".quad 0x0000000800030000,0x0000000000000000,0x0000000b00030000,0x0380000000000000\n"
".quad 0x0000000400030000,0x0000000000000000,0x0000000700030000,0x0000000000000000\n"
".quad 0x0000000600030000,0x0000000000000000,0x0000000500030000,0x0000000000000000\n"
".quad 0x0000001000030000,0x0000000000000000,0x0000000e00030000,0x0000000000000000\n"
".quad 0x0000001300030000,0x0000000000000000,0x0000001200030000,0x0000000000000000\n"
".quad 0x0000000c00030000,0x0000000000000000,0x0000000a00030000,0x0000000000000000\n"
".quad 0x0000000900030000,0x0000000000000000,0x0000001600030000,0x0000000000000000\n"
".quad 0x0000001700030000,0x0000000000000000,0x0001001500030000,0x1be8000000000000\n"
".quad 0x001b001110120000,0x044800001be80000,0x002f001100120000,0x0230000020300000\n"
".quad 0x0046001100120000,0x0348000022600000,0x0065001100120000,0x00c8000025a80000\n"
".quad 0x0079001100120000,0x0568000000000000,0x00a0000d10120000,0x0758000000000000\n"
".quad 0x00c3000810120000,0x0380000000000000,0x00ec000410120000,0x8000000000000000\n"
".quad 0x00f8001800110000,0x0000000000000000,0x5de4001500110001,0x1c04280044040000\n"
".quad 0x9c042c0000009400,0x1c042c0000008400,0x00072c0000009806,0x5c036000000cc000\n"
".quad 0x1e03200440002006,0xdc236000c0001580,0x01e71b0e4000a191,0x1cc64000000b8000\n"
".quad 0x1cc6140008000001,0xdde4140008004002,0x9de4280040005003,0x9c4328004000a003\n"
".quad 0x1c03400040009195,0x9de45000400020f0,0xdde428000000fc00,0x1de428000000fc00\n"
".quad 0x5de428000000fc03,0xdc4328000000fc03,0x9e034000400090e5,0x9c856000c0000806\n"
".quad 0x0007800000000163,0x9c0460000008c000,0x1c01100000003933,0xdc032010000038a4\n"
".quad 0xdc23198e40000511,0x21e718a040001511,0x9de2400000078000,0xdde21994ae0bf803\n"
".quad 0x9de218ffdc551c03,0xdde21bfbe8e7bc04,0x9c011aff98b90804,0x1de2500000003903\n"
".quad 0x5de218ece600fc05,0x9c841af1eaf27805,0x1c011000000039b3,0x9de22020000048e4\n"
".quad 0xdde21b33d62eb404,0x1c0118f887c1fc04,0x1de22020000050e4,0x5de21b69b0eebc05\n"
".quad 0xdc8418f96bf60405,0x9c011406000039a6,0x1de2202800004124,0x5de21bd83e039805\n"
".quad 0x9c0118fa49f95405,0x1de2202800004124,0x5de21a3c0b599805,0x9c0118fb1c776805\n"
".quad 0x1de2202800004124,0x5de2184ee2538005,0x9c0118fbe8068005,0x1de2202800004124\n"
".quad 0x5de21874ebde2005,0x9c0118fca8068005,0x1de2202800004124,0x5de2185b0e87b005\n"
".quad 0x9c0118fd5b05b005,0x1de2202800004124,0x5de2184442458405,0x9c0118fe04444405\n"
".quad 0x1de2202800004124,0x5de2195555530405,0x9c0118fe95555405,0x1de2202800004124\n"
".quad 0x5de219555555bc05,0x9c0118ff15555405,0x1de2202800004124,0x5de2180000000005\n"
".quad 0x9c0118ff80000005,0x1c03202800004123,0x9c014800c00ff1b5,0xdc03500000003904\n"
".quad 0xde821a0ec01fe141,0x1c0140ffc00001b3,0x01e7202000004124,0x9de4400000004000\n"
".quad 0x9c1128000000fc03,0xdc23201c00003903,0x9de41b0e0000fdb1,0x9de428000000fc04\n"
".quad 0xe1e228000000fc03,0xe00218f240000004,0xc1e2080dc00000f3,0xdc02190000000004\n"
".quad 0x1c010bffc00000f3,0x9c11202400004904,0xdc81500000003903,0x9c23198edffc0101\n"
".quad 0xdc2333220000fff3,0xa00130a2400027f3,0x1df4480000004103,0x9d01400000000000\n"
".quad 0x9c03200c00003843,0x9c014800000059a5,0xdc03081e0000fce3,0x1c01188e00005d61\n"
".quad 0x9c014800000030e3,0x01e72004000038e0,0x1df44003fff62000,0x1de4400000000000\n"
".quad 0x9de4280040005000,0xdde428000000fc00,0x1de428000000fc00,0x5de428000000fc03\n"
".quad 0x1c1328000000fc03,0x1ca3500040002000,0x1c83203200000180,0x1ca5400040008000\n"
".quad 0x9ca5900000000003,0x1de7900000002000,0x0000800000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x491140862e420000,0x0c047ff00000c087,0x000400000000000c,0x0a04000000080000\n"
".quad 0x0020000000100008,0x1704000c1903000c,0x0002ffffffff000c,0x17040011f0000008\n"
".quad 0x0001ffffffff000c,0x17040011f0000004,0x0000ffffffff000c,0x0d040011f0000000\n"
".quad 0x0020002301a40008,0x440400005de40000,0x000084071c042800,0x00009406dc042c00\n"
".quad 0x000f000000072c00,0xc003fdc1dc236000,0xc00015b09e03198e,0x000e800021e76000\n"
".quad 0x080000211cc64000,0x40002000dde41400,0x080040221cc62800,0xc0000dc5de031400\n"
".quad 0xc0000c359e036000,0x00001400dde46000,0x000010009de42800,0x000018011de42800\n"
".quad 0x00001c015de42800,0x000020019de42800,0x00002401dde42800,0x000070001de42800\n"
".quad 0xc02001761c032800,0x000028021de44800,0x00002c025de42800,0x40009003dc232800\n"
".quad 0x000b800000071b0e,0x000ae00005e76000,0x400090039de44000,0x400080065c432800\n"
".quad 0x0000fc029de44000,0x0000fc02dde42800,0x0000fc031de42800,0x0000fc035de42800\n"
".quad 0x400080e69c432800,0x000001939c854000,0x0008c00000078000,0x000039339c046000\n"
".quad 0x000038841c011000,0x40000513dc03200c,0x40001513dc23198e,0x0007800025e718a2\n"
".quad 0xae0bf8039de24000,0xdc551c03dde21994,0xe8e7bc049de218ff,0x98b90804dde21bfb\n"
".quad 0x000039039c011aff,0xe600fc051de25000,0xeaf278055de218ec,0x000039b39c841af1\n"
".quad 0x000048e41c011000,0xd62eb4049de22020,0x87c1fc04dde21b33,0x000050e41c0118f8\n"
".quad 0xb0eebc051de22020,0x6bf604055de21b69,0x000039a75c8418f9,0x000041249c011406\n"
".quad 0x3e0398051de22028,0x49f954055de21bd8,0x000041249c0118fa,0x0b5998051de22028\n"
".quad 0x1c7768055de21a3c,0x000041249c0118fb,0xe25380051de22028,0xe80680055de2184e\n"
".quad 0x000041249c0118fb,0xebde20051de22028,0xa80680055de21874,0x000041249c0118fc\n"
".quad 0x0e87b0051de22028,0x5b05b0055de2185b,0x000041249c0118fd,0x424584051de22028\n"
".quad 0x044444055de21844,0x000041249c0118fe,0x555304051de22028,0x955554055de21955\n"
".quad 0x000041249c0118fe,0x5555bc051de22028,0x155554055de21955,0x000041249c0118ff\n"
".quad 0x000000051de22028,0x800000055de21800,0x000041239c0118ff,0xc00ff1d51c032028\n"
".quad 0x000039049c014800,0xc01fe143dc035000,0xc00001d3de821a0e,0x000041241c0140ff\n"
".quad 0x0000400005e72020,0x0000fc039de44000,0x000039039c112800,0x0000fdd3dc23201c\n"
".quad 0x0000fc049de41b0e,0x0000fc039de42800,0x40000004e5e22800,0xc00000f3e40218f2\n"
".quad 0x00000004c5e2080d,0xc00000f3dc021900,0x000049041c010bff,0x000039039c112024\n"
".quad 0xdffc0103dc815000,0x0000fff39c23198e,0x400027f3dc233322,0x00004103a40130a2\n"
".quad 0x000000001df44800,0x000038239d014000,0xc01001965c032008,0x0000fce39c014800\n"
".quad 0x00006993dc03081e,0x000030e31c01188e,0x000038e29c014800,0xfff6200005e72014\n"
".quad 0x000000001df44003,0x0000fc029de44000,0x0000fc02dde42800,0x0000fc031de42800\n"
".quad 0x0000fc035df42800,0x400020001c032800,0x000001731ca54800,0x000001829ca5c900\n"
".quad 0xc003fc03dc23c900,0x00005d65dc03198e,0x000061661c034800,0xfff3600005e74800\n"
".quad 0x000070001df44003,0x000ce00000072800,0x000ca00021e76000,0x0000fc1fdc034000\n"
".quad 0x0000ffffdc04207e,0xc001fc01dc2350ee,0x0001200081e71a0e,0xc0000c00a2034000\n"
".quad 0x00000022a0a56000,0x0010002220a5c100,0x00200021a0a5c100,0x0030002120a5c100\n"
".quad 0x000020a22001c100,0x0000106120014800,0x0000002220a54800,0x0020002120a5c900\n"
".quad 0x0000ffffdc04c900,0xc000fc01dc2350ee,0x0001200081e71a0e,0xc0000c00a2034000\n"
".quad 0x00000022a0a56000,0x0008002220a5c100,0x00200021a0a5c100,0x0028002120a5c100\n"
".quad 0x000020a22001c100,0x0000106120014800,0x0000002220a54800,0x0020002120a5c900\n"
".quad 0x0000ffffdc04c900,0xc0007c01dc2350ee,0x0001200081e71a0e,0xc0000c00a2034000\n"
".quad 0x00000022a0a56000,0x0004002220a5c100,0x00200021a0a5c100,0x0024002120a5c100\n"
".quad 0x000020a22001c100,0x0000106120014800,0x0000002220a54800,0x0020002120a5c900\n"
".quad 0x0000ffffdc04c900,0xc0003c01dc2350ee,0x0001200081e71a0e,0xc0000c00a2034000\n"
".quad 0x00000022a0a56000,0x0002002220a5c100,0x00200021a0a5c100,0x0022002120a5c100\n"
".quad 0x000020a22001c100,0x0000106120014800,0x0000002220a54800,0x0020002120a5c900\n"
".quad 0x0000ffffdc04c900,0xc0001c01dc2350ee,0x0001200081e71a0e,0xc0000c00a2034000\n"
".quad 0x00000022a0a56000,0x0001002220a5c100,0x00200021a0a5c100,0x0021002120a5c100\n"
".quad 0x000020a22001c100,0x0000106120014800,0x0000002220a54800,0x0020002120a5c900\n"
".quad 0x0000ffffdc04c900,0xc0000c01dc2350ee,0x0001200081e71a0e,0xc0000c00a2034000\n"
".quad 0x00000022a0a56000,0x0000802220a5c100,0x00200021a0a5c100,0x0020802120a5c100\n"
".quad 0x000020a22001c100,0x0000106120014800,0x0000002220a54800,0x0020002120a5c900\n"
".quad 0x0000ffffdc04c900,0xc0000401dc2350ee,0x0001200081e71a0e,0xc0000c00a2034000\n"
".quad 0x00000022a0a56000,0x0000402220a5c100,0x00200021a0a5c100,0x0020402120a5c100\n"
".quad 0x000020a22001c100,0x0000106120014800,0x0000002220a54800,0x0020002120a5c900\n"
".quad 0x0000ffffdc04c900,0x0000fc01dc2350ee,0x0001200081e71a0e,0xc0000c00a2034000\n"
".quad 0x00000022a0a56000,0x0000202220a5c100,0x00200021a0a5c100,0x0020202120a5c100\n"
".quad 0x000020a22001c100,0x0000106120014800,0x0000002220a54800,0x0020002120a5c900\n"
".quad 0x0000ffffdc04c900,0xc00400001c0350ee,0xc003fc01dc234800,0xfff3600001e7198e\n"
".quad 0x0000fdc1dc134003,0x0000000001e71a8e,0x000003f11ca58000,0x002003f09ca5c100\n"
".quad 0x780001b01c83c100,0x000000011ca54000,0x000020009ca59000,0x000000001de79000\n"
".quad 0x0000000000008000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x491140862e420000,0x0c047ff00000c087,0x0004000000000008\n"
".quad 0x001700080a040000,0x1903000800200000,0xffff000c17040008,0xf00000040001ffff\n"
".quad 0xffff000c17040011,0xf00000000000ffff,0x01b000080d040011,0x5de4000000200024\n"
".quad 0x5c04280044040000,0x00072c0000008404,0xdc23600000074000,0x1de4198ec003fd11\n"
".quad 0x21e7280000004400,0x9c0440000006c000,0xdde42c0000009400,0x9e03280040002000\n"
".quad 0x9c036000c0000d13,0x5e03500040009020,0xdc036000c0000c33,0x1c834800c02000e3\n"
".quad 0x0007400040008023,0xdc2370000004e000,0x05e71b0e40009003,0x9de4400000040000\n"
".quad 0x1c83280040009000,0x1de4400000003004,0x9c8328000000fc01,0x9c03400000003024\n"
".quad 0x5de44800c0400100,0x9de428000000fc01,0xdc0328000000fc02,0xdde4188e00004823\n"
".quad 0x000728000000fc02,0x25e7600000022000,0x000740000001e000,0x9ca560000001a000\n"
".quad 0x1ca5800000000100,0x9ca5800000002102,0xdc03800000400101,0xdc034800c0c00104\n"
".quad 0x9c01188e00004933,0x9ca5480000002822,0x1c01800000402100,0x9c01480000001081\n"
".quad 0x1c03480000002862,0x1c014800c0800104,0x05e7480000001021,0xdc134003fffe8000\n"
".quad 0x25e7188e00004903,0x1df4b00000000000,0x9ca5400000000000,0x9ca5800000000101\n"
".quad 0x9c01800000002100,0x1c01480000002862,0x1de7480000001021,0x1de4b00000000000\n"
".quad 0x5de428000000fc01,0x9de428000000fc01,0xdde428000000fc02,0x1de728000000fc02\n"
".quad 0x1c03b00000000000,0x9ca5480040002000,0x1ca5c900000000e2,0xdc23c900000000f1\n"
".quad 0x9c03198ec003fc03,0xdc034800000038d3,0x05e7480000003cd3,0x1df44003fffa2000\n"
".quad 0x0007280000004400,0x21e76000000ce000,0xdc034000000ca000,0xdc04207e0000301f\n"
".quad 0xdc2350ee0000ffff,0x81e71a0ec001fc01,0xa203400000012000,0x20a56000c0000c02\n"
".quad 0xa0a5c100000000a2,0xa0a5c100001000a1,0x20a5c100002000a0,0xa001c100003000a1\n"
".quad 0xa001480000001881,0xa0a5480000001020,0xa0a5c900000000a1,0xdc04c900002000a0\n"
".quad 0xdc2350ee0000ffff,0x81e71a0ec000fc01,0xa203400000012000,0x20a56000c0000c02\n"
".quad 0xa0a5c100000000a2,0xa0a5c100000800a1,0x20a5c100002000a0,0xa001c100002800a1\n"
".quad 0xa001480000001881,0xa0a5480000001020,0xa0a5c900000000a1,0xdc04c900002000a0\n"
".quad 0xdc2350ee0000ffff,0x81e71a0ec0007c01,0xa203400000012000,0x20a56000c0000c02\n"
".quad 0xa0a5c100000000a2,0xa0a5c100000400a1,0x20a5c100002000a0,0xa001c100002400a1\n"
".quad 0xa001480000001881,0xa0a5480000001020,0xa0a5c900000000a1,0xdc04c900002000a0\n"
".quad 0xdc2350ee0000ffff,0x81e71a0ec0003c01,0xa203400000012000,0x20a56000c0000c02\n"
".quad 0xa0a5c100000000a2,0xa0a5c100000200a1,0x20a5c100002000a0,0xa001c100002200a1\n"
".quad 0xa001480000001881,0xa0a5480000001020,0xa0a5c900000000a1,0xdc04c900002000a0\n"
".quad 0xdc2350ee0000ffff,0x81e71a0ec0001c01,0xa203400000012000,0x20a56000c0000c02\n"
".quad 0xa0a5c100000000a2,0xa0a5c100000100a1,0x20a5c100002000a0,0xa001c100002100a1\n"
".quad 0xa001480000001881,0xa0a5480000001020,0xa0a5c900000000a1,0xdc04c900002000a0\n"
".quad 0xdc2350ee0000ffff,0x81e71a0ec0000c01,0xa203400000012000,0x20a56000c0000c02\n"
".quad 0xa0a5c100000000a2,0xa0a5c100000080a1,0x20a5c100002000a0,0xa001c100002080a1\n"
".quad 0xa001480000001881,0xa0a5480000001020,0xa0a5c900000000a1,0xdc04c900002000a0\n"
".quad 0xdc2350ee0000ffff,0x81e71a0ec0000401,0xa203400000012000,0x20a56000c0000c02\n"
".quad 0xa0a5c100000000a2,0xa0a5c100000040a1,0x20a5c100002000a0,0xa001c100002040a1\n"
".quad 0xa001480000001881,0xa0a5480000001020,0xa0a5c900000000a1,0xdc04c900002000a0\n"
".quad 0xdc2350ee0000ffff,0x81e71a0e0000fc01,0xa203400000012000,0x20a56000c0000c02\n"
".quad 0xa0a5c100000000a2,0xa0a5c100000020a1,0x20a5c100002000a0,0xa001c100002020a1\n"
".quad 0xa001480000001881,0xa0a5480000001020,0xa0a5c900000000a1,0xdc04c900002000a0\n"
".quad 0x1c0350ee0000ffff,0xdc234800c0040000,0x01e7198ec003fc01,0xdc134003fff36000\n"
".quad 0x01e71a8e0000fd11,0x1c04800000000000,0x1ca52c0000009400,0x9ca5c100000003f1\n"
".quad 0x1c83c100002003f0,0x1ca5400078000000,0x9ca5900000000001,0x1de7900000002000\n"
".quad 0x0000800000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0c04000000000000,0x0004000000000008,0x001200080a040000\n"
".quad 0x1903000800200000,0xffff000c17040008,0xf00000040001ffff,0xffff000c17040011\n"
".quad 0xf00000000000ffff,0x01b000080d040011,0x5de4000000200024,0xdc03280044040000\n"
".quad 0x1c04190e400093f1,0x9c042c0000008400,0x01e72c0000009400,0x1de4400000374000\n"
".quad 0xdc03280040002001,0x9c037000c0600020,0x1c037000c0600040,0xdc03200000000c20\n"
".quad 0x01e71b0e4000a001,0xdde4800000000000,0x9de4280040005000,0x1de4280040002000\n"
".quad 0xdc0328004000a001,0x9c037000c0600030,0xdc437000c0600020,0x5c43400040009005\n"
".quad 0x9c03400040008006,0x1c43500000000c20,0x9e03400040009046,0x1c856000c0000825\n"
".quad 0x0007800000000170,0x9c04600000342000,0xdc01100000000131,0xdc011b0ecffc0061\n"
".quad 0x21e719a00000fc61,0x1de4400000004000,0x5df228000000fc01,0x9de21bffe0000001\n"
".quad 0xdde21ab851eb8400,0x1c0118ff6b851c00,0xdc814800eff80064,0x21e7188e00000901\n"
".quad 0x1de2400000042000,0x5de2195cdddde003,0x9de21b00e5c3a403,0xdde21b11cf1bf003\n"
".quad 0x9c01190112c84803,0x9de2500000004100,0xdde2188156291c01,0x1de21900242fc001\n"
".quad 0x5de2181c0795f401,0x9de21b00d43fbc01,0xdde21ab9528f7802,0x1c011b00ca75c002\n"
".quad 0x9de2201c000008c3,0xdde21a460540b004,0x1c011900dc555c04,0x1de2200800000861\n"
".quad 0x5de2186ca1883402,0x9c01190010364c02,0x9de2201400003022,0xdde21819541cb401\n"
".quad 0x1c011b0083c9c001,0x1de2202400001021,0x1c01180000000003,0x5de2201000002822\n"
".quad 0x1c0118ffc0000003,0x9c01200c00001021,0x9c01500000002101,0x5de4201800001020\n"
".quad 0x1de4280000001c01,0xdde4280000001801,0x9de4280000000c01,0x0007280000000801\n"
".quad 0x1df4500000676001,0xdc01400000000000,0x00071a0e0000fd01,0x21e76000002aa000\n"
".quad 0x9e01400000156000,0x00074800cffc0061,0xdc016000000a8000,0x1de41a0e0000fc61\n"
".quad 0x9de4280000001c00,0xdc01280000001800,0x21e71880dffc0061,0xdc03400000088000\n"
".quad 0x81e71a0e40001471,0xa001400000008000,0x21e25000d0d40061,0x21e41bffffef2c01\n"
".quad 0xa1e4280000001c00,0xdc02280000001800,0x01e23a003ffffc00,0x1c231bfffff00401\n"
".quad 0xdc425800c0005000,0x9c0338ffc0000030,0xdc03480000000046,0xe002198e40002431\n"
".quad 0xa0030bffc0000030,0x9c014800c00005a6,0x9c014800cffc0024,0x1c044800effc0020\n"
".quad 0x00071000000049a1,0x1c0450000074e001,0x9de2100000001131,0xdde2180000000001\n"
".quad 0x1de218ffc0000001,0x5de21a2dea2c1003,0x9e0118fb43b89403,0x9de2200c00001121\n"
".quad 0xdde21a7c099dbc03,0x9c0118fbcec99803,0x1de2200c00001861,0x5de21bfbe8e7bc05\n"
".quad 0x9c0118ff98b90805,0x1de2200800001062,0x5de218eba03c7801,0x9c0118fac4e02c01\n"
".quad 0x9f04500000002821,0x1c01180000006934,0x9c01480000001862,0x1c01500000002081\n"
".quad 0x1de2201800001841,0x5de21aa6ac255803,0x1c0118fc5d172c03,0x9de2201c00001841\n"
".quad 0xdde218b46d455003,0x1c0118fcf1c71c03,0x1de2201800001841,0x5de21a48ef9cb403\n"
".quad 0x1c0118fd89249003,0x9de2201c00001841,0xdde21a66668f1003,0x1c0118fe26666403\n"
".quad 0x1de2201800001841,0x5de2195555555003,0x1c0118fed5555403,0x9c01201c00001841\n"
".quad 0x1d01201800001843,0x1e04480000002021,0x9c01180000006933,0x1c01500000003861\n"
".quad 0x9c01480000001041,0x9e012010000050c3,0x1c01200800000880,0x9c01500000001881\n"
".quad 0x9c01201c00005121,0x1d012008000008a0,0x9de2480000002061,0xdde218ece600fc01\n"
".quad 0x9d0118f1eaf27801,0x9c01480000001020,0x9c112004000018c0,0xdc814800000008e1\n"
".quad 0x01e7198edffc0061,0x9c11400000002000,0xdc01480000001861,0x21e7190e0000fc61\n"
".quad 0x9de4400000004000,0xddf228000000fc01,0xdc011bffc0000001,0xa1e4190edffc0061\n"
".quad 0xe1e228000000fc01,0x1df41bffe0000001,0xde01400000000000,0x1d041a0e0000fc61\n"
".quad 0xde011000000019b1,0xdde41880dffc0061,0x21e7280000001400,0xdc03400000086000\n"
".quad 0x81e71a0e40001451,0x2201400000006000,0xa1e25000d0d40061,0xe1e41bffffef2c00\n"
".quad 0x1c02280000001400,0x81e23a003ffffc30,0x5c421bfffff00400,0x1c2338ffc0000001\n"
".quad 0xdc035800c0005030,0x9c03198e40002451,0x6002480000000026,0xa0030bffc0000051\n"
".quad 0x9c014800c00005a6,0x9c014800cffc0040,0x1c044800effc0044,0x00071000000009a1\n"
".quad 0x1c045000006a8001,0x9de2100000001131,0xdde2180000000001,0x9de218ffc0000001\n"
".quad 0xdde21a2dea2c1002,0x9e0118fb43b89402,0x1de2200c00001020,0x5de21a7c099dbc03\n"
".quad 0x9c0118fbcec99803,0x1de2200400000820,0x5de21bfbe8e7bc05,0x1c0118ff98b90805\n"
".quad 0x9de2200800001022,0xdde218eba03c7800,0x1c0118fac4e02c00,0x9f04500000002121\n"
".quad 0x9c01180000006933,0x1c01480000001041,0x9c01500000001861,0x9de2201400001020\n"
".quad 0xdde21aa6ac255802,0x9c0118fc5d172c02,0x1de2201800001020,0x5de218b46d455003\n"
".quad 0x9c0118fcf1c71c03,0x9de2201400001020,0xdde21a48ef9cb402,0x9c0118fd89249002\n"
".quad 0x1de2201800001020,0x5de21a66668f1003,0x9c0118fe26666403,0x9de2201400001020\n"
".quad 0xdde2195555555002,0x9c0118fed5555402,0x1c01201800001020,0x9d01201400001023\n"
".quad 0x9e04480000001920,0x1c01180000006932,0x9c01500000003041,0x1c01480000000820\n"
".quad 0x1c01200c000050a3,0x9e01500000001061,0x9c01200400004860,0x9c012018000050e3\n"
".quad 0x1d01200800000880,0x9de24800000018e1,0xdde218ece600fc01,0x9d0118f1eaf27801\n"
".quad 0x9c01480000001020,0x9c112004000018a0,0xdc814800000008c0,0x01e7198edffc0061\n"
".quad 0x9c01400000004000,0x9d14480000001860,0xde011000000009b0,0x21e7190e0000fc61\n"
".quad 0x9de4400000004000,0xddf228000000fc00,0xde011bffc0000000,0x21e7190edffc0061\n"
".quad 0x9d14400000002000,0x9de41000000019b0,0xddf228000000fc00,0xdc011bffe0000000\n"
".quad 0x5de41a0e0000fc61,0x0007280000001c01,0xdc016000000a0000,0x21e71880dffc0061\n"
".quad 0xdc03400000086000,0x81e71a0e40001471,0x2001400000006000,0xa1e25000d0d40061\n"
".quad 0xa1e41bffffef2c00,0x1c02280000001001,0x81e23a003ffffc50,0xdc421bfffff00400\n"
".quad 0x1c2338ffc0000001,0xdc035800c0005050,0x9c03198e40002471,0xe002480000000026\n"
".quad 0xa0030bffc0000071,0x9c014800c00005a6,0x9c014800cffc0060,0x1c044800effc0064\n"
".quad 0x00071000000009a1,0x1c045000005fe001,0x9de2100000001131,0xdde2180000000001\n"
".quad 0x9de218ffc0000001,0xdde21a2dea2c1002,0x9e0118fb43b89402,0x1de2200c00001020\n"
".quad 0x5de21a7c099dbc03,0x9c0118fbcec99803,0x1de2200400000820,0x5de21bfbe8e7bc05\n"
".quad 0x1c0118ff98b90805,0x9de2200800001022,0xdde218eba03c7800,0x1c0118fac4e02c00\n"
".quad 0x9f04500000002121,0x9c01180000006933,0x1c01480000001041,0x9c01500000001861\n"
".quad 0x9de2201400001020,0xdde21aa6ac255802,0x9c0118fc5d172c02,0x1de2201800001020\n"
".quad 0x5de218b46d455003,0x9c0118fcf1c71c03,0x9de2201400001020,0xdde21a48ef9cb402\n"
".quad 0x9c0118fd89249002,0x1de2201800001020,0x5de21a66668f1003,0x9c0118fe26666403\n"
".quad 0x9de2201400001020,0xdde2195555555002,0x9c0118fed5555402,0x1c01201800001020\n"
".quad 0x9d01201400001023,0x9e04480000001920,0x1c01180000006932,0x9c01500000003041\n"
".quad 0x1c01480000000820,0x1c01200c000050a3,0x9e01500000001061,0x9c01200400004860\n"
".quad 0x9c012018000050e3,0x1d01200800000880,0x9de24800000018e1,0xdde218ece600fc01\n"
".quad 0x9d0118f1eaf27801,0x9c01480000001020,0x9c112004000018a0,0xdc814800000008c1\n"
".quad 0x01e7198edffc0061,0x9c11400000002000,0xdc01480000001861,0x21e7190e0000fc61\n"
".quad 0x9de4400000004000,0xddf228000000fc01,0xdc011bffc0000001,0xa1e4190edffc0061\n"
".quad 0xe1e228000000fc01,0x1df41bffe0000001,0xde01400000000000,0x1d041a0e0000fc61\n"
".quad 0xde011000000019b2,0x1de41880dffc0061,0xdde4280000002001,0x21e7280000002400\n"
".quad 0xdc03400000086000,0x81e71a0e40001491,0x2201400000006000,0xa1e25000d0d40061\n"
".quad 0xe1e41bffffef2c00,0x1c02280000001400,0x81e23a003ffffc30,0x5c421bfffff00400\n"
".quad 0x1c2338ffc0000001,0xdc035800c0005030,0x9c03198e40002451,0x6002480000000026\n"
".quad 0xa0030bffc0000051,0x9c014800c00005a6,0x9c014800cffc0040,0x1c044800effc0044\n"
".quad 0x00071000000009a1,0x1c04500000556001,0x9de2100000001131,0xdde2180000000001\n"
".quad 0x9de218ffc0000001,0xdde21a2dea2c1002,0x9e0118fb43b89402,0x1de2200c00001020\n"
".quad 0x5de21a7c099dbc03,0x9c0118fbcec99803,0x1de2200400000820,0x5de21bfbe8e7bc05\n"
".quad 0x1c0118ff98b90805,0x9de2200800001022,0xdde218eba03c7800,0x1c0118fac4e02c00\n"
".quad 0x9f04500000002121,0x9c01180000006933,0x1c01480000001041,0x9c01500000001861\n"
".quad 0x9de2201400001020,0xdde21aa6ac255802,0x9c0118fc5d172c02,0x1de2201800001020\n"
".quad 0x5de218b46d455003,0x9c0118fcf1c71c03,0x9de2201400001020,0xdde21a48ef9cb402\n"
".quad 0x9c0118fd89249002,0x1de2201800001020,0x5de21a66668f1003,0x9c0118fe26666403\n"
".quad 0x9de2201400001020,0xdde2195555555002,0x9c0118fed5555402,0x1c01201800001020\n"
".quad 0x9d01201400001023,0x9e04480000001920,0x1c01180000006932,0x9c01500000003041\n"
".quad 0x1c01480000000820,0x1c01200c000050a3,0x9e01500000001061,0x9c01200400004860\n"
".quad 0x9c012018000050e3,0x1d01200800000880,0x9de24800000018e1,0xdde218ece600fc01\n"
".quad 0x9d0118f1eaf27801,0x9c01480000001020,0x9c112004000018a0,0xdc814800000008c0\n"
".quad 0x01e7198edffc0061,0x9c01400000004000,0x9d14480000001860,0xde011000000009b0\n"
".quad 0x21e7190e0000fc61,0x9de4400000004000,0xddf228000000fc00,0xde011bffc0000000\n"
".quad 0x8104190edffc0061,0xa1e41000000019b0,0xe1e228000000fc00,0x1df41bffe0000000\n"
".quad 0x1de2400000000000,0x5de218280b56b401,0x1de218fa6a4f1401,0x5de219c26ded5802\n"
".quad 0x9de218fa4d875402,0xdde21817d6082001,0x1c0118fc037ac801,0x1de2201000000842\n"
".quad 0x5de21a82a6211801,0x1c0118fce798b801,0x9de2200c00002022,0xdde21b94f99e1401\n"
".quad 0x1c0118fdbdd90c01,0x1de2200800002022,0x5de219cf9108dc01,0x1c0118fe713ab401\n"
".quad 0x9de2200c00002022,0xdde21899a41a1801,0x1c0118ff12541c01,0x1de2200800002022\n"
".quad 0x5de21b3e2f04c401,0x9c0118ffbcf31801,0x1de2200c00002021,0x5de21b0f900db402\n"
".quad 0x1c0118ff5664c802,0xdc01200800001821,0x9c01188e0000fd01,0x1d04201000001020\n"
".quad 0x1c041000000009b1,0x5c14200000000841,0x1c04200000000c51,0xdc031000000011a0\n"
".quad 0x1c85480000005975,0xdc03900000000190,0x5c03188e00006171,0x21e7480000005996\n"
".quad 0x1de740000037c000,0x1de44003ffcac000,0xdc03280040002001,0x9c037000c0600020\n"
".quad 0x9c037000c0600040,0xdc03200000000c25,0x01e71b0e4000a161,0x9de4800000000000\n"
".quad 0x1de4280040005000,0x9de4280040002000,0x9c0328004000a001,0x1c037000c0600020\n"
".quad 0xdc037000c0600000,0xdc434800c0000460,0x9c03400040008165,0x1c04500000000806\n"
".quad 0x1c43180000000d31,0x5e03400040008066,0x00076000c00009a6,0x9de45000005c8001\n"
".quad 0xdde4280000001000,0x1c03280000001400,0x00074800c0000560,0x1c04600000342000\n"
".quad 0x9c01180000000131,0xdc01500000000841,0xdc011b0ecffc0061,0x21e719a00000fc61\n"
".quad 0x1de4400000004000,0x5df228000000fc01,0x1de21bffe0000001,0x5de21ab851eb8402\n"
".quad 0x1c0118ff6b851c02,0xdc814800eff80064,0x21e7188e00002101,0x1de2400000042000\n"
".quad 0x5de2195cdddde001,0x9de21b00e5c3a401,0xdde21b11cf1bf003,0x9de2190112c84803\n"
".quad 0xdde2188156291c02,0x1c011900242fc002,0x1de2500000004102,0x5de2181c0795f403\n"
".quad 0x9de21b00d43fbc03,0xdde21ab9528f7801,0x1c011b00ca75c001,0x9de2201c00002041\n"
".quad 0x9c01186ca1883403,0x1de22018000020a2,0x5de21a460540b003,0xdde21900dc555c03\n"
".quad 0x9c01190010364c03,0x1de2200c00001081,0x5de21819541cb401,0x9c011b0083c9c001\n"
".quad 0x1de2201800002882,0x9c01180000000003,0x5de2201c00001881,0x1c0118ffc0000003\n"
".quad 0x9c01200800002881,0x1c01500000001901,0x5de4201800001082,0x1de4280000001c01\n"
".quad 0xdde4280000001801,0x9de4280000002401,0x0007280000002001,0x1df45000002f8001\n"
".quad 0xdc01400000000000,0x00071a0e0000fd01,0x21e76000002a8000,0x9e01400000154000\n"
".quad 0x00074800cffc0061,0xdc016000000a4000,0x5de41a0e0000fc61,0xdc01280000001c01\n"
".quad 0x21e71880dffc0061,0xdc03400000086000,0x81e71a0e40001471,0xa001400000006000\n"
".quad 0x21e25000d0d40061,0x61e41bffffef2c01,0x1c02280000001c01,0x01e23a003ffffc50\n"
".quad 0xdc421bfffff00401,0x1c2338ffc0000001,0xdc035800c0005050,0xdc03198e40002471\n"
".quad 0xe002480000000046,0xe0030bffc0000071,0x9c014800c00005b6,0x1c014800cffc0064\n"
".quad 0x1c044800effc0065,0x00071000000049a1,0x1c045000003d4001,0x9de2100000001131\n"
".quad 0xdde2180000000001,0x9de218ffc0000001,0xdde218eba03c7802,0x9e0118fac4e02c02\n"
".quad 0x1de2200c00001121,0x5de21a2dea2c1003,0x9c0118fb43b89403,0x9de2200c00001861\n"
".quad 0xdde2195555555003,0x9c0118fed5555403,0x1c01200800001061,0x1c01500000001941\n"
".quad 0x1c01480000001041,0x9c01500000001042,0x1de22018000020a2,0x5de21a7c099dbc03\n"
".quad 0x9c0118fbcec99803,0x1de22018000020a2,0x5de21aa6ac255803,0x9c0118fc5d172c03\n"
".quad 0x1de22018000020a2,0x5de218b46d455003,0x9c0118fcf1c71c03,0x1de22018000020a2\n"
".quad 0x5de21a48ef9cb403,0x9c0118fd89249003,0x1de22018000020a2,0x5de21a66668f1003\n"
".quad 0x9c0118fe26666403,0x1d012018000020a2,0x9c01480000001143,0x1c01201c000020a2\n"
".quad 0x9e044800000030c3,0x1c01180000006d33,0x1e01500000002882,0x9de2201800005043\n"
".quad 0x1c011bfbe8e7bc02,0xdde2500000002042,0x1c0118ff98b90802,0x1f04201000003062\n"
".quad 0x9c01180000006d33,0x9c012008000028e1,0x1d01200c000028c2,0x9de24800000010a1\n"
".quad 0xdde218ece600fc02,0x1d0118f1eaf27802,0x1c01480000001081,0x9c112008000028e1\n"
".quad 0xdc81480000001061,0x01e7198edffc0061,0x9c11400000002000,0xdc01480000001861\n"
".quad 0x21e7190e0000fc61,0x9de4400000004000,0xddf228000000fc01,0xdc011bffc0000001\n"
".quad 0xa1e4190edffc0061,0xe1e228000000fc01,0x1df41bffe0000001,0xde01400000000000\n"
".quad 0x9d041a0e0000fc61,0xde011000000019b2,0x1de41880dffc0061,0x1de4280000002801\n"
".quad 0x21e7280000002c02,0xdc03400000086000,0x81e71a0e400014b1,0x2201400000006000\n"
".quad 0xa1e25000d0d40061,0x21e41bffffef2c01,0x1c02280000001402,0x81e23a003ffffc80\n"
".quad 0x5c421bfffff00401,0x1c2338ffc0000001,0xdc035800c0005080,0xdc03198e40002451\n"
".quad 0x6002480000000066,0xe0030bffc0000051,0x9c014800c00005b6,0x1c014800cffc0044\n"
".quad 0x1c044800effc0045,0x00071000000049a1,0x1c0450000032c001,0x9de2100000001131\n"
".quad 0xdde2180000000001,0x9de218ffc0000001,0xdde218eba03c7802,0x9e0118fac4e02c02\n"
".quad 0x1de2200c00001121,0x5de21a2dea2c1003,0x9c0118fb43b89403,0x9de2200c00001861\n"
".quad 0xdde2195555555003,0x9c0118fed5555403,0x1c01200800001061,0x1c01500000001941\n"
".quad 0x1c01480000001041,0x9c01500000001042,0x1de22018000020a2,0x5de21a7c099dbc03\n"
".quad 0x9c0118fbcec99803,0x1de22018000020a2,0x5de21aa6ac255803,0x9c0118fc5d172c03\n"
".quad 0x1de22018000020a2,0x5de218b46d455003,0x9c0118fcf1c71c03,0x1de22018000020a2\n"
".quad 0x5de21a48ef9cb403,0x9c0118fd89249003,0x1de22018000020a2,0x5de21a66668f1003\n"
".quad 0x9c0118fe26666403,0x1d012018000020a2,0x9c01480000001143,0x1c01201c000020a2\n"
".quad 0x9e044800000030c3,0x1c01180000006d33,0x1e01500000002882,0x9de2201800005043\n"
".quad 0x1c011bfbe8e7bc02,0xdde2500000002042,0x1c0118ff98b90802,0x1f04201000003062\n"
".quad 0x9c01180000006d33,0x9c012008000028e1,0x1d01200c000028c2,0x9de24800000010a1\n"
".quad 0xdde218ece600fc02,0x1d0118f1eaf27802,0x1c01480000001081,0x1c112008000028e1\n"
".quad 0xdc81480000001061,0x01e7198edffc0061,0x1c01400000004000,0x1d14480000001861\n"
".quad 0xde011000000011b1,0x21e7190e0000fc61,0x1de4400000004000,0x5df228000000fc01\n"
".quad 0xde011bffc0000001,0x21e7190edffc0061,0x1d14400000002000,0x1de41000000019b1\n"
".quad 0x5df228000000fc01,0xdc011bffe0000001,0x5de41a0e0000fc61,0x0007280000001c01\n"
".quad 0xdc016000000a0000,0x21e71880dffc0061,0xdc03400000086000,0x81e71a0e40001471\n"
".quad 0xa001400000006000,0x21e25000d0d40061,0x61e41bffffef2c01,0x1c02280000001c01\n"
".quad 0x01e23a003ffffc50,0xdc421bfffff00401,0x1c2338ffc0000001,0xdc035800c0005050\n"
".quad 0xdc03198e40002471,0xe002480000000046,0xe0030bffc0000071,0x9c014800c00005b6\n"
".quad 0x1c014800cffc0064,0x1c044800effc0065,0x00071000000049a1,0x1c04500000282001\n"
".quad 0x9de2100000001131,0xdde2180000000001,0x9de218ffc0000001,0xdde218eba03c7802\n"
".quad 0x9e0118fac4e02c02,0x1de2200c00001121,0x5de21a2dea2c1003,0x9c0118fb43b89403\n"
".quad 0x9de2200c00001861,0xdde2195555555003,0x9c0118fed5555403,0x1c01200800001061\n"
".quad 0x1c01500000001941,0x1c01480000001041,0x9c01500000001042,0x1de22018000020a2\n"
".quad 0x5de21a7c099dbc03,0x9c0118fbcec99803,0x1de22018000020a2,0x5de21aa6ac255803\n"
".quad 0x9c0118fc5d172c03,0x1de22018000020a2,0x5de218b46d455003,0x9c0118fcf1c71c03\n"
".quad 0x1de22018000020a2,0x5de21a48ef9cb403,0x9c0118fd89249003,0x1de22018000020a2\n"
".quad 0x5de21a66668f1003,0x9c0118fe26666403,0x1d012018000020a2,0x9c01480000001143\n"
".quad 0x1c01201c000020a2,0x9e044800000030c3,0x1c01180000006d33,0x1e01500000002882\n"
".quad 0x9de2201800005043,0x1c011bfbe8e7bc02,0xdde2500000002042,0x1c0118ff98b90802\n"
".quad 0x1f04201000003062,0x9c01180000006d33,0x9c012008000028e1,0x1d01200c000028c2\n"
".quad 0x9de24800000010a1,0xdde218ece600fc02,0x1d0118f1eaf27802,0x1c01480000001081\n"
".quad 0x9c112008000028e1,0xdc81480000001061,0x01e7198edffc0061,0x9c11400000002000\n"
".quad 0xdc01480000001861,0x21e7190e0000fc61,0x9de4400000004000,0xddf228000000fc01\n"
".quad 0xdc011bffc0000001,0xa1e4190edffc0061,0xe1e228000000fc01,0x1df41bffe0000001\n"
".quad 0xde01400000000000,0x9d041a0e0000fc61,0xde011000000019b2,0x1de41880dffc0061\n"
".quad 0x1de4280000002801,0x21e7280000002c02,0xdc03400000086000,0x81e71a0e400014b1\n"
".quad 0x2201400000006000,0xa1e25000d0d40061,0x21e41bffffef2c01,0x1c02280000001402\n"
".quad 0x81e23a003ffffc80,0x5c421bfffff00401,0x1c2338ffc0000001,0xdc035800c0005080\n"
".quad 0xdc03198e40002451,0x6002480000000066,0xe0030bffc0000051,0x9c014800c00005b6\n"
".quad 0x1c014800cffc0044,0x1c044800effc0045,0x00071000000049a1,0x1c045000001da001\n"
".quad 0x9de2100000001131,0xdde2180000000001,0x9de218ffc0000001,0xdde218eba03c7802\n"
".quad 0x9e0118fac4e02c02,0x1de2200c00001121,0x5de21a2dea2c1003,0x9c0118fb43b89403\n"
".quad 0x9de2200c00001861,0xdde2195555555003,0x9c0118fed5555403,0x1c01200800001061\n"
".quad 0x1c01500000001941,0x1c01480000001041,0x9c01500000001042,0x1de22018000020a2\n"
".quad 0x5de21a7c099dbc03,0x9c0118fbcec99803,0x1de22018000020a2,0x5de21aa6ac255803\n"
".quad 0x9c0118fc5d172c03,0x1de22018000020a2,0x5de218b46d455003,0x9c0118fcf1c71c03\n"
".quad 0x1de22018000020a2,0x5de21a48ef9cb403,0x9c0118fd89249003,0x1de22018000020a2\n"
".quad 0x5de21a66668f1003,0x9c0118fe26666403,0x1d012018000020a2,0x9c01480000001143\n"
".quad 0x1c01201c000020a2,0x9e044800000030c3,0x1c01180000006d33,0x1e01500000002882\n"
".quad 0x9de2201800005043,0x1c011bfbe8e7bc02,0xdde2500000002042,0x1c0118ff98b90802\n"
".quad 0x1f04201000003062,0x9c01180000006d33,0x9c012008000028e1,0x1d01200c000028c2\n"
".quad 0x9de24800000010a1,0xdde218ece600fc02,0x1d0118f1eaf27802,0x1c01480000001081\n"
".quad 0x1c112008000028e1,0xdc81480000001061,0x01e7198edffc0061,0x1c01400000004000\n"
".quad 0x1d14480000001861,0xde011000000011b1,0x21e7190e0000fc61,0x1de4400000004000\n"
".quad 0x5df228000000fc01,0xde011bffc0000001,0x0104190edffc0061,0x21e41000000019b1\n"
".quad 0x61e228000000fc01,0x1df41bffe0000001,0x9de2400000000000,0xdde218280b56b401\n"
".quad 0x9de218fa6a4f1401,0xdde219c26ded5802,0x1de218fa4d875402,0x5de21817d6082002\n"
".quad 0x9c0118fc037ac802,0x9de2201400001062,0xdde21a82a6211801,0x9c0118fce798b801\n"
".quad 0x1de2201000002842,0x5de21b94f99e1402,0x9c0118fdbdd90c02,0x9de2200c00002842\n"
".quad 0xdde219cf9108dc01,0x9c0118fe713ab401,0x1de2201000002842,0x5de21899a41a1802\n"
".quad 0x9c0118ff12541c02,0x9de2200c00002842,0xdde21b3e2f04c401,0x1c0118ffbcf31801\n"
".quad 0x9de2201000002842,0xdde21b0f900db402,0x9c0118ff5664c802,0xdc01200c00002041\n"
".quad 0x1c01188e0000fd01,0x9d04201400001841,0x1c041000000011b1,0x5c14200000001061\n"
".quad 0x1c04200000001471,0x9c031000000011a0,0x1c854800000059a5,0xdc03900000000170\n"
".quad 0xdc03480000006575,0x01e7188e00006171,0x1de74003ffcae000,0x1c03800000000000\n"
".quad 0x1c036000c0000472,0x9de46000c0000450,0x1c03280000001002,0x1c035800c0005488\n"
".quad 0xdde45800c0005400,0x5c03280000001402,0x1c034800fffffe03,0x1de44800fffffc03\n"
".quad 0xdc03280000001802,0x5de41a0ec01ff4d1,0xdc03280000001c02,0x21e71a20c01ff4c1\n"
".quad 0xdc81400000056000,0x01e7198edffc00a1,0x5c42400000004000,0x1de7380020000051\n"
".quad 0xdc814000000ee000,0x01e7198edffc0081,0x5c42400000006000,0x1de4380020000071\n"
".quad 0x1de7280000001801,0xdc014000000e4000,0xdc01190e0000fca3,0xdc04190e0000fc85\n"
".quad 0x01e70c0e00000811,0xdc81400000008000,0xdc81190edffc00a7,0x2de7190edffc0081\n"
".quad 0x21e7400000008000,0x1de4400000006000,0x5de228000000fc01,0x1de71bffe0000001\n"
".quad 0xdc044000000ce000,0x21e70c0e00004401,0x1c83400000008000,0x1de4680000001470\n"
".quad 0x5c0228000000fc01,0x1de73a0000000001,0xdc044000000c2000,0x21e70c0e00004831\n"
".quad 0x1c8340000000a000,0x1de4680000001470,0x1c0228000000fc01,0x5c423a0000000000\n"
".quad 0x1de739ffc0000001,0xdc234000000b4000,0x81e71b0e0000fcc1,0x2001400000004000\n"
".quad 0x61e25000d0d400a1,0x41e41bffffff2808,0xdc2328000000fc08,0x01e71b0e0000fcd1\n"
".quad 0x9c01400000008000,0x5c035000d0d40081,0x1de74800c000da18,0x5de4400000002000\n"
".quad 0x1c0328000000fc08,0x9de24800fff00602,0x1de2180000000403,0xde83180000000003\n"
".quad 0x5de2410000001c81,0x1c0318ffc0000003,0xdc004800fff00402,0x5e83c80000001873\n"
".quad 0x9e01410000001481,0x1c01201800003862,0x9c01201c000038a2,0x9c015000000028a2\n"
".quad 0x1c01500000003843,0x9e012010000020a2,0x1e01200800003862,0x9c01201800002063\n"
".quad 0x1c01201c000020a2,0x5d032010000020c2,0x9e01480000008003,0x1c01200800002861\n"
".quad 0x1c03201400002061,0x1c036000c0000453,0x1c035800c00054c0,0x1c034800000000d3\n"
".quad 0x1c034800000084c8,0xdc034800fffffe03,0x01e71a0ec01ff4c1,0x1d03400000006000\n"
".quad 0x5e83480000000200,0x1de7400000001401,0x1c03400000062000,0xdc234800fff00600\n"
".quad 0x01e7198ec00ffc01,0x1c02400000008000,0x1de43a0000000050,0x5c4228000000fc01\n"
".quad 0x1de739ffc0000001,0xdc23400000054000,0x5c021b0effef3001,0x01e73a0000000051\n"
".quad 0x1de4400000004000,0x1de728000000fc01,0x1c0140000004a000,0x1f84209400002063\n"
".quad 0x9c011c0000008120,0x9c01211400002063,0xdc23219400002062,0xdc01198ec0007c01\n"
".quad 0x1c021a8e000038c3,0x5de438003ffffcb1,0x1c42280000002802,0x81e7380040000042\n"
".quad 0x228440000000a000,0x61e41c00ffff8120,0xe023280000002002,0x22031aa20000fca3\n"
".quad 0x21e4480000000200,0xdc2328000000fc02,0x81e7190e0000fc01,0x220340000000e000\n"
".quad 0xe0034800c0008001,0xa003580000000091,0x2003600000001091,0x2003600000001081\n"
".quad 0xe023580000000082,0x60431aa20000fc63,0x1c03680000001072,0x1c035800c0000490\n"
".quad 0x1c436000c0007c81,0x1c03680000001001,0x9c036800c0000490,0xdc236800c0000441\n"
".quad 0x9c031aa20000fc61,0xdc235800c0000481,0xa1e71a800000fc01,0x0003400000006000\n"
".quad 0x00034800c0000441,0x80234800c0000460,0x5c43310800001801,0x1de7680000001851\n"
".quad 0x1c03900000000000,0x1c036000c0000440,0x5c035800c0006000,0x5c044800c0000c01\n"
".quad 0xdc031c0000001421,0x01e7198ec0000c51,0x1c00400000008000,0x1c00c80000001040\n"
".quad 0x1e00300080003441,0x1de7300000001001,0xdc03400000076000,0x01e71a8e0000fc01\n"
".quad 0x1c02400000030000,0x5c033801fffffc40,0x5e03780000000001,0x9c034800c0007c51\n"
".quad 0xdc034800ffffdc51,0x01e7198ec0000461,0x1c00400000004000,0x1de7c80000001041\n"
".quad 0x9c03400000062000,0x1c024800ffffe051,0x1c033a0000000041,0x1c02600000001800\n"
".quad 0x1c423801fffffc00,0x9c0038fe00000000,0x1c00c80000001001,0x1e00300c80003400\n"
".quad 0x1c02300c00000060,0x9c033801fffffc00,0x5d03110e0000fc01,0x5c03480000001851\n"
".quad 0x5c034800c003d051,0x1c436000c0005c51,0x1c43680000001441,0x1de7680000001001\n"
".quad 0x5c03400000042000,0xdc034800fffc0c01,0x01e71a0ec0000451,0x9c0240000003a000\n"
".quad 0xdde23801fffffc41,0x1c02180000000c02,0xdc423a0000000041,0xdc0338fe00000061\n"
".quad 0x1c006000000014b2,0xdc00c80000001072,0x5e00301080003471,0x1e00309000001c82\n"
".quad 0x9c02311000001c82,0xdc003801fffffc92,0x9c422e8e00002091,0x1c043802000000a2\n"
".quad 0xdc032010c00007f2,0xdc036800000028b1,0x5c03580000001471,0x5c03680000002851\n"
".quad 0x5c436800c0000872,0x1c03680000001481,0xdc034800fffc1002,0x1c031a8e0000fc91\n"
".quad 0xdc036800c0000470,0x5c031aa00000fc51,0xdc235800000020a1,0x40031a800000fc01\n"
".quad 0x1c034800c0000451,0x1c036000c0000450,0x1c43310c00001400,0x1de7680000001001\n"
".quad 0x1c00400000002000,0x1de7c80000001041,0xdd03900000000000,0x1c0248010000fc4f\n"
".quad 0x9de439fffffffc50,0x0007280000001001,0xdc436000000c4000,0x01e71a0ed0000001\n"
".quad 0x1c02400000006000,0x9de43a0000000050,0xdc5228000000fc01,0xdd0339ffc0000001\n"
".quad 0xdc434801fffffc4f,0x01e71a0e40001401,0x1c0140000002c000,0x9c045000dff40041\n"
".quad 0xdc801006000011a1,0x1c00208ec0200061,0xa1e7c80000001060,0x0000400000006000\n"
".quad 0x00005800d2e00060,0x0000c80000001000,0xdc805800d2e00000,0xa1e7220edfa00061\n"
".quad 0x0000400000006000,0x00005800cfa00060,0x0000c80000001000,0x9c045800cfa00000\n"
".quad 0x9de2100000000131,0xdde2180000000002,0x1e0118ffc0000002,0x1c01201400001062\n"
".quad 0x9c01201000002082,0x1e01200c00002061,0x1c01201400001061,0x9c11200c00001061\n"
".quad 0xdd035000dff40041,0xdc434801fffffc4f,0x01e71a0e40004401,0x1c02400000030000\n"
".quad 0xdc4238003ffffc50,0x1c0438ffc0000001,0xdc801006000019a1,0x1c00208ec0200041\n"
".quad 0xa1e7c80000001040,0x0000400000006000,0x00005800d2e00040,0x0000c80000001000\n"
".quad 0xdc805800d2e00000,0xa1e7220edfa00041,0x0000400000006000,0x00005800cfa00040\n"
".quad 0x0000c80000001000,0x1c045800cfa00000,0x1de2100000000132,0x5de2180000000003\n"
".quad 0x1e0318ffc0000003,0x9e01480000001c50,0x9c01201800001882,0x1c012014000028a2\n"
".quad 0x9e01201000002882,0x9c01201800001882,0xdc13201000002881,0xdd03480000000071\n"
".quad 0xdc434801fffffc4f,0x01e71a0e40005401,0x1c0240000003e000,0x9de438003ffffc50\n"
".quad 0xdc42280000001001,0x1c0438ffc0000001,0xdc801006000019a2,0x1c00208ec0200081\n"
".quad 0xa1e7c80000001080,0x0000400000006000,0x00005800d2e00080,0x0000c80000001000\n"
".quad 0xdc805800d2e00000,0xa1e7220edfa00081,0x0000400000006000,0x00005800cfa00080\n"
".quad 0x0000c80000001000,0x9c045800cfa00000,0x1de2100000000132,0x5de2180000000002\n"
".quad 0x1d0318ffc0000002,0x1e01480000001470,0x1c012010000018a3,0x9c012018000030c3\n"
".quad 0x1de42014000030a2,0x5c0228000000fc03,0x9e01090000000003,0x1c012010000018a1\n"
".quad 0x9c015000cff800c3,0x9c012194000018a1,0x1e0121fe00003061,0x1c01201000001061\n"
".quad 0x9c11200800001041,0xdd03200c00001061,0xdc4348010000fc4f,0xe0021a8e40006401\n"
".quad 0xa1e43a0000000051,0xc04228000000fc01,0x81e4380020000051,0x1df4280000001001\n"
".quad 0x1de4400000000000,0x5de4280000001801,0x1de7280000001c01,0x1c02900000000000\n"
".quad 0x9de438003ffffc50,0xdde2280000001002,0xdc4218ffc0000001,0x1c4238ffc0000002\n"
".quad 0x9c0438f240000000,0x1c001006000029a1,0x9de2c80000001062,0x1c04180000000001\n"
".quad 0x1e01100000002132,0x9e03200c00002883,0x1c01480000002c52,0x1c012018000030c3\n"
".quad 0x5c03201000003082,0x9e01480000002892,0xdd03218c00001081,0x9c0248010000184f\n"
".quad 0xdc4339fffffffc71,0x21e7198e00001801,0x0007400000006000,0x1de45003fff06001\n"
".quad 0x5de4280000001002,0x1de4280000001402,0x5de4280000002001,0x1de7280000002401\n"
".quad 0x0000900000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0xffff000000010000,0x00003ff6a09e000f\n"
".quad 0xffff7fcfffffbf80,0x0c047ff000007fef,0x000400000000000c,0x0a04000000080000\n"
".quad 0x0020000000140008,0x1704000c1903000c,0x0002ffffffff000c,0x17040011f0000008\n"
".quad 0x0001ffffffff000c,0x17040011f0000004,0x0000ffffffff000c,0x0d040011f0000000\n"
".quad 0x0020002401b00008,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x1204000023010000,0x0000000000220008\n"
".quad 0x0022000811040000,0x1204000000000000,0x0000000000210008,0x0021000811040000\n"
".quad 0x1204000000000000,0x0000000000200008,0x0020000811040000,0x1204000000000000\n"
".quad 0x00000000001f0008,0x001f000811040000,0x1204000000000000,0x00000000001e0008\n"
".quad 0x001e000811040000,0x1204000000000000,0x00000000001d0008,0x001d000811040000\n"
".quad 0x1204000000000000,0x00000000001c0008,0x001c000811040000,0x1204000000000000\n"
".quad 0x00000000001b0008,0x001b000811040000,0x0000000000000000,0x000144b800000006\n"
".quad 0x0000000000000000,0x0000012000000120,0x0000000400000005,0x00000b1660000000\n"
".quad 0x0000000000000000,0x0000041400000414,0x0000000400002205,0x00000f2a60000000\n"
".quad 0x0000000000000000,0x000007d4000007d4,0x0000000400002105,0x000016fe60000000\n"
".quad 0x0000000000000000,0x0000100000000000,0x0000000400002106,0x000016fe60000000\n"
".quad 0x0000000000000000,0x000005d8000005d8,0x0000000400002005,0x00001cd660000000\n"
".quad 0x0000000000000000,0x0000100000000000,0x0000000400002006,0x00001cd660000000\n"
".quad 0x0000000000000000,0x0000271400002714,0x0000000400001b05,0x000043ea00000001\n"
".quad 0x0000000000000000,0x0001000c0001000c,0x0000000400000005,0x000143f600000001\n"
".quad 0x0000000000000000,0x0000800000000000,0x0000000400000006,0x0000000000000000\n"
".text");

extern "C" {

extern const unsigned long long __deviceText_$sm_20$[10428];

}

static __cudaFatPtxEntry __ptxEntries [] = {{(char*)"compute_20",(char*)__deviceText_$compute_20$},{0,0}};
static __cudaFatCubinEntry __cubinEntries[] = {{0,0}};
static __cudaFatDebugEntry __debugEntries0 = {0, 0, 0, 0} ;
static __cudaFatElfEntry __elfEntries0 = {0, 0, 0, 0} ;
static __cudaFatElfEntry __elfEntries1 = {(char*)"sm_20", (char*)__deviceText_$sm_20$, &__elfEntries0, (unsigned int)sizeof(__deviceText_$sm_20$)};



static __cudaFatCudaBinary __fatDeviceText __attribute__ ((section (".nvFatBinSegment")))= {0x1ee55a01,0x00000004,0xa14f518d,(char*)"81a2cb8792ef4127",(char*)"/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_SM13.cu",(char*)" ",__ptxEntries,__cubinEntries,&__debugEntries0,0,0,0,0,0,0x996fe810,&__elfEntries1};
# 3 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.stub.c" 2
struct __T20 {__TOptionValue *__par0;float *__par1;int __par2;int __dummy_field;};
struct __T21 {float *__par0;int __par1;int __dummy_field;};
struct __T22 {__TOptionValue *__par0;int __par1;int __dummy_field;};
struct __T23 {float *__par0;float *__par1;unsigned __par2;int __dummy_field;};
static void __device_stub__Z16MonteCarloKernelP14__TOptionValuePfi(__TOptionValue *, float *, int);
static void __device_stub__Z27MonteCarloOneBlockPerOptionPfi(float *, int);
static void __device_stub__Z16MonteCarloReduceP14__TOptionValuei(__TOptionValue *, int);
static void __device_stub__Z16inverseCNDKernelPfS_j(float *, float *, unsigned);
static void __sti____cudaRegisterAll_50_tmpxft_00006353_00000000_4_MonteCarlo_SM13_cpp1_ii_9123f87d(void) __attribute__((__constructor__));
static void __device_stub__Z16MonteCarloKernelP14__TOptionValuePfi(__TOptionValue *__par0, float *__par1, int __par2){ struct __T20 *__T24 = 0;
if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T24->__par0) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T24->__par1) != cudaSuccess) return;if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T24->__par2) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(__TOptionValue *, float *, int))MonteCarloKernel)); (void)cudaLaunch(((char *)((void ( *)(__TOptionValue *, float *, int))MonteCarloKernel))); };}
static void MonteCarloKernel( __TOptionValue *__cuda_0,float *__cuda_1,int __cuda_2)
# 113 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
{__device_stub__Z16MonteCarloKernelP14__TOptionValuePfi( __cuda_0,__cuda_1,__cuda_2);
# 136 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 1 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.stub.c"
static void __device_stub__Z27MonteCarloOneBlockPerOptionPfi( float *__par0, int __par1) { struct __T21 *__T25 = 0;
if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T25->__par0) != cudaSuccess) return; if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T25->__par1) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, int))MonteCarloOneBlockPerOption)); (void)cudaLaunch(((char *)((void ( *)(float *, int))MonteCarloOneBlockPerOption))); }; }
static void MonteCarloOneBlockPerOption( float *__cuda_0,int __cuda_1)
# 150 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
{__device_stub__Z27MonteCarloOneBlockPerOptionPfi( __cuda_0,__cuda_1);
# 183 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 1 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.stub.c"
static void __device_stub__Z16MonteCarloReduceP14__TOptionValuei( __TOptionValue *__par0, int __par1) { struct __T22 *__T26 = 0;
if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T26->__par0) != cudaSuccess) return; if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T26->__par1) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(__TOptionValue *, int))MonteCarloReduce)); (void)cudaLaunch(((char *)((void ( *)(__TOptionValue *, int))MonteCarloReduce))); }; }
static void MonteCarloReduce( __TOptionValue *__cuda_0,int __cuda_1)
# 194 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
{__device_stub__Z16MonteCarloReduceP14__TOptionValuei( __cuda_0,__cuda_1);
# 220 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/MonteCarlo_kernel.cuh"
}
# 1 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.stub.c"
static void __device_stub__Z16inverseCNDKernelPfS_j( float *__par0, float *__par1, unsigned __par2) { struct __T23 *__T233 = 0;
if (cudaSetupArgument((void*)(char*)&__par0, sizeof(__par0), (size_t)&__T233->__par0) != cudaSuccess) return; if (cudaSetupArgument((void*)(char*)&__par1, sizeof(__par1), (size_t)&__T233->__par1) != cudaSuccess) return; if (cudaSetupArgument((void*)(char*)&__par2, sizeof(__par2), (size_t)&__T233->__par2) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, unsigned))inverseCNDKernel)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, unsigned))inverseCNDKernel))); }; }
static void inverseCNDKernel( float *__cuda_0,float *__cuda_1,unsigned __cuda_2)
# 252 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
{__device_stub__Z16inverseCNDKernelPfS_j( __cuda_0,__cuda_1,__cuda_2);
# 272 "/home/normal/checkout/gpuocelot/tests/cuda2.2/tests/MonteCarloMultiGPU/quasirandomGenerator_kernel.cuh"
}
# 1 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.stub.c"
static void __sti____cudaRegisterAll_50_tmpxft_00006353_00000000_4_MonteCarlo_SM13_cpp1_ii_9123f87d(void) { __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); atexit(__cudaUnregisterBinaryUtil); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, unsigned))inverseCNDKernel), (char*)"_Z16inverseCNDKernelPfS_j", "_Z16inverseCNDKernelPfS_j", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(__TOptionValue *, int))MonteCarloReduce), (char*)"_Z16MonteCarloReduceP14__TOptionValuei", "_Z16MonteCarloReduceP14__TOptionValuei", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, int))MonteCarloOneBlockPerOption), (char*)"_Z27MonteCarloOneBlockPerOptionPfi", "_Z27MonteCarloOneBlockPerOptionPfi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(__TOptionValue *, float *, int))MonteCarloKernel), (char*)"_Z16MonteCarloKernelP14__TOptionValuePfi", "_Z16MonteCarloKernelP14__TOptionValuePfi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterVar(__cudaFatCubinHandle, (char*)&d_OptionData, (char*)"d_OptionData", "d_OptionData", 0, 65536, 1, 0); __cudaRegisterVar(__cudaFatCubinHandle, (char*)&d_CallValue, (char*)"d_CallValue", "d_CallValue", 0, 32768, 0, 0); }
# 1 "/tmp/tmpxft_00006353_00000000-1_MonteCarlo_SM13.cudafe1.stub.c" 2
