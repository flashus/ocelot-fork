	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with /usr/local/cuda/open64/lib//be
	// nvopencc built on 2009-04-09

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling fastWalshTransform.cpp3.i (/tmp/ccBI#.EktV8S)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"fastWalshTransform.cudafe2.gpu"
	.file	3	"/usr/lib/gcc/x86_64-linux-gnu/4.3.3/include/stddef.h"
	.file	4	"/home/normal/cuda/bin/../include/crt/device_runtime.h"
	.file	5	"/home/normal/cuda/bin/../include/host_defines.h"
	.file	6	"/home/normal/cuda/bin/../include/builtin_types.h"
	.file	7	"/home/normal/cuda/bin/../include/device_types.h"
	.file	8	"/home/normal/cuda/bin/../include/driver_types.h"
	.file	9	"/home/normal/cuda/bin/../include/texture_types.h"
	.file	10	"/home/normal/cuda/bin/../include/vector_types.h"
	.file	11	"/home/normal/cuda/bin/../include/device_launch_parameters.h"
	.file	12	"/home/normal/cuda/bin/../include/crt/storage_class.h"
	.file	13	"/usr/include/bits/types.h"
	.file	14	"/usr/include/time.h"
	.file	15	"fastWalshTransform_kernel.cu"
	.file	16	"/home/normal/cuda/bin/../include/common_functions.h"
	.file	17	"/home/normal/cuda/bin/../include/crt/func_macro.h"
	.file	18	"/home/normal/cuda/bin/../include/math_functions.h"
	.file	19	"/home/normal/cuda/bin/../include/device_functions.h"
	.file	20	"/home/normal/cuda/bin/../include/math_constants.h"
	.file	21	"/home/normal/cuda/bin/../include/sm_11_atomic_functions.h"
	.file	22	"/home/normal/cuda/bin/../include/sm_12_atomic_functions.h"
	.file	23	"/home/normal/cuda/bin/../include/sm_13_double_functions.h"
	.file	24	"/home/normal/cuda/bin/../include/common_types.h"
	.file	25	"/home/normal/cuda/bin/../include/texture_fetch_functions.h"
	.file	26	"/home/normal/cuda/bin/../include/math_functions_dbl_ptx1.h"

	.extern	.shared .align 4 .b8 s_data[];

	.entry _Z15fwtBatch1KernelPfS_i (
		.param .u64 __cudaparm__Z15fwtBatch1KernelPfS_i_d_Output,
		.param .u64 __cudaparm__Z15fwtBatch1KernelPfS_i_d_Input,
		.param .s32 __cudaparm__Z15fwtBatch1KernelPfS_i_log2N)
	{
	.reg .u32 %r<33>;
	.reg .u64 %rd<41>;
	.reg .f32 %f<18>;
	.reg .pred %p<10>;
	.loc	15	51	0
$LBB1__Z15fwtBatch1KernelPfS_i:
	.loc	15	60	0
	cvt.s32.u16 	%r1, %tid.x;     	// 
	mov.s32 	%r2, %r1;            	// 
	ld.param.s32 	%r3, [__cudaparm__Z15fwtBatch1KernelPfS_i_log2N];	// id:130 __cudaparm__Z15fwtBatch1KernelPfS_i_log2N+0x0
	shl.b32 	%r4, 1, %r3;         	// 
	setp.gt.s32 	%p1, %r4, %r1;   	// 
	@!%p1 bra 	$Lt_0_5122;        	// 
	mov.u64 	%rd1, s_data;        	// 
	cvt.u32.u16 	%r5, %ctaid.x;   	// 
	shl.b32 	%r6, %r5, %r3;       	// 
	cvt.u64.s32 	%rd2, %r1;       	// 
	cvt.u32.u16 	%r7, %ntid.x;    	// 
	cvt.s64.u32 	%rd3, %r7;       	// 
	cvt.s64.s32 	%rd4, %r1;       	// 
	cvt.u64.s32 	%rd5, %r6;       	// 
	mul.lo.u64 	%rd6, %rd2, 4;    	// 
	mul.lo.u64 	%rd7, %rd3, 4;    	// 
	mul.lo.u64 	%rd8, %rd4, 4;    	// 
	mul.lo.u64 	%rd9, %rd5, 4;    	// 
	add.u64 	%rd10, %rd8, %rd1;   	// 
	ld.param.u64 	%rd11, [__cudaparm__Z15fwtBatch1KernelPfS_i_d_Input];	// id:133 __cudaparm__Z15fwtBatch1KernelPfS_i_d_Input+0x0
	add.s64 	%rd12, %rd11, %rd9;  	// 
	add.s64 	%rd13, %rd6, %rd12;  	// 
$Lt_0_5634:
 //<loop> Loop body line 60, nesting depth: 1, estimated iterations: unknown
	.loc	15	61	0
	ld.global.f32 	%f1, [%rd13+0];	// id:134
	st.shared.f32 	[%rd10+0], %f1;	// id:135 s_data+0x0
	add.u32 	%r2, %r2, %r7;       	// 
	add.u64 	%rd10, %rd10, %rd7;  	// 
	add.s64 	%rd13, %rd13, %rd7;  	// 
	setp.gt.s32 	%p2, %r4, %r2;   	// 
	@%p2 bra 	$Lt_0_5634;         	// 
$Lt_0_5122:
	mov.u64 	%rd1, s_data;        	// 
	.loc	15	65	0
	shr.s32 	%r8, %r4, 2;         	// 
	mov.s32 	%r9, %r8;            	// 
	mov.u32 	%r10, 0;             	// 
	setp.le.s32 	%p3, %r8, %r10;  	// 
	@%p3 bra 	$Lt_0_6146;         	// 
$Lt_0_6658:
 //<loop> Loop body line 72
	.loc	15	72	0
	bar.sync 	0;                  	// 
	.loc	15	73	0
	sub.s32 	%r11, %r9, 1;        	// 
	and.b32 	%r12, %r11, %r1;     	// 
	sub.s32 	%r13, %r1, %r12;     	// 
	shl.b32 	%r14, %r13, 2;       	// 
	add.s32 	%r15, %r12, %r14;    	// 
	cvt.s64.s32 	%rd14, %r15;     	// 
	mul.lo.u64 	%rd15, %rd14, 4;  	// 
	add.u64 	%rd16, %rd1, %rd15;  	// 
	ld.shared.f32 	%f2, [%rd16+0];	// id:136 s_data+0x0
	.loc	15	74	0
	add.s32 	%r16, %r15, %r9;     	// 
	cvt.s64.s32 	%rd17, %r16;     	// 
	mul.lo.u64 	%rd18, %rd17, 4;  	// 
	add.u64 	%rd19, %rd1, %rd18;  	// 
	ld.shared.f32 	%f3, [%rd19+0];	// id:137 s_data+0x0
	.loc	15	75	0
	add.s32 	%r17, %r16, %r9;     	// 
	cvt.s64.s32 	%rd20, %r17;     	// 
	mul.lo.u64 	%rd21, %rd20, 4;  	// 
	add.u64 	%rd22, %rd1, %rd21;  	// 
	ld.shared.f32 	%f4, [%rd22+0];	// id:138 s_data+0x0
	.loc	15	76	0
	add.s32 	%r18, %r17, %r9;     	// 
	cvt.s64.s32 	%rd23, %r18;     	// 
	mul.lo.u64 	%rd24, %rd23, 4;  	// 
	add.u64 	%rd25, %rd1, %rd24;  	// 
	ld.shared.f32 	%f5, [%rd25+0];	// id:139 s_data+0x0
	.loc	15	79	0
	add.f32 	%f6, %f2, %f4;       	// 
	sub.f32 	%f4, %f2, %f4;       	// 
	.loc	15	80	0
	add.f32 	%f7, %f3, %f5;       	// 
	sub.f32 	%f5, %f3, %f5;       	// 
	.loc	15	81	0
	add.f32 	%f8, %f6, %f7;       	// 
	st.shared.f32 	[%rd16+0], %f8;	// id:140 s_data+0x0
	sub.f32 	%f9, %f6, %f7;       	// 
	st.shared.f32 	[%rd19+0], %f9;	// id:141 s_data+0x0
	.loc	15	82	0
	add.f32 	%f10, %f4, %f5;      	// 
	st.shared.f32 	[%rd22+0], %f10;	// id:142 s_data+0x0
	sub.f32 	%f11, %f4, %f5;      	// 
	st.shared.f32 	[%rd25+0], %f11;	// id:143 s_data+0x0
	.loc	15	65	0
	shr.s32 	%r9, %r9, 2;         	// 
	mov.u32 	%r19, 0;             	// 
	setp.gt.s32 	%p4, %r9, %r19;  	// 
	@%p4 bra 	$Lt_0_6658;         	// 
$Lt_0_6146:
	and.b32 	%r20, %r3, 1;        	// 
	mov.u32 	%r21, 0;             	// 
	setp.eq.s32 	%p5, %r20, %r21; 	// 
	@%p5 bra 	$Lt_0_7170;         	// 
	.loc	15	87	0
	bar.sync 	0;                  	// 
	.loc	15	88	0
	mov.s32 	%r22, %r1;           	// 
	shr.s32 	%r23, %r4, 31;       	// 
	mov.s32 	%r24, 1;             	// 
	and.b32 	%r25, %r23, %r24;    	// 
	add.s32 	%r26, %r25, %r4;     	// 
	shr.s32 	%r27, %r26, 1;       	// 
	setp.le.s32 	%p6, %r27, %r1;  	// 
	@%p6 bra 	$Lt_0_7682;         	// 
	cvt.u32.u16 	%r7, %ntid.x;    	// 
$Lt_0_8194:
 //<loop> Loop body line 88, nesting depth: 1, estimated iterations: unknown
	.loc	15	92	0
	shl.b32 	%r28, %r22, 1;       	// 
	cvt.s64.s32 	%rd26, %r28;     	// 
	mul.lo.u64 	%rd27, %rd26, 4;  	// 
	add.u64 	%rd28, %rd1, %rd27;  	// 
	ld.shared.f32 	%f12, [%rd28+0];	// id:144 s_data+0x0
	.loc	15	93	0
	ld.shared.f32 	%f13, [%rd28+4];	// id:145 s_data+0x0
	.loc	15	94	0
	add.f32 	%f14, %f12, %f13;    	// 
	st.shared.f32 	[%rd28+0], %f14;	// id:146 s_data+0x0
	.loc	15	95	0
	sub.f32 	%f15, %f12, %f13;    	// 
	st.shared.f32 	[%rd28+4], %f15;	// id:147 s_data+0x0
	add.u32 	%r22, %r22, %r7;     	// 
	setp.gt.s32 	%p7, %r27, %r22; 	// 
	@%p7 bra 	$Lt_0_8194;         	// 
$Lt_0_7682:
$Lt_0_7170:
	.loc	15	99	0
	bar.sync 	0;                  	// 
	.loc	15	100	0
	mov.s32 	%r29, %r1;           	// 
	@!%p1 bra 	$Lt_0_8706;        	// 
	cvt.s64.s32 	%rd29, %r1;      	// 
	cvt.u32.u16 	%r7, %ntid.x;    	// 
	cvt.s64.u32 	%rd30, %r7;      	// 
	cvt.u32.u16 	%r30, %ctaid.x;  	// 
	shl.b32 	%r31, %r30, %r3;     	// 
	cvt.u64.s32 	%rd31, %r1;      	// 
	mul.lo.u64 	%rd32, %rd29, 4;  	// 
	mul.lo.u64 	%rd7, %rd30, 4;   	// 
	cvt.u64.s32 	%rd33, %r31;     	// 
	mul.lo.u64 	%rd34, %rd31, 4;  	// 
	add.u64 	%rd35, %rd32, %rd1;  	// 
	ld.param.u64 	%rd36, [__cudaparm__Z15fwtBatch1KernelPfS_i_d_Output];	// id:148 __cudaparm__Z15fwtBatch1KernelPfS_i_d_Output+0x0
	mul.lo.u64 	%rd37, %rd33, 4;  	// 
	add.s64 	%rd38, %rd36, %rd37; 	// 
	add.s64 	%rd39, %rd34, %rd38; 	// 
$Lt_0_9218:
 //<loop> Loop body line 100, nesting depth: 1, estimated iterations: unknown
	.loc	15	101	0
	ld.shared.f32 	%f16, [%rd35+0];	// id:149 s_data+0x0
	st.global.f32 	[%rd39+0], %f16;	// id:150
	add.u32 	%r29, %r29, %r7;     	// 
	add.s64 	%rd39, %rd39, %rd7;  	// 
	add.u64 	%rd35, %rd35, %rd7;  	// 
	setp.gt.s32 	%p8, %r4, %r29;  	// 
	@%p8 bra 	$Lt_0_9218;         	// 
$Lt_0_8706:
	.loc	15	102	0
	exit;                         	// 
$LDWend__Z15fwtBatch1KernelPfS_i:
	} // _Z15fwtBatch1KernelPfS_i

	.entry _Z15fwtBatch2KernelPfS_i (
		.param .u64 __cudaparm__Z15fwtBatch2KernelPfS_i_d_Output,
		.param .u64 __cudaparm__Z15fwtBatch2KernelPfS_i_d_Input,
		.param .s32 __cudaparm__Z15fwtBatch2KernelPfS_i_stride)
	{
	.reg .u16 %rh<5>;
	.reg .u32 %r<18>;
	.reg .u64 %rd<24>;
	.reg .f32 %f<12>;
	.loc	15	111	0
$LBB1__Z15fwtBatch2KernelPfS_i:
	.loc	15	125	0
	mov.u16 	%rh1, %ntid.x;       	// 
	mov.u16 	%rh2, %nctaid.x;     	// 
	mul.wide.u16 	%r1, %rh2, %rh1;	// 
	ld.param.s32 	%r2, [__cudaparm__Z15fwtBatch2KernelPfS_i_stride];	// id:86 __cudaparm__Z15fwtBatch2KernelPfS_i_stride+0x0
	sub.s32 	%r3, %r2, 1;         	// 
	mov.u16 	%rh3, %ctaid.x;      	// 
	mul.wide.u16 	%r4, %rh3, %rh1;	// 
	cvt.u32.u16 	%r5, %ctaid.y;   	// 
	mul.lo.u32 	%r6, %r5, %r1;    	// 
	cvt.u32.u16 	%r7, %tid.x;     	// 
	add.u32 	%r8, %r7, %r4;       	// 
	and.b32 	%r9, %r3, %r8;       	// 
	sub.s32 	%r10, %r8, %r9;      	// 
	mul.lo.u32 	%r11, %r6, 4;     	// 
	cvt.u64.u32 	%rd1, %r11;      	// 
	mul.lo.u64 	%rd2, %rd1, 4;    	// 
	shl.b32 	%r12, %r10, 2;       	// 
	ld.param.u64 	%rd3, [__cudaparm__Z15fwtBatch2KernelPfS_i_d_Input];	// id:92 __cudaparm__Z15fwtBatch2KernelPfS_i_d_Input+0x0
	add.u64 	%rd4, %rd3, %rd2;    	// 
	add.s32 	%r13, %r9, %r12;     	// 
	cvt.u64.s32 	%rd5, %r13;      	// 
	mul.lo.u64 	%rd6, %rd5, 4;    	// 
	add.u64 	%rd7, %rd4, %rd6;    	// 
	ld.global.f32 	%f1, [%rd7+0]; 	// id:93
	.loc	15	126	0
	add.s32 	%r14, %r13, %r2;     	// 
	cvt.u64.s32 	%rd8, %r14;      	// 
	mul.lo.u64 	%rd9, %rd8, 4;    	// 
	add.u64 	%rd10, %rd4, %rd9;   	// 
	ld.global.f32 	%f2, [%rd10+0];	// id:94
	.loc	15	127	0
	add.s32 	%r15, %r14, %r2;     	// 
	cvt.u64.s32 	%rd11, %r15;     	// 
	mul.lo.u64 	%rd12, %rd11, 4;  	// 
	add.u64 	%rd13, %rd4, %rd12;  	// 
	ld.global.f32 	%f3, [%rd13+0];	// id:95
	.loc	15	128	0
	add.s32 	%r16, %r15, %r2;     	// 
	cvt.u64.s32 	%rd14, %r16;     	// 
	mul.lo.u64 	%rd15, %rd14, 4;  	// 
	add.u64 	%rd16, %rd4, %rd15;  	// 
	ld.global.f32 	%f4, [%rd16+0];	// id:96
	.loc	15	131	0
	add.f32 	%f5, %f1, %f3;       	// 
	sub.f32 	%f3, %f1, %f3;       	// 
	.loc	15	132	0
	add.f32 	%f6, %f2, %f4;       	// 
	sub.f32 	%f4, %f2, %f4;       	// 
	.loc	15	133	0
	ld.param.u64 	%rd17, [__cudaparm__Z15fwtBatch2KernelPfS_i_d_Output];	// id:97 __cudaparm__Z15fwtBatch2KernelPfS_i_d_Output+0x0
	add.u64 	%rd18, %rd17, %rd2;  	// 
	add.f32 	%f7, %f5, %f6;       	// 
	add.u64 	%rd19, %rd18, %rd6;  	// 
	st.global.f32 	[%rd19+0], %f7;	// id:98
	sub.f32 	%f8, %f5, %f6;       	// 
	add.u64 	%rd20, %rd18, %rd9;  	// 
	st.global.f32 	[%rd20+0], %f8;	// id:99
	.loc	15	134	0
	add.f32 	%f9, %f3, %f4;       	// 
	add.u64 	%rd21, %rd18, %rd12; 	// 
	st.global.f32 	[%rd21+0], %f9;	// id:100
	sub.f32 	%f10, %f3, %f4;      	// 
	add.u64 	%rd22, %rd18, %rd15; 	// 
	st.global.f32 	[%rd22+0], %f10;	// id:101
	.loc	15	135	0
	exit;                         	// 
$LDWend__Z15fwtBatch2KernelPfS_i:
	} // _Z15fwtBatch2KernelPfS_i

	.entry _Z14modulateKernelPfS_i (
		.param .u64 __cudaparm__Z14modulateKernelPfS_i_d_A,
		.param .u64 __cudaparm__Z14modulateKernelPfS_i_d_B,
		.param .s32 __cudaparm__Z14modulateKernelPfS_i_N)
	{
	.reg .u16 %rh<5>;
	.reg .u32 %r<8>;
	.reg .u64 %rd<10>;
	.reg .f32 %f<8>;
	.reg .pred %p<4>;
	.loc	15	163	0
$LBB1__Z14modulateKernelPfS_i:
	.loc	15	168	0
	mov.u16 	%rh1, %ntid.x;       	// 
	mov.u16 	%rh2, %ctaid.x;      	// 
	mul.wide.u16 	%r1, %rh2, %rh1;	// 
	cvt.u32.u16 	%r2, %tid.x;     	// 
	add.u32 	%r3, %r2, %r1;       	// 
	mov.s32 	%r4, %r3;            	// 
	ld.param.s32 	%r5, [__cudaparm__Z14modulateKernelPfS_i_N];	// id:29 __cudaparm__Z14modulateKernelPfS_i_N+0x0
	setp.le.s32 	%p1, %r5, %r3;   	// 
	@%p1 bra 	$Lt_2_1282;         	// 
	cvt.rn.f32.s32 	%f1, %r5;     	// 
	mov.u16 	%rh3, %nctaid.x;     	// 
	mul.wide.u16 	%r6, %rh3, %rh1;	// 
	cvt.u64.s32 	%rd1, %r3;       	// 
	mul.lo.u64 	%rd2, %rd1, 4;    	// 
	cvt.s64.u32 	%rd3, %r6;       	// 
	rcp.approx.f32 	%f2, %f1;     	// 
	ld.param.u64 	%rd4, [__cudaparm__Z14modulateKernelPfS_i_d_A];	// id:34 __cudaparm__Z14modulateKernelPfS_i_d_A+0x0
	add.u64 	%rd5, %rd4, %rd2;    	// 
	mul.lo.u64 	%rd6, %rd3, 4;    	// 
	ld.param.u64 	%rd7, [__cudaparm__Z14modulateKernelPfS_i_d_B];	// id:35 __cudaparm__Z14modulateKernelPfS_i_d_B+0x0
	add.u64 	%rd8, %rd7, %rd2;    	// 
$Lt_2_1794:
 //<loop> Loop body line 168, nesting depth: 1, estimated iterations: unknown
	.loc	15	169	0
	ld.global.f32 	%f3, [%rd5+0]; 	// id:36
	ld.global.f32 	%f4, [%rd8+0]; 	// id:37
	mul.f32 	%f5, %f4, %f2;       	// 
	mul.f32 	%f6, %f3, %f5;       	// 
	st.global.f32 	[%rd5+0], %f6; 	// id:38
	add.s32 	%r4, %r4, %r6;       	// 
	add.u64 	%rd8, %rd8, %rd6;    	// 
	add.u64 	%rd5, %rd5, %rd6;    	// 
	setp.lt.s32 	%p2, %r4, %r5;   	// 
	@%p2 bra 	$Lt_2_1794;         	// 
$Lt_2_1282:
	.loc	15	170	0
	exit;                         	// 
$LDWend__Z14modulateKernelPfS_i:
	} // _Z14modulateKernelPfS_i

