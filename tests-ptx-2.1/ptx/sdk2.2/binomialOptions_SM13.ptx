	.version 1.4
	.target sm_13
	// compiled with /usr/local/cuda/open64/lib//be
	// nvopencc built on 2009-04-09

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling binomialOptions_SM13.cpp3.i (/tmp/ccBI#.mvTgPI)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_13, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"binomialOptions_SM13.cudafe2.gpu"
	.file	3	"binomialOptions_kernel.cuh"
	.file	4	"/usr/lib/gcc/x86_64-linux-gnu/4.3.3/include/stddef.h"
	.file	5	"/home/normal/cuda/bin/../include/crt/device_runtime.h"
	.file	6	"/home/normal/cuda/bin/../include/host_defines.h"
	.file	7	"/home/normal/cuda/bin/../include/builtin_types.h"
	.file	8	"/home/normal/cuda/bin/../include/device_types.h"
	.file	9	"/home/normal/cuda/bin/../include/driver_types.h"
	.file	10	"/home/normal/cuda/bin/../include/texture_types.h"
	.file	11	"/home/normal/cuda/bin/../include/vector_types.h"
	.file	12	"/home/normal/cuda/bin/../include/device_launch_parameters.h"
	.file	13	"/home/normal/cuda/bin/../include/crt/storage_class.h"
	.file	14	"/usr/include/bits/types.h"
	.file	15	"/usr/include/time.h"
	.file	16	"realtype.h"
	.file	17	"/home/normal/cuda/bin/../include/common_functions.h"
	.file	18	"/home/normal/cuda/bin/../include/crt/func_macro.h"
	.file	19	"/home/normal/cuda/bin/../include/math_functions.h"
	.file	20	"/home/normal/cuda/bin/../include/device_functions.h"
	.file	21	"/home/normal/cuda/bin/../include/math_constants.h"
	.file	22	"/home/normal/cuda/bin/../include/sm_11_atomic_functions.h"
	.file	23	"/home/normal/cuda/bin/../include/sm_12_atomic_functions.h"
	.file	24	"/home/normal/cuda/bin/../include/sm_13_double_functions.h"
	.file	25	"/home/normal/cuda/bin/../include/texture_fetch_functions.h"
	.file	26	"/home/normal/cuda/bin/../include/math_functions_dbl_ptx3.h"

	.const .align 8 .b8 d_OptionData[40960];
	.global .align 4 .b8 d_CallValue[4096];
	.global .align 8 .b8 d_CallBuffer[16908288];

	.entry _Z21binomialOptionsKernelv
	{
	.reg .u32 %r<60>;
	.reg .u64 %rd<40>;
	.reg .f32 %f<3>;
	.reg .f64 %fd<57>;
	.reg .pred %p<19>;
	.shared .align 8 .b8 __cuda_callB16953344[2048];
	.shared .align 8 .b8 __cuda_callA16955392[2048];
	.loc	3	94	0
$LBB1__Z21binomialOptionsKernelv:
	.loc	3	108	0
	cvt.s32.u16 	%r1, %tid.x;     	// 
	mov.s32 	%r2, %r1;            	// 
	cvt.u32.u16 	%r3, %ctaid.x;   	// 
	mov.u32 	%r4, 2048;           	// 
	setp.gt.s32 	%p1, %r1, %r4;   	// 
	mov.u64 	%rd1, d_CallBuffer;  	// 
	@%p1 bra 	$Lt_0_20226;        	// 
	mov.s32 	%r5, 2304;           	// 
	sub.s32 	%r6, %r5, %r1;       	// 
	shr.s32 	%r7, %r6, 31;        	// 
	mov.s32 	%r8, 255;            	// 
	and.b32 	%r9, %r7, %r8;       	// 
	add.s32 	%r10, %r9, %r6;      	// 
	shr.s32 	%r11, %r10, 8;       	// 
	mul.lo.u32 	%r12, %r3, 2064;  	// 
	cvt.u64.u32 	%rd2, %r3;       	// 
	cvt.u64.s32 	%rd3, %r1;       	// 
	cvt.u64.u32 	%rd4, %r12;      	// 
	mul.lo.u64 	%rd5, %rd2, 40;   	// 
	mul.lo.u64 	%rd6, %rd3, 8;    	// 
	mul.lo.u64 	%rd7, %rd4, 8;    	// 
	mov.u64 	%rd8, d_OptionData;  	// 
	add.u64 	%rd9, %rd5, %rd8;    	// 
	ld.const.f64 	%fd1, [%rd9+16];	// id:172 d_OptionData+0x0
	ld.const.f64 	%fd2, [%rd9+8]; 	// id:173 d_OptionData+0x0
	ld.const.f64 	%fd3, [%rd9+0]; 	// id:174 d_OptionData+0x0
	add.s64 	%rd10, %rd7, %rd6;   	// 
	add.u64 	%rd11, %rd1, %rd10;  	// 
	mov.s32 	%r13, %r11;          	// 
$Lt_0_13058:
 //<loop> Loop body line 108, nesting depth: 1, estimated iterations: unknown
	.loc	3	109	0
	cvt.rn.f64.s32 	%fd4, %r2;    	// 
	add.f64 	%fd5, %fd4, %fd4;    	// 
	mov.f64 	%fd6, 0dc0a0000000000000;	// -2048
	add.f64 	%fd7, %fd5, %fd6;    	// 
	mul.f64 	%fd8, %fd1, %fd7;    	// 
	mov.b64 	{%r14,%r15}, %fd8;   	// 
	mov.s32 	%r16, -1064875759;   	// 
	set.lt.u32.s32 	%r17, %r15, %r16;	// 
	neg.s32 	%r18, %r17;          	// 
	mov.u32 	%r19, 1082535490;    	// 
	set.le.u32.u32 	%r20, %r15, %r19;	// 
	neg.s32 	%r21, %r20;          	// 
	or.b32 	%r22, %r18, %r21;     	// 
	mov.u32 	%r23, 0;             	// 
	setp.eq.s32 	%p2, %r22, %r23; 	// 
	@%p2 bra 	$Lt_0_13314;        	// 
 //<loop> Part of loop body line 108, head labeled $Lt_0_13058
	.loc	26	764	0
	mov.f64 	%fd9, 0d3ff71547652b82fe;	// 1.4427
	mul.f64 	%fd10, %fd8, %fd9;   	// 
	cvt.rni.f64.f64 	%fd11, %fd10;	// 
	cvt.rzi.s32.f64 	%r24, %fd11; 	// 
	mov.s32 	%r25, %r24;          	// 
	mov.u32 	%r26, -1021;         	// 
	setp.gt.s32 	%p3, %r24, %r26; 	// 
	@%p3 bra 	$Lt_0_14082;        	// 
 //<loop> Part of loop body line 108, head labeled $Lt_0_13058
	.loc	26	769	0
	add.s32 	%r25, %r24, 55;      	// 
	mov.f64 	%fd12, 0d3c90000000000000;	// 5.55112e-17
	bra.uni 	$Lt_0_13826;         	// 
$Lt_0_14082:
 //<loop> Part of loop body line 108, head labeled $Lt_0_13058
	mov.f64 	%fd12, 0d4000000000000000;	// 2
$Lt_0_13826:
 //<loop> Part of loop body line 108, head labeled $Lt_0_13058
	.loc	26	394	0
	mov.f64 	%fd13, 0dbfe62e42fefa39ef;	// -0.693147
	mad.rn.f64 	%fd14, %fd11, %fd13, %fd8;	// 
	mov.f64 	%fd15, 0dbc7abc9e3b39803f;	// -2.31905e-17
	mad.rn.f64 	%fd16, %fd11, %fd15, %fd14;	// 
	mov.f64 	%fd17, 0d3e21f07fccf58bad;	// 2.08843e-09
	mov.f64 	%fd18, 0d3e5afd81da6c3baf;	// 2.51366e-08
	mad.rn.f64 	%fd19, %fd17, %fd16, %fd18;	// 
	.loc	26	395	0
	mov.f64 	%fd20, 0d3e927e55f60f80e6;	// 2.75575e-07
	mad.rn.f64 	%fd19, %fd19, %fd16, %fd20;	// 
	.loc	26	396	0
	mov.f64 	%fd21, 0d3ec71dda8f02d666;	// 2.75572e-06
	mad.rn.f64 	%fd19, %fd19, %fd16, %fd21;	// 
	.loc	26	397	0
	mov.f64 	%fd22, 0d3efa01a013b894e0;	// 2.48016e-05
	mad.rn.f64 	%fd19, %fd19, %fd16, %fd22;	// 
	.loc	26	398	0
	mov.f64 	%fd23, 0d3f2a01a01d3af788;	// 0.000198413
	mad.rn.f64 	%fd19, %fd19, %fd16, %fd23;	// 
	.loc	26	399	0
	mov.f64 	%fd24, 0d3f56c16c16c3a1ec;	// 0.00138889
	mad.rn.f64 	%fd19, %fd19, %fd16, %fd24;	// 
	.loc	26	400	0
	mov.f64 	%fd25, 0d3f81111111109161;	// 0.00833333
	mad.rn.f64 	%fd19, %fd19, %fd16, %fd25;	// 
	.loc	26	401	0
	mov.f64 	%fd26, 0d3fa55555555554c1;	// 0.0416667
	mad.rn.f64 	%fd19, %fd19, %fd16, %fd26;	// 
	.loc	26	402	0
	mov.f64 	%fd27, 0d3fc555555555556f;	// 0.166667
	mad.rn.f64 	%fd19, %fd19, %fd16, %fd27;	// 
	.loc	26	403	0
	mov.f64 	%fd28, 0d3fe0000000000000;	// 0.5
	mad.rn.f64 	%fd19, %fd19, %fd16, %fd28;	// 
	.loc	26	405	0
	mul.f64 	%fd29, %fd16, %fd19; 	// 
	mad.rn.f64 	%fd19, %fd29, %fd16, %fd16;	// 
	.loc	26	786	0
	add.s32 	%r27, %r25, 1022;    	// 
	shl.b32 	%r28, %r27, 20;      	// 
	mov.s32 	%r29, 0;             	// 
	mov.b64 	%fd30, {%r29,%r28};  	// 
	mad.rn.f64 	%fd31, %fd19, %fd30, %fd30;	// 
	mul.f64 	%fd32, %fd12, %fd31; 	// 
	bra.uni 	$Lt_0_258;           	// 
$Lt_0_13314:
 //<loop> Part of loop body line 108, head labeled $Lt_0_13058
	.loc	26	790	0
	mov.f64 	%fd33, 0d7ff0000000000000;	// inf
	mov.f64 	%fd34, 0d0000000000000000;	// 0
	shr.u32 	%r30, %r15, 31;      	// 
	mov.u32 	%r31, 0;             	// 
	setp.eq.u32 	%p4, %r30, %r31; 	// 
	selp.f64 	%fd35, %fd33, %fd34, %p4;	// 
	add.f64 	%fd36, %fd8, %fd8;   	// 
	abs.f64 	%fd37, %fd8;         	// 
	mov.f64 	%fd38, 0d7ff0000000000000;	// inf
	setp.le.f64 	%p5, %fd37, %fd38;	// 
	selp.f64 	%fd32, %fd35, %fd36, %p5;	// 
$Lt_0_258:
 //<loop> Part of loop body line 108, head labeled $Lt_0_13058
	.loc	3	109	0
	mul.f64 	%fd39, %fd3, %fd32;  	// 
	sub.f64 	%fd40, %fd39, %fd2;  	// 
	mov.f64 	%fd41, 0d0000000000000000;	// 0
	max.f64 	%fd42, %fd40, %fd41; 	// 
	st.global.f64 	[%rd11+0], %fd42;	// id:175 d_CallBuffer+0x0
	add.s32 	%r2, %r2, 256;       	// 
	add.u64 	%rd11, %rd11, 2048;  	// 
	mov.u32 	%r32, 2048;          	// 
	setp.le.s32 	%p6, %r2, %r32;  	// 
	@%p6 bra 	$Lt_0_13058;        	// 
	bra.uni 	$Lt_0_12546;         	// 
$Lt_0_20226:
	mul.lo.u32 	%r33, %r3, 2064;  	// 
	cvt.u64.u32 	%rd2, %r3;       	// 
	cvt.u64.u32 	%rd12, %r33;     	// 
	mul.lo.u64 	%rd13, %rd2, 40;  	// 
	mul.lo.u64 	%rd7, %rd12, 8;   	// 
	mov.u64 	%rd14, d_OptionData; 	// 
	add.u64 	%rd9, %rd13, %rd14;  	// 
$Lt_0_12546:
	add.u64 	%rd15, %rd7, %rd1;   	// 
	ld.const.f64 	%fd43, [%rd9+24];	// id:176 d_OptionData+0x0
	ld.const.f64 	%fd44, [%rd9+32];	// id:177 d_OptionData+0x0
	mov.s32 	%r34, 2048;          	// 
	mov.u64 	%rd16, __cuda_callB16953344;	// 
	mov.u64 	%rd17, __cuda_callA16955392;	// 
$Lt_0_15106:
 //<loop> Loop body line 109, nesting depth: 1, iterations: 64
	mov.u32 	%r35, 0;             	// 
	setp.le.s32 	%p7, %r34, %r35; 	// 
	@%p7 bra 	$Lt_0_15362;        	// 
 //<loop> Part of loop body line 109, head labeled $Lt_0_15106
	add.s32 	%r36, %r34, 223;     	// 
	mov.s32 	%r37, 613566757;     	// 
	mov.s32 	%r38, 0;             	// 
	setp.lt.s32 	%p8, %r36, %r38; 	// 
	abs.s32 	%r39, %r36;          	// 
	mul.hi.u32 	%r40, %r39, %r37; 	// 
	sub.u32 	%r41, %r39, %r40;    	// 
	shr.u32 	%r42, %r41, 1;       	// 
	add.u32 	%r43, %r42, %r40;    	// 
	shr.s32 	%r44, %r43, 7;       	// 
	@%p8 sub.s32 	%r44, %r38, %r44;	// 
	mov.s32 	%r45, %r44;          	// 
	mov.s32 	%r46, 0;             	// 
 //<loop> Part of loop body line 109, head labeled $Lt_0_15106
	mov.s32 	%r47, %r45;          	// 
$Lt_0_15874:
 //<loop> Loop body line 109, nesting depth: 2, estimated iterations: unknown
	.loc	3	120	0
	bar.sync 	0;                  	// 
	sub.s32 	%r48, %r34, %r46;    	// 
	mov.s32 	%r49, 255;           	// 
	min.s32 	%r50, %r48, %r49;    	// 
	setp.lt.s32 	%p9, %r50, %r1;  	// 
	@%p9 bra 	$Lt_0_16130;        	// 
 //<loop> Part of loop body line 109, head labeled $Lt_0_15874
	.loc	3	122	0
	add.s32 	%r51, %r1, %r46;     	// 
	cvt.s64.s32 	%rd18, %r51;     	// 
	mul.lo.u64 	%rd19, %rd18, 8;  	// 
	add.u64 	%rd20, %rd15, %rd19; 	// 
	ld.global.f64 	%fd45, [%rd20+0];	// id:178 d_CallBuffer+0x0
	cvt.u64.s32 	%rd21, %r1;      	// 
	mul.lo.u64 	%rd22, %rd21, 8;  	// 
	add.u64 	%rd23, %rd17, %rd22; 	// 
	st.shared.f64 	[%rd23+0], %fd45;	// id:179 __cuda_callA16955392+0x0
$Lt_0_16130:
 //<loop> Part of loop body line 109, head labeled $Lt_0_15874
	.loc	3	125	0
	sub.s32 	%r52, %r50, 1;       	// 
	mov.s32 	%r53, %r52;          	// 
	sub.s32 	%r54, %r50, 32;      	// 
	setp.lt.s32 	%p10, %r52, %r54;	// 
	@%p10 bra 	$Lt_0_16642;       	// 
$Lt_0_17154:
 //<loop> Loop body line 125, nesting depth: 3, iterations: 16
	.loc	3	127	0
	bar.sync 	0;                  	// 
	setp.gt.s32 	%p11, %r1, %r53; 	// 
	@%p11 bra 	$Lt_0_17410;       	// 
 //<loop> Part of loop body line 125, head labeled $Lt_0_17154
	.loc	3	129	0
	cvt.u64.s32 	%rd24, %r1;      	// 
	mul.lo.u64 	%rd6, %rd24, 8;   	// 
	add.u64 	%rd25, %rd6, %rd17;  	// 
	ld.shared.f64 	%fd46, [%rd25+8];	// id:180 __cuda_callA16955392+0x0
	mul.f64 	%fd47, %fd46, %fd43; 	// 
	ld.shared.f64 	%fd48, [%rd25+0];	// id:181 __cuda_callA16955392+0x0
	mad.rn.f64 	%fd49, %fd48, %fd44, %fd47;	// 
	add.u64 	%rd26, %rd6, %rd16;  	// 
	st.shared.f64 	[%rd26+0], %fd49;	// id:182 __cuda_callB16953344+0x0
$Lt_0_17410:
 //<loop> Part of loop body line 125, head labeled $Lt_0_17154
	.loc	3	133	0
	bar.sync 	0;                  	// 
	sub.s32 	%r55, %r53, 1;       	// 
	setp.gt.s32 	%p12, %r1, %r55; 	// 
	@%p12 bra 	$Lt_0_17922;       	// 
 //<loop> Part of loop body line 125, head labeled $Lt_0_17154
	.loc	3	135	0
	cvt.u64.s32 	%rd27, %r1;      	// 
	mul.lo.u64 	%rd6, %rd27, 8;   	// 
	add.u64 	%rd28, %rd6, %rd16;  	// 
	ld.shared.f64 	%fd50, [%rd28+8];	// id:183 __cuda_callB16953344+0x0
	mul.f64 	%fd51, %fd50, %fd43; 	// 
	ld.shared.f64 	%fd52, [%rd28+0];	// id:184 __cuda_callB16953344+0x0
	mad.rn.f64 	%fd53, %fd52, %fd44, %fd51;	// 
	add.u64 	%rd29, %rd6, %rd17;  	// 
	st.shared.f64 	[%rd29+0], %fd53;	// id:185 __cuda_callA16955392+0x0
$Lt_0_17922:
 //<loop> Part of loop body line 125, head labeled $Lt_0_17154
	.loc	3	136	0
	sub.s32 	%r53, %r53, 2;       	// 
	setp.le.s32 	%p13, %r54, %r53;	// 
	@%p13 bra 	$Lt_0_17154;       	// 
$Lt_0_16642:
 //<loop> Part of loop body line 109, head labeled $Lt_0_15874
	.loc	3	140	0
	bar.sync 	0;                  	// 
	setp.lt.s32 	%p14, %r54, %r1; 	// 
	@%p14 bra 	$Lt_0_18690;       	// 
 //<loop> Part of loop body line 109, head labeled $Lt_0_15874
	.loc	3	142	0
	cvt.u64.s32 	%rd30, %r1;      	// 
	mul.lo.u64 	%rd31, %rd30, 8;  	// 
	add.u64 	%rd32, %rd17, %rd31; 	// 
	ld.shared.f64 	%fd54, [%rd32+0];	// id:186 __cuda_callA16955392+0x0
	add.s32 	%r56, %r1, %r46;     	// 
	cvt.s64.s32 	%rd33, %r56;     	// 
	mul.lo.u64 	%rd34, %rd33, 8;  	// 
	add.u64 	%rd35, %rd15, %rd34; 	// 
	st.global.f64 	[%rd35+0], %fd54;	// id:187 d_CallBuffer+0x0
$Lt_0_18690:
 //<loop> Part of loop body line 109, head labeled $Lt_0_15874
	add.s32 	%r46, %r46, 224;     	// 
	setp.lt.s32 	%p15, %r46, %r34;	// 
	@%p15 bra 	$Lt_0_15874;       	// 
$Lt_0_15362:
 //<loop> Part of loop body line 109, head labeled $Lt_0_15106
	sub.s32 	%r34, %r34, 32;      	// 
	mov.u32 	%r57, 0;             	// 
	setp.ne.s32 	%p16, %r34, %r57;	// 
	@%p16 bra 	$Lt_0_15106;       	// 
	mov.u32 	%r58, 0;             	// 
	setp.ne.u32 	%p17, %r1, %r58; 	// 
	@%p17 bra 	$Lt_0_19714;       	// 
	.loc	3	146	0
	ld.shared.f64 	%fd55, [__cuda_callA16955392+0];	// id:188 __cuda_callA16955392+0x0
	cvt.rn.f32.f64 	%f1, %fd55;   	// 
	mov.u64 	%rd36, d_CallValue;  	// 
	mul.lo.u64 	%rd37, %rd2, 4;   	// 
	add.u64 	%rd38, %rd36, %rd37; 	// 
	st.global.f32 	[%rd38+0], %f1;	// id:189 d_CallValue+0x0
$Lt_0_19714:
	.loc	3	147	0
	exit;                         	// 
$LDWend__Z21binomialOptionsKernelv:
	} // _Z21binomialOptionsKernelv

