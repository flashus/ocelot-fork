INFO     Reading in test file /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/regression/ocelotRegressionTests.txt
INFO      Found the following tests:
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLexer
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestParser
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestEmulator
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestInstructions
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestKernels
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestDataflowGraph
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLLVMInstructions
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestPTXToLLVMTranslator
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLLVMKernels
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaMalloc
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaTexture2D
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaTextureArray
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaGlobals
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestDeviceSwitching
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaSequence
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCalVectorScale
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestPTXAssembly
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestIndirectFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestConvergence
INFO     ==== INDIVIDUAL TEST RESULTS ====

INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestInstructions 
INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestDataflowGraph -i ../tests/ptx 
INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaGlobals 
INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestDeviceSwitching 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestDataflowGraph
INFO     Test completed in 0.0364100933075 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestDataflowGraph

Description: A test for the DataflowGraph class. Test Points: 1) 
             Generic: load PTX files, convert them into dataflow graphs, verify that 
             all live ranges spanning blocks are consistent. 2) SSA: convert to 
             ssa form, verify that no register is declared more than once. 3) 
             reverse SSA: convert to ssa then out of ssa, verify that all live 
             ranges spanning blocks are consistent.


Test Seed : 1302636531
Test time : 1.71661e-05

Status : Testing Generic Dataflow
 Test Passed
Testing SSA Dataflow
 Test Passed
Testing SSA then back Dataflow
 Test Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCalVectorScale 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestInstructions
INFO     Test completed in 0.0402228832245 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestInstructions

Description: 


Test Seed : 1302636531
Test time : 0.000621557

Status : Test output:
Accessors test passed.
pass: load and store instructions
Abs test passed.
pass: arithmetic instructions
pass: exotic arithmetic instructions
pass: floating-point instructions
pass: logical instructions
pass: comparison instructions
pass: predicated Add and Ld isntructions
pass: control flow instructions



INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLLVMInstructions 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestDeviceSwitching
INFO     Test completed in 0.0600459575653 seconds
INFO      It produced the following output:
; ModuleID = 'increment_hb_0'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_increment_hb_0(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt1 = load i8** %rt0
  %rt2 = bitcast i8* %rt1 to i64*
  %r0 = load i64* %rt2, align 8
  %rt3 = inttoptr i64 %r0 to i32*
  %r1 = load i32* %rt3, align 4
  %r2 = add i32 %r1, 1
  %rt4 = inttoptr i64 %r0 to i32*
  store i32 %r2, i32* %rt4, align 4
  %r3 = bitcast i32 4 to i32
  %rt5 = zext i32 %r3 to i64
  %rt6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt7 = load i8** %rt6
  %rt8 = ptrtoint i8* %rt7 to i64
  %rt9 = add i64 %rt5, %rt8
  %rt10 = inttoptr i64 %rt9 to i32*
  store i32 1, i32* %rt10, align 4
  %r4 = bitcast i32 0 to i32
  %rt11 = zext i32 %r4 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 0, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_increment_hb_0_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt1 = load i8** %rt0, align 8
  %rt2 = bitcast i8* %rt1 to i64*
  %r0 = load i64* %rt2, align 8
  %rt3 = inttoptr i64 %r0 to i32*
  %r1 = load i32* %rt3, align 4
  %r2 = add i32 %r1, 1
  store i32 %r2, i32* %rt3, align 4
  %rt6 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt7 = load i8** %rt6, align 8
  %rt8 = ptrtoint i8* %rt7 to i64
  %rt9 = add i64 %rt8, 4
  %rt10 = inttoptr i64 %rt9 to i32*
  store i32 1, i32* %rt10, align 4
  %rt13 = load i8** %rt6, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 0, i32* %rt16, align 4
  ret void
}
; ModuleID = 'increment_hb_1'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_increment_hb_1(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0003":
  %r0 = bitcast i32 0 to i32
  %rt0 = zext i32 %r0 to i64
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt2 = load i8** %rt1
  %rt3 = ptrtoint i8* %rt2 to i64
  %rt4 = add i64 %rt0, %rt3
  %rt5 = inttoptr i64 %rt4 to i32*
  store i32 6, i32* %rt5, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0003"
  ret void
}

define internal void @_Z_ocelotTranslated_increment_hb_1_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt2 = load i8** %rt1, align 8
  %rt5 = bitcast i8* %rt2 to i32*
  store i32 6, i32* %rt5, align 4
  ret void
}
Pass/Fail : Pass


Name : TestDeviceSwitching

Description: A unit test for the ability of the CUDA runtime to switch 
             between devices and use multiple threads Test Points: 1) In a single 
             threaded application, iterate across all devices launching the same 
             simple kernel each time 2) Test context migration support in 
             ocelot. Iterate across all devices, launching a simple kernel that 
             updates shared variable. Use the context switch mechanism to 
             migrate the shared data. 3) Test multi-threading support. Launch one 
             host thread to allocate memory, pass pointers to worker 
             threads, each of which should launch independent kernels in 
             parallel.


Test Seed : 1302636531
Test time : 0.0195463

Status : Test Point 1 Passed
Test Point 2 Passed
Test Point 3 Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestParser -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLLVMInstructions
INFO     Test completed in 0.0344409942627 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLLVMInstructions

Description: A test for the assembly code generation and automatic 
             verfication of individual LLVM instructions. Test Points: 1) For each 
             instruction, generate several assembly strings using the 
             instruction's toString method, make sure that these pass the valid() 
             check, compare to references from the LLVM manual.


Test Seed : 1302636531
Test time : 0.000853777

Status :  Checked instruction "<result> = add i32 4, %var"
Add Instruction Passed
 Checked instruction "%ptr = alloca i32"
 Checked instruction "%ptr = alloca i32, i32 4"
 Checked instruction "%ptr = alloca i32, i32 4, align 1024"
 Checked instruction "%ptr = alloca i32, align 1024"
Alloca Instruction Passed
 Checked instruction "<result> = and i32 4, %var"
 Checked instruction "<result> = and i32 15, 40"
 Checked instruction "<result> = and i32 4, 8"
And Instruction Passed
 Checked instruction "<result> = ashr i32 4, 1"
 Checked instruction "<result> = ashr i8 -2, 1"
 Checked instruction "<result> = ashr < 2 x i32 > < i32 -2, i32 4 >, < i32 1, i32 3 >"
Ashr Instruction Passed
 Checked instruction "%X = bitcast i8 -1 to i8"
 Checked instruction "%Z = bitcast < 2 x i32 > %V to i64"
Bitcast Instruction Passed
 Checked instruction "br i1 %cond, label %IfEqual, label %IfUnequal"
Br Instruction Passed
 Checked instruction "%retval = call i32 @test(i32 %argc)"
 Checked instruction "call i32 (i8*, ...)* @printf(i8* %msg, i32 12, i8 42)"
 Checked instruction "%X = tail call i32 @foo()"
 Checked instruction "%Y = tail call fastcc i32 @foo()"
 Checked instruction "call void @foo(i8 97 signext)"
 Checked instruction "%r = call %struct.A @foo()"
 Checked instruction "call void @foo() noreturn"
 Checked instruction "%ZZ = call zeroext i32 @bar()"
Call Instruction Passed
 Checked instruction "%result = extractelement < 4 x i32 > %vec, i32 0"
Extractelement Instruction Passed
 Checked instruction "%result = extractvalue { i32, float } %agg, 0"
Extractvalue Instruction Passed
 Checked instruction "<result> = fadd float 0x4010000000000000, %var"
Fadd Instruction Passed
 Checked instruction "<result> = fcmp oeq float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp one float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp olt float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp ueq float 0x3ff0000000000000, 0x4000000000000000"
Fcmp Instruction Passed
 Checked instruction "<result> = fdiv float 0x4010000000000000, %var"
Fdiv Instruction Passed
 Checked instruction "<result> = fmul float 0x4010000000000000, %var"
Fmul Instruction Passed
 Checked instruction "%X = fpext float 0x400921cac0000000 to double"
 Checked instruction "%Y = fpext float 0x3ff0000000000000 to float"
Fpext Instruction Passed
 Checked instruction "%X = fptosi double 0xc05ec00000000000 to i32"
Fptosi Instruction Passed
 Checked instruction "%X = fptoui double 0x405ec00000000000 to i32"
Fptoui Instruction Passed
 Checked instruction "%X = fptrunc double 0x405ec00000000000 to float"
Fptrunc Instruction Passed
 Checked instruction "free [ 4 x i8 ]* %array"
Free Instruction Passed
 Checked instruction "<result> = frem float 0x4010000000000000, %var"
Frem Instruction Passed
 Checked instruction "<result> = fsub float 0x0, %val"
Fsub Instruction Passed
 Checked instruction "%vptr = getelementptr { i32, < 2 x i8 > }* %svptr, i32 0, i32 1, i32 1"
 Checked instruction "%eptr = getelementptr [ 12 x i8 ]* %aptr, i32 0, i32 1"
Getelementptr Instruction Passed
 Checked instruction "<result> = icmp ne float* %X, %X"
Icmp Instruction Passed
 Checked instruction "%result = insertelement < 4 x i32 > %vec, i32 1, i32 0"
Insertelement Instruction Passed
 Checked instruction "%result = insertvalue { i32, float } %agg, i32 1, 0"
Insertvalue Instruction Passed
 Checked instruction "%Y = inttoptr i64 0 to i32*"
Inttoptr Instruction Passed
 Checked instruction "%retval = invoke i32 @Test(i32 15) to label %Continue unwind label %TestCleanup"
Invoke Instruction Passed
 Checked instruction "%val = load i32* %ptr"
Load Instruction Passed
 Checked instruction "<result> = lshr i8 -2, 1"
Lshr Instruction Passed
 Checked instruction "%array2 = malloc [ 12 x i8 ], i32 %size"
Malloc Instruction Passed
 Checked instruction "<result> = mul i32 4, %var"
Mul Instruction Passed
 Checked instruction "<result> = or i32 15, 40"
Or Instruction Passed
 Checked instruction "%indvar = phi i32 [ 0, %LoopHeader ], [ %nextindvar, %Loop ]"
Phi Instruction Passed
 Checked instruction "%Y = ptrtoint i32* %x to i64"
Prtoint Instruction Passed
 Checked instruction "ret void"
Ret Instruction Passed
 Checked instruction "<result> = sdiv i32 4, %var"
Sdiv Instruction Passed
 Checked instruction "%X = select i1 1, i8 17, i8 42"
Select Instruction Passed
 Checked instruction "%X = sext i8 -1 to i16"
Sext Instruction Passed
 Checked instruction "<result> = shl i32 1, 32"
Shl Instruction Passed
 Checked instruction "%result = shufflevector < 4 x i32 > %v1, < 4 x i32 > %v2, < 8 x i32 > < i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7 >"
ShuffleVector Instruction Passed
 Checked instruction "%X = sitofp i32 257 to float"
Sitofp Instruction Passed
 Checked instruction "<result> = srem i32 4, %var"
Srem Instruction Passed
 Checked instruction "store i32 3, i32* %ptr"
Store Instruction Passed
 Checked instruction "<result> = sub i32 4, %var"
Sub Instruction Passed
 Checked instruction "switch i32 %val, label %otherwise [ i32 0, label %onzero i32 1, label %onone i32 2, label %ontwo ]"
Switch Instruction Passed
 Checked instruction "%Y = trunc i32 123 to i1"
Trunc Instruction Passed
 Checked instruction "<result> = udiv i32 4, %var"
Udiv Instruction Passed
 Checked instruction "%Y = uitofp i8 -1 to double"
Uitofp Instruction Passed
 Checked instruction "unreachable"
Unreachable Instruction Passed
 Checked instruction "unwind"
Unwind Instruction Passed
 Checked instruction "<result> = urem i32 4, %var"
Urem Instruction Passed
 Checked instruction "%tmp = va_arg i8** %ap, i32"
VarArg Instruction Passed
 Checked instruction "<result> = xor i32 -1, %V"
Xor Instruction Passed
 Checked instruction "%X = zext i32 257 to i64"
Zext Instruction Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestIndirectFunctionCall 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCalVectorScale
INFO     Test completed in 0.0394260883331 seconds
INFO      It produced the following output:
No CAL devices found
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaSequence 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaGlobals
INFO     Test completed in 0.0960202217102 seconds
INFO      It produced the following output:
; ModuleID = 'copyFromGlobal_hb_0'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

@Pi = external global float, align 4

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_copyFromGlobal_hb_0(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %rt1 = load i32* %rt0
  %r0 = bitcast i32 %rt1 to i32
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %rt3 = load i32* %rt2
  %r1 = bitcast i32 %rt3 to i32
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %rt5 = load i32* %rt4
  %r2 = bitcast i32 %rt5 to i32
  %r3 = mul i32 %r1, %r2
  %r4 = add i32 %r0, %r3
  %r5 = ashr i32 %r4, 31
  %r6 = bitcast i32 127 to i32
  %r7 = and i32 %r5, %r6
  %r8 = add i32 %r7, %r4
  %r9 = ashr i32 %r8, 7
  %r10 = mul i32 %r9, 128
  %r11 = sub i32 %r4, %r10
  %r12 = sitofp i32 %r11 to float
  %rt6 = bitcast float* @Pi to float*
  %r13 = load float* %rt6, align 4
  %r14 = fmul float %r12, %r13
  %rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt8 = load i8** %rt7
  %rt9 = bitcast i8* %rt8 to i64*
  %r15 = load i64* %rt9, align 8
  %r16 = sext i32 %r4 to i64
  %rt10 = sext i32 %r4 to i64
  %r17 = mul i64 %rt10, 4
  %r18 = add i64 %r15, %r17
  %rt11 = inttoptr i64 %r18 to float*
  store float %r14, float* %rt11, align 4
  %r19 = bitcast i32 0 to i32
  %rt12 = zext i32 %r19 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_copyFromGlobal_hb_0_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt0.t03 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt0.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 0
  %rt1.t0 = load i32* %rt0.t03, align 4
  %rt1.t1 = load i32* %rt0.t1, align 4
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 0
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 2, i32 0
  %rt3.t0 = load i32* %rt2.t0, align 4
  %rt3.t1 = load i32* %rt2.t1, align 4
  %rt4.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 0
  %rt4.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 1, i32 0
  %rt5.t0 = load i32* %rt4.t0, align 4
  %rt5.t1 = load i32* %rt4.t1, align 4
  %r3.t0 = mul i32 %rt5.t0, %rt3.t0
  %r3.t1 = mul i32 %rt5.t1, %rt3.t1
  %r4.t0 = add i32 %r3.t0, %rt1.t0
  %r4.t1 = add i32 %r3.t1, %rt1.t1
  %r5.t0 = ashr i32 %r4.t0, 31
  %r5.t1 = ashr i32 %r4.t1, 31
  %r7.t0 = and i32 %r5.t0, 127
  %r7.t1 = and i32 %r5.t1, 127
  %r8.t0 = add i32 %r7.t0, %r4.t0
  %r8.t1 = add i32 %r7.t1, %r4.t1
  %r9.t01 = and i32 %r8.t0, -128
  %r9.t12 = and i32 %r8.t1, -128
  %r11.t0 = sub i32 %r4.t0, %r9.t01
  %r11.t1 = sub i32 %r4.t1, %r9.t12
  %r12.t0 = sitofp i32 %r11.t0 to float
  %r12.t1 = sitofp i32 %r11.t1 to float
  %0 = insertelement <2 x float> undef, float %r12.t0, i32 0
  %1 = insertelement <2 x float> %0, float %r12.t1, i32 1
  %r13.t0 = load float* @Pi, align 4
  %2 = insertelement <2 x float> undef, float %r13.t0, i32 0
  %3 = insertelement <2 x float> %2, float %r13.t0, i32 1
  %4 = fmul <2 x float> %1, %3
  %5 = extractelement <2 x float> %4, i32 0
  %6 = extractelement <2 x float> %4, i32 1
  %rt7.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt7.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 8
  %rt8.t0 = load i8** %rt7.t0, align 8
  %rt8.t1 = load i8** %rt7.t1, align 8
  %rt9.t0 = bitcast i8* %rt8.t0 to i64*
  %rt9.t1 = bitcast i8* %rt8.t1 to i64*
  %r15.t0 = load i64* %rt9.t0, align 8
  %r15.t1 = load i64* %rt9.t1, align 8
  %rt10.t0 = sext i32 %r4.t0 to i64
  %rt10.t1 = sext i32 %r4.t1 to i64
  %r17.t0 = shl nsw i64 %rt10.t0, 2
  %r17.t1 = shl nsw i64 %rt10.t1, 2
  %r18.t0 = add i64 %r15.t0, %r17.t0
  %r18.t1 = add i64 %r15.t1, %r17.t1
  %rt11.t0 = inttoptr i64 %r18.t0 to float*
  %rt11.t1 = inttoptr i64 %r18.t1 to float*
  store float %5, float* %rt11.t0, align 4
  store float %6, float* %rt11.t1, align 4
  %rt13.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt14.t0 = load i8** %rt13.t0, align 8
  %rt14.t1 = load i8** %rt13.t1, align 8
  %rt17.t0 = bitcast i8* %rt14.t0 to i32*
  %rt17.t1 = bitcast i8* %rt14.t1 to i32*
  store i32 6, i32* %rt17.t0, align 4
  store i32 6, i32* %rt17.t1, align 4
  ret void
}
cudaSetDevice() - 0 - Ocelot Dynamic Multicore CPU Backend (LLVM-JIT) 
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLLVMKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestParser
INFO     Test completed in 0.0458929538727 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestParser

Description: A test for the PTXParser class. Test Points: 1) Load a PTX file 
             and run it through the parser generating a module. Write the 
             module to an intermediate stream. Parse the stream again 
             generating a new module, compare both to make sure that they match.


Test Seed : 1302636531
Test time : 1.74046e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestEmulator 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestIndirectFunctionCall
INFO     Test completed in 0.0576529502869 seconds
INFO      It produced the following output:
; ModuleID = 'kernelEntry_hb_1'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_kernelEntry_hb_1(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_5_0002":
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %rt1 = load i32* %rt0
  %r0 = bitcast i32 %rt1 to i32
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %rt3 = load i32* %rt2
  %r1 = bitcast i32 %rt3 to i32
  %r2 = mul i32 %r0, %r1
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %rt5 = load i32* %rt4
  %r3 = bitcast i32 %rt5 to i32
  %r4 = add i32 %r3, %r2
  %rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt8 = load i8** %rt7
  %rt6 = getelementptr i8* %rt8, i32 8
  %rt9 = bitcast i8* %rt6 to i32*
  %r5 = load i32* %rt9, align 4
  %r6 = add i32 %r5, %r4
  %r7 = and i32 %r6, 3
  %r8 = bitcast i32 0 to i32
  %r9 = icmp ne i32 %r7, %r8
  %r10 = select i1 %r9, i32 3, i32 2
  %r11 = bitcast i32 4 to i32
  %rt10 = zext i32 %r11 to i64
  %rt11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt12 = load i8** %rt11
  %rt13 = ptrtoint i8* %rt12 to i64
  %rt14 = add i64 %rt10, %rt13
  %rt15 = inttoptr i64 %rt14 to i32*
  store i32 %r10, i32* %rt15, align 4
  %r12 = bitcast i32 0 to i32
  %rt16 = zext i32 %r12 to i64
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt18 = load i8** %rt17
  %rt19 = ptrtoint i8* %rt18 to i64
  %rt20 = add i64 %rt16, %rt19
  %rt21 = inttoptr i64 %rt20 to i32*
  store i32 1, i32* %rt21, align 4
  %r13 = bitcast i32 8 to i32
  %rt22 = zext i32 %r13 to i64
  %rt23 = add i64 %rt22, 32
  %rt24 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt25 = load i8** %rt24
  %rt26 = ptrtoint i8* %rt25 to i64
  %rt27 = add i64 %rt23, %rt26
  %rt28 = inttoptr i64 %rt27 to i32*
  store i32 %r4, i32* %rt28, align 4
  %rt29 = zext i32 %r13 to i64
  %rt30 = add i64 %rt29, 56
  %rt31 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt32 = load i8** %rt31
  %rt33 = ptrtoint i8* %rt32 to i64
  %rt34 = add i64 %rt30, %rt33
  %rt35 = inttoptr i64 %rt34 to i32*
  store i32 %r7, i32* %rt35, align 4
  br label %exit

exit:                                             ; preds = %"$BB_5_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_kernelEntry_hb_1_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt0.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 0
  %rt0.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 2, i32 0
  %rt1.t0 = load i32* %rt0.t0, align 4
  %rt1.t1 = load i32* %rt0.t1, align 4
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 0
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 1, i32 0
  %rt3.t0 = load i32* %rt2.t0, align 4
  %rt3.t1 = load i32* %rt2.t1, align 4
  %r2.t0 = mul i32 %rt3.t0, %rt1.t0
  %r2.t1 = mul i32 %rt3.t1, %rt1.t1
  %rt4.t01 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt4.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 0
  %rt5.t0 = load i32* %rt4.t01, align 4
  %rt5.t1 = load i32* %rt4.t1, align 4
  %r4.t0 = add i32 %rt5.t0, %r2.t0
  %r4.t1 = add i32 %rt5.t1, %r2.t1
  %rt7.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt7.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 8
  %rt8.t0 = load i8** %rt7.t0, align 8
  %rt8.t1 = load i8** %rt7.t1, align 8
  %rt6.t0 = getelementptr i8* %rt8.t0, i64 8
  %rt6.t1 = getelementptr i8* %rt8.t1, i64 8
  %rt9.t0 = bitcast i8* %rt6.t0 to i32*
  %rt9.t1 = bitcast i8* %rt6.t1 to i32*
  %r5.t0 = load i32* %rt9.t0, align 4
  %r5.t1 = load i32* %rt9.t1, align 4
  %r6.t0 = add i32 %r5.t0, %r4.t0
  %r6.t1 = add i32 %r5.t1, %r4.t1
  %r7.t0 = and i32 %r6.t0, 3
  %r7.t1 = and i32 %r6.t1, 3
  %r9.t0 = icmp ne i32 %r7.t0, 0
  %r9.t1 = icmp ne i32 %r7.t1, 0
  %r10.t0 = select i1 %r9.t0, i32 3, i32 2
  %r10.t1 = select i1 %r9.t1, i32 3, i32 2
  %rt11.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt12.t0 = load i8** %rt11.t0, align 8
  %rt12.t1 = load i8** %rt11.t1, align 8
  %rt13.t0 = ptrtoint i8* %rt12.t0 to i64
  %rt13.t1 = ptrtoint i8* %rt12.t1 to i64
  %rt14.t0 = add i64 %rt13.t0, 4
  %rt14.t1 = add i64 %rt13.t1, 4
  %rt15.t0 = inttoptr i64 %rt14.t0 to i32*
  %rt15.t1 = inttoptr i64 %rt14.t1 to i32*
  store i32 %r10.t0, i32* %rt15.t0, align 4
  store i32 %r10.t1, i32* %rt15.t1, align 4
  %rt18.t0 = load i8** %rt11.t0, align 8
  %rt18.t1 = load i8** %rt11.t1, align 8
  %rt21.t0 = bitcast i8* %rt18.t0 to i32*
  %rt21.t1 = bitcast i8* %rt18.t1 to i32*
  store i32 1, i32* %rt21.t0, align 4
  store i32 1, i32* %rt21.t1, align 4
  %rt25.t0 = load i8** %rt11.t0, align 8
  %rt25.t1 = load i8** %rt11.t1, align 8
  %rt26.t0 = ptrtoint i8* %rt25.t0 to i64
  %rt26.t1 = ptrtoint i8* %rt25.t1 to i64
  %rt27.t0 = add i64 %rt26.t0, 40
  %rt27.t1 = add i64 %rt26.t1, 40
  %rt28.t0 = inttoptr i64 %rt27.t0 to i32*
  %rt28.t1 = inttoptr i64 %rt27.t1 to i32*
  store i32 %r4.t0, i32* %rt28.t0, align 4
  store i32 %r4.t1, i32* %rt28.t1, align 4
  %rt32.t0 = load i8** %rt11.t0, align 8
  %rt32.t1 = load i8** %rt11.t1, align 8
  %rt33.t0 = ptrtoint i8* %rt32.t0 to i64
  %rt33.t1 = ptrtoint i8* %rt32.t1 to i64
  %rt34.t0 = add i64 %rt33.t0, 64
  %rt34.t1 = add i64 %rt33.t1, 64
  %rt35.t0 = inttoptr i64 %rt34.t0 to i32*
  %rt35.t1 = inttoptr i64 %rt34.t1 to i32*
  store i32 %r7.t0, i32* %rt35.t0, align 4
  store i32 %r7.t1, i32* %rt35.t1, align 4
  ret void
}
TestIndirectFunctionCall: ocelot/executive/implementation/LLVMDynamicTranslationCache.cpp:1052: void executive::setupCallTargets(ir::PTXKernel&, const executive::LLVMDynamicTranslationCache&): Assertion `0 && "unimplemented"' failed.

INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestPTXToLLVMTranslator -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestEmulator
INFO     Test completed in 0.0338189601898 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestEmulator

Description: 


Test Seed : 1302636531
Test time : 0.00290275

Status : Test output:
10 registers
Register test passed
Load test passed
Store test passed
no errors
Full kernel test passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestPTXAssembly 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestPTXToLLVMTranslator
INFO     Test completed in 0.0343868732452 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestPTXToLLVMTranslator

Description: This is a basic test that just tries to get through a 
             translation successfully of as many PTX programs as possible Test 
             Points: 1) Scan for all PTX files in a directory, try to 
             translate them.


Test Seed : 1302636531
Test time : 1.19209e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaMalloc 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaSequence
INFO     Test completed in 0.137496948242 seconds
INFO      It produced the following output:
; ModuleID = 'sequence_hb_10'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_sequence_hb_10(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %rt1 = load i32* %rt0
  %r0 = bitcast i32 %rt1 to i32
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %rt3 = load i32* %rt2
  %r1 = bitcast i32 %rt3 to i32
  %r2 = mul i32 %r0, %r1
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %rt5 = load i32* %rt4
  %r3 = bitcast i32 %rt5 to i32
  %r4 = add i32 %r3, %r2
  %rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt8 = load i8** %rt7
  %rt6 = getelementptr i8* %rt8, i32 8
  %rt9 = bitcast i8* %rt6 to i32*
  %r5 = load i32* %rt9, align 4
  %r6 = icmp sle i32 %r5, %r4
  %r7 = select i1 %r6, i32 12, i32 11
  %r8 = bitcast i32 4 to i32
  %rt10 = zext i32 %r8 to i64
  %rt11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt12 = load i8** %rt11
  %rt13 = ptrtoint i8* %rt12 to i64
  %rt14 = add i64 %rt10, %rt13
  %rt15 = inttoptr i64 %rt14 to i32*
  store i32 %r7, i32* %rt15, align 4
  %r9 = bitcast i32 0 to i32
  %rt16 = zext i32 %r9 to i64
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt18 = load i8** %rt17
  %rt19 = ptrtoint i8* %rt18 to i64
  %rt20 = add i64 %rt16, %rt19
  %rt21 = inttoptr i64 %rt20 to i32*
  store i32 1, i32* %rt21, align 4
  %r10 = bitcast i32 8 to i32
  %rt22 = zext i32 %r10 to i64
  %rt23 = add i64 %rt22, 32
  %rt24 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt25 = load i8** %rt24
  %rt26 = ptrtoint i8* %rt25 to i64
  %rt27 = add i64 %rt23, %rt26
  %rt28 = inttoptr i64 %rt27 to i32*
  store i32 %r4, i32* %rt28, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_sequence_hb_10_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt0.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 0
  %rt0.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 2, i32 0
  %rt1.t0 = load i32* %rt0.t0, align 4
  %rt1.t1 = load i32* %rt0.t1, align 4
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 0
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 1, i32 0
  %rt3.t0 = load i32* %rt2.t0, align 4
  %rt3.t1 = load i32* %rt2.t1, align 4
  %r2.t0 = mul i32 %rt3.t0, %rt1.t0
  %r2.t1 = mul i32 %rt3.t1, %rt1.t1
  %rt4.t01 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt4.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 0
  %rt5.t0 = load i32* %rt4.t01, align 4
  %rt5.t1 = load i32* %rt4.t1, align 4
  %r4.t0 = add i32 %rt5.t0, %r2.t0
  %r4.t1 = add i32 %rt5.t1, %r2.t1
  %rt7.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt7.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 8
  %rt8.t0 = load i8** %rt7.t0, align 8
  %rt8.t1 = load i8** %rt7.t1, align 8
  %rt6.t0 = getelementptr i8* %rt8.t0, i64 8
  %rt6.t1 = getelementptr i8* %rt8.t1, i64 8
  %rt9.t0 = bitcast i8* %rt6.t0 to i32*
  %rt9.t1 = bitcast i8* %rt6.t1 to i32*
  %r5.t0 = load i32* %rt9.t0, align 4
  %r5.t1 = load i32* %rt9.t1, align 4
  %r6.t0 = icmp sle i32 %r5.t0, %r4.t0
  %r6.t1 = icmp sle i32 %r5.t1, %r4.t1
  %r7.t0 = select i1 %r6.t0, i32 12, i32 11
  %r7.t1 = select i1 %r6.t1, i32 12, i32 11
  %rt11.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt12.t0 = load i8** %rt11.t0, align 8
  %rt12.t1 = load i8** %rt11.t1, align 8
  %rt13.t0 = ptrtoint i8* %rt12.t0 to i64
  %rt13.t1 = ptrtoint i8* %rt12.t1 to i64
  %rt14.t0 = add i64 %rt13.t0, 4
  %rt14.t1 = add i64 %rt13.t1, 4
  %rt15.t0 = inttoptr i64 %rt14.t0 to i32*
  %rt15.t1 = inttoptr i64 %rt14.t1 to i32*
  store i32 %r7.t0, i32* %rt15.t0, align 4
  store i32 %r7.t1, i32* %rt15.t1, align 4
  %rt18.t0 = load i8** %rt11.t0, align 8
  %rt18.t1 = load i8** %rt11.t1, align 8
  %rt21.t0 = bitcast i8* %rt18.t0 to i32*
  %rt21.t1 = bitcast i8* %rt18.t1 to i32*
  store i32 1, i32* %rt21.t0, align 4
  store i32 1, i32* %rt21.t1, align 4
  %rt25.t0 = load i8** %rt11.t0, align 8
  %rt25.t1 = load i8** %rt11.t1, align 8
  %rt26.t0 = ptrtoint i8* %rt25.t0 to i64
  %rt26.t1 = ptrtoint i8* %rt25.t1 to i64
  %rt27.t0 = add i64 %rt26.t0, 40
  %rt27.t1 = add i64 %rt26.t1, 40
  %rt28.t0 = inttoptr i64 %rt27.t0 to i32*
  %rt28.t1 = inttoptr i64 %rt27.t1 to i32*
  store i32 %r4.t0, i32* %rt28.t0, align 4
  store i32 %r4.t1, i32* %rt28.t1, align 4
  ret void
}
; ModuleID = 'sequence_hb_11'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_sequence_hb_11(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0003":
  %r0 = bitcast i32 8 to i32
  %rt0 = zext i32 %r0 to i64
  %rt1 = add i64 %rt0, 32
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt3 = load i8** %rt2
  %rt4 = ptrtoint i8* %rt3 to i64
  %rt5 = add i64 %rt1, %rt4
  %rt6 = inttoptr i64 %rt5 to i32*
  %r1 = load i32* %rt6, align 4
  %r2 = mul i32 %r1, 2
  %rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt8 = load i8** %rt7
  %rt9 = bitcast i8* %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = sext i32 %r1 to i64
  %rt10 = sext i32 %r1 to i64
  %r5 = mul i64 %rt10, 4
  %r6 = add i64 %r3, %r5
  %rt11 = inttoptr i64 %r6 to i32*
  store i32 %r2, i32* %rt11, align 4
  %r7 = bitcast i32 4 to i32
  %rt12 = zext i32 %r7 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 12, i32* %rt17, align 4
  %r8 = bitcast i32 0 to i32
  %rt18 = zext i32 %r8 to i64
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt20 = load i8** %rt19
  %rt21 = ptrtoint i8* %rt20 to i64
  %rt22 = add i64 %rt18, %rt21
  %rt23 = inttoptr i64 %rt22 to i32*
  store i32 0, i32* %rt23, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0003"
  ret void
}

define internal void @_Z_ocelotTranslated_sequence_hb_11_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt3.t0 = load i8** %rt2.t0, align 8
  %rt3.t1 = load i8** %rt2.t1, align 8
  %rt4.t0 = ptrtoint i8* %rt3.t0 to i64
  %rt4.t1 = ptrtoint i8* %rt3.t1 to i64
  %rt5.t0 = add i64 %rt4.t0, 40
  %rt5.t1 = add i64 %rt4.t1, 40
  %rt6.t0 = inttoptr i64 %rt5.t0 to i32*
  %rt6.t1 = inttoptr i64 %rt5.t1 to i32*
  %r1.t0 = load i32* %rt6.t0, align 4
  %r1.t1 = load i32* %rt6.t1, align 4
  %r2.t0 = shl i32 %r1.t0, 1
  %r2.t1 = shl i32 %r1.t1, 1
  %rt7.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt7.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 8
  %rt8.t0 = load i8** %rt7.t0, align 8
  %rt8.t1 = load i8** %rt7.t1, align 8
  %rt9.t0 = bitcast i8* %rt8.t0 to i64*
  %rt9.t1 = bitcast i8* %rt8.t1 to i64*
  %r3.t0 = load i64* %rt9.t0, align 8
  %r3.t1 = load i64* %rt9.t1, align 8
  %rt10.t0 = sext i32 %r1.t0 to i64
  %rt10.t1 = sext i32 %r1.t1 to i64
  %r5.t0 = shl nsw i64 %rt10.t0, 2
  %r5.t1 = shl nsw i64 %rt10.t1, 2
  %r6.t0 = add i64 %r3.t0, %r5.t0
  %r6.t1 = add i64 %r3.t1, %r5.t1
  %rt11.t0 = inttoptr i64 %r6.t0 to i32*
  %rt11.t1 = inttoptr i64 %r6.t1 to i32*
  store i32 %r2.t0, i32* %rt11.t0, align 4
  store i32 %r2.t1, i32* %rt11.t1, align 4
  %rt14.t0 = load i8** %rt2.t0, align 8
  %rt14.t1 = load i8** %rt2.t1, align 8
  %rt15.t0 = ptrtoint i8* %rt14.t0 to i64
  %rt15.t1 = ptrtoint i8* %rt14.t1 to i64
  %rt16.t0 = add i64 %rt15.t0, 4
  %rt16.t1 = add i64 %rt15.t1, 4
  %rt17.t0 = inttoptr i64 %rt16.t0 to i32*
  %rt17.t1 = inttoptr i64 %rt16.t1 to i32*
  store i32 12, i32* %rt17.t0, align 4
  store i32 12, i32* %rt17.t1, align 4
  %rt20.t0 = load i8** %rt2.t0, align 8
  %rt20.t1 = load i8** %rt2.t1, align 8
  %rt23.t0 = bitcast i8* %rt20.t0 to i32*
  %rt23.t1 = bitcast i8* %rt20.t1 to i32*
  store i32 0, i32* %rt23.t0, align 4
  store i32 0, i32* %rt23.t1, align 4
  ret void
}
; ModuleID = 'sequence_hb_12'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_sequence_hb_12(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0004":
  %r0 = bitcast i32 0 to i32
  %rt0 = zext i32 %r0 to i64
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt2 = load i8** %rt1
  %rt3 = ptrtoint i8* %rt2 to i64
  %rt4 = add i64 %rt0, %rt3
  %rt5 = inttoptr i64 %rt4 to i32*
  store i32 6, i32* %rt5, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0004"
  ret void
}

define internal void @_Z_ocelotTranslated_sequence_hb_12_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt1.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt1.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt2.t0 = load i8** %rt1.t0, align 8
  %rt2.t1 = load i8** %rt1.t1, align 8
  %rt5.t0 = bitcast i8* %rt2.t0 to i32*
  %rt5.t1 = bitcast i8* %rt2.t1 to i32*
  store i32 6, i32* %rt5.t0, align 4
  store i32 6, i32* %rt5.t1, align 4
  ret void
}
; ModuleID = 'testShr_hb_3'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_testShr_hb_3(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_5_0002":
  %r0 = bitcast i64 0 to i64
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %rt1 = load i32* %rt0
  %r1 = bitcast i32 %rt1 to i32
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %rt3 = load i32* %rt2
  %r2 = bitcast i32 %rt3 to i32
  %r3 = mul i32 %r1, %r2
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %rt5 = load i32* %rt4
  %r4 = bitcast i32 %rt5 to i32
  %r5 = add i32 %r3, %r4
  %r6 = mul i32 %r5, 2
  %r7 = zext i32 %r4 to i64
  %rt6 = zext i32 %r4 to i64
  %r8 = mul i64 %rt6, 4
  %r9 = add i64 %r0, %r8
  %rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 5
  %rt8 = load i8** %rt7
  %rt9 = ptrtoint i8* %rt8 to i64
  %rt10 = add i64 %r9, %rt9
  %rt11 = inttoptr i64 %rt10 to i32*
  store i32 %r6, i32* %rt11, align 4
  %r10 = bitcast i32 4 to i32
  %rt12 = zext i32 %r10 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 4, i32* %rt17, align 4
  %r11 = bitcast i32 0 to i32
  %rt18 = zext i32 %r11 to i64
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt20 = load i8** %rt19
  %rt21 = ptrtoint i8* %rt20 to i64
  %rt22 = add i64 %rt18, %rt21
  %rt23 = inttoptr i64 %rt22 to i32*
  store i32 5, i32* %rt23, align 4
  %r12 = bitcast i32 8 to i32
  %rt24 = zext i32 %r12 to i64
  %rt25 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt26 = load i8** %rt25
  %rt27 = ptrtoint i8* %rt26 to i64
  %rt28 = add i64 %rt24, %rt27
  %rt29 = inttoptr i64 %rt28 to i64*
  store i64 %r0, i64* %rt29, align 8
  %rt30 = zext i32 %r12 to i64
  %rt31 = add i64 %rt30, 32
  %rt32 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt33 = load i8** %rt32
  %rt34 = ptrtoint i8* %rt33 to i64
  %rt35 = add i64 %rt31, %rt34
  %rt36 = inttoptr i64 %rt35 to i32*
  store i32 %r4, i32* %rt36, align 4
  %rt37 = zext i32 %r12 to i64
  %rt38 = add i64 %rt37, 40
  %rt39 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt40 = load i8** %rt39
  %rt41 = ptrtoint i8* %rt40 to i64
  %rt42 = add i64 %rt38, %rt41
  %rt43 = inttoptr i64 %rt42 to i32*
  store i32 %r5, i32* %rt43, align 4
  br label %exit

exit:                                             ; preds = %"$BB_5_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_testShr_hb_3_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt0.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 0
  %rt0.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 2, i32 0
  %rt1.t0 = load i32* %rt0.t0, align 4
  %rt1.t1 = load i32* %rt0.t1, align 4
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 0
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 1, i32 0
  %rt3.t0 = load i32* %rt2.t0, align 4
  %rt3.t1 = load i32* %rt2.t1, align 4
  %r3.t0 = mul i32 %rt3.t0, %rt1.t0
  %r3.t1 = mul i32 %rt3.t1, %rt1.t1
  %rt4.t01 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt4.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 0
  %rt5.t0 = load i32* %rt4.t01, align 4
  %rt5.t1 = load i32* %rt4.t1, align 4
  %r5.t0 = add i32 %rt5.t0, %r3.t0
  %r5.t1 = add i32 %rt5.t1, %r3.t1
  %r6.t0 = shl i32 %r5.t0, 1
  %r6.t1 = shl i32 %r5.t1, 1
  %rt6.t0 = zext i32 %rt5.t0 to i64
  %rt6.t1 = zext i32 %rt5.t1 to i64
  %r8.t0 = shl nuw nsw i64 %rt6.t0, 2
  %r8.t1 = shl nuw nsw i64 %rt6.t1, 2
  %rt7.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 5
  %rt7.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 5
  %rt8.t0 = load i8** %rt7.t0, align 8
  %rt8.t1 = load i8** %rt7.t1, align 8
  %rt9.t0 = ptrtoint i8* %rt8.t0 to i64
  %rt9.t1 = ptrtoint i8* %rt8.t1 to i64
  %rt10.t0 = add i64 %rt9.t0, %r8.t0
  %rt10.t1 = add i64 %rt9.t1, %r8.t1
  %rt11.t0 = inttoptr i64 %rt10.t0 to i32*
  %rt11.t1 = inttoptr i64 %rt10.t1 to i32*
  store i32 %r6.t0, i32* %rt11.t0, align 4
  store i32 %r6.t1, i32* %rt11.t1, align 4
  %rt13.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt14.t0 = load i8** %rt13.t0, align 8
  %rt14.t1 = load i8** %rt13.t1, align 8
  %rt15.t0 = ptrtoint i8* %rt14.t0 to i64
  %rt15.t1 = ptrtoint i8* %rt14.t1 to i64
  %rt16.t0 = add i64 %rt15.t0, 4
  %rt16.t1 = add i64 %rt15.t1, 4
  %rt17.t0 = inttoptr i64 %rt16.t0 to i32*
  %rt17.t1 = inttoptr i64 %rt16.t1 to i32*
  store i32 4, i32* %rt17.t0, align 4
  store i32 4, i32* %rt17.t1, align 4
  %rt20.t0 = load i8** %rt13.t0, align 8
  %rt20.t1 = load i8** %rt13.t1, align 8
  %rt23.t0 = bitcast i8* %rt20.t0 to i32*
  %rt23.t1 = bitcast i8* %rt20.t1 to i32*
  store i32 5, i32* %rt23.t0, align 4
  store i32 5, i32* %rt23.t1, align 4
  %rt26.t0 = load i8** %rt13.t0, align 8
  %rt26.t1 = load i8** %rt13.t1, align 8
  %rt27.t0 = ptrtoint i8* %rt26.t0 to i64
  %rt27.t1 = ptrtoint i8* %rt26.t1 to i64
  %rt28.t0 = add i64 %rt27.t0, 8
  %rt28.t1 = add i64 %rt27.t1, 8
  %rt29.t0 = inttoptr i64 %rt28.t0 to i64*
  %rt29.t1 = inttoptr i64 %rt28.t1 to i64*
  store i64 0, i64* %rt29.t0, align 8
  store i64 0, i64* %rt29.t1, align 8
  %rt33.t0 = load i8** %rt13.t0, align 8
  %rt33.t1 = load i8** %rt13.t1, align 8
  %rt34.t0 = ptrtoint i8* %rt33.t0 to i64
  %rt34.t1 = ptrtoint i8* %rt33.t1 to i64
  %rt35.t0 = add i64 %rt34.t0, 40
  %rt35.t1 = add i64 %rt34.t1, 40
  %rt36.t0 = inttoptr i64 %rt35.t0 to i32*
  %rt36.t1 = inttoptr i64 %rt35.t1 to i32*
  store i32 %rt5.t0, i32* %rt36.t0, align 4
  store i32 %rt5.t1, i32* %rt36.t1, align 4
  %rt40.t0 = load i8** %rt13.t0, align 8
  %rt40.t1 = load i8** %rt13.t1, align 8
  %rt41.t0 = ptrtoint i8* %rt40.t0 to i64
  %rt41.t1 = ptrtoint i8* %rt40.t1 to i64
  %rt42.t0 = add i64 %rt41.t0, 48
  %rt42.t1 = add i64 %rt41.t1, 48
  %rt43.t0 = inttoptr i64 %rt42.t0 to i32*
  %rt43.t1 = inttoptr i64 %rt42.t1 to i32*
  store i32 %r5.t0, i32* %rt43.t0, align 4
  store i32 %r5.t1, i32* %rt43.t1, align 4
  ret void
}
; ModuleID = 'testShr_hb_4'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_testShr_hb_4(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_5_0002_bar":
  %r0 = bitcast i32 8 to i32
  %rt0 = zext i32 %r0 to i64
  %rt1 = add i64 %rt0, 40
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt3 = load i8** %rt2
  %rt4 = ptrtoint i8* %rt3 to i64
  %rt5 = add i64 %rt1, %rt4
  %rt6 = inttoptr i64 %rt5 to i32*
  %r1 = load i32* %rt6, align 4
  %rt7 = zext i32 %r0 to i64
  %rt8 = add i64 %rt7, 32
  %rt9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt10 = load i8** %rt9
  %rt11 = ptrtoint i8* %rt10 to i64
  %rt12 = add i64 %rt8, %rt11
  %rt13 = inttoptr i64 %rt12 to i32*
  %r2 = load i32* %rt13, align 4
  %rt14 = zext i32 %r0 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i64*
  %r3 = load i64* %rt19, align 8
  %r4 = xor i32 %r2, 1
  %r5 = zext i32 %r4 to i64
  %rt20 = zext i32 %r4 to i64
  %r6 = mul i64 %rt20, 4
  %r7 = add i64 %r3, %r6
  %rt21 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 5
  %rt22 = load i8** %rt21
  %rt23 = ptrtoint i8* %rt22 to i64
  %rt24 = add i64 %r7, %rt23
  %rt25 = inttoptr i64 %rt24 to i32*
  %r8 = load i32* %rt25, align 4
  %r9 = and i32 %r1, 1
  %r10 = bitcast i32 0 to i32
  %r11 = icmp eq i32 %r9, %r10
  %r12 = select i1 %r11, i32 6, i32 5
  %r13 = bitcast i32 4 to i32
  %rt26 = zext i32 %r13 to i64
  %rt27 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt28 = load i8** %rt27
  %rt29 = ptrtoint i8* %rt28 to i64
  %rt30 = add i64 %rt26, %rt29
  %rt31 = inttoptr i64 %rt30 to i32*
  store i32 %r12, i32* %rt31, align 4
  %r14 = bitcast i32 0 to i32
  %rt32 = zext i32 %r14 to i64
  %rt33 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt34 = load i8** %rt33
  %rt35 = ptrtoint i8* %rt34 to i64
  %rt36 = add i64 %rt32, %rt35
  %rt37 = inttoptr i64 %rt36 to i32*
  store i32 1, i32* %rt37, align 4
  %r15 = bitcast i32 8 to i32
  %rt38 = zext i32 %r15 to i64
  %rt39 = add i64 %rt38, 112
  %rt40 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt41 = load i8** %rt40
  %rt42 = ptrtoint i8* %rt41 to i64
  %rt43 = add i64 %rt39, %rt42
  %rt44 = inttoptr i64 %rt43 to i32*
  store i32 %r8, i32* %rt44, align 4
  br label %exit

exit:                                             ; preds = %"$BB_5_0002_bar"
  ret void
}

define internal void @_Z_ocelotTranslated_testShr_hb_4_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt3.t0 = load i8** %rt2.t0, align 8
  %rt3.t1 = load i8** %rt2.t1, align 8
  %rt4.t0 = ptrtoint i8* %rt3.t0 to i64
  %rt4.t1 = ptrtoint i8* %rt3.t1 to i64
  %rt5.t0 = add i64 %rt4.t0, 48
  %rt5.t1 = add i64 %rt4.t1, 48
  %rt6.t0 = inttoptr i64 %rt5.t0 to i32*
  %rt6.t1 = inttoptr i64 %rt5.t1 to i32*
  %r1.t0 = load i32* %rt6.t0, align 4
  %r1.t1 = load i32* %rt6.t1, align 4
  %rt10.t0 = load i8** %rt2.t0, align 8
  %rt10.t1 = load i8** %rt2.t1, align 8
  %rt11.t0 = ptrtoint i8* %rt10.t0 to i64
  %rt11.t1 = ptrtoint i8* %rt10.t1 to i64
  %rt12.t0 = add i64 %rt11.t0, 40
  %rt12.t1 = add i64 %rt11.t1, 40
  %rt13.t0 = inttoptr i64 %rt12.t0 to i32*
  %rt13.t1 = inttoptr i64 %rt12.t1 to i32*
  %r2.t0 = load i32* %rt13.t0, align 4
  %r2.t1 = load i32* %rt13.t1, align 4
  %rt16.t0 = load i8** %rt2.t0, align 8
  %rt16.t1 = load i8** %rt2.t1, align 8
  %rt17.t0 = ptrtoint i8* %rt16.t0 to i64
  %rt17.t1 = ptrtoint i8* %rt16.t1 to i64
  %rt18.t0 = add i64 %rt17.t0, 8
  %rt18.t1 = add i64 %rt17.t1, 8
  %rt19.t0 = inttoptr i64 %rt18.t0 to i64*
  %rt19.t1 = inttoptr i64 %rt18.t1 to i64*
  %r3.t0 = load i64* %rt19.t0, align 8
  %r3.t1 = load i64* %rt19.t1, align 8
  %r4.t0 = xor i32 %r2.t0, 1
  %r4.t1 = xor i32 %r2.t1, 1
  %rt20.t0 = zext i32 %r4.t0 to i64
  %rt20.t1 = zext i32 %r4.t1 to i64
  %r6.t0 = shl nuw nsw i64 %rt20.t0, 2
  %r6.t1 = shl nuw nsw i64 %rt20.t1, 2
  %rt21.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 5
  %rt21.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 5
  %rt22.t0 = load i8** %rt21.t0, align 8
  %rt22.t1 = load i8** %rt21.t1, align 8
  %rt23.t0 = ptrtoint i8* %rt22.t0 to i64
  %rt23.t1 = ptrtoint i8* %rt22.t1 to i64
  %r7.t0 = add i64 %r3.t0, %r6.t0
  %rt24.t0 = add i64 %r7.t0, %rt23.t0
  %r7.t1 = add i64 %r3.t1, %r6.t1
  %rt24.t1 = add i64 %r7.t1, %rt23.t1
  %rt25.t0 = inttoptr i64 %rt24.t0 to i32*
  %rt25.t1 = inttoptr i64 %rt24.t1 to i32*
  %r8.t0 = load i32* %rt25.t0, align 4
  %r8.t1 = load i32* %rt25.t1, align 4
  %r9.t0 = and i32 %r1.t0, 1
  %r9.t1 = and i32 %r1.t1, 1
  %0 = xor i32 %r9.t0, 1
  %1 = add i32 %0, 5
  %2 = xor i32 %r9.t1, 1
  %3 = add i32 %2, 5
  %rt28.t0 = load i8** %rt2.t0, align 8
  %rt28.t1 = load i8** %rt2.t1, align 8
  %rt29.t0 = ptrtoint i8* %rt28.t0 to i64
  %rt29.t1 = ptrtoint i8* %rt28.t1 to i64
  %rt30.t0 = add i64 %rt29.t0, 4
  %rt30.t1 = add i64 %rt29.t1, 4
  %rt31.t0 = inttoptr i64 %rt30.t0 to i32*
  %rt31.t1 = inttoptr i64 %rt30.t1 to i32*
  store i32 %1, i32* %rt31.t0, align 4
  store i32 %3, i32* %rt31.t1, align 4
  %rt34.t0 = load i8** %rt2.t0, align 8
  %rt34.t1 = load i8** %rt2.t1, align 8
  %rt37.t0 = bitcast i8* %rt34.t0 to i32*
  %rt37.t1 = bitcast i8* %rt34.t1 to i32*
  store i32 1, i32* %rt37.t0, align 4
  store i32 1, i32* %rt37.t1, align 4
  %rt41.t0 = load i8** %rt2.t0, align 8
  %rt41.t1 = load i8** %rt2.t1, align 8
  %rt42.t0 = ptrtoint i8* %rt41.t0 to i64
  %rt42.t1 = ptrtoint i8* %rt41.t1 to i64
  %rt43.t0 = add i64 %rt42.t0, 120
  %rt43.t1 = add i64 %rt42.t1, 120
  %rt44.t0 = inttoptr i64 %rt43.t0 to i32*
  %rt44.t1 = inttoptr i64 %rt43.t1 to i32*
  store i32 %r8.t0, i32* %rt44.t0, align 4
  store i32 %r8.t1, i32* %rt44.t1, align 4
  ret void
}
; ModuleID = 'testShr_hb_6'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_testShr_hb_6(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_5_0004":
  %r0 = bitcast i32 8 to i32
  %rt0 = zext i32 %r0 to i64
  %rt1 = add i64 %rt0, 112
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt3 = load i8** %rt2
  %rt4 = ptrtoint i8* %rt3 to i64
  %rt5 = add i64 %rt1, %rt4
  %rt6 = inttoptr i64 %rt5 to i32*
  %r1 = load i32* %rt6, align 4
  %r2 = mul i32 %r1, 13
  %r3 = bitcast i32 4 to i32
  %rt7 = zext i32 %r3 to i64
  %rt8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt9 = load i8** %rt8
  %rt10 = ptrtoint i8* %rt9 to i64
  %rt11 = add i64 %rt7, %rt10
  %rt12 = inttoptr i64 %rt11 to i32*
  store i32 7, i32* %rt12, align 4
  %r4 = bitcast i32 0 to i32
  %rt13 = zext i32 %r4 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 0, i32* %rt18, align 4
  %r5 = bitcast i32 8 to i32
  %rt19 = zext i32 %r5 to i64
  %rt20 = add i64 %rt19, 144
  %rt21 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt22 = load i8** %rt21
  %rt23 = ptrtoint i8* %rt22 to i64
  %rt24 = add i64 %rt20, %rt23
  %rt25 = inttoptr i64 %rt24 to i32*
  store i32 %r2, i32* %rt25, align 4
  br label %exit

exit:                                             ; preds = %"$BB_5_0004"
  ret void
}

define internal void @_Z_ocelotTranslated_testShr_hb_6_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt3.t0 = load i8** %rt2.t0, align 8
  %rt3.t1 = load i8** %rt2.t1, align 8
  %rt4.t0 = ptrtoint i8* %rt3.t0 to i64
  %rt4.t1 = ptrtoint i8* %rt3.t1 to i64
  %rt5.t0 = add i64 %rt4.t0, 120
  %rt5.t1 = add i64 %rt4.t1, 120
  %rt6.t0 = inttoptr i64 %rt5.t0 to i32*
  %rt6.t1 = inttoptr i64 %rt5.t1 to i32*
  %r1.t0 = load i32* %rt6.t0, align 4
  %r1.t1 = load i32* %rt6.t1, align 4
  %r2.t0 = mul i32 %r1.t0, 13
  %r2.t1 = mul i32 %r1.t1, 13
  %rt9.t0 = load i8** %rt2.t0, align 8
  %rt9.t1 = load i8** %rt2.t1, align 8
  %rt10.t0 = ptrtoint i8* %rt9.t0 to i64
  %rt10.t1 = ptrtoint i8* %rt9.t1 to i64
  %rt11.t0 = add i64 %rt10.t0, 4
  %rt11.t1 = add i64 %rt10.t1, 4
  %rt12.t0 = inttoptr i64 %rt11.t0 to i32*
  %rt12.t1 = inttoptr i64 %rt11.t1 to i32*
  store i32 7, i32* %rt12.t0, align 4
  store i32 7, i32* %rt12.t1, align 4
  %rt15.t0 = load i8** %rt2.t0, align 8
  %rt15.t1 = load i8** %rt2.t1, align 8
  %rt18.t0 = bitcast i8* %rt15.t0 to i32*
  %rt18.t1 = bitcast i8* %rt15.t1 to i32*
  store i32 0, i32* %rt18.t0, align 4
  store i32 0, i32* %rt18.t1, align 4
  %rt22.t0 = load i8** %rt2.t0, align 8
  %rt22.t1 = load i8** %rt2.t1, align 8
  %rt23.t0 = ptrtoint i8* %rt22.t0 to i64
  %rt23.t1 = ptrtoint i8* %rt22.t1 to i64
  %rt24.t0 = add i64 %rt23.t0, 152
  %rt24.t1 = add i64 %rt23.t1, 152
  %rt25.t0 = inttoptr i64 %rt24.t0 to i32*
  %rt25.t1 = inttoptr i64 %rt24.t1 to i32*
  store i32 %r2.t0, i32* %rt25.t0, align 4
  store i32 %r2.t1, i32* %rt25.t1, align 4
  ret void
}
; ModuleID = 'testShr_hb_5'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_testShr_hb_5(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_5_0003":
  %r0 = bitcast i32 8 to i32
  %rt0 = zext i32 %r0 to i64
  %rt1 = add i64 %rt0, 112
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt3 = load i8** %rt2
  %rt4 = ptrtoint i8* %rt3 to i64
  %rt5 = add i64 %rt1, %rt4
  %rt6 = inttoptr i64 %rt5 to i32*
  %r1 = load i32* %rt6, align 4
  %r2 = mul i32 %r1, 19
  %r3 = bitcast i32 4 to i32
  %rt7 = zext i32 %r3 to i64
  %rt8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt9 = load i8** %rt8
  %rt10 = ptrtoint i8* %rt9 to i64
  %rt11 = add i64 %rt7, %rt10
  %rt12 = inttoptr i64 %rt11 to i32*
  store i32 7, i32* %rt12, align 4
  %r4 = bitcast i32 0 to i32
  %rt13 = zext i32 %r4 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 1, i32* %rt18, align 4
  %r5 = bitcast i32 8 to i32
  %rt19 = zext i32 %r5 to i64
  %rt20 = add i64 %rt19, 144
  %rt21 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt22 = load i8** %rt21
  %rt23 = ptrtoint i8* %rt22 to i64
  %rt24 = add i64 %rt20, %rt23
  %rt25 = inttoptr i64 %rt24 to i32*
  store i32 %r2, i32* %rt25, align 4
  br label %exit

exit:                                             ; preds = %"$BB_5_0003"
  ret void
}

define internal void @_Z_ocelotTranslated_testShr_hb_5_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt3.t0 = load i8** %rt2.t0, align 8
  %rt3.t1 = load i8** %rt2.t1, align 8
  %rt4.t0 = ptrtoint i8* %rt3.t0 to i64
  %rt4.t1 = ptrtoint i8* %rt3.t1 to i64
  %rt5.t0 = add i64 %rt4.t0, 120
  %rt5.t1 = add i64 %rt4.t1, 120
  %rt6.t0 = inttoptr i64 %rt5.t0 to i32*
  %rt6.t1 = inttoptr i64 %rt5.t1 to i32*
  %r1.t0 = load i32* %rt6.t0, align 4
  %r1.t1 = load i32* %rt6.t1, align 4
  %r2.t0 = mul i32 %r1.t0, 19
  %r2.t1 = mul i32 %r1.t1, 19
  %rt9.t0 = load i8** %rt2.t0, align 8
  %rt9.t1 = load i8** %rt2.t1, align 8
  %rt10.t0 = ptrtoint i8* %rt9.t0 to i64
  %rt10.t1 = ptrtoint i8* %rt9.t1 to i64
  %rt11.t0 = add i64 %rt10.t0, 4
  %rt11.t1 = add i64 %rt10.t1, 4
  %rt12.t0 = inttoptr i64 %rt11.t0 to i32*
  %rt12.t1 = inttoptr i64 %rt11.t1 to i32*
  store i32 7, i32* %rt12.t0, align 4
  store i32 7, i32* %rt12.t1, align 4
  %rt15.t0 = load i8** %rt2.t0, align 8
  %rt15.t1 = load i8** %rt2.t1, align 8
  %rt18.t0 = bitcast i8* %rt15.t0 to i32*
  %rt18.t1 = bitcast i8* %rt15.t1 to i32*
  store i32 1, i32* %rt18.t0, align 4
  store i32 1, i32* %rt18.t1, align 4
  %rt22.t0 = load i8** %rt2.t0, align 8
  %rt22.t1 = load i8** %rt2.t1, align 8
  %rt23.t0 = ptrtoint i8* %rt22.t0 to i64
  %rt23.t1 = ptrtoint i8* %rt22.t1 to i64
  %rt24.t0 = add i64 %rt23.t0, 152
  %rt24.t1 = add i64 %rt23.t1, 152
  %rt25.t0 = inttoptr i64 %rt24.t0 to i32*
  %rt25.t1 = inttoptr i64 %rt24.t1 to i32*
  store i32 %r2.t0, i32* %rt25.t0, align 4
  store i32 %r2.t1, i32* %rt25.t1, align 4
  ret void
}
; ModuleID = 'testShr_hb_7'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_testShr_hb_7(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_5_0005":
  %r0 = bitcast i32 8 to i32
  %rt0 = zext i32 %r0 to i64
  %rt1 = add i64 %rt0, 144
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt3 = load i8** %rt2
  %rt4 = ptrtoint i8* %rt3 to i64
  %rt5 = add i64 %rt1, %rt4
  %rt6 = inttoptr i64 %rt5 to i32*
  %r1 = load i32* %rt6, align 4
  %rt7 = zext i32 %r0 to i64
  %rt8 = add i64 %rt7, 40
  %rt9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt10 = load i8** %rt9
  %rt11 = ptrtoint i8* %rt10 to i64
  %rt12 = add i64 %rt8, %rt11
  %rt13 = inttoptr i64 %rt12 to i32*
  %r2 = load i32* %rt13, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt15 = load i8** %rt14
  %rt16 = bitcast i8* %rt15 to i64*
  %r3 = load i64* %rt16, align 8
  %r4 = sext i32 %r2 to i64
  %rt17 = sext i32 %r2 to i64
  %r5 = mul i64 %rt17, 4
  %r6 = add i64 %r3, %r5
  %rt18 = inttoptr i64 %r6 to i32*
  store i32 %r1, i32* %rt18, align 4
  %r7 = bitcast i32 0 to i32
  %rt19 = zext i32 %r7 to i64
  %rt20 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt21 = load i8** %rt20
  %rt22 = ptrtoint i8* %rt21 to i64
  %rt23 = add i64 %rt19, %rt22
  %rt24 = inttoptr i64 %rt23 to i32*
  store i32 6, i32* %rt24, align 4
  br label %exit

exit:                                             ; preds = %"$BB_5_0005"
  ret void
}

define internal void @_Z_ocelotTranslated_testShr_hb_7_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt3.t0 = load i8** %rt2.t0, align 8
  %rt3.t1 = load i8** %rt2.t1, align 8
  %rt4.t0 = ptrtoint i8* %rt3.t0 to i64
  %rt4.t1 = ptrtoint i8* %rt3.t1 to i64
  %rt5.t0 = add i64 %rt4.t0, 152
  %rt5.t1 = add i64 %rt4.t1, 152
  %rt6.t0 = inttoptr i64 %rt5.t0 to i32*
  %rt6.t1 = inttoptr i64 %rt5.t1 to i32*
  %r1.t0 = load i32* %rt6.t0, align 4
  %r1.t1 = load i32* %rt6.t1, align 4
  %rt10.t0 = load i8** %rt2.t0, align 8
  %rt10.t1 = load i8** %rt2.t1, align 8
  %rt11.t0 = ptrtoint i8* %rt10.t0 to i64
  %rt11.t1 = ptrtoint i8* %rt10.t1 to i64
  %rt12.t0 = add i64 %rt11.t0, 48
  %rt12.t1 = add i64 %rt11.t1, 48
  %rt13.t0 = inttoptr i64 %rt12.t0 to i32*
  %rt13.t1 = inttoptr i64 %rt12.t1 to i32*
  %r2.t0 = load i32* %rt13.t0, align 4
  %r2.t1 = load i32* %rt13.t1, align 4
  %rt14.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt14.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 8
  %rt15.t0 = load i8** %rt14.t0, align 8
  %rt15.t1 = load i8** %rt14.t1, align 8
  %rt16.t0 = bitcast i8* %rt15.t0 to i64*
  %rt16.t1 = bitcast i8* %rt15.t1 to i64*
  %r3.t0 = load i64* %rt16.t0, align 8
  %r3.t1 = load i64* %rt16.t1, align 8
  %rt17.t0 = sext i32 %r2.t0 to i64
  %rt17.t1 = sext i32 %r2.t1 to i64
  %r5.t0 = shl nsw i64 %rt17.t0, 2
  %r5.t1 = shl nsw i64 %rt17.t1, 2
  %r6.t0 = add i64 %r3.t0, %r5.t0
  %r6.t1 = add i64 %r3.t1, %r5.t1
  %rt18.t0 = inttoptr i64 %r6.t0 to i32*
  %rt18.t1 = inttoptr i64 %r6.t1 to i32*
  store i32 %r1.t0, i32* %rt18.t0, align 4
  store i32 %r1.t1, i32* %rt18.t1, align 4
  %rt21.t0 = load i8** %rt2.t0, align 8
  %rt21.t1 = load i8** %rt2.t1, align 8
  %rt24.t0 = bitcast i8* %rt21.t0 to i32*
  %rt24.t1 = bitcast i8* %rt21.t1 to i32*
  store i32 6, i32* %rt24.t0, align 4
  store i32 6, i32* %rt24.t1, align 4
  ret void
}
Loaded libcuda.so explicitly; unloading now.
A_host = 0x2a21b80
A_gpu = 0x2a19f00
cudaMemcpy(0x2a21b80, 0x2a19f00) - APP
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestConvergence 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaMalloc
INFO     Test completed in 0.0621020793915 seconds
INFO      It produced the following output:
test_malloc(256, 128)
PASSED
test_mallocArray(256, 128)
checking results from last cudaMemcpyFromArray
PASSED
[1] mallocing pitch
[2] memcpying2d
[3] memcpying
[4] checking for errors
[5] mallocing
[6] memcpying
[7] memcpying
[8] final free
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLexer -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLexer
INFO     Test completed in 0.0312840938568 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLexer

Description: Tests for the PTX lexer. Test Point 1: Scan a PTX file and 
             write out a temp stream, scan the stream again and make sure that the 
             two sets of tokens match


Test Seed : 1302636531
Test time : 1.3113e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaTexture2D 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestConvergence
INFO     Test completed in 0.05974817276 seconds
INFO      It produced the following output:
; ModuleID = 'convergence_hb_0'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_convergence_hb_0(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %rt1 = load i32* %rt0
  %r0 = bitcast i32 %rt1 to i32
  %r1 = sitofp i32 %r0 to float
  %r2 = fadd float %r1, %r1
  %r3 = bitcast float 1.000000e+00 to float
  %r4 = fadd float %r2, %r3
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt3 = load i8** %rt2
  %rt4 = bitcast i8* %rt3 to i64*
  %r5 = load i64* %rt4, align 8
  %r6 = sext i32 %r0 to i64
  %rt5 = sext i32 %r0 to i64
  %r7 = mul i64 %rt5, 4
  %r8 = add i64 %r5, %r7
  %rt6 = inttoptr i64 %r8 to float*
  store float %r4, float* %rt6, align 4
  %r9 = bitcast i32 0 to i32
  %rt7 = zext i32 %r9 to i64
  %rt8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt9 = load i8** %rt8
  %rt10 = ptrtoint i8* %rt9 to i64
  %rt11 = add i64 %rt7, %rt10
  %rt12 = inttoptr i64 %rt11 to i32*
  store i32 6, i32* %rt12, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_convergence_hb_0_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt0.t01 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt0.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 0
  %rt1.t0 = load i32* %rt0.t01, align 4
  %rt1.t1 = load i32* %rt0.t1, align 4
  %r1.t0 = sitofp i32 %rt1.t0 to float
  %r1.t1 = sitofp i32 %rt1.t1 to float
  %0 = insertelement <2 x float> undef, float %r1.t0, i32 0
  %1 = insertelement <2 x float> %0, float %r1.t1, i32 1
  %2 = fadd <2 x float> %1, %1
  %3 = fadd <2 x float> %2, <float 1.000000e+00, float 1.000000e+00>
  %4 = extractelement <2 x float> %3, i32 0
  %5 = extractelement <2 x float> %3, i32 1
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 8
  %rt3.t0 = load i8** %rt2.t0, align 8
  %rt3.t1 = load i8** %rt2.t1, align 8
  %rt4.t0 = bitcast i8* %rt3.t0 to i64*
  %rt4.t1 = bitcast i8* %rt3.t1 to i64*
  %r5.t0 = load i64* %rt4.t0, align 8
  %r5.t1 = load i64* %rt4.t1, align 8
  %rt5.t0 = sext i32 %rt1.t0 to i64
  %rt5.t1 = sext i32 %rt1.t1 to i64
  %r7.t0 = shl nsw i64 %rt5.t0, 2
  %r7.t1 = shl nsw i64 %rt5.t1, 2
  %r8.t0 = add i64 %r5.t0, %r7.t0
  %r8.t1 = add i64 %r5.t1, %r7.t1
  %rt6.t0 = inttoptr i64 %r8.t0 to float*
  %rt6.t1 = inttoptr i64 %r8.t1 to float*
  store float %4, float* %rt6.t0, align 4
  store float %5, float* %rt6.t1, align 4
  %rt8.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt8.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt9.t0 = load i8** %rt8.t0, align 8
  %rt9.t1 = load i8** %rt8.t1, align 8
  %rt12.t0 = bitcast i8* %rt9.t0 to i32*
  %rt12.t1 = bitcast i8* %rt9.t1 to i32*
  store i32 6, i32* %rt12.t0, align 4
  store i32 6, i32* %rt12.t1, align 4
  ret void
}
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaTextureArray 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLLVMKernels
INFO     Test completed in 0.194295167923 seconds
INFO      It produced the following output:
; ModuleID = '_Z17k_sequenceLoopingPfi'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated__Z17k_sequenceLoopingPfi(%LLVMContext* %__ctaContext) nounwind align 1 {
_Z17k_sequenceLoopingPfi_scheduler:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt2 = load i8** %rt1, align 8
  %rt3 = ptrtoint i8* %rt2 to i64
  %rt4 = add i64 %rt3, 12
  %rt5 = inttoptr i64 %rt4 to i32*
  %r1 = load i32* %rt5, align 4
  switch i32 %r1, label %"$BB_1_0002" [
    i32 23, label %"$BB_1_0023_restore"
    i32 24, label %"$BB_1_0024_restore"
    i32 25, label %"$BB_1_0025_restore"
    i32 4, label %"$BB_1_0004_restore"
    i32 27, label %"$BB_1_0027_restore"
    i32 26, label %"$BB_1_0026_restore"
    i32 22, label %"$BB_1_0022_restore"
  ]

"$BB_1_0002":                                     ; preds = %_Z17k_sequenceLoopingPfi_scheduler
  %rt62 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt7 = load i32* %rt62, align 4
  %r16 = sitofp i32 %rt7 to float
  %rt8 = fcmp olt float %r16, 0.000000e+00
  %rt9 = fsub float 0.000000e+00, %r16
  %r17 = select i1 %rt8, float %rt9, float %r16
  %r19 = fcmp oeq float %r17, 0x7FF0000000000000
  br i1 %r19, label %"$BB_1_0003_save", label %"$BB_1_0004"

"$BB_1_0003_save":                                ; preds = %"$BB_1_0002"
  %sunkaddr = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr3 = add i64 %sunkaddr, 48
  %sunkaddr4 = inttoptr i64 %sunkaddr3 to i8**
  %rt12 = load i8** %sunkaddr4, align 8
  %rt13 = ptrtoint i8* %rt12 to i64
  %rt14 = add i64 %rt13, 44
  %rt15 = inttoptr i64 %rt14 to i32*
  store i32 %rt7, i32* %rt15, align 4
  %rt19 = load i8** %sunkaddr4, align 8
  %rt20 = ptrtoint i8* %rt19 to i64
  %rt21 = add i64 %rt20, 48
  %rt22 = inttoptr i64 %rt21 to float*
  store float %r16, float* %rt22, align 4
  %rt25 = load i8** %sunkaddr4, align 8
  %rt26 = ptrtoint i8* %rt25 to i64
  %rt27 = add i64 %rt26, 12
  %rt28 = inttoptr i64 %rt27 to i32*
  store i32 3, i32* %rt28, align 4
  %rt30 = load i8** %sunkaddr4, align 8
  %rt31 = bitcast i8* %rt30 to i32*
  store i32 1, i32* %rt31, align 4
  %rt32 = getelementptr i8* %rt30, i64 4
  %0 = bitcast i8* %rt32 to i32*
  store i32 2, i32* %0, align 4
  br label %exit

"$BB_1_0004":                                     ; preds = %"$BB_1_0004_restore", %"$BB_1_0002"
  %r24 = phi i32 [ %r111, %"$BB_1_0004_restore" ], [ %rt7, %"$BB_1_0002" ]
  %r25 = phi float [ %r112, %"$BB_1_0004_restore" ], [ %r16, %"$BB_1_0002" ]
  %r26 = phi float [ %r113, %"$BB_1_0004_restore" ], [ %r17, %"$BB_1_0002" ]
  %r28 = fcmp ogt float %r26, 4.803900e+04
  br i1 %r28, label %"$BB_1_0005_save", label %"$BB_1_0022"

"$BB_1_0005_save":                                ; preds = %"$BB_1_0004"
  %sunkaddr5 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr6 = add i64 %sunkaddr5, 48
  %sunkaddr7 = inttoptr i64 %sunkaddr6 to i8**
  %rt35 = load i8** %sunkaddr7, align 8
  %rt36 = ptrtoint i8* %rt35 to i64
  %rt37 = add i64 %rt36, 44
  %rt38 = inttoptr i64 %rt37 to i32*
  store i32 %r24, i32* %rt38, align 4
  %rt42 = load i8** %sunkaddr7, align 8
  %rt43 = ptrtoint i8* %rt42 to i64
  %rt44 = add i64 %rt43, 48
  %rt45 = inttoptr i64 %rt44 to float*
  store float %r25, float* %rt45, align 4
  %rt48 = load i8** %sunkaddr7, align 8
  %rt49 = ptrtoint i8* %rt48 to i64
  %rt50 = add i64 %rt49, 12
  %rt51 = inttoptr i64 %rt50 to i32*
  store i32 5, i32* %rt51, align 4
  %rt53 = load i8** %sunkaddr7, align 8
  %rt54 = bitcast i8* %rt53 to i32*
  store i32 1, i32* %rt54, align 4
  %rt55 = getelementptr i8* %rt53, i64 4
  %1 = bitcast i8* %rt55 to i32*
  store i32 1, i32* %1, align 4
  br label %exit

"$BB_1_0022":                                     ; preds = %"$BB_1_0022_restore", %"$BB_1_0004"
  %r35 = phi i32 [ %r122, %"$BB_1_0022_restore" ], [ %r24, %"$BB_1_0004" ]
  %r36 = phi float [ %r123, %"$BB_1_0022_restore" ], [ %r25, %"$BB_1_0004" ]
  %r38 = fmul float %r36, 0x3FE45F3060000000
  %rt56 = fcmp olt float %r38, 0.000000e+00
  %rt57 = select i1 %rt56, float -5.000000e-01, float 5.000000e-01
  %rt58 = fadd float %r38, %rt57
  %rt59 = fptosi float %rt58 to i32
  %rt60 = sitofp i32 %rt59 to float
  %rt61 = fptosi float %rt60 to i32
  %rt66 = fcmp olt float %rt60, 0xC1E0000000000000
  %rt67 = fcmp ogt float %rt60, 0x41E0000000000000
  %rt68 = fcmp uno float %rt60, 0x41E0000000000000
  %rt69 = select i1 %rt66, i32 -2147483648, i32 %rt61
  %rt70 = select i1 %rt67, i32 2147483647, i32 %rt69
  %r39 = select i1 %rt68, i32 0, i32 %rt70
  %r40 = sitofp i32 %r39 to float
  %r41 = fsub float 0.000000e+00, %r40
  %rt71 = fmul float %r41, 0x3FF9200000000000
  %r45 = fadd float %rt71, %r36
  %rt72 = fmul float %r41, 0x3F3FB54400000000
  %r46 = fadd float %rt72, %r45
  %rt73 = fmul float %r41, 0x3DD0B46120000000
  %r47 = fadd float %rt73, %r46
  br label %"$BB_1_0023"

"$BB_1_0023":                                     ; preds = %"$BB_1_0023_restore", %"$BB_1_0022"
  %r50 = phi i32 [ %r35, %"$BB_1_0022" ], [ %r98, %"$BB_1_0023_restore" ]
  %r51 = phi i32 [ %r39, %"$BB_1_0022" ], [ %r99, %"$BB_1_0023_restore" ]
  %r52 = phi float [ %r47, %"$BB_1_0022" ], [ %r100, %"$BB_1_0023_restore" ]
  %r53 = add i32 %r51, 1
  %r55 = fmul float %r52, %r52
  %r56 = and i32 %r53, 1
  %r58 = icmp eq i32 %r56, 0
  br i1 %r58, label %"$BB_1_0025", label %"$BB_1_0024"

"$BB_1_0024":                                     ; preds = %"$BB_1_0024_restore", %"$BB_1_0023"
  %r59 = phi i32 [ %r50, %"$BB_1_0023" ], [ %r102, %"$BB_1_0024_restore" ]
  %r60 = phi i32 [ %r53, %"$BB_1_0023" ], [ %r103, %"$BB_1_0024_restore" ]
  %r61 = phi float [ %r55, %"$BB_1_0023" ], [ %r104, %"$BB_1_0024_restore" ]
  %rt74 = fmul float %r61, 0x3EF99EB9C0000000
  %r64 = fadd float %rt74, 0xBF56C0C340000000
  %rt75 = fmul float %r64, %r61
  %r66 = fadd float %rt75, 0x3FA55554A0000000
  %rt76 = fmul float %r66, %r61
  %r68 = fadd float %rt76, -5.000000e-01
  %rt77 = fmul float %r68, %r61
  %r70 = fadd float %rt77, 1.000000e+00
  br label %"$BB_1_0026"

"$BB_1_0025":                                     ; preds = %"$BB_1_0025_restore", %"$BB_1_0023"
  %r71 = phi i32 [ %r106, %"$BB_1_0025_restore" ], [ %r50, %"$BB_1_0023" ]
  %r72 = phi i32 [ %r107, %"$BB_1_0025_restore" ], [ %r53, %"$BB_1_0023" ]
  %r73 = phi float [ %r108, %"$BB_1_0025_restore" ], [ %r52, %"$BB_1_0023" ]
  %r74 = phi float [ %r109, %"$BB_1_0025_restore" ], [ %r55, %"$BB_1_0023" ]
  %rt78 = fmul float %r74, 0xBF29943F20000000
  %r77 = fadd float %rt78, 0x3F811073C0000000
  %rt79 = fmul float %r77, %r74
  %r79 = fadd float %rt79, 0xBFC5555460000000
  %r80 = fmul float %r74, %r79
  %rt80 = fmul float %r80, %r73
  %r81 = fadd float %rt80, %r73
  br label %"$BB_1_0026"

"$BB_1_0026":                                     ; preds = %"$BB_1_0026_restore", %"$BB_1_0025", %"$BB_1_0024"
  %r82 = phi i32 [ %r59, %"$BB_1_0024" ], [ %r118, %"$BB_1_0026_restore" ], [ %r71, %"$BB_1_0025" ]
  %r83 = phi i32 [ %r60, %"$BB_1_0024" ], [ %r119, %"$BB_1_0026_restore" ], [ %r72, %"$BB_1_0025" ]
  %r84 = phi float [ %r70, %"$BB_1_0024" ], [ %r120, %"$BB_1_0026_restore" ], [ %r81, %"$BB_1_0025" ]
  %r85 = fsub float 0.000000e+00, %r84
  %r86 = and i32 %r83, 2
  %r88 = icmp ne i32 %r86, 0
  %r89 = select i1 %r88, float %r85, float %r84
  br label %"$BB_1_0027"

"$BB_1_0027":                                     ; preds = %"$BB_1_0027_restore", %"$BB_1_0026"
  %r91 = phi i32 [ %r115, %"$BB_1_0027_restore" ], [ %r82, %"$BB_1_0026" ]
  %r92 = phi float [ %r116, %"$BB_1_0027_restore" ], [ %r89, %"$BB_1_0026" ]
  %rt81 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt82 = load i8** %rt81, align 8
  %rt83 = bitcast i8* %rt82 to i64*
  %r93 = load i64* %rt83, align 8
  %rt84 = sext i32 %r91 to i64
  %r95 = shl nsw i64 %rt84, 2
  %r96 = add i64 %r93, %r95
  %rt85 = inttoptr i64 %r96 to float*
  store float %r92, float* %rt85, align 4
  %sunkaddr8 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr9 = add i64 %sunkaddr8, 48
  %sunkaddr10 = inttoptr i64 %sunkaddr9 to i8**
  %rt87 = load i8** %sunkaddr10, align 8
  %rt88 = bitcast i8* %rt87 to i32*
  store i32 4, i32* %rt88, align 4
  br label %exit

"$BB_1_0023_restore":                             ; preds = %_Z17k_sequenceLoopingPfi_scheduler
  %sunkaddr11 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr12 = add i64 %sunkaddr11, 48
  %sunkaddr13 = inttoptr i64 %sunkaddr12 to i8**
  %rt91 = load i8** %sunkaddr13, align 8
  %rt92 = ptrtoint i8* %rt91 to i64
  %rt93 = add i64 %rt92, 44
  %rt94 = inttoptr i64 %rt93 to i32*
  %r98 = load i32* %rt94, align 4
  %rt100 = add i64 %rt92, 48
  %rt101 = inttoptr i64 %rt100 to i32*
  %r99 = load i32* %rt101, align 4
  %rt105 = load i8** %sunkaddr13, align 8
  %rt106 = ptrtoint i8* %rt105 to i64
  %rt107 = add i64 %rt106, 52
  %rt108 = inttoptr i64 %rt107 to float*
  %r100 = load float* %rt108, align 4
  br label %"$BB_1_0023"

"$BB_1_0024_restore":                             ; preds = %_Z17k_sequenceLoopingPfi_scheduler
  %sunkaddr14 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr15 = add i64 %sunkaddr14, 48
  %sunkaddr16 = inttoptr i64 %sunkaddr15 to i8**
  %rt111 = load i8** %sunkaddr16, align 8
  %rt112 = ptrtoint i8* %rt111 to i64
  %rt113 = add i64 %rt112, 44
  %rt114 = inttoptr i64 %rt113 to i32*
  %r102 = load i32* %rt114, align 4
  %rt120 = add i64 %rt112, 48
  %rt121 = inttoptr i64 %rt120 to i32*
  %r103 = load i32* %rt121, align 4
  %rt125 = load i8** %sunkaddr16, align 8
  %rt126 = ptrtoint i8* %rt125 to i64
  %rt127 = add i64 %rt126, 52
  %rt128 = inttoptr i64 %rt127 to float*
  %r104 = load float* %rt128, align 4
  br label %"$BB_1_0024"

"$BB_1_0025_restore":                             ; preds = %_Z17k_sequenceLoopingPfi_scheduler
  %sunkaddr17 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr18 = add i64 %sunkaddr17, 48
  %sunkaddr19 = inttoptr i64 %sunkaddr18 to i8**
  %rt131 = load i8** %sunkaddr19, align 8
  %rt132 = ptrtoint i8* %rt131 to i64
  %rt133 = add i64 %rt132, 44
  %rt134 = inttoptr i64 %rt133 to i32*
  %r106 = load i32* %rt134, align 4
  %rt140 = add i64 %rt132, 48
  %rt141 = inttoptr i64 %rt140 to i32*
  %r107 = load i32* %rt141, align 4
  %rt145 = load i8** %sunkaddr19, align 8
  %rt146 = ptrtoint i8* %rt145 to i64
  %rt147 = add i64 %rt146, 52
  %rt148 = inttoptr i64 %rt147 to float*
  %r108 = load float* %rt148, align 4
  %rt154 = add i64 %rt146, 56
  %rt155 = inttoptr i64 %rt154 to float*
  %r109 = load float* %rt155, align 4
  br label %"$BB_1_0025"

"$BB_1_0004_restore":                             ; preds = %_Z17k_sequenceLoopingPfi_scheduler
  %sunkaddr20 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr21 = add i64 %sunkaddr20, 48
  %sunkaddr22 = inttoptr i64 %sunkaddr21 to i8**
  %rt158 = load i8** %sunkaddr22, align 8
  %rt159 = ptrtoint i8* %rt158 to i64
  %rt160 = add i64 %rt159, 44
  %rt161 = inttoptr i64 %rt160 to i32*
  %r111 = load i32* %rt161, align 4
  %rt167 = add i64 %rt159, 48
  %rt168 = inttoptr i64 %rt167 to float*
  %r112 = load float* %rt168, align 4
  %rt172 = load i8** %sunkaddr22, align 8
  %rt173 = ptrtoint i8* %rt172 to i64
  %rt174 = add i64 %rt173, 52
  %rt175 = inttoptr i64 %rt174 to float*
  %r113 = load float* %rt175, align 4
  br label %"$BB_1_0004"

"$BB_1_0027_restore":                             ; preds = %_Z17k_sequenceLoopingPfi_scheduler
  %sunkaddr23 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr24 = add i64 %sunkaddr23, 48
  %sunkaddr25 = inttoptr i64 %sunkaddr24 to i8**
  %rt178 = load i8** %sunkaddr25, align 8
  %rt179 = ptrtoint i8* %rt178 to i64
  %rt180 = add i64 %rt179, 44
  %rt181 = inttoptr i64 %rt180 to i32*
  %r115 = load i32* %rt181, align 4
  %rt187 = add i64 %rt179, 48
  %rt188 = inttoptr i64 %rt187 to float*
  %r116 = load float* %rt188, align 4
  br label %"$BB_1_0027"

"$BB_1_0026_restore":                             ; preds = %_Z17k_sequenceLoopingPfi_scheduler
  %sunkaddr26 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr27 = add i64 %sunkaddr26, 48
  %sunkaddr28 = inttoptr i64 %sunkaddr27 to i8**
  %rt191 = load i8** %sunkaddr28, align 8
  %rt192 = ptrtoint i8* %rt191 to i64
  %rt193 = add i64 %rt192, 44
  %rt194 = inttoptr i64 %rt193 to i32*
  %r118 = load i32* %rt194, align 4
  %rt200 = add i64 %rt192, 48
  %rt201 = inttoptr i64 %rt200 to i32*
  %r119 = load i32* %rt201, align 4
  %rt205 = load i8** %sunkaddr28, align 8
  %rt206 = ptrtoint i8* %rt205 to i64
  %rt207 = add i64 %rt206, 52
  %rt208 = inttoptr i64 %rt207 to float*
  %r120 = load float* %rt208, align 4
  br label %"$BB_1_0026"

"$BB_1_0022_restore":                             ; preds = %_Z17k_sequenceLoopingPfi_scheduler
  %sunkaddr29 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr30 = add i64 %sunkaddr29, 48
  %sunkaddr31 = inttoptr i64 %sunkaddr30 to i8**
  %rt211 = load i8** %sunkaddr31, align 8
  %rt212 = ptrtoint i8* %rt211 to i64
  %rt213 = add i64 %rt212, 44
  %rt214 = inttoptr i64 %rt213 to i32*
  %r122 = load i32* %rt214, align 4
  %rt220 = add i64 %rt212, 48
  %rt221 = inttoptr i64 %rt220 to float*
  %r123 = load float* %rt221, align 4
  br label %"$BB_1_0022"

exit:                                             ; preds = %"$BB_1_0027", %"$BB_1_0005_save", %"$BB_1_0003_save"
  ret void
}
; ModuleID = '_Z21k_matrixVectorProductPKfS0_Pfii'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated__Z21k_matrixVectorProductPKfS0_Pfii(%LLVMContext* %__ctaContext) nounwind align 1 {
"$_Z21k_matrixVectorProductPKfS0_Pfii_barrier_2_scheduler":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt2 = load i8** %rt1, align 8
  %rt3 = ptrtoint i8* %rt2 to i64
  %rt4 = add i64 %rt3, 12
  %rt5 = inttoptr i64 %rt4 to i32*
  %r1 = load i32* %rt5, align 4
  %r2 = icmp eq i32 %r1, 32
  br i1 %r2, label %"$BB_2_0008_split", label %"$_Z21k_matrixVectorProductPKfS0_Pfii_barrier_1_scheduler"

"$_Z21k_matrixVectorProductPKfS0_Pfii_barrier_1_scheduler": ; preds = %"$_Z21k_matrixVectorProductPKfS0_Pfii_barrier_2_scheduler"
  %0 = ptrtoint i8* %rt2 to i64
  %rt10 = add i64 %0, 12
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = icmp eq i32 %r4, 30
  %sunkaddr = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr15 = add i64 %sunkaddr, 48
  %sunkaddr16 = inttoptr i64 %sunkaddr15 to i8**
  %rt137 = load i8** %sunkaddr16, align 8
  br i1 %r5, label %"$BB_2_0004_split", label %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler

_Z21k_matrixVectorProductPKfS0_Pfii_scheduler:    ; preds = %"$_Z21k_matrixVectorProductPKfS0_Pfii_barrier_1_scheduler"
  %1 = ptrtoint i8* %rt137 to i64
  %rt16 = add i64 %1, 12
  %rt17 = inttoptr i64 %rt16 to i32*
  %r7 = load i32* %rt17, align 4
  switch i32 %r7, label %"$BB_2_0002" [
    i32 3, label %"$BB_2_0003_restore"
    i32 10, label %"$BB_2_0010_restore"
    i32 4, label %"$BB_2_0004_restore"
    i32 5, label %"$BB_2_0005_restore"
    i32 8, label %"$BB_2_0008_restore"
    i32 6, label %"$BB_2_0006_restore"
    i32 9, label %"$BB_2_0009_restore"
    i32 11, label %"$BB_2_0011_restore"
  ]

"$BB_2_0002":                                     ; preds = %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 0
  %rt19 = load i32* %rt18, align 4
  %rt20 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 0
  %rt21 = load i32* %rt20, align 4
  %r25 = mul i32 %rt21, %rt19
  %rt2217 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt23 = load i32* %rt2217, align 4
  %r27 = add i32 %r25, %rt23
  %rt24 = zext i32 %r27 to i64
  %r29 = shl nuw nsw i64 %rt24, 2
  %rt25 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt26 = load i8** %rt25, align 8
  %rt27 = bitcast i8* %rt26 to i64*
  %r30 = load i64* %rt27, align 8
  %r31 = add i64 %r29, %r30
  %rt28 = zext i32 %rt23 to i64
  %r33 = shl nuw nsw i64 %rt28, 2
  %rt29 = getelementptr i8* %rt26, i64 8
  %rt32 = bitcast i8* %rt29 to i64*
  %r34 = load i64* %rt32, align 8
  %r35 = add i64 %r34, %r33
  %rt33 = getelementptr i8* %rt26, i64 28
  %rt36 = bitcast i8* %rt33 to i32*
  %r36 = load i32* %rt36, align 4
  %r38 = icmp slt i32 %r36, 1
  br i1 %r38, label %"$BB_2_0011", label %"$BB_2_0003"

"$BB_2_0003":                                     ; preds = %"$BB_2_0003_restore", %"$BB_2_0002"
  %r44 = phi i32 [ %r179, %"$BB_2_0003_restore" ], [ %r36, %"$BB_2_0002" ]
  %r39 = phi i32 [ %r174, %"$BB_2_0003_restore" ], [ %rt19, %"$BB_2_0002" ]
  %r40 = phi i64 [ %r175, %"$BB_2_0003_restore" ], [ %r29, %"$BB_2_0002" ]
  %r41 = phi i64 [ %r176, %"$BB_2_0003_restore" ], [ %r31, %"$BB_2_0002" ]
  %r42 = phi i64 [ %r177, %"$BB_2_0003_restore" ], [ %r33, %"$BB_2_0002" ]
  %r43 = phi i64 [ %r178, %"$BB_2_0003_restore" ], [ %r35, %"$BB_2_0002" ]
  %r47 = icmp ne i32 %r39, 0
  %r48 = zext i32 %r39 to i64
  br label %"$BB_2_0004"

"$BB_2_0004":                                     ; preds = %"$BB_2_0004_restore", %"$BB_2_0008_split", %"$BB_2_0003"
  %r55 = phi i64 [ %r43, %"$BB_2_0003" ], [ %r186, %"$BB_2_0004_restore" ], [ %r159, %"$BB_2_0008_split" ]
  %r56 = phi i32 [ %r44, %"$BB_2_0003" ], [ %r187, %"$BB_2_0004_restore" ], [ %r158, %"$BB_2_0008_split" ]
  %r57 = phi i64 [ 0, %"$BB_2_0003" ], [ %r188, %"$BB_2_0004_restore" ], [ %r157, %"$BB_2_0008_split" ]
  %r58 = phi i1 [ %r47, %"$BB_2_0003" ], [ %r189, %"$BB_2_0004_restore" ], [ %r156, %"$BB_2_0008_split" ]
  %r59 = phi i64 [ %r48, %"$BB_2_0003" ], [ %r190, %"$BB_2_0004_restore" ], [ %r155, %"$BB_2_0008_split" ]
  %r60 = phi i64 [ %r42, %"$BB_2_0003" ], [ %r191, %"$BB_2_0004_restore" ], [ %r154, %"$BB_2_0008_split" ]
  %r61 = phi i32 [ 0, %"$BB_2_0003" ], [ %r192, %"$BB_2_0004_restore" ], [ %r163, %"$BB_2_0008_split" ]
  %r62 = phi float [ 0.000000e+00, %"$BB_2_0003" ], [ %r193, %"$BB_2_0004_restore" ], [ %r152, %"$BB_2_0008_split" ]
  %r52 = phi i32 [ %r39, %"$BB_2_0003" ], [ %r183, %"$BB_2_0004_restore" ], [ %r162, %"$BB_2_0008_split" ]
  %r53 = phi i64 [ %r40, %"$BB_2_0003" ], [ %r184, %"$BB_2_0004_restore" ], [ %r161, %"$BB_2_0008_split" ]
  %r54 = phi i64 [ %r41, %"$BB_2_0003" ], [ %r185, %"$BB_2_0004_restore" ], [ %r160, %"$BB_2_0008_split" ]
  %rt37 = inttoptr i64 %r55 to float*
  %r63 = load float* %rt37, align 4
  %rt38 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 5
  %rt39 = load i8** %rt38, align 8
  %rt40 = ptrtoint i8* %rt39 to i64
  %rt41 = add i64 %rt40, %r60
  %rt42 = inttoptr i64 %rt41 to float*
  store float %r63, float* %rt42, align 4
  %sunkaddr18 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr19 = add i64 %sunkaddr18, 48
  %sunkaddr20 = inttoptr i64 %sunkaddr19 to i8**
  %rt45 = load i8** %sunkaddr20, align 8
  %rt46 = ptrtoint i8* %rt45 to i64
  %rt47 = add i64 %rt46, 16
  %rt48 = inttoptr i64 %rt47 to i32*
  store i32 %r52, i32* %rt48, align 4
  %rt52 = load i8** %sunkaddr20, align 8
  %rt53 = ptrtoint i8* %rt52 to i64
  %rt54 = add i64 %rt53, 20
  %rt55 = inttoptr i64 %rt54 to i64*
  store i64 %r53, i64* %rt55, align 8
  %rt59 = load i8** %sunkaddr20, align 8
  %rt60 = ptrtoint i8* %rt59 to i64
  %rt61 = add i64 %rt60, 28
  %rt62 = inttoptr i64 %rt61 to i64*
  store i64 %r54, i64* %rt62, align 8
  %rt66 = load i8** %sunkaddr20, align 8
  %rt67 = ptrtoint i8* %rt66 to i64
  %rt68 = add i64 %rt67, 36
  %rt69 = inttoptr i64 %rt68 to i64*
  store i64 %r55, i64* %rt69, align 8
  %rt73 = load i8** %sunkaddr20, align 8
  %rt74 = ptrtoint i8* %rt73 to i64
  %rt75 = add i64 %rt74, 44
  %rt76 = inttoptr i64 %rt75 to i32*
  store i32 %r56, i32* %rt76, align 4
  %rt80 = load i8** %sunkaddr20, align 8
  %rt81 = ptrtoint i8* %rt80 to i64
  %rt82 = add i64 %rt81, 48
  %rt83 = inttoptr i64 %rt82 to i64*
  store i64 %r57, i64* %rt83, align 8
  %rt87 = load i8** %sunkaddr20, align 8
  %rt88 = ptrtoint i8* %rt87 to i64
  %rt89 = add i64 %rt88, 56
  %rt90 = inttoptr i64 %rt89 to i1*
  store i1 %r58, i1* %rt90, align 1
  %rt94 = load i8** %sunkaddr20, align 8
  %rt95 = ptrtoint i8* %rt94 to i64
  %rt96 = add i64 %rt95, 57
  %rt97 = inttoptr i64 %rt96 to i64*
  store i64 %r59, i64* %rt97, align 8
  %rt101 = load i8** %sunkaddr20, align 8
  %rt102 = ptrtoint i8* %rt101 to i64
  %rt103 = add i64 %rt102, 65
  %rt104 = inttoptr i64 %rt103 to i64*
  store i64 %r60, i64* %rt104, align 8
  %rt108 = load i8** %sunkaddr20, align 8
  %rt109 = ptrtoint i8* %rt108 to i64
  %rt110 = add i64 %rt109, 73
  %rt111 = inttoptr i64 %rt110 to i32*
  store i32 %r61, i32* %rt111, align 4
  %rt115 = load i8** %sunkaddr20, align 8
  %rt116 = ptrtoint i8* %rt115 to i64
  %rt117 = add i64 %rt116, 77
  %rt118 = inttoptr i64 %rt117 to float*
  store float %r62, float* %rt118, align 4
  %rt121 = load i8** %sunkaddr20, align 8
  %rt122 = ptrtoint i8* %rt121 to i64
  %rt123 = add i64 %rt122, 12
  %rt124 = inttoptr i64 %rt123 to i32*
  store i32 30, i32* %rt124, align 4
  %rt127 = load i8** %sunkaddr20, align 8
  %rt128 = ptrtoint i8* %rt127 to i64
  %rt129 = add i64 %rt128, 8
  %rt130 = inttoptr i64 %rt129 to i32*
  store i32 0, i32* %rt130, align 4
  %rt132 = load i8** %sunkaddr20, align 8
  %rt133 = bitcast i8* %rt132 to i32*
  store i32 5, i32* %rt133, align 4
  br label %exit

"$BB_2_0004_split":                               ; preds = %"$_Z21k_matrixVectorProductPKfS0_Pfii_barrier_1_scheduler"
  %2 = ptrtoint i8* %rt137 to i64
  %rt139 = add i64 %2, 77
  %rt140 = inttoptr i64 %rt139 to float*
  %r68 = load float* %rt140, align 4
  %rt146 = add i64 %2, 73
  %rt147 = inttoptr i64 %rt146 to i32*
  %r69 = load i32* %rt147, align 4
  %sunkaddr21 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr22 = add i64 %sunkaddr21, 48
  %sunkaddr23 = inttoptr i64 %sunkaddr22 to i8**
  %rt151 = load i8** %sunkaddr23, align 8
  %rt152 = ptrtoint i8* %rt151 to i64
  %rt153 = add i64 %rt152, 65
  %rt154 = inttoptr i64 %rt153 to i64*
  %r70 = load i64* %rt154, align 8
  %rt160 = add i64 %rt152, 57
  %rt161 = inttoptr i64 %rt160 to i64*
  %r71 = load i64* %rt161, align 8
  %rt165 = load i8** %sunkaddr23, align 8
  %rt166 = ptrtoint i8* %rt165 to i64
  %rt167 = add i64 %rt166, 56
  %rt168 = inttoptr i64 %rt167 to i1*
  %r72 = load i1* %rt168, align 1
  %rt174 = add i64 %rt166, 48
  %rt175 = inttoptr i64 %rt174 to i64*
  %r73 = load i64* %rt175, align 8
  %rt179 = load i8** %sunkaddr23, align 8
  %rt180 = ptrtoint i8* %rt179 to i64
  %rt181 = add i64 %rt180, 44
  %rt182 = inttoptr i64 %rt181 to i32*
  %r74 = load i32* %rt182, align 4
  %rt188 = add i64 %rt180, 36
  %rt189 = inttoptr i64 %rt188 to i64*
  %r75 = load i64* %rt189, align 8
  %rt193 = load i8** %sunkaddr23, align 8
  %rt194 = ptrtoint i8* %rt193 to i64
  %rt195 = add i64 %rt194, 28
  %rt196 = inttoptr i64 %rt195 to i64*
  %r76 = load i64* %rt196, align 8
  %rt202 = add i64 %rt194, 20
  %rt203 = inttoptr i64 %rt202 to i64*
  %r77 = load i64* %rt203, align 8
  %rt206 = load i8** %sunkaddr23, align 8
  %rt207 = ptrtoint i8* %rt206 to i64
  %rt208 = add i64 %rt207, 16
  %rt209 = inttoptr i64 %rt208 to i32*
  %r78 = load i32* %rt209, align 4
  br i1 %r72, label %"$BB_2_0005", label %"$BB_2_0008"

"$BB_2_0005":                                     ; preds = %"$BB_2_0005_restore", %"$BB_2_0004_split"
  %r88 = phi i32 [ %r204, %"$BB_2_0005_restore" ], [ %r69, %"$BB_2_0004_split" ]
  %r89 = phi float [ %r205, %"$BB_2_0005_restore" ], [ %r68, %"$BB_2_0004_split" ]
  %r79 = phi i32 [ %r195, %"$BB_2_0005_restore" ], [ %r78, %"$BB_2_0004_split" ]
  %r80 = phi i64 [ %r196, %"$BB_2_0005_restore" ], [ %r77, %"$BB_2_0004_split" ]
  %r81 = phi i64 [ %r197, %"$BB_2_0005_restore" ], [ %r76, %"$BB_2_0004_split" ]
  %r82 = phi i64 [ %r198, %"$BB_2_0005_restore" ], [ %r75, %"$BB_2_0004_split" ]
  %r83 = phi i32 [ %r199, %"$BB_2_0005_restore" ], [ %r74, %"$BB_2_0004_split" ]
  %r84 = phi i64 [ %r200, %"$BB_2_0005_restore" ], [ %r73, %"$BB_2_0004_split" ]
  %r85 = phi i1 [ %r201, %"$BB_2_0005_restore" ], [ %r72, %"$BB_2_0004_split" ]
  %r86 = phi i64 [ %r202, %"$BB_2_0005_restore" ], [ %r71, %"$BB_2_0004_split" ]
  %r87 = phi i64 [ %r203, %"$BB_2_0005_restore" ], [ %r70, %"$BB_2_0004_split" ]
  %rt211 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt212 = load i8** %rt211, align 8
  %rt210 = getelementptr i8* %rt212, i64 24
  %rt213 = bitcast i8* %rt210 to i32*
  %r92 = load i32* %rt213, align 4
  %r93 = sext i32 %r92 to i64
  %r94 = shl nsw i64 %r93, 2
  br label %"$BB_2_0006.preheader"

"$BB_2_0006.preheader":                           ; preds = %"$BB_2_0005", %"$BB_2_0006_restore"
  %r98.ph = phi i32 [ %r219, %"$BB_2_0006_restore" ], [ %r79, %"$BB_2_0005" ]
  %r99.ph = phi i64 [ %r220, %"$BB_2_0006_restore" ], [ %r84, %"$BB_2_0005" ]
  %r100.ph = phi i64 [ %r221, %"$BB_2_0006_restore" ], [ %r93, %"$BB_2_0005" ]
  %r101.ph = phi i64 [ %r222, %"$BB_2_0006_restore" ], [ %r94, %"$BB_2_0005" ]
  %r102.ph = phi i64 [ %r223, %"$BB_2_0006_restore" ], [ %r81, %"$BB_2_0005" ]
  %r103.ph = phi i64 [ %r224, %"$BB_2_0006_restore" ], [ %r80, %"$BB_2_0005" ]
  %r104.ph = phi i32 [ %r225, %"$BB_2_0006_restore" ], [ 0, %"$BB_2_0005" ]
  %r105.ph = phi i64 [ %r226, %"$BB_2_0006_restore" ], [ %r81, %"$BB_2_0005" ]
  %r106.ph = phi i64 [ %r227, %"$BB_2_0006_restore" ], [ %r82, %"$BB_2_0005" ]
  %r107.ph = phi i32 [ %r228, %"$BB_2_0006_restore" ], [ %r83, %"$BB_2_0005" ]
  %r108.ph = phi i64 [ %r229, %"$BB_2_0006_restore" ], [ %r84, %"$BB_2_0005" ]
  %r109.ph = phi i1 [ %r230, %"$BB_2_0006_restore" ], [ %r85, %"$BB_2_0005" ]
  %r110.ph = phi i64 [ %r231, %"$BB_2_0006_restore" ], [ %r86, %"$BB_2_0005" ]
  %r111.ph = phi i64 [ %r232, %"$BB_2_0006_restore" ], [ %r87, %"$BB_2_0005" ]
  %r112.ph = phi i32 [ %r233, %"$BB_2_0006_restore" ], [ %r88, %"$BB_2_0005" ]
  %r113.ph = phi float [ %r234, %"$BB_2_0006_restore" ], [ %r89, %"$BB_2_0005" ]
  %rt215 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 5
  %rt216 = load i8** %rt215, align 8
  %rt217 = ptrtoint i8* %rt216 to i64
  %tmp = add i32 %r98.ph, -1
  %tmp1 = sub i32 %tmp, %r104.ph
  %tmp5 = add i64 %r99.ph, %rt217
  %tmp11 = zext i32 %tmp1 to i64
  %tmp12 = add i64 %tmp11, 1
  br label %"$BB_2_0006"

"$BB_2_0006":                                     ; preds = %"$BB_2_0006.preheader", %"$BB_2_0006"
  %lsr.iv13 = phi i64 [ %tmp12, %"$BB_2_0006.preheader" ], [ %lsr.iv.next14, %"$BB_2_0006" ]
  %lsr.iv9 = phi i64 [ %r102.ph, %"$BB_2_0006.preheader" ], [ %lsr.iv.next10, %"$BB_2_0006" ]
  %lsr.iv = phi i64 [ %tmp5, %"$BB_2_0006.preheader" ], [ %lsr.iv.next, %"$BB_2_0006" ]
  %r113 = phi float [ %r113.ph, %"$BB_2_0006.preheader" ], [ %r116, %"$BB_2_0006" ]
  %rt219 = inttoptr i64 %lsr.iv to float*
  %r114 = load float* %rt219, align 4
  %rt220 = inttoptr i64 %lsr.iv9 to float*
  %r115 = load float* %rt220, align 4
  %rt221 = fmul float %r114, %r115
  %r116 = fadd float %rt221, %r113
  %lsr.iv.next = add i64 %lsr.iv, 4
  %lsr.iv.next10 = add i64 %lsr.iv9, %r101.ph
  %lsr.iv.next14 = add i64 %lsr.iv13, -1
  %exitcond = icmp eq i64 %lsr.iv.next14, 0
  br i1 %exitcond, label %"$BB_2_0007_save", label %"$BB_2_0006"

"$BB_2_0007_save":                                ; preds = %"$BB_2_0006"
  %sunkaddr24 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr25 = add i64 %sunkaddr24, 48
  %sunkaddr26 = inttoptr i64 %sunkaddr25 to i8**
  %rt224 = load i8** %sunkaddr26, align 8
  %rt225 = ptrtoint i8* %rt224 to i64
  %rt226 = add i64 %rt225, 16
  %rt227 = inttoptr i64 %rt226 to i32*
  store i32 %r98.ph, i32* %rt227, align 4
  %rt231 = load i8** %sunkaddr26, align 8
  %rt232 = ptrtoint i8* %rt231 to i64
  %rt233 = add i64 %rt232, 20
  %rt234 = inttoptr i64 %rt233 to i64*
  store i64 %r100.ph, i64* %rt234, align 8
  %rt238 = load i8** %sunkaddr26, align 8
  %rt239 = ptrtoint i8* %rt238 to i64
  %rt240 = add i64 %rt239, 28
  %rt241 = inttoptr i64 %rt240 to i64*
  store i64 %r103.ph, i64* %rt241, align 8
  %rt245 = load i8** %sunkaddr26, align 8
  %rt246 = ptrtoint i8* %rt245 to i64
  %rt247 = add i64 %rt246, 36
  %rt248 = inttoptr i64 %rt247 to i64*
  store i64 %r105.ph, i64* %rt248, align 8
  %rt252 = load i8** %sunkaddr26, align 8
  %rt253 = ptrtoint i8* %rt252 to i64
  %rt254 = add i64 %rt253, 44
  %rt255 = inttoptr i64 %rt254 to i64*
  store i64 %r106.ph, i64* %rt255, align 8
  %rt259 = load i8** %sunkaddr26, align 8
  %rt260 = ptrtoint i8* %rt259 to i64
  %rt261 = add i64 %rt260, 52
  %rt262 = inttoptr i64 %rt261 to i32*
  store i32 %r107.ph, i32* %rt262, align 4
  %rt266 = load i8** %sunkaddr26, align 8
  %rt267 = ptrtoint i8* %rt266 to i64
  %rt268 = add i64 %rt267, 56
  %rt269 = inttoptr i64 %rt268 to i64*
  store i64 %r108.ph, i64* %rt269, align 8
  %rt273 = load i8** %sunkaddr26, align 8
  %rt274 = ptrtoint i8* %rt273 to i64
  %rt275 = add i64 %rt274, 64
  %rt276 = inttoptr i64 %rt275 to i1*
  store i1 %r109.ph, i1* %rt276, align 1
  %rt280 = load i8** %sunkaddr26, align 8
  %rt281 = ptrtoint i8* %rt280 to i64
  %rt282 = add i64 %rt281, 65
  %rt283 = inttoptr i64 %rt282 to i64*
  store i64 %r110.ph, i64* %rt283, align 8
  %rt287 = load i8** %sunkaddr26, align 8
  %rt288 = ptrtoint i8* %rt287 to i64
  %rt289 = add i64 %rt288, 73
  %rt290 = inttoptr i64 %rt289 to i64*
  store i64 %r111.ph, i64* %rt290, align 8
  %rt294 = load i8** %sunkaddr26, align 8
  %rt295 = ptrtoint i8* %rt294 to i64
  %rt296 = add i64 %rt295, 81
  %rt297 = inttoptr i64 %rt296 to i32*
  store i32 %r112.ph, i32* %rt297, align 4
  %rt301 = load i8** %sunkaddr26, align 8
  %rt302 = ptrtoint i8* %rt301 to i64
  %rt303 = add i64 %rt302, 85
  %rt304 = inttoptr i64 %rt303 to float*
  store float %r116, float* %rt304, align 4
  %rt307 = load i8** %sunkaddr26, align 8
  %rt308 = ptrtoint i8* %rt307 to i64
  %rt309 = add i64 %rt308, 12
  %rt310 = inttoptr i64 %rt309 to i32*
  store i32 7, i32* %rt310, align 4
  %rt312 = load i8** %sunkaddr26, align 8
  %rt313 = bitcast i8* %rt312 to i32*
  store i32 1, i32* %rt313, align 4
  %rt314 = getelementptr i8* %rt312, i64 4
  %3 = bitcast i8* %rt314 to i32*
  store i32 1, i32* %3, align 4
  br label %exit

"$BB_2_0008":                                     ; preds = %"$BB_2_0008_restore", %"$BB_2_0004_split"
  %r143 = phi i64 [ %r215, %"$BB_2_0008_restore" ], [ %r70, %"$BB_2_0004_split" ]
  %r144 = phi i32 [ %r216, %"$BB_2_0008_restore" ], [ %r69, %"$BB_2_0004_split" ]
  %r145 = phi float [ %r217, %"$BB_2_0008_restore" ], [ %r68, %"$BB_2_0004_split" ]
  %r135 = phi i32 [ %r207, %"$BB_2_0008_restore" ], [ %r78, %"$BB_2_0004_split" ]
  %r136 = phi i64 [ %r208, %"$BB_2_0008_restore" ], [ %r77, %"$BB_2_0004_split" ]
  %r137 = phi i64 [ %r209, %"$BB_2_0008_restore" ], [ %r76, %"$BB_2_0004_split" ]
  %r138 = phi i64 [ %r210, %"$BB_2_0008_restore" ], [ %r75, %"$BB_2_0004_split" ]
  %r139 = phi i32 [ %r211, %"$BB_2_0008_restore" ], [ %r74, %"$BB_2_0004_split" ]
  %r140 = phi i64 [ %r212, %"$BB_2_0008_restore" ], [ %r73, %"$BB_2_0004_split" ]
  %r141 = phi i1 [ %r213, %"$BB_2_0008_restore" ], [ %r72, %"$BB_2_0004_split" ]
  %r142 = phi i64 [ %r214, %"$BB_2_0008_restore" ], [ %r71, %"$BB_2_0004_split" ]
  %r146 = shl i64 %r142, 2
  %r147 = add i64 %r146, %r138
  %sunkaddr27 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr28 = add i64 %sunkaddr27, 48
  %sunkaddr29 = inttoptr i64 %sunkaddr28 to i8**
  %rt317 = load i8** %sunkaddr29, align 8
  %rt318 = ptrtoint i8* %rt317 to i64
  %rt319 = add i64 %rt318, 16
  %rt320 = inttoptr i64 %rt319 to i32*
  store i32 %r135, i32* %rt320, align 4
  %rt324 = load i8** %sunkaddr29, align 8
  %rt325 = ptrtoint i8* %rt324 to i64
  %rt326 = add i64 %rt325, 20
  %rt327 = inttoptr i64 %rt326 to i64*
  store i64 %r136, i64* %rt327, align 8
  %rt331 = load i8** %sunkaddr29, align 8
  %rt332 = ptrtoint i8* %rt331 to i64
  %rt333 = add i64 %rt332, 28
  %rt334 = inttoptr i64 %rt333 to i64*
  store i64 %r137, i64* %rt334, align 8
  %rt338 = load i8** %sunkaddr29, align 8
  %rt339 = ptrtoint i8* %rt338 to i64
  %rt340 = add i64 %rt339, 36
  %rt341 = inttoptr i64 %rt340 to i64*
  store i64 %r147, i64* %rt341, align 8
  %rt345 = load i8** %sunkaddr29, align 8
  %rt346 = ptrtoint i8* %rt345 to i64
  %rt347 = add i64 %rt346, 44
  %rt348 = inttoptr i64 %rt347 to i32*
  store i32 %r139, i32* %rt348, align 4
  %rt352 = load i8** %sunkaddr29, align 8
  %rt353 = ptrtoint i8* %rt352 to i64
  %rt354 = add i64 %rt353, 48
  %rt355 = inttoptr i64 %rt354 to i64*
  store i64 %r140, i64* %rt355, align 8
  %rt359 = load i8** %sunkaddr29, align 8
  %rt360 = ptrtoint i8* %rt359 to i64
  %rt361 = add i64 %rt360, 56
  %rt362 = inttoptr i64 %rt361 to i1*
  store i1 %r141, i1* %rt362, align 1
  %rt366 = load i8** %sunkaddr29, align 8
  %rt367 = ptrtoint i8* %rt366 to i64
  %rt368 = add i64 %rt367, 57
  %rt369 = inttoptr i64 %rt368 to i64*
  store i64 %r142, i64* %rt369, align 8
  %rt373 = load i8** %sunkaddr29, align 8
  %rt374 = ptrtoint i8* %rt373 to i64
  %rt375 = add i64 %rt374, 65
  %rt376 = inttoptr i64 %rt375 to i64*
  store i64 %r143, i64* %rt376, align 8
  %rt380 = load i8** %sunkaddr29, align 8
  %rt381 = ptrtoint i8* %rt380 to i64
  %rt382 = add i64 %rt381, 73
  %rt383 = inttoptr i64 %rt382 to i32*
  store i32 %r144, i32* %rt383, align 4
  %rt387 = load i8** %sunkaddr29, align 8
  %rt388 = ptrtoint i8* %rt387 to i64
  %rt389 = add i64 %rt388, 77
  %rt390 = inttoptr i64 %rt389 to float*
  store float %r145, float* %rt390, align 4
  %rt393 = load i8** %sunkaddr29, align 8
  %rt394 = ptrtoint i8* %rt393 to i64
  %rt395 = add i64 %rt394, 12
  %rt396 = inttoptr i64 %rt395 to i32*
  store i32 32, i32* %rt396, align 4
  %rt399 = load i8** %sunkaddr29, align 8
  %rt400 = ptrtoint i8* %rt399 to i64
  %rt401 = add i64 %rt400, 8
  %rt402 = inttoptr i64 %rt401 to i32*
  store i32 0, i32* %rt402, align 4
  %rt404 = load i8** %sunkaddr29, align 8
  %rt405 = bitcast i8* %rt404 to i32*
  store i32 5, i32* %rt405, align 4
  br label %exit

"$BB_2_0008_split":                               ; preds = %"$_Z21k_matrixVectorProductPKfS0_Pfii_barrier_2_scheduler"
  %4 = ptrtoint i8* %rt2 to i64
  %rt411 = add i64 %4, 77
  %rt412 = inttoptr i64 %rt411 to float*
  %r152 = load float* %rt412, align 4
  %rt418 = add i64 %4, 73
  %rt419 = inttoptr i64 %rt418 to i32*
  %r153 = load i32* %rt419, align 4
  %sunkaddr30 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr31 = add i64 %sunkaddr30, 48
  %sunkaddr32 = inttoptr i64 %sunkaddr31 to i8**
  %rt423 = load i8** %sunkaddr32, align 8
  %rt424 = ptrtoint i8* %rt423 to i64
  %rt425 = add i64 %rt424, 65
  %rt426 = inttoptr i64 %rt425 to i64*
  %r154 = load i64* %rt426, align 8
  %rt432 = add i64 %rt424, 57
  %rt433 = inttoptr i64 %rt432 to i64*
  %r155 = load i64* %rt433, align 8
  %rt437 = load i8** %sunkaddr32, align 8
  %rt438 = ptrtoint i8* %rt437 to i64
  %rt439 = add i64 %rt438, 56
  %rt440 = inttoptr i64 %rt439 to i1*
  %r156 = load i1* %rt440, align 1
  %rt446 = add i64 %rt438, 48
  %rt447 = inttoptr i64 %rt446 to i64*
  %r157 = load i64* %rt447, align 8
  %rt451 = load i8** %sunkaddr32, align 8
  %rt452 = ptrtoint i8* %rt451 to i64
  %rt453 = add i64 %rt452, 44
  %rt454 = inttoptr i64 %rt453 to i32*
  %r158 = load i32* %rt454, align 4
  %rt460 = add i64 %rt452, 36
  %rt461 = inttoptr i64 %rt460 to i64*
  %r159 = load i64* %rt461, align 8
  %rt465 = load i8** %sunkaddr32, align 8
  %rt466 = ptrtoint i8* %rt465 to i64
  %rt467 = add i64 %rt466, 28
  %rt468 = inttoptr i64 %rt467 to i64*
  %r160 = load i64* %rt468, align 8
  %rt474 = add i64 %rt466, 20
  %rt475 = inttoptr i64 %rt474 to i64*
  %r161 = load i64* %rt475, align 8
  %rt478 = load i8** %sunkaddr32, align 8
  %rt479 = ptrtoint i8* %rt478 to i64
  %rt480 = add i64 %rt479, 16
  %rt481 = inttoptr i64 %rt480 to i32*
  %r162 = load i32* %rt481, align 4
  %r163 = add i32 %r162, %r153
  %r164 = icmp sgt i32 %r158, %r163
  br i1 %r164, label %"$BB_2_0004", label %"$BB_2_0011"

"$BB_2_0011":                                     ; preds = %"$BB_2_0002", %"$BB_2_0010_restore", %"$BB_2_0008_split", %"$BB_2_0009_restore", %"$BB_2_0011_restore"
  %r169 = phi float [ %r239, %"$BB_2_0011_restore" ], [ %r236, %"$BB_2_0009_restore" ], [ %r152, %"$BB_2_0008_split" ], [ 0.000000e+00, %"$BB_2_0010_restore" ], [ 0.000000e+00, %"$BB_2_0002" ]
  %r170 = phi i64 [ %r240, %"$BB_2_0011_restore" ], [ %r237, %"$BB_2_0009_restore" ], [ %r161, %"$BB_2_0008_split" ], [ %r181, %"$BB_2_0010_restore" ], [ %r29, %"$BB_2_0002" ]
  %rt483 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt484 = load i8** %rt483, align 8
  %rt482 = getelementptr i8* %rt484, i64 16
  %rt485 = bitcast i8* %rt482 to i64*
  %r171 = load i64* %rt485, align 8
  %r172 = add i64 %r171, %r170
  %rt486 = inttoptr i64 %r172 to float*
  store float %r169, float* %rt486, align 4
  %sunkaddr33 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr34 = add i64 %sunkaddr33, 48
  %sunkaddr35 = inttoptr i64 %sunkaddr34 to i8**
  %rt488 = load i8** %sunkaddr35, align 8
  %rt489 = bitcast i8* %rt488 to i32*
  store i32 4, i32* %rt489, align 4
  br label %exit

"$BB_2_0003_restore":                             ; preds = %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler
  %sunkaddr36 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr37 = add i64 %sunkaddr36, 48
  %sunkaddr38 = inttoptr i64 %sunkaddr37 to i8**
  %rt492 = load i8** %sunkaddr38, align 8
  %rt493 = ptrtoint i8* %rt492 to i64
  %rt494 = add i64 %rt493, 16
  %rt495 = inttoptr i64 %rt494 to i32*
  %r174 = load i32* %rt495, align 4
  %rt501 = add i64 %rt493, 20
  %rt502 = inttoptr i64 %rt501 to i64*
  %r175 = load i64* %rt502, align 8
  %rt506 = load i8** %sunkaddr38, align 8
  %rt507 = ptrtoint i8* %rt506 to i64
  %rt508 = add i64 %rt507, 28
  %rt509 = inttoptr i64 %rt508 to i64*
  %r176 = load i64* %rt509, align 8
  %rt515 = add i64 %rt507, 36
  %rt516 = inttoptr i64 %rt515 to i64*
  %r177 = load i64* %rt516, align 8
  %rt520 = load i8** %sunkaddr38, align 8
  %rt521 = ptrtoint i8* %rt520 to i64
  %rt522 = add i64 %rt521, 44
  %rt523 = inttoptr i64 %rt522 to i64*
  %r178 = load i64* %rt523, align 8
  %rt529 = add i64 %rt521, 52
  %rt530 = inttoptr i64 %rt529 to i32*
  %r179 = load i32* %rt530, align 4
  br label %"$BB_2_0003"

"$BB_2_0010_restore":                             ; preds = %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler
  %sunkaddr39 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr40 = add i64 %sunkaddr39, 48
  %sunkaddr41 = inttoptr i64 %sunkaddr40 to i8**
  %rt533 = load i8** %sunkaddr41, align 8
  %rt534 = ptrtoint i8* %rt533 to i64
  %rt535 = add i64 %rt534, 16
  %rt536 = inttoptr i64 %rt535 to i64*
  %r181 = load i64* %rt536, align 8
  br label %"$BB_2_0011"

"$BB_2_0004_restore":                             ; preds = %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler
  %sunkaddr42 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr43 = add i64 %sunkaddr42, 48
  %sunkaddr44 = inttoptr i64 %sunkaddr43 to i8**
  %rt539 = load i8** %sunkaddr44, align 8
  %rt540 = ptrtoint i8* %rt539 to i64
  %rt541 = add i64 %rt540, 16
  %rt542 = inttoptr i64 %rt541 to i32*
  %r183 = load i32* %rt542, align 4
  %rt548 = add i64 %rt540, 20
  %rt549 = inttoptr i64 %rt548 to i64*
  %r184 = load i64* %rt549, align 8
  %rt553 = load i8** %sunkaddr44, align 8
  %rt554 = ptrtoint i8* %rt553 to i64
  %rt555 = add i64 %rt554, 28
  %rt556 = inttoptr i64 %rt555 to i64*
  %r185 = load i64* %rt556, align 8
  %rt562 = add i64 %rt554, 36
  %rt563 = inttoptr i64 %rt562 to i64*
  %r186 = load i64* %rt563, align 8
  %rt567 = load i8** %sunkaddr44, align 8
  %rt568 = ptrtoint i8* %rt567 to i64
  %rt569 = add i64 %rt568, 44
  %rt570 = inttoptr i64 %rt569 to i32*
  %r187 = load i32* %rt570, align 4
  %rt576 = add i64 %rt568, 48
  %rt577 = inttoptr i64 %rt576 to i64*
  %r188 = load i64* %rt577, align 8
  %rt581 = load i8** %sunkaddr44, align 8
  %rt582 = ptrtoint i8* %rt581 to i64
  %rt583 = add i64 %rt582, 56
  %rt584 = inttoptr i64 %rt583 to i1*
  %r189 = load i1* %rt584, align 1
  %rt590 = add i64 %rt582, 57
  %rt591 = inttoptr i64 %rt590 to i64*
  %r190 = load i64* %rt591, align 8
  %rt595 = load i8** %sunkaddr44, align 8
  %rt596 = ptrtoint i8* %rt595 to i64
  %rt597 = add i64 %rt596, 65
  %rt598 = inttoptr i64 %rt597 to i64*
  %r191 = load i64* %rt598, align 8
  %rt604 = add i64 %rt596, 73
  %rt605 = inttoptr i64 %rt604 to i32*
  %r192 = load i32* %rt605, align 4
  %rt609 = load i8** %sunkaddr44, align 8
  %rt610 = ptrtoint i8* %rt609 to i64
  %rt611 = add i64 %rt610, 77
  %rt612 = inttoptr i64 %rt611 to float*
  %r193 = load float* %rt612, align 4
  br label %"$BB_2_0004"

"$BB_2_0005_restore":                             ; preds = %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler
  %sunkaddr45 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr46 = add i64 %sunkaddr45, 48
  %sunkaddr47 = inttoptr i64 %sunkaddr46 to i8**
  %rt615 = load i8** %sunkaddr47, align 8
  %rt616 = ptrtoint i8* %rt615 to i64
  %rt617 = add i64 %rt616, 16
  %rt618 = inttoptr i64 %rt617 to i32*
  %r195 = load i32* %rt618, align 4
  %rt624 = add i64 %rt616, 20
  %rt625 = inttoptr i64 %rt624 to i64*
  %r196 = load i64* %rt625, align 8
  %rt629 = load i8** %sunkaddr47, align 8
  %rt630 = ptrtoint i8* %rt629 to i64
  %rt631 = add i64 %rt630, 28
  %rt632 = inttoptr i64 %rt631 to i64*
  %r197 = load i64* %rt632, align 8
  %rt638 = add i64 %rt630, 36
  %rt639 = inttoptr i64 %rt638 to i64*
  %r198 = load i64* %rt639, align 8
  %rt643 = load i8** %sunkaddr47, align 8
  %rt644 = ptrtoint i8* %rt643 to i64
  %rt645 = add i64 %rt644, 44
  %rt646 = inttoptr i64 %rt645 to i32*
  %r199 = load i32* %rt646, align 4
  %rt652 = add i64 %rt644, 48
  %rt653 = inttoptr i64 %rt652 to i64*
  %r200 = load i64* %rt653, align 8
  %rt657 = load i8** %sunkaddr47, align 8
  %rt658 = ptrtoint i8* %rt657 to i64
  %rt659 = add i64 %rt658, 56
  %rt660 = inttoptr i64 %rt659 to i1*
  %r201 = load i1* %rt660, align 1
  %rt666 = add i64 %rt658, 57
  %rt667 = inttoptr i64 %rt666 to i64*
  %r202 = load i64* %rt667, align 8
  %rt671 = load i8** %sunkaddr47, align 8
  %rt672 = ptrtoint i8* %rt671 to i64
  %rt673 = add i64 %rt672, 65
  %rt674 = inttoptr i64 %rt673 to i64*
  %r203 = load i64* %rt674, align 8
  %rt680 = add i64 %rt672, 73
  %rt681 = inttoptr i64 %rt680 to i32*
  %r204 = load i32* %rt681, align 4
  %rt685 = load i8** %sunkaddr47, align 8
  %rt686 = ptrtoint i8* %rt685 to i64
  %rt687 = add i64 %rt686, 77
  %rt688 = inttoptr i64 %rt687 to float*
  %r205 = load float* %rt688, align 4
  br label %"$BB_2_0005"

"$BB_2_0008_restore":                             ; preds = %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler
  %sunkaddr48 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr49 = add i64 %sunkaddr48, 48
  %sunkaddr50 = inttoptr i64 %sunkaddr49 to i8**
  %rt691 = load i8** %sunkaddr50, align 8
  %rt692 = ptrtoint i8* %rt691 to i64
  %rt693 = add i64 %rt692, 16
  %rt694 = inttoptr i64 %rt693 to i32*
  %r207 = load i32* %rt694, align 4
  %rt700 = add i64 %rt692, 20
  %rt701 = inttoptr i64 %rt700 to i64*
  %r208 = load i64* %rt701, align 8
  %rt705 = load i8** %sunkaddr50, align 8
  %rt706 = ptrtoint i8* %rt705 to i64
  %rt707 = add i64 %rt706, 28
  %rt708 = inttoptr i64 %rt707 to i64*
  %r209 = load i64* %rt708, align 8
  %rt714 = add i64 %rt706, 36
  %rt715 = inttoptr i64 %rt714 to i64*
  %r210 = load i64* %rt715, align 8
  %rt719 = load i8** %sunkaddr50, align 8
  %rt720 = ptrtoint i8* %rt719 to i64
  %rt721 = add i64 %rt720, 44
  %rt722 = inttoptr i64 %rt721 to i32*
  %r211 = load i32* %rt722, align 4
  %rt728 = add i64 %rt720, 48
  %rt729 = inttoptr i64 %rt728 to i64*
  %r212 = load i64* %rt729, align 8
  %rt733 = load i8** %sunkaddr50, align 8
  %rt734 = ptrtoint i8* %rt733 to i64
  %rt735 = add i64 %rt734, 56
  %rt736 = inttoptr i64 %rt735 to i1*
  %r213 = load i1* %rt736, align 1
  %rt742 = add i64 %rt734, 57
  %rt743 = inttoptr i64 %rt742 to i64*
  %r214 = load i64* %rt743, align 8
  %rt747 = load i8** %sunkaddr50, align 8
  %rt748 = ptrtoint i8* %rt747 to i64
  %rt749 = add i64 %rt748, 65
  %rt750 = inttoptr i64 %rt749 to i64*
  %r215 = load i64* %rt750, align 8
  %rt756 = add i64 %rt748, 73
  %rt757 = inttoptr i64 %rt756 to i32*
  %r216 = load i32* %rt757, align 4
  %rt761 = load i8** %sunkaddr50, align 8
  %rt762 = ptrtoint i8* %rt761 to i64
  %rt763 = add i64 %rt762, 77
  %rt764 = inttoptr i64 %rt763 to float*
  %r217 = load float* %rt764, align 4
  br label %"$BB_2_0008"

"$BB_2_0006_restore":                             ; preds = %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler
  %sunkaddr51 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr52 = add i64 %sunkaddr51, 48
  %sunkaddr53 = inttoptr i64 %sunkaddr52 to i8**
  %rt767 = load i8** %sunkaddr53, align 8
  %rt768 = ptrtoint i8* %rt767 to i64
  %rt769 = add i64 %rt768, 16
  %rt770 = inttoptr i64 %rt769 to i32*
  %r219 = load i32* %rt770, align 4
  %rt776 = add i64 %rt768, 20
  %rt777 = inttoptr i64 %rt776 to i64*
  %r220 = load i64* %rt777, align 8
  %rt781 = load i8** %sunkaddr53, align 8
  %rt782 = ptrtoint i8* %rt781 to i64
  %rt783 = add i64 %rt782, 28
  %rt784 = inttoptr i64 %rt783 to i64*
  %r221 = load i64* %rt784, align 8
  %rt790 = add i64 %rt782, 36
  %rt791 = inttoptr i64 %rt790 to i64*
  %r222 = load i64* %rt791, align 8
  %rt795 = load i8** %sunkaddr53, align 8
  %rt796 = ptrtoint i8* %rt795 to i64
  %rt797 = add i64 %rt796, 44
  %rt798 = inttoptr i64 %rt797 to i64*
  %r223 = load i64* %rt798, align 8
  %rt804 = add i64 %rt796, 52
  %rt805 = inttoptr i64 %rt804 to i64*
  %r224 = load i64* %rt805, align 8
  %rt809 = load i8** %sunkaddr53, align 8
  %rt810 = ptrtoint i8* %rt809 to i64
  %rt811 = add i64 %rt810, 60
  %rt812 = inttoptr i64 %rt811 to i32*
  %r225 = load i32* %rt812, align 4
  %rt818 = add i64 %rt810, 64
  %rt819 = inttoptr i64 %rt818 to i64*
  %r226 = load i64* %rt819, align 8
  %rt823 = load i8** %sunkaddr53, align 8
  %rt824 = ptrtoint i8* %rt823 to i64
  %rt825 = add i64 %rt824, 72
  %rt826 = inttoptr i64 %rt825 to i64*
  %r227 = load i64* %rt826, align 8
  %rt832 = add i64 %rt824, 80
  %rt833 = inttoptr i64 %rt832 to i32*
  %r228 = load i32* %rt833, align 4
  %rt837 = load i8** %sunkaddr53, align 8
  %rt838 = ptrtoint i8* %rt837 to i64
  %rt839 = add i64 %rt838, 84
  %rt840 = inttoptr i64 %rt839 to i64*
  %r229 = load i64* %rt840, align 8
  %rt846 = add i64 %rt838, 92
  %rt847 = inttoptr i64 %rt846 to i1*
  %r230 = load i1* %rt847, align 1
  %rt851 = load i8** %sunkaddr53, align 8
  %rt852 = ptrtoint i8* %rt851 to i64
  %rt853 = add i64 %rt852, 93
  %rt854 = inttoptr i64 %rt853 to i64*
  %r231 = load i64* %rt854, align 8
  %rt860 = add i64 %rt852, 101
  %rt861 = inttoptr i64 %rt860 to i64*
  %r232 = load i64* %rt861, align 8
  %rt865 = load i8** %sunkaddr53, align 8
  %rt866 = ptrtoint i8* %rt865 to i64
  %rt867 = add i64 %rt866, 109
  %rt868 = inttoptr i64 %rt867 to i32*
  %r233 = load i32* %rt868, align 4
  %rt874 = add i64 %rt866, 113
  %rt875 = inttoptr i64 %rt874 to float*
  %r234 = load float* %rt875, align 4
  br label %"$BB_2_0006.preheader"

"$BB_2_0009_restore":                             ; preds = %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler
  %sunkaddr54 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr55 = add i64 %sunkaddr54, 48
  %sunkaddr56 = inttoptr i64 %sunkaddr55 to i8**
  %rt878 = load i8** %sunkaddr56, align 8
  %rt879 = ptrtoint i8* %rt878 to i64
  %rt880 = add i64 %rt879, 16
  %rt881 = inttoptr i64 %rt880 to float*
  %r236 = load float* %rt881, align 4
  %rt887 = add i64 %rt879, 20
  %rt888 = inttoptr i64 %rt887 to i64*
  %r237 = load i64* %rt888, align 8
  br label %"$BB_2_0011"

"$BB_2_0011_restore":                             ; preds = %_Z21k_matrixVectorProductPKfS0_Pfii_scheduler
  %sunkaddr57 = ptrtoint %LLVMContext* %__ctaContext to i64
  %sunkaddr58 = add i64 %sunkaddr57, 48
  %sunkaddr59 = inttoptr i64 %sunkaddr58 to i8**
  %rt891 = load i8** %sunkaddr59, align 8
  %rt892 = ptrtoint i8* %rt891 to i64
  %rt893 = add i64 %rt892, 16
  %rt894 = inttoptr i64 %rt893 to float*
  %r239 = load float* %rt894, align 4
  %rt900 = add i64 %rt892, 20
  %rt901 = inttoptr i64 %rt900 to i64*
  %r240 = load i64* %rt901, align 8
  br label %"$BB_2_0011"

exit:                                             ; preds = %"$BB_2_0011", %"$BB_2_0008", %"$BB_2_0007_save", %"$BB_2_0004"
  ret void
}
; ModuleID = '_ZOcelotBarrierKernel'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated__ZOcelotBarrierKernel(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %r0 = bitcast i32 8 to i32
  %rt0 = zext i32 %r0 to i64
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt2 = load i8** %rt1
  %rt3 = ptrtoint i8* %rt2 to i64
  %rt4 = add i64 %rt0, %rt3
  %rt5 = inttoptr i64 %rt4 to i32*
  %r1 = load i32* %rt5, align 4
  %rt6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt7 = load i8** %rt6
  %rt8 = bitcast i8* %rt7 to i32*
  store i32 1, i32* %rt8
  %rt9 = getelementptr i32* %rt8, i32 1
  store i32 %r1, i32* %rt9
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}
; ModuleID = '_Z21k_matrixVectorProductPKfS0_Pfii_split_0'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated__Z21k_matrixVectorProductPKfS0_Pfii_split_0(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt2 = load i8** %rt1, align 8
  %rt3 = ptrtoint i8* %rt2 to i64
  %rt4 = add i64 %rt3, 16
  %rt5 = inttoptr i64 %rt4 to i32*
  %rt18 = add i64 %rt3, 28
  %rt19 = inttoptr i64 %rt18 to i64*
  %rt31 = ptrtoint i8* %rt2 to i64
  %rt32 = add i64 %rt31, 44
  %rt33 = inttoptr i64 %rt32 to i64*
  %rt39 = add i64 %rt31, 52
  %rt40 = inttoptr i64 %rt39 to i32*
  %rt44 = load i8** %rt1, align 8
  %rt45 = ptrtoint i8* %rt44 to i64
  %rt46 = add i64 %rt45, 56
  %rt47 = inttoptr i64 %rt46 to i64*
  %rt53 = add i64 %rt45, 64
  %rt54 = inttoptr i64 %rt53 to i1*
  %rt59 = ptrtoint i8* %rt44 to i64
  %rt60 = add i64 %rt59, 65
  %rt61 = inttoptr i64 %rt60 to i64*
  %r9 = load i64* %rt61, align 8
  %rt67 = add i64 %rt59, 73
  %rt68 = inttoptr i64 %rt67 to i64*
  %rt72 = load i8** %rt1, align 8
  %rt73 = ptrtoint i8* %rt72 to i64
  %rt74 = add i64 %rt73, 81
  %rt75 = inttoptr i64 %rt74 to i32*
  %rt81 = add i64 %rt73, 85
  %rt82 = inttoptr i64 %rt81 to float*
  %rt11 = add i64 %rt3, 20
  %rt12 = inttoptr i64 %rt11 to i64*
  %r2 = load i64* %rt12, align 8
  %rt25 = add i64 %rt3, 36
  %rt26 = inttoptr i64 %rt25 to i64*
  %r25 = shl i64 %r9, 2
  %r26 = mul i64 %r25, %r2
  %r4 = load i64* %rt26, align 8
  %r6 = load i32* %rt40, align 4
  %r5 = load i64* %rt33, align 8
  %r27 = add i64 %r4, %r26
  %r3 = load i64* %rt19, align 8
  %r1 = load i32* %rt5, align 4
  %r12 = load float* %rt82, align 4
  %r11 = load i32* %rt75, align 4
  %r10 = load i64* %rt68, align 8
  %r8 = load i1* %rt54, align 1
  %r7 = load i64* %rt47, align 8
  %rt85 = load i8** %rt1, align 8
  %rt86 = ptrtoint i8* %rt85 to i64
  %rt87 = add i64 %rt86, 16
  %rt88 = inttoptr i64 %rt87 to i32*
  store i32 %r1, i32* %rt88, align 4
  %rt92 = load i8** %rt1, align 8
  %rt93 = ptrtoint i8* %rt92 to i64
  %rt94 = add i64 %rt93, 20
  %rt95 = inttoptr i64 %rt94 to i64*
  store i64 %r3, i64* %rt95, align 8
  %rt99 = load i8** %rt1, align 8
  %rt100 = ptrtoint i8* %rt99 to i64
  %rt101 = add i64 %rt100, 28
  %rt102 = inttoptr i64 %rt101 to i64*
  store i64 %r27, i64* %rt102, align 8
  %rt106 = load i8** %rt1, align 8
  %rt107 = ptrtoint i8* %rt106 to i64
  %rt108 = add i64 %rt107, 36
  %rt109 = inttoptr i64 %rt108 to i64*
  store i64 %r5, i64* %rt109, align 8
  %rt113 = load i8** %rt1, align 8
  %rt114 = ptrtoint i8* %rt113 to i64
  %rt115 = add i64 %rt114, 44
  %rt116 = inttoptr i64 %rt115 to i32*
  store i32 %r6, i32* %rt116, align 4
  %rt120 = load i8** %rt1, align 8
  %rt121 = ptrtoint i8* %rt120 to i64
  %rt122 = add i64 %rt121, 48
  %rt123 = inttoptr i64 %rt122 to i64*
  store i64 %r7, i64* %rt123, align 8
  %rt127 = load i8** %rt1, align 8
  %rt128 = ptrtoint i8* %rt127 to i64
  %rt129 = add i64 %rt128, 56
  %rt130 = inttoptr i64 %rt129 to i1*
  store i1 %r8, i1* %rt130, align 1
  %rt134 = load i8** %rt1, align 8
  %rt135 = ptrtoint i8* %rt134 to i64
  %rt136 = add i64 %rt135, 57
  %rt137 = inttoptr i64 %rt136 to i64*
  store i64 %r9, i64* %rt137, align 8
  %rt141 = load i8** %rt1, align 8
  %rt142 = ptrtoint i8* %rt141 to i64
  %rt143 = add i64 %rt142, 65
  %rt144 = inttoptr i64 %rt143 to i64*
  store i64 %r10, i64* %rt144, align 8
  %rt148 = load i8** %rt1, align 8
  %rt149 = ptrtoint i8* %rt148 to i64
  %rt150 = add i64 %rt149, 73
  %rt151 = inttoptr i64 %rt150 to i32*
  store i32 %r11, i32* %rt151, align 4
  %rt155 = load i8** %rt1, align 8
  %rt156 = ptrtoint i8* %rt155 to i64
  %rt157 = add i64 %rt156, 77
  %rt158 = inttoptr i64 %rt157 to float*
  store float %r12, float* %rt158, align 4
  %rt161 = load i8** %rt1, align 8
  %rt162 = ptrtoint i8* %rt161 to i64
  %rt163 = add i64 %rt162, 12
  %rt164 = inttoptr i64 %rt163 to i32*
  store i32 8, i32* %rt164, align 4
  %rt166 = load i8** %rt1, align 8
  %rt167 = bitcast i8* %rt166 to i32*
  store i32 1, i32* %rt167, align 4
  %rt168 = getelementptr i8* %rt166, i64 4
  %0 = bitcast i8* %rt168 to i32*
  store i32 0, i32* %0, align 4
  ret void
}
Pass/Fail : Pass


Name : TestLLVMKernels

Description: A unit test for the LLVM executive runtime. Test Points: 1) 
             Execute a kernel with a loop. 2) Execute a matrix multiply kernel.


Test Seed : 1302636531
Test time : 0.15569

Status : A = [
 1 0 0 0 0 0 0 0 ;
 0.5 1 0 0 0 0 0 0 ;
 0.333333 0.5 1 0 0 0 0 0 ;
 0.25 0.333333 0.5 1 0 0 0 0 ;
 0.2 0.25 0.333333 0.5 1 0 0 0 ;
 0.166667 0.2 0.25 0.333333 0.5 1 0 0 ;
 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 0 ;
 0.125 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 ;
];
V = [
 1 ;
 2 ;
 3 ;
 4 ;
 5 ;
 6 ;
 7 ;
 8 ;
];
R = [
 1 ;
 2.5 ;
 4.33333 ;
 6.41667 ;
 8.7 ;
 11.15 ;
 13.7429 ;
 16.4607 ;
];



INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestFunctionCall 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaTexture2D
INFO     Test completed in 0.0565729141235 seconds
INFO      It produced the following output:
; ModuleID = '_Z6kernelPfii_hb_0'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated__Z6kernelPfii_hb_0(%LLVMContext* %__ctaContext) nounwind align 1 {
"$OcelotTextureAllocateBlock":
  %integerTexture = alloca i32, i32 4, align 16
  %floatingPointTexture = alloca float, i32 4, align 16
  br label %"$BB_1_0002"

"$BB_1_0002":                                     ; preds = %"$OcelotTextureAllocateBlock"
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %rt1 = load i32* %rt0
  %r0 = bitcast i32 %rt1 to i32
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %rt3 = load i32* %rt2
  %r1 = bitcast i32 %rt3 to i32
  %r2 = mul i32 %r0, %r1
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 1
  %rt5 = load i32* %rt4
  %r3 = bitcast i32 %rt5 to i32
  %rt6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 1
  %rt7 = load i32* %rt6
  %r4 = bitcast i32 %rt7 to i32
  %r5 = mul i32 %r3, %r4
  %rt8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %rt9 = load i32* %rt8
  %r6 = bitcast i32 %rt9 to i32
  %r7 = add i32 %r6, %r2
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 1
  %rt11 = load i32* %rt10
  %r8 = bitcast i32 %rt11 to i32
  %r9 = add i32 %r8, %r5
  %r10 = uitofp i32 %r7 to float
  %r11 = uitofp i32 %r9 to float
  %r12 = bitcast float 0.000000e+00 to float
  %r13 = bitcast float 0.000000e+00 to float
  call void @__ocelot_tex_2d_ff(float* %floatingPointTexture, %LLVMContext* %__ctaContext, i32 0, float %r10, float %r11)
  %r14 = load float* %floatingPointTexture
  %rt12 = getelementptr float* %floatingPointTexture, i32 1
  %r15 = load float* %rt12
  %rt13 = getelementptr float* %floatingPointTexture, i32 2
  %r16 = load float* %rt13
  %rt14 = getelementptr float* %floatingPointTexture, i32 3
  %r17 = load float* %rt14
  %r18 = bitcast float %r14 to float
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt16 = load i8** %rt15
  %rt17 = bitcast i8* %rt16 to i64*
  %r19 = load i64* %rt17, align 8
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt20 = load i8** %rt19
  %rt18 = getelementptr i8* %rt20, i32 8
  %rt21 = bitcast i8* %rt18 to i32*
  %r20 = load i32* %rt21, align 4
  %r21 = mul i32 %r20, %r9
  %r22 = add i32 %r7, %r21
  %r23 = zext i32 %r22 to i64
  %rt22 = zext i32 %r22 to i64
  %r24 = mul i64 %rt22, 4
  %r25 = add i64 %r19, %r24
  %rt23 = inttoptr i64 %r25 to float*
  store float %r18, float* %rt23, align 4
  %r26 = bitcast i32 0 to i32
  %rt24 = zext i32 %r26 to i64
  %rt25 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt26 = load i8** %rt25
  %rt27 = ptrtoint i8* %rt26 to i64
  %rt28 = add i64 %rt24, %rt27
  %rt29 = inttoptr i64 %rt28 to i32*
  store i32 6, i32* %rt29, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated__Z6kernelPfii_hb_0_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %floatingPointTexture.t01 = alloca [4 x float], align 16
  %floatingPointTexture.t12 = alloca [4 x float], align 16
  %floatingPointTexture.t12.sub3 = bitcast [4 x float]* %floatingPointTexture.t12 to float*
  %floatingPointTexture.t01.sub4 = bitcast [4 x float]* %floatingPointTexture.t01 to float*
  %rt0.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 0
  %rt0.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 2, i32 0
  %rt1.t0 = load i32* %rt0.t0, align 4
  %rt1.t1 = load i32* %rt0.t1, align 4
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 0
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 1, i32 0
  %rt3.t0 = load i32* %rt2.t0, align 4
  %rt3.t1 = load i32* %rt2.t1, align 4
  %r2.t0 = mul i32 %rt3.t0, %rt1.t0
  %r2.t1 = mul i32 %rt3.t1, %rt1.t1
  %rt4.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 1
  %rt4.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 2, i32 1
  %rt5.t0 = load i32* %rt4.t0, align 4
  %rt5.t1 = load i32* %rt4.t1, align 4
  %rt6.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 1
  %rt6.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 1, i32 1
  %rt7.t0 = load i32* %rt6.t0, align 4
  %rt7.t1 = load i32* %rt6.t1, align 4
  %r5.t0 = mul i32 %rt7.t0, %rt5.t0
  %r5.t1 = mul i32 %rt7.t1, %rt5.t1
  %rt8.t05 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt8.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 0
  %rt9.t0 = load i32* %rt8.t05, align 4
  %rt9.t1 = load i32* %rt8.t1, align 4
  %r7.t0 = add i32 %rt9.t0, %r2.t0
  %r7.t1 = add i32 %rt9.t1, %r2.t1
  %rt10.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 0, i32 1
  %rt10.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 1
  %rt11.t0 = load i32* %rt10.t0, align 4
  %rt11.t1 = load i32* %rt10.t1, align 4
  %r9.t0 = add i32 %rt11.t0, %r5.t0
  %r9.t1 = add i32 %rt11.t1, %r5.t1
  %r10.t0 = uitofp i32 %r7.t0 to float
  %r10.t1 = uitofp i32 %r7.t1 to float
  %r11.t0 = uitofp i32 %r9.t0 to float
  %r11.t1 = uitofp i32 %r9.t1 to float
  call void @__ocelot_tex_2d_ff(float* %floatingPointTexture.t01.sub4, %LLVMContext* %__ctaContext, i32 0, float %r10.t0, float %r11.t0) nounwind
  call void @__ocelot_tex_2d_ff(float* %floatingPointTexture.t12.sub3, %LLVMContext* %__ctaContext, i32 0, float %r10.t1, float %r11.t1) nounwind
  %r14.t0 = load float* %floatingPointTexture.t01.sub4, align 16
  %r14.t1 = load float* %floatingPointTexture.t12.sub3, align 16
  %rt15.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt15.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 8
  %rt16.t0 = load i8** %rt15.t0, align 8
  %rt16.t1 = load i8** %rt15.t1, align 8
  %rt17.t0 = bitcast i8* %rt16.t0 to i64*
  %rt17.t1 = bitcast i8* %rt16.t1 to i64*
  %r19.t0 = load i64* %rt17.t0, align 8
  %r19.t1 = load i64* %rt17.t1, align 8
  %rt18.t0 = getelementptr i8* %rt16.t0, i64 8
  %rt18.t1 = getelementptr i8* %rt16.t1, i64 8
  %rt21.t0 = bitcast i8* %rt18.t0 to i32*
  %rt21.t1 = bitcast i8* %rt18.t1 to i32*
  %r20.t0 = load i32* %rt21.t0, align 4
  %r20.t1 = load i32* %rt21.t1, align 4
  %r21.t0 = mul i32 %r20.t0, %r9.t0
  %r21.t1 = mul i32 %r20.t1, %r9.t1
  %r22.t0 = add i32 %r21.t0, %r7.t0
  %r22.t1 = add i32 %r21.t1, %r7.t1
  %rt22.t0 = zext i32 %r22.t0 to i64
  %rt22.t1 = zext i32 %r22.t1 to i64
  %r24.t0 = shl nuw nsw i64 %rt22.t0, 2
  %r24.t1 = shl nuw nsw i64 %rt22.t1, 2
  %r25.t0 = add i64 %r24.t0, %r19.t0
  %r25.t1 = add i64 %r24.t1, %r19.t1
  %rt23.t0 = inttoptr i64 %r25.t0 to float*
  %rt23.t1 = inttoptr i64 %r25.t1 to float*
  store float %r14.t0, float* %rt23.t0, align 4
  store float %r14.t1, float* %rt23.t1, align 4
  %rt25.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt25.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt26.t0 = load i8** %rt25.t0, align 8
  %rt26.t1 = load i8** %rt25.t1, align 8
  %rt29.t0 = bitcast i8* %rt26.t0 to i32*
  %rt29.t1 = bitcast i8* %rt26.t1 to i32*
  store i32 6, i32* %rt29.t0, align 4
  store i32 6, i32* %rt29.t1, align 4
  ret void
}
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaTextureArray
INFO     Test completed in 0.0560801029205 seconds
INFO      It produced the following output:
; ModuleID = '_Z6kernelPfii_hb_0'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated__Z6kernelPfii_hb_0(%LLVMContext* %__ctaContext) nounwind align 1 {
"$OcelotTextureAllocateBlock":
  %integerTexture = alloca i32, i32 4, align 16
  %floatingPointTexture = alloca float, i32 4, align 16
  br label %"$BB_1_0002"

"$BB_1_0002":                                     ; preds = %"$OcelotTextureAllocateBlock"
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %rt1 = load i32* %rt0
  %r0 = bitcast i32 %rt1 to i32
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %rt3 = load i32* %rt2
  %r1 = bitcast i32 %rt3 to i32
  %r2 = mul i32 %r0, %r1
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 1
  %rt5 = load i32* %rt4
  %r3 = bitcast i32 %rt5 to i32
  %rt6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 1
  %rt7 = load i32* %rt6
  %r4 = bitcast i32 %rt7 to i32
  %r5 = mul i32 %r3, %r4
  %rt8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %rt9 = load i32* %rt8
  %r6 = bitcast i32 %rt9 to i32
  %r7 = add i32 %r6, %r2
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 1
  %rt11 = load i32* %rt10
  %r8 = bitcast i32 %rt11 to i32
  %r9 = add i32 %r8, %r5
  %r10 = uitofp i32 %r7 to float
  %r11 = uitofp i32 %r9 to float
  %r12 = bitcast float 0.000000e+00 to float
  %r13 = bitcast float 0.000000e+00 to float
  call void @__ocelot_tex_2d_ff(float* %floatingPointTexture, %LLVMContext* %__ctaContext, i32 0, float %r10, float %r11)
  %r14 = load float* %floatingPointTexture
  %rt12 = getelementptr float* %floatingPointTexture, i32 1
  %r15 = load float* %rt12
  %rt13 = getelementptr float* %floatingPointTexture, i32 2
  %r16 = load float* %rt13
  %rt14 = getelementptr float* %floatingPointTexture, i32 3
  %r17 = load float* %rt14
  %r18 = bitcast float %r14 to float
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt16 = load i8** %rt15
  %rt17 = bitcast i8* %rt16 to i64*
  %r19 = load i64* %rt17, align 8
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt20 = load i8** %rt19
  %rt18 = getelementptr i8* %rt20, i32 8
  %rt21 = bitcast i8* %rt18 to i32*
  %r20 = load i32* %rt21, align 4
  %r21 = mul i32 %r20, %r9
  %r22 = add i32 %r7, %r21
  %r23 = zext i32 %r22 to i64
  %rt22 = zext i32 %r22 to i64
  %r24 = mul i64 %rt22, 4
  %r25 = add i64 %r19, %r24
  %rt23 = inttoptr i64 %r25 to float*
  store float %r18, float* %rt23, align 4
  %r26 = bitcast i32 0 to i32
  %rt24 = zext i32 %r26 to i64
  %rt25 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt26 = load i8** %rt25
  %rt27 = ptrtoint i8* %rt26 to i64
  %rt28 = add i64 %rt24, %rt27
  %rt29 = inttoptr i64 %rt28 to i32*
  store i32 6, i32* %rt29, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated__Z6kernelPfii_hb_0_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %floatingPointTexture.t01 = alloca [4 x float], align 16
  %floatingPointTexture.t12 = alloca [4 x float], align 16
  %floatingPointTexture.t12.sub3 = bitcast [4 x float]* %floatingPointTexture.t12 to float*
  %floatingPointTexture.t01.sub4 = bitcast [4 x float]* %floatingPointTexture.t01 to float*
  %rt0.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 0
  %rt0.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 2, i32 0
  %rt1.t0 = load i32* %rt0.t0, align 4
  %rt1.t1 = load i32* %rt0.t1, align 4
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 0
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 1, i32 0
  %rt3.t0 = load i32* %rt2.t0, align 4
  %rt3.t1 = load i32* %rt2.t1, align 4
  %r2.t0 = mul i32 %rt3.t0, %rt1.t0
  %r2.t1 = mul i32 %rt3.t1, %rt1.t1
  %rt4.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 1
  %rt4.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 2, i32 1
  %rt5.t0 = load i32* %rt4.t0, align 4
  %rt5.t1 = load i32* %rt4.t1, align 4
  %rt6.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 1
  %rt6.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 1, i32 1
  %rt7.t0 = load i32* %rt6.t0, align 4
  %rt7.t1 = load i32* %rt6.t1, align 4
  %r5.t0 = mul i32 %rt7.t0, %rt5.t0
  %r5.t1 = mul i32 %rt7.t1, %rt5.t1
  %rt8.t05 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt8.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 0
  %rt9.t0 = load i32* %rt8.t05, align 4
  %rt9.t1 = load i32* %rt8.t1, align 4
  %r7.t0 = add i32 %rt9.t0, %r2.t0
  %r7.t1 = add i32 %rt9.t1, %r2.t1
  %rt10.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 0, i32 1
  %rt10.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 1
  %rt11.t0 = load i32* %rt10.t0, align 4
  %rt11.t1 = load i32* %rt10.t1, align 4
  %r9.t0 = add i32 %rt11.t0, %r5.t0
  %r9.t1 = add i32 %rt11.t1, %r5.t1
  %r10.t0 = uitofp i32 %r7.t0 to float
  %r10.t1 = uitofp i32 %r7.t1 to float
  %r11.t0 = uitofp i32 %r9.t0 to float
  %r11.t1 = uitofp i32 %r9.t1 to float
  call void @__ocelot_tex_2d_ff(float* %floatingPointTexture.t01.sub4, %LLVMContext* %__ctaContext, i32 0, float %r10.t0, float %r11.t0) nounwind
  call void @__ocelot_tex_2d_ff(float* %floatingPointTexture.t12.sub3, %LLVMContext* %__ctaContext, i32 0, float %r10.t1, float %r11.t1) nounwind
  %r14.t0 = load float* %floatingPointTexture.t01.sub4, align 16
  %r14.t1 = load float* %floatingPointTexture.t12.sub3, align 16
  %rt15.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt15.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 8
  %rt16.t0 = load i8** %rt15.t0, align 8
  %rt16.t1 = load i8** %rt15.t1, align 8
  %rt17.t0 = bitcast i8* %rt16.t0 to i64*
  %rt17.t1 = bitcast i8* %rt16.t1 to i64*
  %r19.t0 = load i64* %rt17.t0, align 8
  %r19.t1 = load i64* %rt17.t1, align 8
  %rt18.t0 = getelementptr i8* %rt16.t0, i64 8
  %rt18.t1 = getelementptr i8* %rt16.t1, i64 8
  %rt21.t0 = bitcast i8* %rt18.t0 to i32*
  %rt21.t1 = bitcast i8* %rt18.t1 to i32*
  %r20.t0 = load i32* %rt21.t0, align 4
  %r20.t1 = load i32* %rt21.t1, align 4
  %r21.t0 = mul i32 %r20.t0, %r9.t0
  %r21.t1 = mul i32 %r20.t1, %r9.t1
  %r22.t0 = add i32 %r21.t0, %r7.t0
  %r22.t1 = add i32 %r21.t1, %r7.t1
  %rt22.t0 = zext i32 %r22.t0 to i64
  %rt22.t1 = zext i32 %r22.t1 to i64
  %r24.t0 = shl nuw nsw i64 %rt22.t0, 2
  %r24.t1 = shl nuw nsw i64 %rt22.t1, 2
  %r25.t0 = add i64 %r24.t0, %r19.t0
  %r25.t1 = add i64 %r24.t1, %r19.t1
  %rt23.t0 = inttoptr i64 %r25.t0 to float*
  %rt23.t1 = inttoptr i64 %r25.t1 to float*
  store float %r14.t0, float* %rt23.t0, align 4
  store float %r14.t1, float* %rt23.t1, align 4
  %rt25.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt25.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt26.t0 = load i8** %rt25.t0, align 8
  %rt26.t1 = load i8** %rt25.t1, align 8
  %rt29.t0 = bitcast i8* %rt26.t0 to i32*
  %rt29.t1 = bitcast i8* %rt26.t1 to i32*
  store i32 6, i32* %rt29.t0, align 4
  store i32 6, i32* %rt29.t1, align 4
  ret void
}
Pass/Fail : Pass

INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestFunctionCall
INFO     Test completed in 0.0481688976288 seconds
INFO      It produced the following output:
; ModuleID = 'kernel_hb_1'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_kernel_hb_1(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_2_0002":
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %rt1 = load i32* %rt0
  %r0 = bitcast i32 %rt1 to i32
  %rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %rt3 = load i32* %rt2
  %r1 = bitcast i32 %rt3 to i32
  %r2 = mul i32 %r0, %r1
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %rt5 = load i32* %rt4
  %r3 = bitcast i32 %rt5 to i32
  %r4 = add i32 %r3, %r2
  %rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt8 = load i8** %rt7
  %rt6 = getelementptr i8* %rt8, i32 8
  %rt9 = bitcast i8* %rt6 to i32*
  %r5 = load i32* %rt9, align 4
  %r6 = icmp sle i32 %r5, %r4
  %r7 = select i1 %r6, i32 3, i32 2
  %r8 = bitcast i32 4 to i32
  %rt10 = zext i32 %r8 to i64
  %rt11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt12 = load i8** %rt11
  %rt13 = ptrtoint i8* %rt12 to i64
  %rt14 = add i64 %rt10, %rt13
  %rt15 = inttoptr i64 %rt14 to i32*
  store i32 %r7, i32* %rt15, align 4
  %r9 = bitcast i32 0 to i32
  %rt16 = zext i32 %r9 to i64
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt18 = load i8** %rt17
  %rt19 = ptrtoint i8* %rt18 to i64
  %rt20 = add i64 %rt16, %rt19
  %rt21 = inttoptr i64 %rt20 to i32*
  store i32 1, i32* %rt21, align 4
  %r10 = bitcast i32 8 to i32
  %rt22 = zext i32 %r10 to i64
  %rt23 = add i64 %rt22, 32
  %rt24 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt25 = load i8** %rt24
  %rt26 = ptrtoint i8* %rt25 to i64
  %rt27 = add i64 %rt23, %rt26
  %rt28 = inttoptr i64 %rt27 to i32*
  store i32 %r4, i32* %rt28, align 4
  br label %exit

exit:                                             ; preds = %"$BB_2_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_kernel_hb_1_opt3_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
exit_ws_2:
  %rt0.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 0
  %rt0.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 2, i32 0
  %rt1.t0 = load i32* %rt0.t0, align 4
  %rt1.t1 = load i32* %rt0.t1, align 4
  %rt2.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 0
  %rt2.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 1, i32 0
  %rt3.t0 = load i32* %rt2.t0, align 4
  %rt3.t1 = load i32* %rt2.t1, align 4
  %r2.t0 = mul i32 %rt3.t0, %rt1.t0
  %r2.t1 = mul i32 %rt3.t1, %rt1.t1
  %rt4.t01 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt4.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 0, i32 0
  %rt5.t0 = load i32* %rt4.t01, align 4
  %rt5.t1 = load i32* %rt4.t1, align 4
  %r4.t0 = add i32 %rt5.t0, %r2.t0
  %r4.t1 = add i32 %rt5.t1, %r2.t1
  %rt7.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt7.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 8
  %rt8.t0 = load i8** %rt7.t0, align 8
  %rt8.t1 = load i8** %rt7.t1, align 8
  %rt6.t0 = getelementptr i8* %rt8.t0, i64 8
  %rt6.t1 = getelementptr i8* %rt8.t1, i64 8
  %rt9.t0 = bitcast i8* %rt6.t0 to i32*
  %rt9.t1 = bitcast i8* %rt6.t1 to i32*
  %r5.t0 = load i32* %rt9.t0, align 4
  %r5.t1 = load i32* %rt9.t1, align 4
  %r6.t0 = icmp sle i32 %r5.t0, %r4.t0
  %r6.t1 = icmp sle i32 %r5.t1, %r4.t1
  %r7.t0 = select i1 %r6.t0, i32 3, i32 2
  %r7.t1 = select i1 %r6.t1, i32 3, i32 2
  %rt11.t0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11.t1 = getelementptr %LLVMContext* %__ctaContext, i64 1, i32 4
  %rt12.t0 = load i8** %rt11.t0, align 8
  %rt12.t1 = load i8** %rt11.t1, align 8
  %rt13.t0 = ptrtoint i8* %rt12.t0 to i64
  %rt13.t1 = ptrtoint i8* %rt12.t1 to i64
  %rt14.t0 = add i64 %rt13.t0, 4
  %rt14.t1 = add i64 %rt13.t1, 4
  %rt15.t0 = inttoptr i64 %rt14.t0 to i32*
  %rt15.t1 = inttoptr i64 %rt14.t1 to i32*
  store i32 %r7.t0, i32* %rt15.t0, align 4
  store i32 %r7.t1, i32* %rt15.t1, align 4
  %rt18.t0 = load i8** %rt11.t0, align 8
  %rt18.t1 = load i8** %rt11.t1, align 8
  %rt21.t0 = bitcast i8* %rt18.t0 to i32*
  %rt21.t1 = bitcast i8* %rt18.t1 to i32*
  store i32 1, i32* %rt21.t0, align 4
  store i32 1, i32* %rt21.t1, align 4
  %rt25.t0 = load i8** %rt11.t0, align 8
  %rt25.t1 = load i8** %rt11.t1, align 8
  %rt26.t0 = ptrtoint i8* %rt25.t0 to i64
  %rt26.t1 = ptrtoint i8* %rt25.t1 to i64
  %rt27.t0 = add i64 %rt26.t0, 40
  %rt27.t1 = add i64 %rt26.t1, 40
  %rt28.t0 = inttoptr i64 %rt27.t0 to i32*
  %rt28.t1 = inttoptr i64 %rt27.t1 to i32*
  store i32 %r4.t0, i32* %rt28.t0, align 4
  store i32 %r4.t1, i32* %rt28.t1, align 4
  ret void
}
TestFunctionCall: ocelot/executive/implementation/LLVMDynamicTranslationCache.cpp:1052: void executive::setupCallTargets(ir::PTXKernel&, const executive::LLVMDynamicTranslationCache&): Assertion `0 && "unimplemented"' failed.

INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestKernels
INFO     Test completed in 0.0417878627777 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestKernels

Description: 


Test Seed : 1302636532
Test time : 0.0139015

Status : Test output:
looping kernel succeeded
matrix vector kernel succeeded



INFO     Test /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestPTXAssembly
INFO     Test completed in 2.71021699905 seconds
INFO      It produced the following output:
; ModuleID = 'test_hb_0'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_0(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt8 = inttoptr i64 %r0 to <4 x i32>*
  %rt7 = load <4 x i32>* %rt8, align 16
  %r2 = extractelement <4 x i32> %rt7, i32 0
  %r3 = extractelement <4 x i32> %rt7, i32 1
  %r4 = extractelement <4 x i32> %rt7, i32 2
  %r5 = extractelement <4 x i32> %rt7, i32 3
  %r6 = bitcast i32 %r3 to i32
  %r7 = bitcast i32 %r4 to i32
  %r8 = bitcast i32 %r5 to i32
  %r9 = bitcast i32 %r2 to i32
  %rt9 = inttoptr i64 %r1 to <4 x i32>*
  %rt10 = insertelement <4 x i32> zeroinitializer, i32 %r6, i32 0
  %rt11 = insertelement <4 x i32> %rt10, i32 %r7, i32 1
  %rt12 = insertelement <4 x i32> %rt11, i32 %r8, i32 2
  %rt13 = insertelement <4 x i32> %rt12, i32 %r9, i32 3
  store <4 x i32> %rt13, <4 x i32>* %rt9, align 16
  %r10 = bitcast i32 0 to i32
  %rt14 = zext i32 %r10 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_0_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt8 = inttoptr i64 %r0 to <4 x i32>*
  %rt7 = load <4 x i32>* %rt8, align 16
  %rt9 = inttoptr i64 %r1 to <4 x i32>*
  %rt13 = shufflevector <4 x i32> %rt7, <4 x i32> undef, <4 x i32> <i32 1, i32 2, i32 3, i32 0>
  store <4 x i32> %rt13, <4 x i32>* %rt9, align 16
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt19 = bitcast i8* %rt16 to i32*
  store i32 6, i32* %rt19, align 4
  ret void
}
; ModuleID = 'test_hb_1'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_1(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = add i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_1_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = add i16 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_2'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_2(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = add i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_2_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = add i16 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_3'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_3(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = add i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_3_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = add i32 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_4'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_4(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = add i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_4_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = add i32 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_5'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_5(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sext i32 %r2 to i64
  %rt11 = sext i32 %r3 to i64
  %rt12 = add i64 %rt10, %rt11
  %rt13 = icmp slt i64 %rt12, -2147483648
  %rt14 = select i1 %rt13, i64 -2147483648, i64 %rt12
  %rt15 = icmp sgt i64 %rt14, 2147483647
  %rt16 = select i1 %rt15, i64 2147483647, i64 %rt14
  %r4 = trunc i64 %rt16 to i32
  %rt17 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt17, align 4
  %r5 = bitcast i32 0 to i32
  %rt18 = zext i32 %r5 to i64
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt20 = load i8** %rt19
  %rt21 = ptrtoint i8* %rt20 to i64
  %rt22 = add i64 %rt18, %rt21
  %rt23 = inttoptr i64 %rt22 to i32*
  store i32 6, i32* %rt23, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_5_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sext i32 %r2 to i64
  %rt11 = sext i32 %r3 to i64
  %rt12 = add i64 %rt11, %rt10
  %rt13 = icmp slt i64 %rt12, -2147483648
  %rt14 = select i1 %rt13, i64 -2147483648, i64 %rt12
  %rt15 = icmp sgt i64 %rt14, 2147483647
  %0 = trunc i64 %rt14 to i32
  %r4 = select i1 %rt15, i32 2147483647, i32 %0
  %rt17 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt17, align 4
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt20 = load i8** %rt19, align 8
  %rt23 = bitcast i8* %rt20 to i32*
  store i32 6, i32* %rt23, align 4
  ret void
}
; ModuleID = 'test_hb_6'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_6(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = add i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_6_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = add i64 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_7'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_7(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = add i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_7_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = add i64 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_8'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_8(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = sub i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_8_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = sub i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_9'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_9(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = sub i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_9_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = sub i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_10'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_10(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = sub i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_10_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = sub i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_11'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_11(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = sub i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_11_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = sub i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_12'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_12(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sext i32 %r2 to i64
  %rt11 = sext i32 %r3 to i64
  %rt12 = sub i64 %rt10, %rt11
  %rt13 = icmp slt i64 %rt12, -2147483648
  %rt14 = select i1 %rt13, i64 -2147483648, i64 %rt12
  %rt15 = icmp sgt i64 %rt14, 2147483647
  %rt16 = select i1 %rt15, i64 2147483647, i64 %rt14
  %r4 = trunc i64 %rt16 to i32
  %rt17 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt17, align 4
  %r5 = bitcast i32 0 to i32
  %rt18 = zext i32 %r5 to i64
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt20 = load i8** %rt19
  %rt21 = ptrtoint i8* %rt20 to i64
  %rt22 = add i64 %rt18, %rt21
  %rt23 = inttoptr i64 %rt22 to i32*
  store i32 6, i32* %rt23, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_12_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sext i32 %r2 to i64
  %rt11 = sext i32 %r3 to i64
  %rt12 = sub i64 %rt10, %rt11
  %rt13 = icmp slt i64 %rt12, -2147483648
  %rt14 = select i1 %rt13, i64 -2147483648, i64 %rt12
  %rt15 = icmp sgt i64 %rt14, 2147483647
  %0 = trunc i64 %rt14 to i32
  %r4 = select i1 %rt15, i32 2147483647, i32 %0
  %rt17 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt17, align 4
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt20 = load i8** %rt19, align 8
  %rt23 = bitcast i8* %rt20 to i32*
  store i32 6, i32* %rt23, align 4
  ret void
}
; ModuleID = 'test_hb_13'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_13(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = sub i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_13_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = sub i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_14'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_14(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = sub i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_14_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = sub i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_15'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_15(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sub i32 0, %r2
  %r5 = add i32 %r3, %rt10
  %rt11 = icmp ult i32 %r5, %r3
  %rt12 = icmp ult i32 %r5, %rt10
  %rt13 = or i1 %rt11, %rt12
  %r4 = select i1 %rt13, i32 1, i32 0
  %rt14 = sub i32 0, %r2
  %rt15 = add i32 %r5, %rt14
  %rt16 = add i32 %rt15, %r4
  %r7 = sub i32 %rt16, 1
  %rt17 = icmp ult i32 %r7, %r5
  %rt18 = icmp ult i32 %r7, %rt14
  %rt19 = or i1 %rt17, %rt18
  %r6 = select i1 %rt19, i32 1, i32 0
  %rt20 = sub i32 0, %r2
  %rt21 = add i32 %r7, %rt20
  %rt22 = add i32 %rt21, %r6
  %r8 = sub i32 %rt22, 1
  %rt23 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt23, align 4
  %r9 = bitcast i32 0 to i32
  %rt24 = zext i32 %r9 to i64
  %rt25 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt26 = load i8** %rt25
  %rt27 = ptrtoint i8* %rt26 to i64
  %rt28 = add i64 %rt24, %rt27
  %rt29 = inttoptr i64 %rt28 to i32*
  store i32 6, i32* %rt29, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_15_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt14 = sub i32 0, %r2
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r5 = sub i32 %r3, %r2
  %rt11 = icmp ult i32 %r5, %r3
  %rt12 = icmp ult i32 %r5, %rt14
  %rt13 = or i1 %rt11, %rt12
  %r4 = zext i1 %rt13 to i32
  %rt15 = xor i32 %r2, -1
  %rt16 = add i32 %r5, %rt15
  %r7 = add i32 %rt16, %r4
  %rt17 = icmp ult i32 %r7, %r5
  %rt18 = icmp ult i32 %r7, %rt14
  %rt19 = or i1 %rt17, %rt18
  %r6 = zext i1 %rt19 to i32
  %rt22 = add i32 %r7, %rt15
  %r8 = add i32 %rt22, %r6
  %rt23 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt23, align 4
  %rt25 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt26 = load i8** %rt25, align 8
  %rt29 = bitcast i8* %rt26 to i32*
  store i32 6, i32* %rt29, align 4
  ret void
}
; ModuleID = 'test_hb_16'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_16(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sub i32 0, %r2
  %r5 = add i32 %r3, %rt10
  %rt11 = icmp ult i32 %r5, %r3
  %rt12 = icmp ult i32 %r5, %rt10
  %rt13 = or i1 %rt11, %rt12
  %r4 = select i1 %rt13, i32 1, i32 0
  %rt14 = sub i32 0, %r2
  %rt15 = add i32 %r5, %rt14
  %rt16 = add i32 %rt15, %r4
  %r7 = sub i32 %rt16, 1
  %rt17 = icmp ult i32 %r7, %r5
  %rt18 = icmp ult i32 %r7, %rt14
  %rt19 = or i1 %rt17, %rt18
  %r6 = select i1 %rt19, i32 1, i32 0
  %rt20 = sub i32 0, %r2
  %rt21 = add i32 %r7, %rt20
  %rt22 = add i32 %rt21, %r6
  %r8 = sub i32 %rt22, 1
  %rt23 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt23, align 4
  %r9 = bitcast i32 0 to i32
  %rt24 = zext i32 %r9 to i64
  %rt25 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt26 = load i8** %rt25
  %rt27 = ptrtoint i8* %rt26 to i64
  %rt28 = add i64 %rt24, %rt27
  %rt29 = inttoptr i64 %rt28 to i32*
  store i32 6, i32* %rt29, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_16_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt14 = sub i32 0, %r2
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r5 = sub i32 %r3, %r2
  %rt11 = icmp ult i32 %r5, %r3
  %rt12 = icmp ult i32 %r5, %rt14
  %rt13 = or i1 %rt11, %rt12
  %r4 = zext i1 %rt13 to i32
  %rt15 = xor i32 %r2, -1
  %rt16 = add i32 %r5, %rt15
  %r7 = add i32 %rt16, %r4
  %rt17 = icmp ult i32 %r7, %r5
  %rt18 = icmp ult i32 %r7, %rt14
  %rt19 = or i1 %rt17, %rt18
  %r6 = zext i1 %rt19 to i32
  %rt22 = add i32 %r7, %rt15
  %r8 = add i32 %rt22, %r6
  %rt23 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt23, align 4
  %rt25 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt26 = load i8** %rt25, align 8
  %rt29 = bitcast i8* %rt26 to i32*
  store i32 6, i32* %rt29, align 4
  ret void
}
; ModuleID = 'test_hb_17'

%0 = type { i32, i1 }
%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_17(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r5 = add i32 %r3, %r2
  %rt10 = icmp ult i32 %r5, %r3
  %rt11 = icmp ult i32 %r5, %r2
  %rt12 = or i1 %rt10, %rt11
  %r4 = select i1 %rt12, i32 1, i32 0
  %rt13 = add i32 %r5, %r2
  %r7 = add i32 %rt13, %r4
  %rt14 = icmp ult i32 %r7, %r5
  %rt15 = icmp ult i32 %r7, %r2
  %rt16 = or i1 %rt14, %rt15
  %r6 = select i1 %rt16, i32 1, i32 0
  %rt17 = add i32 %r7, %r2
  %r8 = add i32 %rt17, %r6
  %rt18 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt18, align 4
  %r9 = bitcast i32 0 to i32
  %rt19 = zext i32 %r9 to i64
  %rt20 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt21 = load i8** %rt20
  %rt22 = ptrtoint i8* %rt21 to i64
  %rt23 = add i64 %rt19, %rt22
  %rt24 = inttoptr i64 %rt23 to i32*
  store i32 6, i32* %rt24, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_17_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %uadd = tail call %0 @llvm.uadd.with.overflow.i32(i32 %r3, i32 %r2)
  %0 = extractvalue %0 %uadd, 0
  %rt10 = extractvalue %0 %uadd, 1
  %rt11 = icmp ult i32 %0, %r2
  %rt12 = or i1 %rt10, %rt11
  %r4 = zext i1 %rt12 to i32
  %rt13 = add i32 %0, %r2
  %r7 = add i32 %rt13, %r4
  %rt14 = icmp ult i32 %r7, %0
  %rt15 = icmp ult i32 %r7, %r2
  %rt16 = or i1 %rt14, %rt15
  %r6 = zext i1 %rt16 to i32
  %rt17 = add i32 %r7, %r2
  %r8 = add i32 %rt17, %r6
  %rt18 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt18, align 4
  %rt20 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt21 = load i8** %rt20, align 8
  %rt24 = bitcast i8* %rt21 to i32*
  store i32 6, i32* %rt24, align 4
  ret void
}

declare %0 @llvm.uadd.with.overflow.i32(i32, i32) nounwind readnone
; ModuleID = 'test_hb_18'

%0 = type { i32, i1 }
%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_18(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r5 = add i32 %r3, %r2
  %rt10 = icmp ult i32 %r5, %r3
  %rt11 = icmp ult i32 %r5, %r2
  %rt12 = or i1 %rt10, %rt11
  %r4 = select i1 %rt12, i32 1, i32 0
  %rt13 = add i32 %r5, %r2
  %r7 = add i32 %rt13, %r4
  %rt14 = icmp ult i32 %r7, %r5
  %rt15 = icmp ult i32 %r7, %r2
  %rt16 = or i1 %rt14, %rt15
  %r6 = select i1 %rt16, i32 1, i32 0
  %rt17 = add i32 %r7, %r2
  %r8 = add i32 %rt17, %r6
  %rt18 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt18, align 4
  %r9 = bitcast i32 0 to i32
  %rt19 = zext i32 %r9 to i64
  %rt20 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt21 = load i8** %rt20
  %rt22 = ptrtoint i8* %rt21 to i64
  %rt23 = add i64 %rt19, %rt22
  %rt24 = inttoptr i64 %rt23 to i32*
  store i32 6, i32* %rt24, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_18_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %uadd = tail call %0 @llvm.uadd.with.overflow.i32(i32 %r3, i32 %r2)
  %0 = extractvalue %0 %uadd, 0
  %rt10 = extractvalue %0 %uadd, 1
  %rt11 = icmp ult i32 %0, %r2
  %rt12 = or i1 %rt10, %rt11
  %r4 = zext i1 %rt12 to i32
  %rt13 = add i32 %0, %r2
  %r7 = add i32 %rt13, %r4
  %rt14 = icmp ult i32 %r7, %0
  %rt15 = icmp ult i32 %r7, %r2
  %rt16 = or i1 %rt14, %rt15
  %r6 = zext i1 %rt16 to i32
  %rt17 = add i32 %r7, %r2
  %r8 = add i32 %rt17, %r6
  %rt18 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt18, align 4
  %rt20 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt21 = load i8** %rt20, align 8
  %rt24 = bitcast i8* %rt21 to i32*
  store i32 6, i32* %rt24, align 4
  ret void
}

declare %0 @llvm.uadd.with.overflow.i32(i32, i32) nounwind readnone
; ModuleID = 'test_hb_19'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_19(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = mul i16 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_19_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = mul i16 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_20'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_20(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = zext i16 %r3 to i32
  %rt11 = zext i16 %r2 to i32
  %rt12 = mul i32 %rt10, %rt11
  %rt13 = lshr i32 %rt12, 16
  %r4 = trunc i32 %rt13 to i16
  %rt14 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt14, align 2
  %r5 = bitcast i32 0 to i32
  %rt15 = zext i32 %r5 to i64
  %rt16 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt17 = load i8** %rt16
  %rt18 = ptrtoint i8* %rt17 to i64
  %rt19 = add i64 %rt15, %rt18
  %rt20 = inttoptr i64 %rt19 to i32*
  store i32 6, i32* %rt20, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_20_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = zext i16 %r3 to i32
  %rt11 = zext i16 %r2 to i32
  %rt12 = mul i32 %rt10, %rt11
  %rt13 = lshr i32 %rt12, 16
  %r4 = trunc i32 %rt13 to i16
  %rt14 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt14, align 2
  %rt16 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt17 = load i8** %rt16, align 8
  %rt20 = bitcast i8* %rt17 to i32*
  store i32 6, i32* %rt20, align 4
  ret void
}
; ModuleID = 'test_hb_21'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_21(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = zext i16 %r3 to i32
  %rt11 = zext i16 %r2 to i32
  %r4 = mul i32 %rt10, %rt11
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt12, align 4
  %r5 = bitcast i32 0 to i32
  %rt13 = zext i32 %r5 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_21_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = zext i16 %r3 to i32
  %rt11 = zext i16 %r2 to i32
  %r4 = mul i32 %rt10, %rt11
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt12, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_22'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_22(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = mul i16 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_22_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = mul i16 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_23'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_23(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = sext i16 %r3 to i32
  %rt11 = sext i16 %r2 to i32
  %rt12 = mul i32 %rt10, %rt11
  %rt13 = ashr i32 %rt12, 16
  %r4 = trunc i32 %rt13 to i16
  %rt14 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt14, align 2
  %r5 = bitcast i32 0 to i32
  %rt15 = zext i32 %r5 to i64
  %rt16 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt17 = load i8** %rt16
  %rt18 = ptrtoint i8* %rt17 to i64
  %rt19 = add i64 %rt15, %rt18
  %rt20 = inttoptr i64 %rt19 to i32*
  store i32 6, i32* %rt20, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_23_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = sext i16 %r3 to i32
  %rt11 = sext i16 %r2 to i32
  %rt12 = mul i32 %rt10, %rt11
  %rt131 = lshr i32 %rt12, 16
  %r4 = trunc i32 %rt131 to i16
  %rt14 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt14, align 2
  %rt16 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt17 = load i8** %rt16, align 8
  %rt20 = bitcast i8* %rt17 to i32*
  store i32 6, i32* %rt20, align 4
  ret void
}
; ModuleID = 'test_hb_24'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_24(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = sext i16 %r3 to i32
  %rt11 = sext i16 %r2 to i32
  %r4 = mul i32 %rt10, %rt11
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt12, align 4
  %r5 = bitcast i32 0 to i32
  %rt13 = zext i32 %r5 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_24_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = sext i16 %r3 to i32
  %rt11 = sext i16 %r2 to i32
  %r4 = mul i32 %rt10, %rt11
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt12, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_25'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_25(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = mul i32 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_25_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = mul i32 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_26'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_26(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = zext i32 %r3 to i64
  %rt11 = zext i32 %r2 to i64
  %rt12 = mul i64 %rt10, %rt11
  %rt13 = lshr i64 %rt12, 32
  %r4 = trunc i64 %rt13 to i32
  %rt14 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt14, align 4
  %r5 = bitcast i32 0 to i32
  %rt15 = zext i32 %r5 to i64
  %rt16 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt17 = load i8** %rt16
  %rt18 = ptrtoint i8* %rt17 to i64
  %rt19 = add i64 %rt15, %rt18
  %rt20 = inttoptr i64 %rt19 to i32*
  store i32 6, i32* %rt20, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_26_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = zext i32 %r3 to i64
  %rt11 = zext i32 %r2 to i64
  %rt12 = mul i64 %rt10, %rt11
  %rt13 = lshr i64 %rt12, 32
  %r4 = trunc i64 %rt13 to i32
  %rt14 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt14, align 4
  %rt16 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt17 = load i8** %rt16, align 8
  %rt20 = bitcast i8* %rt17 to i32*
  store i32 6, i32* %rt20, align 4
  ret void
}
; ModuleID = 'test_hb_27'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_27(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = zext i32 %r3 to i64
  %rt11 = zext i32 %r2 to i64
  %r4 = mul i64 %rt10, %rt11
  %rt12 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt12, align 8
  %r5 = bitcast i32 0 to i32
  %rt13 = zext i32 %r5 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_27_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = zext i32 %r3 to i64
  %rt11 = zext i32 %r2 to i64
  %r4 = mul i64 %rt10, %rt11
  %rt12 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt12, align 8
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_28'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_28(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = mul i32 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_28_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = mul i32 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_29'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_29(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sext i32 %r3 to i64
  %rt11 = sext i32 %r2 to i64
  %rt12 = mul i64 %rt10, %rt11
  %rt13 = ashr i64 %rt12, 32
  %r4 = trunc i64 %rt13 to i32
  %rt14 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt14, align 4
  %r5 = bitcast i32 0 to i32
  %rt15 = zext i32 %r5 to i64
  %rt16 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt17 = load i8** %rt16
  %rt18 = ptrtoint i8* %rt17 to i64
  %rt19 = add i64 %rt15, %rt18
  %rt20 = inttoptr i64 %rt19 to i32*
  store i32 6, i32* %rt20, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_29_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sext i32 %r3 to i64
  %rt11 = sext i32 %r2 to i64
  %rt12 = mul i64 %rt10, %rt11
  %rt131 = lshr i64 %rt12, 32
  %r4 = trunc i64 %rt131 to i32
  %rt14 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt14, align 4
  %rt16 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt17 = load i8** %rt16, align 8
  %rt20 = bitcast i8* %rt17 to i32*
  store i32 6, i32* %rt20, align 4
  ret void
}
; ModuleID = 'test_hb_30'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_30(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sext i32 %r3 to i64
  %rt11 = sext i32 %r2 to i64
  %r4 = mul i64 %rt10, %rt11
  %rt12 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt12, align 8
  %r5 = bitcast i32 0 to i32
  %rt13 = zext i32 %r5 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_30_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = sext i32 %r3 to i64
  %rt11 = sext i32 %r2 to i64
  %r4 = mul i64 %rt10, %rt11
  %rt12 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt12, align 8
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_31'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_31(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = mul i64 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_31_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = mul i64 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_32'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_32(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = call i64 @__ocelot_mul_hi_u64(i64 %r3, i64 %r2)
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_32_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = tail call i64 @__ocelot_mul_hi_u64(i64 %r3, i64 %r2) nounwind
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_33'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_33(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = mul i64 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_33_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = mul i64 %r3, %r2
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_34'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_34(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = call i64 @__ocelot_mul_hi_s64(i64 %r3, i64 %r2)
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_34_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = tail call i64 @__ocelot_mul_hi_s64(i64 %r3, i64 %r2) nounwind
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_35'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_35(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = mul i16 %r2, %r3
  %r5 = add i16 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt13, align 2
  %r6 = bitcast i32 0 to i32
  %rt14 = zext i32 %r6 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_35_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = mul i16 %r3, %r2
  %r5 = add i16 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt13, align 2
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt19 = bitcast i8* %rt16 to i32*
  store i32 6, i32* %rt19, align 4
  ret void
}
; ModuleID = 'test_hb_36'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_36(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = zext i16 %r2 to i32
  %rt13 = zext i16 %r3 to i32
  %rt14 = mul i32 %rt12, %rt13
  %rt15 = lshr i32 %rt14, 16
  %rt16 = trunc i32 %rt15 to i16
  %r5 = add i16 %rt16, %r4
  %rt17 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt17, align 2
  %r6 = bitcast i32 0 to i32
  %rt18 = zext i32 %r6 to i64
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt20 = load i8** %rt19
  %rt21 = ptrtoint i8* %rt20 to i64
  %rt22 = add i64 %rt18, %rt21
  %rt23 = inttoptr i64 %rt22 to i32*
  store i32 6, i32* %rt23, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_36_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = zext i16 %r2 to i32
  %rt13 = zext i16 %r3 to i32
  %rt14 = mul i32 %rt13, %rt12
  %rt15 = lshr i32 %rt14, 16
  %rt16 = trunc i32 %rt15 to i16
  %r5 = add i16 %rt16, %r4
  %rt17 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt17, align 2
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt20 = load i8** %rt19, align 8
  %rt23 = bitcast i8* %rt20 to i32*
  store i32 6, i32* %rt23, align 4
  ret void
}
; ModuleID = 'test_hb_37'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_37(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = zext i16 %r2 to i32
  %rt13 = zext i16 %r3 to i32
  %rt14 = mul i32 %rt12, %rt13
  %r5 = add i32 %r4, %rt14
  %rt15 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt15, align 4
  %r6 = bitcast i32 0 to i32
  %rt16 = zext i32 %r6 to i64
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt18 = load i8** %rt17
  %rt19 = ptrtoint i8* %rt18 to i64
  %rt20 = add i64 %rt16, %rt19
  %rt21 = inttoptr i64 %rt20 to i32*
  store i32 6, i32* %rt21, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_37_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = zext i16 %r2 to i32
  %rt13 = zext i16 %r3 to i32
  %rt14 = mul i32 %rt13, %rt12
  %r5 = add i32 %rt14, %r4
  %rt15 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt15, align 4
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt18 = load i8** %rt17, align 8
  %rt21 = bitcast i8* %rt18 to i32*
  store i32 6, i32* %rt21, align 4
  ret void
}
; ModuleID = 'test_hb_38'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_38(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = mul i16 %r2, %r3
  %r5 = add i16 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt13, align 2
  %r6 = bitcast i32 0 to i32
  %rt14 = zext i32 %r6 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_38_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = mul i16 %r3, %r2
  %r5 = add i16 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt13, align 2
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt19 = bitcast i8* %rt16 to i32*
  store i32 6, i32* %rt19, align 4
  ret void
}
; ModuleID = 'test_hb_39'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_39(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = sext i16 %r2 to i32
  %rt13 = sext i16 %r3 to i32
  %rt14 = mul i32 %rt12, %rt13
  %rt15 = ashr i32 %rt14, 16
  %rt16 = trunc i32 %rt15 to i16
  %r5 = add i16 %rt16, %r4
  %rt17 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt17, align 2
  %r6 = bitcast i32 0 to i32
  %rt18 = zext i32 %r6 to i64
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt20 = load i8** %rt19
  %rt21 = ptrtoint i8* %rt20 to i64
  %rt22 = add i64 %rt18, %rt21
  %rt23 = inttoptr i64 %rt22 to i32*
  store i32 6, i32* %rt23, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_39_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = sext i16 %r2 to i32
  %rt13 = sext i16 %r3 to i32
  %rt14 = mul i32 %rt13, %rt12
  %rt151 = lshr i32 %rt14, 16
  %rt16 = trunc i32 %rt151 to i16
  %r5 = add i16 %rt16, %r4
  %rt17 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt17, align 2
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt20 = load i8** %rt19, align 8
  %rt23 = bitcast i8* %rt20 to i32*
  store i32 6, i32* %rt23, align 4
  ret void
}
; ModuleID = 'test_hb_40'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_40(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = sext i16 %r2 to i32
  %rt13 = sext i16 %r3 to i32
  %rt14 = mul i32 %rt12, %rt13
  %r5 = add i32 %r4, %rt14
  %rt15 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt15, align 4
  %r6 = bitcast i32 0 to i32
  %rt16 = zext i32 %r6 to i64
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt18 = load i8** %rt17
  %rt19 = ptrtoint i8* %rt18 to i64
  %rt20 = add i64 %rt16, %rt19
  %rt21 = inttoptr i64 %rt20 to i32*
  store i32 6, i32* %rt21, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_40_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = sext i16 %r2 to i32
  %rt13 = sext i16 %r3 to i32
  %rt14 = mul i32 %rt13, %rt12
  %r5 = add i32 %rt14, %r4
  %rt15 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt15, align 4
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt18 = load i8** %rt17, align 8
  %rt21 = bitcast i8* %rt18 to i32*
  store i32 6, i32* %rt21, align 4
  ret void
}
; ModuleID = 'test_hb_41'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_41(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = mul i32 %r2, %r3
  %r5 = add i32 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt13, align 4
  %r6 = bitcast i32 0 to i32
  %rt14 = zext i32 %r6 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_41_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = mul i32 %r3, %r2
  %r5 = add i32 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt13, align 4
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt19 = bitcast i8* %rt16 to i32*
  store i32 6, i32* %rt19, align 4
  ret void
}
; ModuleID = 'test_hb_42'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_42(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = zext i32 %r2 to i64
  %rt13 = zext i32 %r3 to i64
  %rt14 = mul i64 %rt12, %rt13
  %rt15 = lshr i64 %rt14, 32
  %rt16 = trunc i64 %rt15 to i32
  %r5 = add i32 %rt16, %r4
  %rt17 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt17, align 4
  %r6 = bitcast i32 0 to i32
  %rt18 = zext i32 %r6 to i64
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt20 = load i8** %rt19
  %rt21 = ptrtoint i8* %rt20 to i64
  %rt22 = add i64 %rt18, %rt21
  %rt23 = inttoptr i64 %rt22 to i32*
  store i32 6, i32* %rt23, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_42_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = zext i32 %r2 to i64
  %rt13 = zext i32 %r3 to i64
  %rt14 = mul i64 %rt13, %rt12
  %rt15 = lshr i64 %rt14, 32
  %rt16 = trunc i64 %rt15 to i32
  %r5 = add i32 %rt16, %r4
  %rt17 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt17, align 4
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt20 = load i8** %rt19, align 8
  %rt23 = bitcast i8* %rt20 to i32*
  store i32 6, i32* %rt23, align 4
  ret void
}
; ModuleID = 'test_hb_43'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_43(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = zext i32 %r2 to i64
  %rt13 = zext i32 %r3 to i64
  %rt14 = mul i64 %rt12, %rt13
  %r5 = add i64 %r4, %rt14
  %rt15 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt15, align 8
  %r6 = bitcast i32 0 to i32
  %rt16 = zext i32 %r6 to i64
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt18 = load i8** %rt17
  %rt19 = ptrtoint i8* %rt18 to i64
  %rt20 = add i64 %rt16, %rt19
  %rt21 = inttoptr i64 %rt20 to i32*
  store i32 6, i32* %rt21, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_43_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = zext i32 %r2 to i64
  %rt13 = zext i32 %r3 to i64
  %rt14 = mul i64 %rt13, %rt12
  %r5 = add i64 %rt14, %r4
  %rt15 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt15, align 8
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt18 = load i8** %rt17, align 8
  %rt21 = bitcast i8* %rt18 to i32*
  store i32 6, i32* %rt21, align 4
  ret void
}
; ModuleID = 'test_hb_44'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_44(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = mul i32 %r2, %r3
  %r5 = add i32 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt13, align 4
  %r6 = bitcast i32 0 to i32
  %rt14 = zext i32 %r6 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_44_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = mul i32 %r3, %r2
  %r5 = add i32 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt13, align 4
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt19 = bitcast i8* %rt16 to i32*
  store i32 6, i32* %rt19, align 4
  ret void
}
; ModuleID = 'test_hb_45'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_45(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = sext i32 %r2 to i64
  %rt13 = sext i32 %r3 to i64
  %rt14 = mul i64 %rt12, %rt13
  %rt15 = ashr i64 %rt14, 32
  %rt16 = trunc i64 %rt15 to i32
  %r5 = add i32 %rt16, %r4
  %rt17 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt17, align 4
  %r6 = bitcast i32 0 to i32
  %rt18 = zext i32 %r6 to i64
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt20 = load i8** %rt19
  %rt21 = ptrtoint i8* %rt20 to i64
  %rt22 = add i64 %rt18, %rt21
  %rt23 = inttoptr i64 %rt22 to i32*
  store i32 6, i32* %rt23, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_45_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = sext i32 %r2 to i64
  %rt13 = sext i32 %r3 to i64
  %rt14 = mul i64 %rt13, %rt12
  %rt151 = lshr i64 %rt14, 32
  %rt16 = trunc i64 %rt151 to i32
  %r5 = add i32 %rt16, %r4
  %rt17 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt17, align 4
  %rt19 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt20 = load i8** %rt19, align 8
  %rt23 = bitcast i8* %rt20 to i32*
  store i32 6, i32* %rt23, align 4
  ret void
}
; ModuleID = 'test_hb_46'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_46(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = sext i32 %r2 to i64
  %rt13 = sext i32 %r3 to i64
  %rt14 = sext i32 %r4 to i64
  %rt15 = mul i64 %rt12, %rt13
  %rt16 = ashr i64 %rt15, 32
  %rt17 = add i64 %rt16, %rt14
  %rt18 = icmp slt i64 %rt17, -2147483648
  %rt19 = select i1 %rt18, i64 -2147483648, i64 %rt17
  %rt20 = icmp sgt i64 %rt19, 2147483647
  %rt21 = select i1 %rt20, i64 2147483647, i64 %rt19
  %r5 = trunc i64 %rt21 to i32
  %rt22 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt22, align 4
  %r6 = bitcast i32 0 to i32
  %rt23 = zext i32 %r6 to i64
  %rt24 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt25 = load i8** %rt24
  %rt26 = ptrtoint i8* %rt25 to i64
  %rt27 = add i64 %rt23, %rt26
  %rt28 = inttoptr i64 %rt27 to i32*
  store i32 6, i32* %rt28, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_46_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = sext i32 %r2 to i64
  %rt13 = sext i32 %r3 to i64
  %rt14 = sext i32 %r4 to i64
  %rt15 = mul i64 %rt13, %rt12
  %rt16 = ashr i64 %rt15, 32
  %rt17 = add i64 %rt16, %rt14
  %rt18 = icmp slt i64 %rt17, -2147483648
  %rt19 = select i1 %rt18, i64 -2147483648, i64 %rt17
  %rt20 = icmp sgt i64 %rt19, 2147483647
  %0 = trunc i64 %rt19 to i32
  %r5 = select i1 %rt20, i32 2147483647, i32 %0
  %rt22 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt22, align 4
  %rt24 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt25 = load i8** %rt24, align 8
  %rt28 = bitcast i8* %rt25 to i32*
  store i32 6, i32* %rt28, align 4
  ret void
}
; ModuleID = 'test_hb_47'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_47(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = sext i32 %r2 to i64
  %rt13 = sext i32 %r3 to i64
  %rt14 = mul i64 %rt12, %rt13
  %r5 = add i64 %r4, %rt14
  %rt15 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt15, align 8
  %r6 = bitcast i32 0 to i32
  %rt16 = zext i32 %r6 to i64
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt18 = load i8** %rt17
  %rt19 = ptrtoint i8* %rt18 to i64
  %rt20 = add i64 %rt16, %rt19
  %rt21 = inttoptr i64 %rt20 to i32*
  store i32 6, i32* %rt21, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_47_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = sext i32 %r2 to i64
  %rt13 = sext i32 %r3 to i64
  %rt14 = mul i64 %rt13, %rt12
  %r5 = add i64 %rt14, %r4
  %rt15 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt15, align 8
  %rt17 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt18 = load i8** %rt17, align 8
  %rt21 = bitcast i8* %rt18 to i32*
  store i32 6, i32* %rt21, align 4
  ret void
}
; ModuleID = 'test_hb_48'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_48(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = mul i64 %r2, %r3
  %r5 = add i64 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt13, align 8
  %r6 = bitcast i32 0 to i32
  %rt14 = zext i32 %r6 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_48_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = mul i64 %r3, %r2
  %r5 = add i64 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt13, align 8
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt19 = bitcast i8* %rt16 to i32*
  store i32 6, i32* %rt19, align 4
  ret void
}
; ModuleID = 'test_hb_49'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_49(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = call i64 @__ocelot_mul_hi_u64(i64 %r2, i64 %r3)
  %r5 = add i64 %rt12, %r4
  %rt13 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt13, align 8
  %r6 = bitcast i32 0 to i32
  %rt14 = zext i32 %r6 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_49_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = tail call i64 @__ocelot_mul_hi_u64(i64 %r2, i64 %r3) nounwind
  %r5 = add i64 %rt12, %r4
  %rt13 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt13, align 8
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt19 = bitcast i8* %rt16 to i32*
  store i32 6, i32* %rt19, align 4
  ret void
}
; ModuleID = 'test_hb_50'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_50(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = mul i64 %r2, %r3
  %r5 = add i64 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt13, align 8
  %r6 = bitcast i32 0 to i32
  %rt14 = zext i32 %r6 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_50_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = mul i64 %r3, %r2
  %r5 = add i64 %r4, %rt12
  %rt13 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt13, align 8
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt19 = bitcast i8* %rt16 to i32*
  store i32 6, i32* %rt19, align 4
  ret void
}
; ModuleID = 'test_hb_51'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_51(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = call i64 @__ocelot_mul_hi_s64(i64 %r2, i64 %r3)
  %r5 = add i64 %rt12, %r4
  %rt13 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt13, align 8
  %r6 = bitcast i32 0 to i32
  %rt14 = zext i32 %r6 to i64
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt16 = load i8** %rt15
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_51_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = tail call i64 @__ocelot_mul_hi_s64(i64 %r2, i64 %r3) nounwind
  %r5 = add i64 %rt12, %r4
  %rt13 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt13, align 8
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt19 = bitcast i8* %rt16 to i32*
  store i32 6, i32* %rt19, align 4
  ret void
}
; ModuleID = 'test_hb_52'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_52(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = icmp ult i16 %r2, %r3
  %rt13 = sub i16 %r3, %r2
  %rt14 = sub i16 %r2, %r3
  %rt15 = select i1 %rt12, i16 %rt13, i16 %rt14
  %r5 = add i16 %r4, %rt15
  %rt16 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt16, align 2
  %r6 = bitcast i32 0 to i32
  %rt17 = zext i32 %r6 to i64
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt19 = load i8** %rt18
  %rt20 = ptrtoint i8* %rt19 to i64
  %rt21 = add i64 %rt17, %rt20
  %rt22 = inttoptr i64 %rt21 to i32*
  store i32 6, i32* %rt22, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_52_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = icmp ult i16 %r2, %r3
  %rt13 = sub i16 %r3, %r2
  %rt14 = sub i16 %r2, %r3
  %rt15 = select i1 %rt12, i16 %rt13, i16 %rt14
  %r5 = add i16 %rt15, %r4
  %rt16 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt16, align 2
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt19 = load i8** %rt18, align 8
  %rt22 = bitcast i8* %rt19 to i32*
  store i32 6, i32* %rt22, align 4
  ret void
}
; ModuleID = 'test_hb_53'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_53(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = icmp slt i16 %r2, %r3
  %rt13 = sub i16 %r3, %r2
  %rt14 = sub i16 %r2, %r3
  %rt15 = select i1 %rt12, i16 %rt13, i16 %rt14
  %r5 = add i16 %r4, %rt15
  %rt16 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt16, align 2
  %r6 = bitcast i32 0 to i32
  %rt17 = zext i32 %r6 to i64
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt19 = load i8** %rt18
  %rt20 = ptrtoint i8* %rt19 to i64
  %rt21 = add i64 %rt17, %rt20
  %rt22 = inttoptr i64 %rt21 to i32*
  store i32 6, i32* %rt22, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_53_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = add i64 %r0, 4
  %rt11 = inttoptr i64 %rt10 to i16*
  %r4 = load i16* %rt11, align 2
  %rt12 = icmp slt i16 %r2, %r3
  %rt13 = sub i16 %r3, %r2
  %rt14 = sub i16 %r2, %r3
  %rt15 = select i1 %rt12, i16 %rt13, i16 %rt14
  %r5 = add i16 %rt15, %r4
  %rt16 = inttoptr i64 %r1 to i16*
  store i16 %r5, i16* %rt16, align 2
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt19 = load i8** %rt18, align 8
  %rt22 = bitcast i8* %rt19 to i32*
  store i32 6, i32* %rt22, align 4
  ret void
}
; ModuleID = 'test_hb_54'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_54(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = icmp ult i32 %r2, %r3
  %rt13 = sub i32 %r3, %r2
  %rt14 = sub i32 %r2, %r3
  %rt15 = select i1 %rt12, i32 %rt13, i32 %rt14
  %r5 = add i32 %r4, %rt15
  %rt16 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt16, align 4
  %r6 = bitcast i32 0 to i32
  %rt17 = zext i32 %r6 to i64
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt19 = load i8** %rt18
  %rt20 = ptrtoint i8* %rt19 to i64
  %rt21 = add i64 %rt17, %rt20
  %rt22 = inttoptr i64 %rt21 to i32*
  store i32 6, i32* %rt22, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_54_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = icmp ult i32 %r2, %r3
  %rt13 = sub i32 %r3, %r2
  %rt14 = sub i32 %r2, %r3
  %rt15 = select i1 %rt12, i32 %rt13, i32 %rt14
  %r5 = add i32 %rt15, %r4
  %rt16 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt16, align 4
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt19 = load i8** %rt18, align 8
  %rt22 = bitcast i8* %rt19 to i32*
  store i32 6, i32* %rt22, align 4
  ret void
}
; ModuleID = 'test_hb_55'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_55(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = icmp slt i32 %r2, %r3
  %rt13 = sub i32 %r3, %r2
  %rt14 = sub i32 %r2, %r3
  %rt15 = select i1 %rt12, i32 %rt13, i32 %rt14
  %r5 = add i32 %r4, %rt15
  %rt16 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt16, align 4
  %r6 = bitcast i32 0 to i32
  %rt17 = zext i32 %r6 to i64
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt19 = load i8** %rt18
  %rt20 = ptrtoint i8* %rt19 to i64
  %rt21 = add i64 %rt17, %rt20
  %rt22 = inttoptr i64 %rt21 to i32*
  store i32 6, i32* %rt22, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_55_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = icmp slt i32 %r2, %r3
  %rt13 = sub i32 %r3, %r2
  %rt14 = sub i32 %r2, %r3
  %rt15 = select i1 %rt12, i32 %rt13, i32 %rt14
  %r5 = add i32 %rt15, %r4
  %rt16 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt16, align 4
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt19 = load i8** %rt18, align 8
  %rt22 = bitcast i8* %rt19 to i32*
  store i32 6, i32* %rt22, align 4
  ret void
}
; ModuleID = 'test_hb_56'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_56(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = icmp ult i64 %r2, %r3
  %rt13 = sub i64 %r3, %r2
  %rt14 = sub i64 %r2, %r3
  %rt15 = select i1 %rt12, i64 %rt13, i64 %rt14
  %r5 = add i64 %r4, %rt15
  %rt16 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt16, align 8
  %r6 = bitcast i32 0 to i32
  %rt17 = zext i32 %r6 to i64
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt19 = load i8** %rt18
  %rt20 = ptrtoint i8* %rt19 to i64
  %rt21 = add i64 %rt17, %rt20
  %rt22 = inttoptr i64 %rt21 to i32*
  store i32 6, i32* %rt22, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_56_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = icmp ult i64 %r2, %r3
  %rt13 = sub i64 %r3, %r2
  %rt14 = sub i64 %r2, %r3
  %rt15 = select i1 %rt12, i64 %rt13, i64 %rt14
  %r5 = add i64 %rt15, %r4
  %rt16 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt16, align 8
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt19 = load i8** %rt18, align 8
  %rt22 = bitcast i8* %rt19 to i32*
  store i32 6, i32* %rt22, align 4
  ret void
}
; ModuleID = 'test_hb_57'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_57(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = icmp slt i64 %r2, %r3
  %rt13 = sub i64 %r3, %r2
  %rt14 = sub i64 %r2, %r3
  %rt15 = select i1 %rt12, i64 %rt13, i64 %rt14
  %r5 = add i64 %r4, %rt15
  %rt16 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt16, align 8
  %r6 = bitcast i32 0 to i32
  %rt17 = zext i32 %r6 to i64
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt19 = load i8** %rt18
  %rt20 = ptrtoint i8* %rt19 to i64
  %rt21 = add i64 %rt17, %rt20
  %rt22 = inttoptr i64 %rt21 to i32*
  store i32 6, i32* %rt22, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_57_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i64*
  %r4 = load i64* %rt11, align 8
  %rt12 = icmp slt i64 %r2, %r3
  %rt13 = sub i64 %r3, %r2
  %rt14 = sub i64 %r2, %r3
  %rt15 = select i1 %rt12, i64 %rt13, i64 %rt14
  %r5 = add i64 %rt15, %r4
  %rt16 = inttoptr i64 %r1 to i64*
  store i64 %r5, i64* %rt16, align 8
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt19 = load i8** %rt18, align 8
  %rt22 = bitcast i8* %rt19 to i32*
  store i32 6, i32* %rt22, align 4
  ret void
}
; ModuleID = 'test_hb_58'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_58(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = udiv i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_58_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = udiv i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_59'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_59(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = sdiv i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_59_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = sdiv i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_60'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_60(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = udiv i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_60_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = udiv i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_61'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_61(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = sdiv i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_61_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = sdiv i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_62'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_62(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = udiv i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_62_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = udiv i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_63'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_63(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = sdiv i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_63_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = sdiv i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_64'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_64(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = urem i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_64_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = urem i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_65'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_65(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = srem i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_65_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %r4 = srem i16 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_66'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_66(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = urem i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_66_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = urem i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_67'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_67(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = srem i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_67_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %r4 = srem i32 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_68'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_68(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = urem i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_68_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = urem i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_69'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_69(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = srem i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %r5 = bitcast i32 0 to i32
  %rt11 = zext i32 %r5 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_69_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %r4 = srem i64 %r2, %r3
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_70'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_70(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = icmp slt i16 %r2, 0
  %rt9 = sub i16 0, %r2
  %r3 = select i1 %rt8, i16 %rt9, i16 %r2
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r3, i16* %rt10, align 2
  %r4 = bitcast i32 0 to i32
  %rt11 = zext i32 %r4 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_70_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = icmp slt i16 %r2, 0
  %rt9 = sub i16 0, %r2
  %r3 = select i1 %rt8, i16 %rt9, i16 %r2
  %rt10 = inttoptr i64 %r1 to i16*
  store i16 %r3, i16* %rt10, align 2
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_71'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_71(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = icmp slt i32 %r2, 0
  %rt9 = sub i32 0, %r2
  %r3 = select i1 %rt8, i32 %rt9, i32 %r2
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt10, align 4
  %r4 = bitcast i32 0 to i32
  %rt11 = zext i32 %r4 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_71_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = icmp slt i32 %r2, 0
  %rt9 = sub i32 0, %r2
  %r3 = select i1 %rt8, i32 %rt9, i32 %r2
  %rt10 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt10, align 4
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_72'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_72(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = icmp slt i64 %r2, 0
  %rt9 = sub i64 0, %r2
  %r3 = select i1 %rt8, i64 %rt9, i64 %r2
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r3, i64* %rt10, align 8
  %r4 = bitcast i32 0 to i32
  %rt11 = zext i32 %r4 to i64
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt13 = load i8** %rt12
  %rt14 = ptrtoint i8* %rt13 to i64
  %rt15 = add i64 %rt11, %rt14
  %rt16 = inttoptr i64 %rt15 to i32*
  store i32 6, i32* %rt16, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_72_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = icmp slt i64 %r2, 0
  %rt9 = sub i64 0, %r2
  %r3 = select i1 %rt8, i64 %rt9, i64 %r2
  %rt10 = inttoptr i64 %r1 to i64*
  store i64 %r3, i64* %rt10, align 8
  %rt12 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt13 = load i8** %rt12, align 8
  %rt16 = bitcast i8* %rt13 to i32*
  store i32 6, i32* %rt16, align 4
  ret void
}
; ModuleID = 'test_hb_73'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_73(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %r3 = sub i16 0, %r2
  %rt8 = inttoptr i64 %r1 to i16*
  store i16 %r3, i16* %rt8, align 2
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_73_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %r3 = sub i16 0, %r2
  %rt8 = inttoptr i64 %r1 to i16*
  store i16 %r3, i16* %rt8, align 2
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_74'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_74(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = sub i32 0, %r2
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_74_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = sub i32 0, %r2
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_75'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_75(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %r3 = sub i64 0, %r2
  %rt8 = inttoptr i64 %r1 to i64*
  store i64 %r3, i64* %rt8, align 8
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_75_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %r3 = sub i64 0, %r2
  %rt8 = inttoptr i64 %r1 to i64*
  store i64 %r3, i64* %rt8, align 8
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_76'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_76(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = icmp ugt i16 %r2, %r3
  %r4 = select i1 %rt10, i16 %r2, i16 %r3
  %rt11 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt11, align 2
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_76_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = icmp ugt i16 %r2, %r3
  %r4 = select i1 %rt10, i16 %r2, i16 %r3
  %rt11 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt11, align 2
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_77'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_77(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = icmp ugt i32 %r2, %r3
  %r4 = select i1 %rt10, i32 %r2, i32 %r3
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt11, align 4
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_77_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = icmp ugt i32 %r2, %r3
  %r4 = select i1 %rt10, i32 %r2, i32 %r3
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt11, align 4
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_78'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_78(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = icmp ugt i64 %r2, %r3
  %r4 = select i1 %rt10, i64 %r2, i64 %r3
  %rt11 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt11, align 8
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_78_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = icmp ugt i64 %r2, %r3
  %r4 = select i1 %rt10, i64 %r2, i64 %r3
  %rt11 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt11, align 8
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_79'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_79(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = icmp sgt i16 %r2, %r3
  %r4 = select i1 %rt10, i16 %r2, i16 %r3
  %rt11 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt11, align 2
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_79_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = icmp sgt i16 %r2, %r3
  %r4 = select i1 %rt10, i16 %r2, i16 %r3
  %rt11 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt11, align 2
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_80'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_80(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = icmp sgt i32 %r2, %r3
  %r4 = select i1 %rt10, i32 %r2, i32 %r3
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt11, align 4
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_80_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = icmp sgt i32 %r2, %r3
  %r4 = select i1 %rt10, i32 %r2, i32 %r3
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt11, align 4
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_81'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_81(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = icmp sgt i64 %r2, %r3
  %r4 = select i1 %rt10, i64 %r2, i64 %r3
  %rt11 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt11, align 8
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_81_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = icmp sgt i64 %r2, %r3
  %r4 = select i1 %rt10, i64 %r2, i64 %r3
  %rt11 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt11, align 8
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_82'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_82(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = icmp ult i16 %r2, %r3
  %r4 = select i1 %rt10, i16 %r2, i16 %r3
  %rt11 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt11, align 2
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_82_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = icmp ult i16 %r2, %r3
  %r4 = select i1 %rt10, i16 %r2, i16 %r3
  %rt11 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt11, align 2
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_83'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_83(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = icmp ult i32 %r2, %r3
  %r4 = select i1 %rt10, i32 %r2, i32 %r3
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt11, align 4
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_83_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = icmp ult i32 %r2, %r3
  %r4 = select i1 %rt10, i32 %r2, i32 %r3
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt11, align 4
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_84'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_84(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = icmp ult i64 %r2, %r3
  %r4 = select i1 %rt10, i64 %r2, i64 %r3
  %rt11 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt11, align 8
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_84_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = icmp ult i64 %r2, %r3
  %r4 = select i1 %rt10, i64 %r2, i64 %r3
  %rt11 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt11, align 8
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_85'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_85(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = icmp slt i16 %r2, %r3
  %r4 = select i1 %rt10, i16 %r2, i16 %r3
  %rt11 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt11, align 2
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_85_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i16*
  %r2 = load i16* %rt7, align 2
  %rt8 = add i64 %r0, 2
  %rt9 = inttoptr i64 %rt8 to i16*
  %r3 = load i16* %rt9, align 2
  %rt10 = icmp slt i16 %r2, %r3
  %r4 = select i1 %rt10, i16 %r2, i16 %r3
  %rt11 = inttoptr i64 %r1 to i16*
  store i16 %r4, i16* %rt11, align 2
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_86'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_86(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = icmp slt i32 %r2, %r3
  %r4 = select i1 %rt10, i32 %r2, i32 %r3
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt11, align 4
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_86_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = icmp slt i32 %r2, %r3
  %r4 = select i1 %rt10, i32 %r2, i32 %r3
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r4, i32* %rt11, align 4
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_87'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_87(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = icmp slt i64 %r2, %r3
  %r4 = select i1 %rt10, i64 %r2, i64 %r3
  %rt11 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt11, align 8
  %r5 = bitcast i32 0 to i32
  %rt12 = zext i32 %r5 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_87_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = icmp slt i64 %r2, %r3
  %r4 = select i1 %rt10, i64 %r2, i64 %r3
  %rt11 = inttoptr i64 %r1 to i64*
  store i64 %r4, i64* %rt11, align 8
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_88'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_88(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = call i32 @llvm.ctpop.i32(i32 %r2)
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_88_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = tail call i32 @llvm.ctpop.i32(i32 %r2)
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_89'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_89(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = call i64 @llvm.ctpop.i64(i64 %r2)
  %r3 = trunc i64 %rt8 to i32
  %rt9 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt9, align 4
  %r4 = bitcast i32 0 to i32
  %rt10 = zext i32 %r4 to i64
  %rt11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt12 = load i8** %rt11
  %rt13 = ptrtoint i8* %rt12 to i64
  %rt14 = add i64 %rt10, %rt13
  %rt15 = inttoptr i64 %rt14 to i32*
  store i32 6, i32* %rt15, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_89_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = tail call i64 @llvm.ctpop.i64(i64 %r2)
  %r3 = trunc i64 %rt8 to i32
  %rt9 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt9, align 4
  %rt11 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt12 = load i8** %rt11, align 8
  %rt15 = bitcast i8* %rt12 to i32*
  store i32 6, i32* %rt15, align 4
  ret void
}
; ModuleID = 'test_hb_90'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_90(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = call i32 @llvm.ctlz.i32(i32 %r2)
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_90_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = tail call i32 @llvm.ctlz.i32(i32 %r2)
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_91'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_91(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = call i64 @llvm.ctlz.i64(i64 %r2)
  %r3 = trunc i64 %rt8 to i32
  %rt9 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt9, align 4
  %r4 = bitcast i32 0 to i32
  %rt10 = zext i32 %r4 to i64
  %rt11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt12 = load i8** %rt11
  %rt13 = ptrtoint i8* %rt12 to i64
  %rt14 = add i64 %rt10, %rt13
  %rt15 = inttoptr i64 %rt14 to i32*
  store i32 6, i32* %rt15, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_91_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = tail call i64 @llvm.ctlz.i64(i64 %r2)
  %r3 = trunc i64 %rt8 to i32
  %rt9 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt9, align 4
  %rt11 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt12 = load i8** %rt11, align 8
  %rt15 = bitcast i8* %rt12 to i32*
  store i32 6, i32* %rt15, align 4
  ret void
}
; ModuleID = 'test_hb_92'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_92(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = call i32 @__ocelot_bfind_b32(i32 %r2, i1 false)
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_92_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = tail call i32 @__ocelot_bfind_b32(i32 %r2, i1 false) nounwind
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_93'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_93(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %r3 = call i32 @__ocelot_bfind_b64(i64 %r2, i1 false)
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_93_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %r3 = tail call i32 @__ocelot_bfind_b64(i64 %r2, i1 false) nounwind
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_94'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_94(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = icmp slt i32 %r2, 0
  %rt9 = sub i32 0, %r2
  %rt10 = select i1 %rt8, i32 %rt9, i32 %r2
  %r3 = call i32 @__ocelot_bfind_b32(i32 %rt10, i1 false)
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt11, align 4
  %r4 = bitcast i32 0 to i32
  %rt12 = zext i32 %r4 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_94_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = icmp slt i32 %r2, 0
  %rt9 = sub i32 0, %r2
  %rt10 = select i1 %rt8, i32 %rt9, i32 %r2
  %r3 = tail call i32 @__ocelot_bfind_b32(i32 %rt10, i1 false) nounwind
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt11, align 4
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_95'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_95(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = icmp slt i64 %r2, 0
  %rt9 = sub i64 0, %r2
  %rt10 = select i1 %rt8, i64 %rt9, i64 %r2
  %r3 = call i32 @__ocelot_bfind_b64(i64 %rt10, i1 false)
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt11, align 4
  %r4 = bitcast i32 0 to i32
  %rt12 = zext i32 %r4 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_95_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = icmp slt i64 %r2, 0
  %rt9 = sub i64 0, %r2
  %rt10 = select i1 %rt8, i64 %rt9, i64 %r2
  %r3 = tail call i32 @__ocelot_bfind_b64(i64 %rt10, i1 false) nounwind
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt11, align 4
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_96'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_96(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = call i32 @__ocelot_bfind_b32(i32 %r2, i1 true)
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_96_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = tail call i32 @__ocelot_bfind_b32(i32 %r2, i1 true) nounwind
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_97'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_97(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %r3 = call i32 @__ocelot_bfind_b64(i64 %r2, i1 true)
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_97_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %r3 = tail call i32 @__ocelot_bfind_b64(i64 %r2, i1 true) nounwind
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_98'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_98(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = icmp slt i32 %r2, 0
  %rt9 = sub i32 0, %r2
  %rt10 = select i1 %rt8, i32 %rt9, i32 %r2
  %r3 = call i32 @__ocelot_bfind_b32(i32 %rt10, i1 true)
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt11, align 4
  %r4 = bitcast i32 0 to i32
  %rt12 = zext i32 %r4 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_98_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = icmp slt i32 %r2, 0
  %rt9 = sub i32 0, %r2
  %rt10 = select i1 %rt8, i32 %rt9, i32 %r2
  %r3 = tail call i32 @__ocelot_bfind_b32(i32 %rt10, i1 true) nounwind
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt11, align 4
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_99'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_99(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = icmp slt i64 %r2, 0
  %rt9 = sub i64 0, %r2
  %rt10 = select i1 %rt8, i64 %rt9, i64 %r2
  %r3 = call i32 @__ocelot_bfind_b64(i64 %rt10, i1 true)
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt11, align 4
  %r4 = bitcast i32 0 to i32
  %rt12 = zext i32 %r4 to i64
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt14 = load i8** %rt13
  %rt15 = ptrtoint i8* %rt14 to i64
  %rt16 = add i64 %rt12, %rt15
  %rt17 = inttoptr i64 %rt16 to i32*
  store i32 6, i32* %rt17, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_99_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = icmp slt i64 %r2, 0
  %rt9 = sub i64 0, %r2
  %rt10 = select i1 %rt8, i64 %rt9, i64 %r2
  %r3 = tail call i32 @__ocelot_bfind_b64(i64 %rt10, i1 true) nounwind
  %rt11 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt11, align 4
  %rt13 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt14 = load i8** %rt13, align 8
  %rt17 = bitcast i8* %rt14 to i32*
  store i32 6, i32* %rt17, align 4
  ret void
}
; ModuleID = 'test_hb_100'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_100(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = call i32 @__ocelot_brev_b32(i32 %r2)
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_100_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %r3 = tail call i32 @__ocelot_brev_b32(i32 %r2) nounwind
  %rt8 = inttoptr i64 %r1 to i32*
  store i32 %r3, i32* %rt8, align 4
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_101'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_101(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %r3 = call i64 @__ocelot_brev_b64(i64 %r2)
  %rt8 = inttoptr i64 %r1 to i64*
  store i64 %r3, i64* %rt8, align 8
  %r4 = bitcast i32 0 to i32
  %rt9 = zext i32 %r4 to i64
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt11 = load i8** %rt10
  %rt12 = ptrtoint i8* %rt11 to i64
  %rt13 = add i64 %rt9, %rt12
  %rt14 = inttoptr i64 %rt13 to i32*
  store i32 6, i32* %rt14, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_101_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %r3 = tail call i64 @__ocelot_brev_b64(i64 %r2) nounwind
  %rt8 = inttoptr i64 %r1 to i64*
  store i64 %r3, i64* %rt8, align 8
  %rt10 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt11 = load i8** %rt10, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 6, i32* %rt14, align 4
  ret void
}
; ModuleID = 'test_hb_102'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_102(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = add i64 %r0, 12
  %rt13 = inttoptr i64 %rt12 to i32*
  %r5 = load i32* %rt13, align 4
  %rt14 = icmp ult i32 %r4, 63
  %r6 = select i1 %rt14, i32 %r4, i32 63
  %rt15 = icmp ult i32 %r5, 63
  %r7 = select i1 %rt15, i32 %r5, i32 63
  %r8 = call i32 @__ocelot_bfi_b32(i32 %r2, i32 %r3, i32 %r6, i32 %r7)
  %rt16 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt16, align 4
  %r9 = bitcast i32 0 to i32
  %rt17 = zext i32 %r9 to i64
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt19 = load i8** %rt18
  %rt20 = ptrtoint i8* %rt19 to i64
  %rt21 = add i64 %rt17, %rt20
  %rt22 = inttoptr i64 %rt21 to i32*
  store i32 6, i32* %rt22, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_102_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = add i64 %r0, 12
  %rt13 = inttoptr i64 %rt12 to i32*
  %r5 = load i32* %rt13, align 4
  %rt14 = icmp ult i32 %r4, 63
  %r6 = select i1 %rt14, i32 %r4, i32 63
  %rt15 = icmp ult i32 %r5, 63
  %r7 = select i1 %rt15, i32 %r5, i32 63
  %r8 = tail call i32 @__ocelot_bfi_b32(i32 %r2, i32 %r3, i32 %r6, i32 %r7) nounwind
  %rt16 = inttoptr i64 %r1 to i32*
  store i32 %r8, i32* %rt16, align 4
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt19 = load i8** %rt18, align 8
  %rt22 = bitcast i8* %rt19 to i32*
  store i32 6, i32* %rt22, align 4
  ret void
}
; ModuleID = 'test_hb_103'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_103(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = add i64 %r0, 20
  %rt13 = inttoptr i64 %rt12 to i32*
  %r5 = load i32* %rt13, align 4
  %rt14 = icmp ult i32 %r4, 63
  %r6 = select i1 %rt14, i32 %r4, i32 63
  %rt15 = icmp ult i32 %r5, 63
  %r7 = select i1 %rt15, i32 %r5, i32 63
  %r8 = call i64 @__ocelot_bfi_b64(i64 %r2, i64 %r3, i32 %r6, i32 %r7)
  %rt16 = inttoptr i64 %r1 to i64*
  store i64 %r8, i64* %rt16, align 8
  %r9 = bitcast i32 0 to i32
  %rt17 = zext i32 %r9 to i64
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt19 = load i8** %rt18
  %rt20 = ptrtoint i8* %rt19 to i64
  %rt21 = add i64 %rt17, %rt20
  %rt22 = inttoptr i64 %rt21 to i32*
  store i32 6, i32* %rt22, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_103_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i64*
  %r2 = load i64* %rt7, align 8
  %rt8 = add i64 %r0, 8
  %rt9 = inttoptr i64 %rt8 to i64*
  %r3 = load i64* %rt9, align 8
  %rt10 = add i64 %r0, 16
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %rt12 = add i64 %r0, 20
  %rt13 = inttoptr i64 %rt12 to i32*
  %r5 = load i32* %rt13, align 4
  %rt14 = icmp ult i32 %r4, 63
  %r6 = select i1 %rt14, i32 %r4, i32 63
  %rt15 = icmp ult i32 %r5, 63
  %r7 = select i1 %rt15, i32 %r5, i32 63
  %r8 = tail call i64 @__ocelot_bfi_b64(i64 %r2, i64 %r3, i32 %r6, i32 %r7) nounwind
  %rt16 = inttoptr i64 %r1 to i64*
  store i64 %r8, i64* %rt16, align 8
  %rt18 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt19 = load i8** %rt18, align 8
  %rt22 = bitcast i8* %rt19 to i32*
  store i32 6, i32* %rt22, align 4
  ret void
}
; ModuleID = 'test_hb_104'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_104(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = call i32 @__ocelot_prmt(i32 %r2, i32 %r3, i32 %r4)
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %r6 = bitcast i32 0 to i32
  %rt13 = zext i32 %r6 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_104_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = tail call i32 @__ocelot_prmt(i32 %r2, i32 %r3, i32 %r4) nounwind
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_105'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_105(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = call i32 @__ocelot_prmt_f4e(i32 %r2, i32 %r3, i32 %r4)
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %r6 = bitcast i32 0 to i32
  %rt13 = zext i32 %r6 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_105_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = tail call i32 @__ocelot_prmt_f4e(i32 %r2, i32 %r3, i32 %r4) nounwind
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_106'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_106(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = call i32 @__ocelot_prmt_b4e(i32 %r2, i32 %r3, i32 %r4)
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %r6 = bitcast i32 0 to i32
  %rt13 = zext i32 %r6 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_106_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = tail call i32 @__ocelot_prmt_b4e(i32 %r2, i32 %r3, i32 %r4) nounwind
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_107'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_107(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = call i32 @__ocelot_prmt_rc8(i32 %r2, i32 %r3, i32 %r4)
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %r6 = bitcast i32 0 to i32
  %rt13 = zext i32 %r6 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_107_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = tail call i32 @__ocelot_prmt_rc8(i32 %r2, i32 %r3, i32 %r4) nounwind
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_108'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_108(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = call i32 @__ocelot_prmt_ecl(i32 %r2, i32 %r3, i32 %r4)
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %r6 = bitcast i32 0 to i32
  %rt13 = zext i32 %r6 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_108_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = tail call i32 @__ocelot_prmt_ecl(i32 %r2, i32 %r3, i32 %r4) nounwind
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_109'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_109(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = call i32 @__ocelot_prmt_ecr(i32 %r2, i32 %r3, i32 %r4)
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %r6 = bitcast i32 0 to i32
  %rt13 = zext i32 %r6 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_109_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = tail call i32 @__ocelot_prmt_ecr(i32 %r2, i32 %r3, i32 %r4) nounwind
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
; ModuleID = 'test_hb_110'

%Dimension = type { i32, i32, i32 }
%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* }

declare i32 @__ocelot_get_extent(%LLVMContext*, i32) align 1

declare float @llvm.exp2.f32(float) nounwind readonly align 1

declare float @llvm.log2.f32(float) nounwind readonly align 1

declare float @llvm.sin.f32(float) nounwind readonly align 1

declare float @llvm.cos.f32(float) nounwind readonly align 1

declare double @llvm.sqrt.f64(double) nounwind readonly align 1

declare float @llvm.sqrt.f32(float) nounwind readonly align 1

declare i64 @llvm.ctlz.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctlz.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctlz.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctlz.i8(i8) nounwind readnone align 1

declare i64 @llvm.readcyclecounter() nounwind align 1

declare i64 @llvm.ctpop.i64(i64) nounwind readnone align 1

declare i32 @llvm.ctpop.i32(i32) nounwind readnone align 1

declare i16 @llvm.ctpop.i16(i16) nounwind readnone align 1

declare i8 @llvm.ctpop.i8(i8) nounwind readnone align 1

declare i64 @llvm.atomic.cmp.swap.i64.p0i64(i64* nocapture, i64, i64) nounwind align 1

declare i32 @llvm.atomic.cmp.swap.i32.p0i32(i32* nocapture, i32, i32) nounwind align 1

declare i64 @llvm.atomic.swap.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umax.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.max.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.umin.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.min.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.xor.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.or.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.and.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i64 @llvm.atomic.load.add.i64.p0i64(i64* nocapture, i64) nounwind align 1

declare i32 @llvm.atomic.swap.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umax.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.max.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.umin.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.min.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.xor.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.or.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.and.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i32 @llvm.atomic.load.add.i32.p0i32(i32* nocapture, i32) nounwind align 1

declare i64 @__ocelot_mul_hi_s64(i64, i64) align 1

declare i64 @__ocelot_mul_hi_u64(i64, i64) align 1

declare i32* @__ocelot_txq(%LLVMContext*, i32, i32) align 1

declare i32 @__ocelot_atomic_dec_32(i64, i32) align 1

declare i32 @__ocelot_atomic_inc_32(i64, i32) align 1

declare void @__ocelot_tex_3d_fs(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_fu(float*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_ff(float*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_sf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_uf(i32*, %LLVMContext*, i32, float, float, float, float) align 1

declare void @__ocelot_tex_3d_ss(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_su(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_us(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_3d_uu(i32*, %LLVMContext*, i32, i32, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fs(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_fu(float*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_ff(float*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_sf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_uf(i32*, %LLVMContext*, i32, float, float) align 1

declare void @__ocelot_tex_2d_ss(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_su(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_us(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_2d_uu(i32*, %LLVMContext*, i32, i32, i32) align 1

declare void @__ocelot_tex_1d_fs(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_fu(float*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_ff(float*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_sf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_uf(i32*, %LLVMContext*, i32, float) align 1

declare void @__ocelot_tex_1d_ss(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_su(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_us(i32*, %LLVMContext*, i32, i32) align 1

declare void @__ocelot_tex_1d_uu(i32*, %LLVMContext*, i32, i32) align 1

declare i1 @__ocelot_vote(i1, i32, i1) align 1

declare i32 @__ocelot_prmt_rc16(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecr(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_ecl(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_rc8(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_b4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt_f4e(i32, i32, i32) align 1

declare i32 @__ocelot_prmt(i32, i32, i32) align 1

declare i32 @__ocelot_bfind_b64(i64, i1) align 1

declare i32 @__ocelot_bfind_b32(i32, i1) align 1

declare i64 @__ocelot_bfi_b64(i64, i64, i32, i32) align 1

declare i32 @__ocelot_bfi_b32(i32, i32, i32, i32) align 1

declare i64 @__ocelot_brev_b64(i64) align 1

declare i32 @__ocelot_brev_b32(i32) align 1

define void @_Z_ocelotTranslated_test_hb_110(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt2 = load i8** %rt1
  %rt0 = getelementptr i8* %rt2, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %rt5 = load i8** %rt4
  %rt6 = bitcast i8* %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = call i32 @__ocelot_prmt_rc16(i32 %r2, i32 %r3, i32 %r4)
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %r6 = bitcast i32 0 to i32
  %rt13 = zext i32 %r6 to i64
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %rt15 = load i8** %rt14
  %rt16 = ptrtoint i8* %rt15 to i64
  %rt17 = add i64 %rt13, %rt16
  %rt18 = inttoptr i64 %rt17 to i32*
  store i32 6, i32* %rt18, align 4
  br label %exit

exit:                                             ; preds = %"$BB_1_0002"
  ret void
}

define internal void @_Z_ocelotTranslated_test_hb_110_opt3_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = inttoptr i64 %r0 to i32*
  %r2 = load i32* %rt7, align 4
  %rt8 = add i64 %r0, 4
  %rt9 = inttoptr i64 %rt8 to i32*
  %r3 = load i32* %rt9, align 4
  %rt10 = add i64 %r0, 8
  %rt11 = inttoptr i64 %rt10 to i32*
  %r4 = load i32* %rt11, align 4
  %r5 = tail call i32 @__ocelot_prmt_rc16(i32 %r2, i32 %r3, i32 %r4) nounwind
  %rt12 = inttoptr i64 %r1 to i32*
  store i32 %r5, i32* %rt12, align 4
  %rt14 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt15 = load i8** %rt14, align 8
  %rt18 = bitcast i8* %rt15 to i32*
  store i32 6, i32* %rt18, align 4
  ret void
}
TestPTXAssembly: ocelot/executive/implementation/LLVMDynamicTranslationCache.cpp:1052: void executive::setupCallTargets(ir::PTXKernel&, const executive::LLVMDynamicTranslationCache&): Assertion `0 && "unimplemented"' failed.

INFO     
Passing tests:
 (0.194s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLLVMKernels : Passed
 (0.034s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestPTXToLLVMTranslator : Passed
 (0.040s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestInstructions : Passed
 (0.042s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestKernels : Passed
 (0.060s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestDeviceSwitching : Passed
 (0.062s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaMalloc : Passed
 (0.031s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLexer : Passed
 (0.056s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaTextureArray : Passed
 (0.060s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestConvergence : Passed
 (0.057s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaTexture2D : Passed
 (0.036s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestDataflowGraph : Passed
 (0.137s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaSequence : Passed
 (0.034s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestEmulator : Passed
 (0.034s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestLLVMInstructions : Passed
 (0.096s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCudaGlobals : Passed
 (0.046s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestParser : Passed
 (0.039s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestCalVectorScale : Passed

Failing tests:
 (2.710s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestPTXAssembly : Did not complete.
 (0.048s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestFunctionCall : Did not complete.
 (0.058s) : /home/andrew/repositories/gpuocelot/branches/ocelot-vector-ptx2.1/TestIndirectFunctionCall : Did not complete.

